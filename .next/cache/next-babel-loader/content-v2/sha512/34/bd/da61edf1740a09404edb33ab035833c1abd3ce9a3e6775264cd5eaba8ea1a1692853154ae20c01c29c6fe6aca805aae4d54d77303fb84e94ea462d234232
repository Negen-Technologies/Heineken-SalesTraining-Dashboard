{"ast":null,"code":"import axios from \"axios\";\nimport URLst, { handle401 } from \"../../utils/constants\";\nimport * as actionTypes from \"./regionActionTypes\";\nexport const allregionPending = () => {\n  return {\n    type: actionTypes.REGION_PENDING,\n    isPending: true\n  };\n};\nexport const allregionSuccess = data => {\n  return {\n    type: actionTypes.REGION_SUCCESS,\n    isPending: false,\n    data: data.results,\n    count: data.totalResults\n  };\n};\nexport const regionCreateSuccess = data => {\n  return {\n    type: actionTypes.CREATE_REGION_SUCCESS,\n    data: data\n  };\n};\nexport const updateRegionSuccess = data => {\n  return {\n    type: actionTypes.UPDATE_REGION_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport const deleteRegionSuccess = data => {\n  return {\n    type: actionTypes.DELETE_REGION_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport const allregionFail = error => {\n  return {\n    type: actionTypes.REGION_FAILED,\n    error: error,\n    isPending: false\n  };\n};\nexport const getAllRegionSuccess = (limit, page) => {\n  var token = localStorage.getItem(\"token\");\n  return dispatch => {\n    dispatch(allregionPending());\n    axios({\n      method: \"get\",\n      url: URLst + `v1/regions?limit=${limit}&page=${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      dispatch(allregionSuccess(res.data));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allregionFail(errorData));\n    });\n  };\n};\nexport const regionCreate = formData => {\n  return dispatch => {\n    dispatch(allregionPending());\n    const token = localStorage.getItem(\"token\");\n    axios.post(URLst + \"v1/regions\", {\n      name: formData.name\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      dispatch(regionCreateSuccess(res.data));\n    }).catch(err => {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allregionFail(errorData));\n    });\n  };\n};\nexport const AllRegionEdit = (id, regions, edited) => {\n  const token = localStorage.getItem(\"token\");\n  return (dispatch, getState) => {\n    dispatch(allregionPending());\n    axios({\n      method: \"patch\",\n      url: URLst + `v1/regions/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: edited\n    }).then(res => {\n      let newData = [...regions];\n      let index = newData.findIndex(av => av.id === res.data.id);\n      newData[index] = res.data;\n      dispatch(updateRegionSuccess(newData));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allregionFail(errorData));\n    });\n  };\n};\nexport const AllRegionDelete = (id, regions) => {\n  var filtereddata = regions.filter(item => item.id !== id);\n  var token = localStorage.getItem(\"token\");\n  return dispatch => {\n    dispatch(allregionPending());\n    axios({\n      method: \"delete\",\n      url: URLst + `v1/regions/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      dispatch(deleteRegionSuccess(filtereddata));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(allregionFail(errorData));\n    });\n  };\n};","map":{"version":3,"sources":["/home/eleni/Desktop/heniken/Heineken-SalesTraining-Dashboard/store/Region/regionAction.js"],"names":["axios","URLst","handle401","actionTypes","allregionPending","type","REGION_PENDING","isPending","allregionSuccess","data","REGION_SUCCESS","results","count","totalResults","regionCreateSuccess","CREATE_REGION_SUCCESS","updateRegionSuccess","UPDATE_REGION_SUCCESS","deleteRegionSuccess","DELETE_REGION_SUCCESS","allregionFail","error","REGION_FAILED","getAllRegionSuccess","limit","page","token","localStorage","getItem","dispatch","method","url","headers","Authorization","then","res","console","log","catch","err","errorData","response","code","message","regionCreate","formData","post","name","AllRegionEdit","id","regions","edited","getState","newData","index","findIndex","av","AllRegionDelete","filtereddata","filter","item"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,uBAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG,cADb;AAELC,IAAAA,SAAS,EAAE;AAFN,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACO,cADb;AAELH,IAAAA,SAAS,EAAE,KAFN;AAGLE,IAAAA,IAAI,EAAEA,IAAI,CAACE,OAHN;AAILC,IAAAA,KAAK,EAAEH,IAAI,CAACI;AAJP,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,mBAAmB,GAAIL,IAAD,IAAU;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACY,qBADb;AAELN,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAMO,mBAAmB,GAAIP,IAAD,IAAU;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACc,qBADb;AAELV,IAAAA,SAAS,EAAE,KAFN;AAGLE,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD,CANM;AAQP,OAAO,MAAMS,mBAAmB,GAAIT,IAAD,IAAU;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAEF,WAAW,CAACgB,qBADb;AAELZ,IAAAA,SAAS,EAAE,KAFN;AAGLE,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD,CANM;AAQP,OAAO,MAAMW,aAAa,GAAIC,KAAD,IAAW;AACtC,SAAO;AACLhB,IAAAA,IAAI,EAAEF,WAAW,CAACmB,aADb;AAELD,IAAAA,KAAK,EAAEA,KAFF;AAGLd,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CANM;AAQP,OAAO,MAAMgB,mBAAmB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAClD,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACzB,gBAAgB,EAAjB,CAAR;AAEAJ,IAAAA,KAAK,CAAC;AACJ8B,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE9B,KAAK,GAAI,oBAAmBuB,KAAM,SAAQC,IAAK,EAFhD;AAGJO,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AADxB;AAHL,KAAD,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC1B,IAAhB;AACAoB,MAAAA,QAAQ,CAACrB,gBAAgB,CAAC2B,GAAG,CAAC1B,IAAL,CAAjB,CAAR;AACD,KAVH,EAWG6B,KAXH,CAWUC,GAAD,IAAS;AACd,UAAIC,SAAJ;;AACA,UAAID,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBiC,IAAlB,IAA0B,GAA9B,EAAmC;AACjCxC,QAAAA,SAAS;AACV;;AACD,UAAIqC,GAAG,CAACE,QAAJ,IAAgB,IAApB,EAA0B;AACxBD,QAAAA,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBkC,OAA9B;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,GAAGD,GAAG,CAACI,OAAhB;AACD;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAX,MAAAA,QAAQ,CAACT,aAAa,CAACoB,SAAD,CAAd,CAAR;AACD,KAvBH;AAwBD,GA3BD;AA4BD,CA9BM;AAgCP,OAAO,MAAMI,YAAY,GAAIC,QAAD,IAAc;AACxC,SAAQhB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACzB,gBAAgB,EAAjB,CAAR;AACA,UAAMsB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA5B,IAAAA,KAAK,CACF8C,IADH,CACQ7C,KAAK,GAAG,YADhB,EAC8B;AAAC8C,MAAAA,IAAI,EAACF,QAAQ,CAACE;AAAf,KAD9B,EACoD;AAChDf,MAAAA,OAAO,EAAE;AAEPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AAFxB;AADuC,KADpD,EAOGQ,IAPH,CAOSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAAC1B,IAAhB;AAEAoB,MAAAA,QAAQ,CAACf,mBAAmB,CAACqB,GAAG,CAAC1B,IAAL,CAApB,CAAR;AACD,KAXH,EAYG6B,KAZH,CAYUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBiC,IAAlB,IAA0B,GAA9B,EAAmC;AACjCxC,QAAAA,SAAS;AACV;;AAED,UAAIsC,SAAJ;;AACA,UAAID,GAAG,CAACE,QAAJ,IAAgB,IAApB,EAA0B;AACxBD,QAAAA,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBkC,OAA9B;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,GAAGD,GAAG,CAACI,OAAhB;AACD;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAX,MAAAA,QAAQ,CAACT,aAAa,CAACoB,SAAD,CAAd,CAAR;AACD,KAzBH;AA0BD,GA7BD;AA8BD,CA/BM;AAiCP,OAAO,MAAMQ,aAAa,GAAG,CAACC,EAAD,EAAKC,OAAL,EAAcC,MAAd,KAAyB;AACpD,QAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,SAAO,CAACC,QAAD,EAAWuB,QAAX,KAAwB;AAC7BvB,IAAAA,QAAQ,CAACzB,gBAAgB,EAAjB,CAAR;AAGAJ,IAAAA,KAAK,CAAC;AACJ8B,MAAAA,MAAM,EAAE,OADJ;AAEJC,MAAAA,GAAG,EAAE9B,KAAK,GAAI,cAAagD,EAAG,EAF1B;AAGJjB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AADxB,OAHL;AAMJjB,MAAAA,IAAI,EAAE0C;AANF,KAAD,CAAL,CAQGjB,IARH,CAQSC,GAAD,IAAS;AACb,UAAIkB,OAAO,GAAG,CAAC,GAAGH,OAAJ,CAAd;AACA,UAAII,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAmBC,EAAD,IAAQA,EAAE,CAACP,EAAH,KAAUd,GAAG,CAAC1B,IAAJ,CAASwC,EAA7C,CAAZ;AAEAI,MAAAA,OAAO,CAACC,KAAD,CAAP,GAAiBnB,GAAG,CAAC1B,IAArB;AAEAoB,MAAAA,QAAQ,CAACb,mBAAmB,CAACqC,OAAD,CAApB,CAAR;AACD,KAfH,EAgBGf,KAhBH,CAgBUC,GAAD,IAAS;AACd,UAAIC,SAAJ;;AACA,UAAID,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBiC,IAAlB,IAA0B,GAA9B,EAAmC;AACjCxC,QAAAA,SAAS;AACV;;AACD,UAAIqC,GAAG,CAACE,QAAJ,IAAgB,IAApB,EAA0B;AACxBD,QAAAA,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBkC,OAA9B;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,GAAGD,GAAG,CAACI,OAAhB;AACD;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAX,MAAAA,QAAQ,CAACT,aAAa,CAACoB,SAAD,CAAd,CAAR;AACD,KA5BH;AA6BD,GAjCD;AAkCD,CArCM;AAuCP,OAAO,MAAMiB,eAAe,GAAG,CAACR,EAAD,EAAKC,OAAL,KAAiB;AAC9C,MAAIQ,YAAY,GAAGR,OAAO,CAACS,MAAR,CAAgBC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAArC,CAAnB;AACA,MAAIvB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACzB,gBAAgB,EAAjB,CAAR;AAEAJ,IAAAA,KAAK,CAAC;AACJ8B,MAAAA,MAAM,EAAE,QADJ;AAEJC,MAAAA,GAAG,EAAE9B,KAAK,GAAI,cAAagD,EAAG,EAF1B;AAGJjB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASP,KAAM;AADxB;AAHL,KAAD,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAAS;AACbN,MAAAA,QAAQ,CAACX,mBAAmB,CAACwC,YAAD,CAApB,CAAR;AACD,KATH,EAUGpB,KAVH,CAUUC,GAAD,IAAS;AACd,UAAIC,SAAJ;;AACA,UAAID,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBiC,IAAlB,IAA0B,GAA9B,EAAmC;AACjCxC,QAAAA,SAAS;AACV;;AACD,UAAIqC,GAAG,CAACE,QAAJ,IAAgB,IAApB,EAA0B;AACxBD,QAAAA,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAahC,IAAb,CAAkBkC,OAA9B;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,GAAGD,GAAG,CAACI,OAAhB;AACD;;AACDd,MAAAA,QAAQ,CAACT,aAAa,CAACoB,SAAD,CAAd,CAAR;AACD,KArBH;AAsBD,GAzBD;AA0BD,CA7BM","sourcesContent":["import axios from \"axios\";\nimport URLst, { handle401 } from \"../../utils/constants\";\nimport * as actionTypes from \"./regionActionTypes\";\n\nexport const allregionPending = () => {\n  return {\n    type: actionTypes.REGION_PENDING,\n    isPending: true,\n  };\n};\nexport const allregionSuccess = (data) => {\n  return {\n    type: actionTypes.REGION_SUCCESS,\n    isPending: false,\n    data: data.results,\n    count: data.totalResults,\n  };\n};\n\nexport const regionCreateSuccess = (data) => {\n  return {\n    type: actionTypes.CREATE_REGION_SUCCESS,\n    data: data,\n  };\n};\n\nexport const updateRegionSuccess = (data) => {\n  return {\n    type: actionTypes.UPDATE_REGION_SUCCESS,\n    isPending: false,\n    data: data,\n  };\n};\n\nexport const deleteRegionSuccess = (data) => {\n  return {\n    type: actionTypes.DELETE_REGION_SUCCESS,\n    isPending: false,\n    data: data,\n  };\n};\n\nexport const allregionFail = (error) => {\n  return {\n    type: actionTypes.REGION_FAILED,\n    error: error,\n    isPending: false,\n  };\n};\n\nexport const getAllRegionSuccess = (limit, page) => {\n  var token = localStorage.getItem(\"token\");\n  return (dispatch) => {\n    dispatch(allregionPending());\n\n    axios({\n      method: \"get\",\n      url: URLst + `v1/regions?limit=${limit}&page=${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        console.log(res.data);\n        dispatch(allregionSuccess(res.data));\n      })\n      .catch((err) => {\n        var errorData;\n        if (err.response.data.code == 401) {\n          handle401();\n        }\n        if (err.response != null) {\n          errorData = err.response.data.message;\n        } else {\n          errorData = err.message;\n        }\n        console.log(errorData);\n        dispatch(allregionFail(errorData));\n      });\n  };\n};\n\nexport const regionCreate = (formData) => {\n  return (dispatch) => {\n    dispatch(allregionPending());\n    const token = localStorage.getItem(\"token\");\n    axios\n      .post(URLst + \"v1/regions\", {name:formData.name}, {\n        headers: {\n        \n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n\n        dispatch(regionCreateSuccess(res.data));\n      })\n      .catch((err) => {\n        if (err.response.data.code == 401) {\n          handle401();\n        }\n\n        var errorData;\n        if (err.response != null) {\n          errorData = err.response.data.message;\n        } else {\n          errorData = err.message;\n        }\n        console.log(errorData);\n        dispatch(allregionFail(errorData));\n      });\n  };\n};\n\nexport const AllRegionEdit = (id, regions, edited) => {\n  const token = localStorage.getItem(\"token\");\n\n  return (dispatch, getState) => {\n    dispatch(allregionPending());\n    \n\n    axios({\n      method: \"patch\",\n      url: URLst + `v1/regions/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data: edited,\n    })\n      .then((res) => {\n        let newData = [...regions];\n        let index = newData.findIndex((av) => av.id === res.data.id);\n\n        newData[index] = res.data;\n\n        dispatch(updateRegionSuccess(newData));\n      })\n      .catch((err) => {\n        var errorData;\n        if (err.response.data.code == 401) {\n          handle401();\n        }\n        if (err.response != null) {\n          errorData = err.response.data.message;\n        } else {\n          errorData = err.message;\n        }\n        console.log(errorData);\n        dispatch(allregionFail(errorData));\n      });\n  };\n};\n\nexport const AllRegionDelete = (id, regions) => {\n  var filtereddata = regions.filter((item) => item.id !== id);\n  var token = localStorage.getItem(\"token\");\n  return (dispatch) => {\n    dispatch(allregionPending());\n\n    axios({\n      method: \"delete\",\n      url: URLst + `v1/regions/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => {\n        dispatch(deleteRegionSuccess(filtereddata));\n      })\n      .catch((err) => {\n        var errorData;\n        if (err.response.data.code == 401) {\n          handle401();\n        }\n        if (err.response != null) {\n          errorData = err.response.data.message;\n        } else {\n          errorData = err.message;\n        }\n        dispatch(allregionFail(errorData));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}