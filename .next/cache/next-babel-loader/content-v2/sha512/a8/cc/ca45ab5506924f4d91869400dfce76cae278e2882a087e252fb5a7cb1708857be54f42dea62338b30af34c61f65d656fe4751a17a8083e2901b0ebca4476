{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from \"./allBadgesActionTypes\";\nconst initialState = {\n  error: null,\n  loading: false,\n  allbadges: [],\n  count: 0\n};\n\nconst allbadgeStart = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: null,\n    loading: true\n  });\n};\n\nconst allbadgeSuccess = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    allbadges: action.data,\n    error: null,\n    loading: false,\n    count: action.count\n  });\n};\n\nconst allbadgeFail = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst createbadgeSuccess = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    allbadges: [...state.allbadges, action.data],\n    error: null,\n    loading: false\n  });\n};\n\nconst updatebadgeSuccess = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    allbadges: action.data,\n    error: null,\n    loading: false\n  });\n};\n\nconst deletebadgeSuccess = (state, action) => {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    allbadges: action.data,\n    error: null,\n    loading: false\n  });\n};\n\nconst allbadgesreducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ALL_BADGE_PENDING:\n      return allbadgeStart(state, action);\n\n    case actionTypes.ALL_BADGE_SUCCESS:\n      return allbadgeSuccess(state, action);\n\n    case actionTypes.ALL_BADGE_FAILED:\n      return allbadgeFail(state, action);\n\n    case actionTypes.CREATE_BADGE_SUCCESS:\n      return createbadgeSuccess(state, action);\n\n    case actionTypes.UPDATE_BADGE_SUCCESS:\n      return updatebadgeSuccess(state, action);\n\n    case actionTypes.DELETE_BADGE_SUCCESS:\n      return deletebadgeSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default allbadgesreducer;","map":{"version":3,"sources":["/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/store/Badges/allBadgesReducer.js"],"names":["actionTypes","initialState","error","loading","allbadges","count","allbadgeStart","state","action","allbadgeSuccess","data","allbadgeFail","createbadgeSuccess","updatebadgeSuccess","deletebadgeSuccess","allbadgesreducer","type","ALL_BADGE_PENDING","ALL_BADGE_SUCCESS","ALL_BADGE_FAILED","CREATE_BADGE_SUCCESS","UPDATE_BADGE_SUCCESS","DELETE_BADGE_SUCCESS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,yCACKD,KADL;AAEEL,IAAAA,KAAK,EAAE,IAFT;AAGEC,IAAAA,OAAO,EAAE;AAHX;AAKD,CAND;;AAQA,MAAMM,eAAe,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAEzC,yCACKD,KADL;AAGEH,IAAAA,SAAS,EAAEI,MAAM,CAACE,IAHpB;AAIER,IAAAA,KAAK,EAAE,IAJT;AAKEC,IAAAA,OAAO,EAAE,KALX;AAMEE,IAAAA,KAAK,EAAEG,MAAM,CAACH;AANhB;AAQD,CAVD;;AAYA,MAAMM,YAAY,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtC,yCACKD,KADL;AAEEL,IAAAA,KAAK,EAAEM,MAAM,CAACN,KAFhB;AAGEC,IAAAA,OAAO,EAAE;AAHX;AAKD,CAND;;AAQA,MAAMS,kBAAkB,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC5C,yCACKD,KADL;AAEEH,IAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBI,MAAM,CAACE,IAA5B,CAFb;AAGER,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX;AAMD,CAPD;;AASA,MAAMU,kBAAkB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC5C,yCACKD,KADL;AAEEH,IAAAA,SAAS,EAAEI,MAAM,CAACE,IAFpB;AAGER,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX;AAMD,CAPD;;AASA,MAAMW,kBAAkB,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC5C,yCACKD,KADL;AAEEH,IAAAA,SAAS,EAAEI,MAAM,CAACE,IAFpB;AAGER,IAAAA,KAAK,EAAE,IAHT;AAIEC,IAAAA,OAAO,EAAE;AAJX;AAMD,CAPD;;AASA,MAAMY,gBAAgB,GAAG,CAACR,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACQ,IAAf;AACE,SAAKhB,WAAW,CAACiB,iBAAjB;AACE,aAAOX,aAAa,CAACC,KAAD,EAAQC,MAAR,CAApB;;AACF,SAAKR,WAAW,CAACkB,iBAAjB;AACE,aAAOT,eAAe,CAACF,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKR,WAAW,CAACmB,gBAAjB;AACE,aAAOR,YAAY,CAACJ,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKR,WAAW,CAACoB,oBAAjB;AACE,aAAOR,kBAAkB,CAACL,KAAD,EAAQC,MAAR,CAAzB;;AACF,SAAKR,WAAW,CAACqB,oBAAjB;AACE,aAAOR,kBAAkB,CAACN,KAAD,EAAQC,MAAR,CAAzB;;AACF,SAAKR,WAAW,CAACsB,oBAAjB;AACE,aAAOR,kBAAkB,CAACP,KAAD,EAAQC,MAAR,CAAzB;;AACF;AACE,aAAOD,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeQ,gBAAf","sourcesContent":["import * as actionTypes from \"./allBadgesActionTypes\";\n\nconst initialState = {\n  error: null,\n  loading: false,\n  allbadges: [],\n  count: 0,\n};\n\nconst allbadgeStart = (state, action) => {\n  return {\n    ...state,\n    error: null,\n    loading: true,\n  };\n};\n\nconst allbadgeSuccess = (state, action) => {\n\n  return {\n    ...state,\n   \n    allbadges: action.data,\n    error: null,\n    loading: false,\n    count: action.count,\n  };\n};\n\nconst allbadgeFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst createbadgeSuccess = (state, action) => {\n  return {\n    ...state,\n    allbadges: [...state.allbadges, action.data],\n    error: null,\n    loading: false,\n  };\n};\n\nconst updatebadgeSuccess = (state, action) => {\n  return {\n    ...state,\n    allbadges: action.data,\n    error: null,\n    loading: false,\n  };\n};\n\nconst deletebadgeSuccess = (state, action) => {\n  return {\n    ...state,\n    allbadges: action.data,\n    error: null,\n    loading: false,\n  };\n};\n\nconst allbadgesreducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ALL_BADGE_PENDING:\n      return allbadgeStart(state, action);\n    case actionTypes.ALL_BADGE_SUCCESS:\n      return allbadgeSuccess(state, action);\n    case actionTypes.ALL_BADGE_FAILED:\n      return allbadgeFail(state, action);\n    case actionTypes.CREATE_BADGE_SUCCESS:\n      return createbadgeSuccess(state, action);\n    case actionTypes.UPDATE_BADGE_SUCCESS:\n      return updatebadgeSuccess(state, action);\n    case actionTypes.DELETE_BADGE_SUCCESS:\n      return deletebadgeSuccess(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default allbadgesreducer;\n"]},"metadata":{},"sourceType":"module"}