{"ast":null,"code":"import _toConsumableArray from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport URLst, { handle401 } from \"../../utils/constants\";\nimport * as actionTypes from \"./allUsersActionTypes\";\nexport var alluserPending = function alluserPending() {\n  return {\n    type: actionTypes.ALL_USER_PENDING,\n    isPending: true\n  };\n};\nexport var alluserSuccess = function alluserSuccess(data) {\n  return {\n    type: actionTypes.ALL_USER_SUCCESS,\n    isPending: false,\n    data: data.results,\n    count: data.totalResults\n  };\n};\nexport var userCreateSuccess = function userCreateSuccess(data) {\n  return {\n    type: actionTypes.CREATE_USER_SUCCESS,\n    data: data\n  };\n};\nexport var updateUserSuccess = function updateUserSuccess(data) {\n  return {\n    type: actionTypes.UPDATE_USER_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport var deleteUserSuccess = function deleteUserSuccess(data) {\n  return {\n    type: actionTypes.DELETE_USER_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport var alluserFail = function alluserFail(error) {\n  return {\n    type: actionTypes.ALL_USER_FAILED,\n    error: error,\n    isPending: false\n  };\n};\nexport var getAllUserSuccess = function getAllUserSuccess(limit, page) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(alluserPending());\n    axios({\n      method: \"get\",\n      url: URLst + \"v1/users?limit=\".concat(limit, \"&page=\").concat(page),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(alluserSuccess(res.data));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(alluserFail(errorData));\n    });\n  };\n};\nexport var UserCreate = function UserCreate(formData) {\n  return function (dispatch) {\n    dispatch(alluserPending());\n    var token = localStorage.getItem(\"token\");\n    axios.post(URLst + \"v1/users\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(userCreateSuccess(res.data));\n    })[\"catch\"](function (err) {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(alluserFail(errorData));\n    });\n  };\n};\nexport var AllUserEdit = function AllUserEdit(id, users, edited) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch, getState) {\n    dispatch(alluserPending());\n    delete edited.role;\n    delete edited.username;\n    axios({\n      method: \"patch\",\n      url: URLst + \"v1/users/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      data: edited\n    }).then(function (res) {\n      var newData = _toConsumableArray(users);\n\n      var index = newData.findIndex(function (av) {\n        return av.id === res.data.id;\n      });\n      newData[index] = res.data;\n      dispatch(updateUserSuccess(newData));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(alluserFail(errorData));\n    });\n  };\n};\nexport var AllUserDelete = function AllUserDelete(id, users) {\n  var filtereddata = users.filter(function (item) {\n    return item.id !== id;\n  });\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(alluserPending());\n    axios({\n      method: \"delete\",\n      url: URLst + \"v1/users/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      dispatch(deleteUserSuccess(filtereddata));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(alluserFail(errorData));\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}