{"ast":null,"code":"import _toConsumableArray from \"D:/Work/Hieniken project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport * as actionTypes from \"./avatar_actionTypes\";\nimport URLst, { handle401 } from \"../../utils/constants\"; // import handle401 from \"../../utils/constants\"\n\nexport var avatarStart = function avatarStart() {\n  return {\n    type: actionTypes.AVATAR_START\n  };\n};\nexport var avatarCreateSuccess = function avatarCreateSuccess(data) {\n  return {\n    type: actionTypes.AVATAR_CREATE_SUCCESS,\n    data: data\n  };\n};\nexport var avatarGetSuccess = function avatarGetSuccess(data) {\n  return {\n    type: actionTypes.AVATAR_GET_SUCCESS,\n    data: data\n  };\n};\nexport var avatarEditSuccess = function avatarEditSuccess(data) {\n  return {\n    type: actionTypes.AVATAR_EDIT_SUCCESS,\n    data: data\n  };\n};\nexport var avatarDeleteSuccess = function avatarDeleteSuccess(data) {\n  return {\n    type: actionTypes.AVATAR_DELETE_SUCCESS,\n    data: data\n  };\n}; // AVATAR_DELETE_SUCCESS\n\nexport var avatarFail = function avatarFail(error) {\n  return {\n    type: actionTypes.AVATAR_FAIL,\n    error: error\n  };\n};\nexport var avatarEdit = function avatarEdit(formData, id) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch, getState) {\n    var data = getState().avatar_reducer.data;\n    dispatch(avatarStart());\n    axios.patch(URLst + \"v1/avatars/\".concat(id), formData, {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      var newData = _toConsumableArray(data);\n\n      var index = newData.findIndex(function (av) {\n        return av.id === res.data.id;\n      });\n      newData[index] = res.data;\n      dispatch(avatarEditSuccess(newData));\n    })[\"catch\"](function (err) {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(avatarFail(errorData));\n    });\n  };\n};\nexport var avatarCreate = function avatarCreate(formData) {\n  return function (dispatch) {\n    dispatch(avatarStart());\n    var token = localStorage.getItem(\"token\");\n    axios.post(URLst + \"v1/avatars\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(avatarCreateSuccess(res.data));\n    })[\"catch\"](function (err) {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(avatarFail(errorData));\n    });\n  };\n};\nexport var avatarGet = function avatarGet() {\n  return function (dispatch) {\n    dispatch(avatarStart());\n    var token = localStorage.getItem(\"token\");\n    axios.get(URLst + \"v1/avatars\", {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(avatarGetSuccess(res.data.results));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(avatarFail(errorData));\n    });\n  };\n};\nexport var avatarDelete = function avatarDelete(id, users) {\n  var filtereddata = users.filter(function (item) {\n    return item.id !== id;\n  });\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(avatarStart());\n    axios({\n      method: \"delete\",\n      url: URLst + \"v1/avatars/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch(avatarDeleteSuccess(filtereddata));\n    })[\"catch\"](function (err) {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(avatarFail(errorData));\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}