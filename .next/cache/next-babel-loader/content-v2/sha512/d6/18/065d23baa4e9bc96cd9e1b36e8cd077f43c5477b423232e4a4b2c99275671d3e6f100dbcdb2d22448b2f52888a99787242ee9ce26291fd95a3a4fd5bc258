{"ast":null,"code":"import _toConsumableArray from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as avatarTypes from \"./avatar_actionTypes\";\nvar initialState = {\n  error: null,\n  loading: false,\n  data: []\n};\n\nvar avatarStart = function avatarStart(state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: null,\n    loading: true\n  });\n};\n\nvar avatarCreateSuccess = function avatarCreateSuccess(state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: [].concat(_toConsumableArray(state.data), [action.data]),\n    error: null,\n    loading: false\n  });\n};\n\nvar avatarGetSuccess = function avatarGetSuccess(state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: action.data,\n    error: null,\n    loading: false\n  });\n};\n\nvar avatarEditSuccess = function avatarEditSuccess(state, action) {\n  var index = state.data.findIndex(function (user) {\n    return user.id === action.data.id;\n  });\n  state.data.splice(index, 1, action.data);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: action.data,\n    error: null,\n    loading: false\n  });\n};\n\nvar avatarDeleteSuccess = function avatarDeleteSuccess(state, action) {\n  var newUsers = state.data.filter(function (user) {\n    return user.id !== action.data.id;\n  });\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: newUsers,\n    error: null,\n    loading: false\n  });\n};\n\nvar avatarFail = function avatarFail(state, action) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar avatar_reducer = function avatar_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case avatarTypes.AVATAR_START:\n      return avatarStart(state, action);\n\n    case avatarTypes.AVATAR_CREATE_SUCCESS:\n      return avatarCreateSuccess(state, action);\n\n    case avatarTypes.AVATAR_GET_SUCCESS:\n      return avatarGetSuccess(state, action);\n\n    case avatarTypes.AVATAR_EDIT_SUCCESS:\n      return avatarEditSuccess(state, action);\n\n    case avatarTypes.AVATAR_DELETE_SUCCESS:\n      return avatarDeleteSuccess(state, action);\n\n    case avatarTypes.AVATAR_FAIL:\n      return avatarFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default avatar_reducer;","map":null,"metadata":{},"sourceType":"module"}