{"ast":null,"code":"import _regeneratorRuntime from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport URLst, { handle401 } from \"../../utils/constants\";\nimport * as actionTypes from \"./courseActionTypes\";\nexport var allcoursePending = function allcoursePending() {\n  return {\n    type: actionTypes.COURSE_PENDING,\n    isPending: true\n  };\n};\nexport var allcourseSuccess = function allcourseSuccess(data) {\n  return {\n    type: actionTypes.COURSE_SUCCESS,\n    isPending: false,\n    data: data.results,\n    count: data.totalResults\n  };\n};\nexport var courseCreateSuccess = function courseCreateSuccess(data) {\n  return {\n    type: actionTypes.CREATE_COURSE_SUCCESS,\n    data: data\n  };\n};\nexport var updateCourseSuccess = function updateCourseSuccess(data) {\n  return {\n    type: actionTypes.UPDATE_COURSE_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport var deleteCourseSuccess = function deleteCourseSuccess(data) {\n  return {\n    type: actionTypes.DELETE_COURSE_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport var allcourseFail = function allcourseFail(error) {\n  return {\n    type: actionTypes.COURSE_FAILED,\n    error: error,\n    isPending: false\n  };\n};\nexport var getAllCourseSuccess = function getAllCourseSuccess(limit, page) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(allcoursePending());\n    axios({\n      method: \"get\",\n      url: URLst + \"v1/courses?limit=\".concat(limit, \"&page=\").concat(page),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(allcourseSuccess(res.data));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allcourseFail(errorData));\n    });\n  };\n};\nexport var getSingleCourseSuccess = function getSingleCourseSuccess(id) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(allcoursePending());\n    axios({\n      method: \"get\",\n      url: URLst + \"v1/courses/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(allcourseSuccess({\n        results: [res.data],\n        totalResults: 1\n      }));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allcourseFail(errorData));\n    });\n  };\n};\nexport var courseCreate = function courseCreate(formData) {\n  return function (dispatch) {\n    dispatch(allcoursePending());\n    var token = localStorage.getItem(\"token\");\n    axios.post(URLst + \"v1/courses\", {\n      name: formData.name\n    }, {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch(courseCreateSuccess(res.data));\n    })[\"catch\"](function (err) {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allcourseFail(errorData));\n    });\n  };\n};\nexport var AllCourseEdit = function AllCourseEdit(id, courses, edited) {\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch, getState) {\n    dispatch(allcoursePending());\n    axios({\n      method: \"patch\",\n      url: URLst + \"v1/courses/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      data: edited\n    }).then(function (res) {\n      var newData = _toConsumableArray(courses);\n\n      var index = newData.findIndex(function (av) {\n        return av.id === res.data.id;\n      });\n      newData[index] = res.data;\n      dispatch(updateCourseSuccess(newData));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allcourseFail(errorData));\n    });\n  };\n};\nexport var AllCourseDelete = function AllCourseDelete(id, courses) {\n  var filtereddata = courses.filter(function (item) {\n    return item.id !== id;\n  });\n  var token = localStorage.getItem(\"token\");\n  return function (dispatch) {\n    dispatch(allcoursePending());\n    axios({\n      method: \"delete\",\n      url: URLst + \"v1/courses/\".concat(id),\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (res) {\n      dispatch(deleteCourseSuccess(filtereddata));\n    })[\"catch\"](function (err) {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(allcourseFail(errorData));\n    });\n  };\n};\nexport var AddModuleToCourse = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(courseid, moduleid) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = localStorage.getItem(\"token\");\n            axios({\n              method: \"patch\",\n              url: URLst + \"v1/courses/\".concat(courseid),\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              },\n              data: [].concat(_toConsumableArray(modules), [moduleid])\n            }).then(function (res) {\n              console.log(res.data);\n              return 200;\n            })[\"catch\"](function (err) {\n              console.log(err.response.data.message);\n              return 400;\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function AddModuleToCourse(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}