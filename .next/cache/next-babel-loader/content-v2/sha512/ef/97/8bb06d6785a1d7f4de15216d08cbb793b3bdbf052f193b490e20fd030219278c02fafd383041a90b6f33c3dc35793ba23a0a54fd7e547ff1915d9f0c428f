{"ast":null,"code":"import axios from \"axios\";\nimport URLst, { handle401 } from \"../../utils/constants\";\nimport * as actionTypes from \"./moduleActionTypes\";\nimport { AddModuleToCourse } from \"../Courses/courseAction\";\nexport const allmodulePending = () => {\n  return {\n    type: actionTypes.MODULE_PENDING,\n    isPending: true\n  };\n};\nexport const allmoduleSuccess = data => {\n  return {\n    type: actionTypes.MODULE_SUCCESS,\n    isPending: false,\n    data: data.results,\n    count: data.totalResults\n  };\n};\nexport const moduleCreateSuccess = data => {\n  return {\n    type: actionTypes.CREATE_MODULE_SUCCESS,\n    data: data\n  };\n};\nexport const updateModuleSuccess = data => {\n  return {\n    type: actionTypes.UPDATE_MODULE_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport const deleteModuleSuccess = data => {\n  return {\n    type: actionTypes.DELETE_MODULE_SUCCESS,\n    isPending: false,\n    data: data\n  };\n};\nexport const allmoduleFail = error => {\n  return {\n    type: actionTypes.MODULE_FAILED,\n    error: error,\n    isPending: false\n  };\n};\nexport const getAllModuleSuccess = (limit, page) => {\n  var token = localStorage.getItem(\"token\");\n  return dispatch => {\n    dispatch(allmodulePending());\n    axios({\n      method: \"get\",\n      url: URLst + `v1/modules?limit=${limit}&page=${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      dispatch(allmoduleSuccess(res.data));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allmoduleFail(errorData));\n    });\n  };\n};\nexport const moduleCreate = (courseid, formData, modules) => {\n  return dispatch => {\n    dispatch(allmodulePending());\n    const token = localStorage.getItem(\"token\");\n    axios.post(URLst + \"v1/modules\", {\n      title: formData.title,\n      summary: formData.summary\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      let result = AddModuleToCourse(courseid, res.data.id, modules);\n      console.log(result);\n      dispatch(moduleCreateSuccess(res.data));\n    }).catch(err => {\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allmoduleFail(errorData));\n    });\n  };\n};\nexport const AllModuleEdit = (id, modules, edited) => {\n  const token = localStorage.getItem(\"token\");\n  return (dispatch, getState) => {\n    dispatch(allmodulePending());\n    axios({\n      method: \"patch\",\n      url: URLst + `v1/modules/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      data: edited\n    }).then(res => {\n      let newData = [...modules];\n      let index = newData.findIndex(av => av.id === res.data.id);\n      newData[index] = res.data;\n      dispatch(updateModuleSuccess(newData));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      console.log(errorData);\n      dispatch(allmoduleFail(errorData));\n    });\n  };\n};\nexport const AllModuleDelete = (id, modules) => {\n  var filtereddata = modules.filter(item => item.id !== id);\n  var token = localStorage.getItem(\"token\");\n  return dispatch => {\n    dispatch(allmodulePending());\n    axios({\n      method: \"delete\",\n      url: URLst + `v1/modules/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      dispatch(deleteModuleSuccess(filtereddata));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response.data.code == 401) {\n        handle401();\n      }\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(allmoduleFail(errorData));\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}