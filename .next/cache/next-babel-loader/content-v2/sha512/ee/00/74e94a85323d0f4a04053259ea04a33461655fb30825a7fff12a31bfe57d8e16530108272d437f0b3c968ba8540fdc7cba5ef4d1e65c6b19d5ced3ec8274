{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./authactionTypes\";\nimport URLst from \"../../utils/constants\"; // import { loadingTrue } from \"../Loading/loadingAction\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, data) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"role\", data.role);\n  localStorage.setItem(\"name\", data.name);\n  localStorage.setItem(\"username\", data.username);\n  localStorage.setItem(\"email\", data.email);\n  localStorage.setItem(\"id\", data.id);\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    data: data\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogin = value => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(URLst + \"v1/auth/login\", {\n      username: value.username,\n      password: value.password\n    }).then(res => {\n      // console.log(res.data);\n      const token = res.data.tokens.access.token;\n      const data = res.data.user; // dispatch(loadingTrue);\n\n      dispatch(authSuccess(token, data));\n    }).catch(err => {\n      var errorData;\n\n      if (err.response != null) {\n        errorData = err.response.data.message;\n      } else {\n        errorData = err.message;\n      }\n\n      dispatch(authFail(errorData));\n    });\n  };\n};","map":{"version":3,"sources":["/home/eleni/Desktop/heniken/Heineken-SalesTraining-Dashboard/store/Authentication/authactions.js"],"names":["axios","actionTypes","URLst","authStart","type","AUTH_START","authSuccess","token","data","localStorage","setItem","role","name","username","email","id","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","AUTH_LOGOUT","authLogin","value","dispatch","post","password","then","res","tokens","access","user","catch","err","errorData","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC1CC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACG,IAAlC;AACAF,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAAI,CAACI,IAAlC;AACAH,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACK,QAAtC;AACAJ,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACM,KAAnC;AACAL,EAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BF,IAAI,CAACO,EAAhC;AAEA,SAAO;AACLX,IAAAA,IAAI,EAAEH,WAAW,CAACe,YADb;AAELT,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD,CAbM;AAeP,OAAO,MAAMS,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEH,WAAW,CAACkB,SADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLhB,IAAAA,IAAI,EAAEH,WAAW,CAACoB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACrB,SAAS,EAAV,CAAR;AAEAH,IAAAA,KAAK,CACFyB,IADH,CACQvB,KAAK,GAAG,eADhB,EACiC;AAC7BW,MAAAA,QAAQ,EAAEU,KAAK,CAACV,QADa;AAE7Ba,MAAAA,QAAQ,EAAEH,KAAK,CAACG;AAFa,KADjC,EAKGC,IALH,CAKSC,GAAD,IAAS;AACb;AACA,YAAMrB,KAAK,GAAGqB,GAAG,CAACpB,IAAJ,CAASqB,MAAT,CAAgBC,MAAhB,CAAuBvB,KAArC;AACA,YAAMC,IAAI,GAAGoB,GAAG,CAACpB,IAAJ,CAASuB,IAAtB,CAHa,CAIb;;AACAP,MAAAA,QAAQ,CAAClB,WAAW,CAACC,KAAD,EAAQC,IAAR,CAAZ,CAAR;AACD,KAXH,EAYGwB,KAZH,CAYUC,GAAD,IAAS;AACd,UAAIC,SAAJ;;AACA,UAAID,GAAG,CAACE,QAAJ,IAAgB,IAApB,EAA0B;AACxBD,QAAAA,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAa3B,IAAb,CAAkB4B,OAA9B;AACD,OAFD,MAEO;AACLF,QAAAA,SAAS,GAAGD,GAAG,CAACG,OAAhB;AACD;;AACDZ,MAAAA,QAAQ,CAACP,QAAQ,CAACiB,SAAD,CAAT,CAAR;AACD,KApBH;AAqBD,GAxBD;AAyBD,CA1BM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./authactionTypes\";\nimport URLst from \"../../utils/constants\";\n// import { loadingTrue } from \"../Loading/loadingAction\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, data) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"role\", data.role);\n  localStorage.setItem(\"name\", data.name);\n  localStorage.setItem(\"username\", data.username);\n  localStorage.setItem(\"email\", data.email);\n  localStorage.setItem(\"id\", data.id);\n\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    data: data,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const authLogin = (value) => {\n  return (dispatch) => {\n    dispatch(authStart());\n\n    axios\n      .post(URLst + \"v1/auth/login\", {\n        username: value.username,\n        password: value.password,\n      })\n      .then((res) => {\n        // console.log(res.data);\n        const token = res.data.tokens.access.token;\n        const data = res.data.user;\n        // dispatch(loadingTrue);\n        dispatch(authSuccess(token, data));\n      })\n      .catch((err) => {\n        var errorData;\n        if (err.response != null) {\n          errorData = err.response.data.message;\n        } else {\n          errorData = err.message;\n        }\n        dispatch(authFail(errorData));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}