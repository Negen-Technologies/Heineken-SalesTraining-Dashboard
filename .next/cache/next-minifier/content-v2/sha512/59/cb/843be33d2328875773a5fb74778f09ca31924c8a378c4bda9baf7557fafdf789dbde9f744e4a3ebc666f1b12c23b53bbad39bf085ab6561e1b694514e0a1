{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[20],{H5Sr:function(e,t,n){(function(t){e.exports=function(){\"use strict\";var e=function(){return{javascriptEnabled:!1,depends:!1,compress:!1,lint:!1,paths:[],color:!0,strictImports:!1,insecure:!1,rootpath:\"\",rewriteUrls:!1,math:0,strictUnits:!1,globalVars:null,modifyVars:null,urlArgs:\"\"}};function n(e){return e.replace(/^[a-z-]+:\\/+?[^\\/]+/,\"\").replace(/[\\?\\&]livereload=\\w+/,\"\").replace(/^\\//,\"\").replace(/\\.[a-zA-Z]+$/,\"\").replace(/[^\\.\\w-]+/g,\"-\").replace(/\\./g,\":\")}function i(e,t){for(var n in t.dataset)if(t.dataset.hasOwnProperty(n))if(\"env\"===n||\"dumpLineNumbers\"===n||\"rootpath\"===n||\"errorReporting\"===n)e[n]=t.dataset[n];else try{e[n]=JSON.parse(t.dataset[n])}catch(i){}}var r={createCSS:function(e,t,i){var r=i.href||\"\",a=\"less:\".concat(i.title||n(r)),s=e.getElementById(a),o=!1,l=e.createElement(\"style\");l.setAttribute(\"type\",\"text/css\"),i.media&&l.setAttribute(\"media\",i.media),l.id=a,l.styleSheet||(l.appendChild(e.createTextNode(t)),o=null!==s&&s.childNodes.length>0&&l.childNodes.length>0&&s.firstChild.nodeValue===l.firstChild.nodeValue);var u=e.getElementsByTagName(\"head\")[0];if(null===s||!1===o){var c=i&&i.nextSibling||null;c?c.parentNode.insertBefore(l,c):u.appendChild(l)}if(s&&!1===o&&s.parentNode.removeChild(s),l.styleSheet)try{l.styleSheet.cssText=t}catch(h){throw new Error(\"Couldn't reassign styleSheet.cssText.\")}},currentScript:function(e){var t=e.document;return t.currentScript||function(){var e=t.getElementsByTagName(\"script\");return e[e.length-1]}()}},a=function(e,t){i(t,r.currentScript(e)),void 0===t.isFileProtocol&&(t.isFileProtocol=/^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(e.location.protocol)),t.async=t.async||!1,t.fileAsync=t.fileAsync||!1,t.poll=t.poll||(t.isFileProtocol?1e3:1500),t.env=t.env||(\"127.0.0.1\"==e.location.hostname||\"0.0.0.0\"==e.location.hostname||\"localhost\"==e.location.hostname||e.location.port&&e.location.port.length>0||t.isFileProtocol?\"development\":\"production\");var n=/!dumpLineNumbers:(comments|mediaquery|all)/.exec(e.location.hash);n&&(t.dumpLineNumbers=n[1]),void 0===t.useFileCache&&(t.useFileCache=!0),void 0===t.onReady&&(t.onReady=!0),t.relativeUrls&&(t.rewriteUrls=\"all\")};function s(e){return(s=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function l(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function u(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),e}function c(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(){if(\"undefined\"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function v(e,t,n){return(v=p()?Reflect.construct:function(e,t,n){var i=[null];i.push.apply(i,t);var r=new(Function.bind.apply(e,i));return n&&f(r,n.prototype),r}).apply(null,arguments)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function m(e,t){return!t||\"object\"!==typeof t&&\"function\"!==typeof t?d(e):t}function g(e){return y(e)||b(e)||w()}function y(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}function b(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}function w(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}var k={aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgrey:\"#a9a9a9\",darkgreen:\"#006400\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",grey:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgrey:\"#d3d3d3\",lightgreen:\"#90ee90\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370d8\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#d87093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"},x={length:{m:1,cm:.01,mm:.001,in:.0254,px:.0254/96,pt:.0254/72,pc:.0254/72*12},duration:{s:1,ms:.001},angle:{rad:1/(2*Math.PI),deg:1/360,grad:1/400,turn:1}},S={colors:k,unitConversions:x},I=function(){function e(){o(this,e),this.parent=null,this.visibilityBlocks=void 0,this.nodeVisible=void 0,this.rootNode=null,this.parsed=null;var t=this;Object.defineProperty(this,\"currentFileInfo\",{get:function(){return t.fileInfo()}}),Object.defineProperty(this,\"index\",{get:function(){return t.getIndex()}})}return u(e,[{key:\"setParent\",value:function(t,n){function i(t){t&&t instanceof e&&(t.parent=n)}Array.isArray(t)?t.forEach(i):i(t)}},{key:\"getIndex\",value:function(){return this._index||this.parent&&this.parent.getIndex()||0}},{key:\"fileInfo\",value:function(){return this._fileInfo||this.parent&&this.parent.fileInfo()||{}}},{key:\"isRulesetLike\",value:function(){return!1}},{key:\"toCSS\",value:function(e){var t=[];return this.genCSS(e,{add:function(e,n,i){t.push(e)},isEmpty:function(){return 0===t.length}}),t.join(\"\")}},{key:\"genCSS\",value:function(e,t){t.add(this.value)}},{key:\"accept\",value:function(e){this.value=e.visit(this.value)}},{key:\"eval\",value:function(){return this}},{key:\"_operate\",value:function(e,t,n,i){switch(t){case\"+\":return n+i;case\"-\":return n-i;case\"*\":return n*i;case\"/\":return n/i}}},{key:\"fround\",value:function(e,t){var n=e&&e.numPrecision;return n?Number((t+2e-16).toFixed(n)):t}},{key:\"blocksVisibility\",value:function(){return null==this.visibilityBlocks&&(this.visibilityBlocks=0),0!==this.visibilityBlocks}},{key:\"addVisibilityBlock\",value:function(){null==this.visibilityBlocks&&(this.visibilityBlocks=0),this.visibilityBlocks=this.visibilityBlocks+1}},{key:\"removeVisibilityBlock\",value:function(){null==this.visibilityBlocks&&(this.visibilityBlocks=0),this.visibilityBlocks=this.visibilityBlocks-1}},{key:\"ensureVisibility\",value:function(){this.nodeVisible=!0}},{key:\"ensureInvisibility\",value:function(){this.nodeVisible=!1}},{key:\"isVisible\",value:function(){return this.nodeVisible}},{key:\"visibilityInfo\",value:function(){return{visibilityBlocks:this.visibilityBlocks,nodeVisible:this.nodeVisible}}},{key:\"copyVisibilityInfo\",value:function(e){e&&(this.visibilityBlocks=e.visibilityBlocks,this.nodeVisible=e.nodeVisible)}}]),e}();I.compare=function(e,t){if(e.compare&&\"Quoted\"!==t.type&&\"Anonymous\"!==t.type)return e.compare(t);if(t.compare)return-t.compare(e);if(e.type===t.type){if(e=e.value,t=t.value,!Array.isArray(e))return e===t?0:void 0;if(e.length===t.length){for(var n=0;n<e.length;n++)if(0!==I.compare(e[n],t[n]))return;return 0}}},I.numericCompare=function(e,t){return e<t?-1:e===t?0:e>t?1:void 0};var C=function(e){function t(e,n,i){var r;o(this,t);var a=d(r=m(this,h(t).call(this)));return Array.isArray(e)?r.rgb=e:e.length>=6?(r.rgb=[],e.match(/.{2}/g).map((function(e,t){t<3?a.rgb.push(parseInt(e,16)):a.alpha=parseInt(e,16)/255}))):(r.rgb=[],e.split(\"\").map((function(e,t){t<3?a.rgb.push(parseInt(e+e,16)):a.alpha=parseInt(e+e,16)/255}))),r.alpha=r.alpha||(\"number\"===typeof n?n:1),\"undefined\"!==typeof i&&(r.value=i),r}return c(t,e),u(t,[{key:\"luma\",value:function(){var e=this.rgb[0]/255,t=this.rgb[1]/255,n=this.rgb[2]/255;return.2126*(e=e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4))+.7152*(t=t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4))+.0722*(n=n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))}},{key:\"genCSS\",value:function(e,t){t.add(this.toCSS(e))}},{key:\"toCSS\",value:function(e,t){var n,i,r,a=e&&e.compress&&!t,s=[];if(i=this.fround(e,this.alpha),this.value)if(0===this.value.indexOf(\"rgb\"))i<1&&(r=\"rgba\");else{if(0!==this.value.indexOf(\"hsl\"))return this.value;r=i<1?\"hsla\":\"hsl\"}else i<1&&(r=\"rgba\");switch(r){case\"rgba\":s=this.rgb.map((function(e){return _(Math.round(e),255)})).concat(_(i,1));break;case\"hsla\":s.push(_(i,1));case\"hsl\":n=this.toHSL(),s=[this.fround(e,n.h),\"\".concat(this.fround(e,100*n.s),\"%\"),\"\".concat(this.fround(e,100*n.l),\"%\")].concat(s)}if(r)return\"\".concat(r,\"(\").concat(s.join(\",\".concat(a?\"\":\" \")),\")\");if(n=this.toRGB(),a){var o=n.split(\"\");o[1]===o[2]&&o[3]===o[4]&&o[5]===o[6]&&(n=\"#\".concat(o[1]).concat(o[3]).concat(o[5]))}return n}},{key:\"operate\",value:function(e,n,i){for(var r=new Array(3),a=this.alpha*(1-i.alpha)+i.alpha,s=0;s<3;s++)r[s]=this._operate(e,n,this.rgb[s],i.rgb[s]);return new t(r,a)}},{key:\"toRGB\",value:function(){return A(this.rgb)}},{key:\"toHSL\",value:function(){var e,t,n=this.rgb[0]/255,i=this.rgb[1]/255,r=this.rgb[2]/255,a=this.alpha,s=Math.max(n,i,r),o=Math.min(n,i,r),l=(s+o)/2,u=s-o;if(s===o)e=t=0;else{switch(t=l>.5?u/(2-s-o):u/(s+o),s){case n:e=(i-r)/u+(i<r?6:0);break;case i:e=(r-n)/u+2;break;case r:e=(n-i)/u+4}e/=6}return{h:360*e,s:t,l:l,a:a}}},{key:\"toHSV\",value:function(){var e,t,n=this.rgb[0]/255,i=this.rgb[1]/255,r=this.rgb[2]/255,a=this.alpha,s=Math.max(n,i,r),o=Math.min(n,i,r),l=s,u=s-o;if(t=0===s?0:u/s,s===o)e=0;else{switch(s){case n:e=(i-r)/u+(i<r?6:0);break;case i:e=(r-n)/u+2;break;case r:e=(n-i)/u+4}e/=6}return{h:360*e,s:t,v:l,a:a}}},{key:\"toARGB\",value:function(){return A([255*this.alpha].concat(this.rgb))}},{key:\"compare\",value:function(e){return e.rgb&&e.rgb[0]===this.rgb[0]&&e.rgb[1]===this.rgb[1]&&e.rgb[2]===this.rgb[2]&&e.alpha===this.alpha?0:void 0}}]),t}(I);function _(e,t){return Math.min(Math.max(e,0),t)}function A(e){return\"#\".concat(e.map((function(e){return((e=_(Math.round(e),255))<16?\"0\":\"\")+e.toString(16)})).join(\"\"))}C.prototype.type=\"Color\",C.fromKeyword=function(e){var t,n=e.toLowerCase();if(k.hasOwnProperty(n)?t=new C(k[n].slice(1)):\"transparent\"===n&&(t=new C([0,0,0],0)),t)return t.value=e,t};var M=function(e){function t(e){var n;return o(this,t),(n=m(this,h(t).call(this))).value=e,n}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){t.add(\"(\"),this.value.genCSS(e,t),t.add(\")\")}},{key:\"eval\",value:function(e){return new t(this.value.eval(e))}}]),t}(I);M.prototype.type=\"Paren\";var P={\"\":!0,\" \":!0,\"|\":!0},E=function(e){function t(e){var n;return o(this,t),n=m(this,h(t).call(this)),\" \"===e?(n.value=\" \",n.emptyOrWhitespace=!0):(n.value=e?e.trim():\"\",n.emptyOrWhitespace=\"\"===n.value),n}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){var n=e.compress||P[this.value]?\"\":\" \";t.add(n+this.value+n)}}]),t}(I);E.prototype.type=\"Combinator\";var R=function(e){function t(e,n,i,r,a,s){var l;return o(this,t),(l=m(this,h(t).call(this))).combinator=e instanceof E?e:new E(e),l.value=\"string\"===typeof n?n.trim():n||\"\",l.isVariable=i,l._index=r,l._fileInfo=a,l.copyVisibilityInfo(s),l.setParent(l.combinator,d(l)),l}return c(t,e),u(t,[{key:\"accept\",value:function(e){var t=this.value;this.combinator=e.visit(this.combinator),\"object\"===s(t)&&(this.value=e.visit(t))}},{key:\"eval\",value:function(e){return new t(this.combinator,this.value.eval?this.value.eval(e):this.value,this.isVariable,this.getIndex(),this.fileInfo(),this.visibilityInfo())}},{key:\"clone\",value:function(){return new t(this.combinator,this.value,this.isVariable,this.getIndex(),this.fileInfo(),this.visibilityInfo())}},{key:\"genCSS\",value:function(e,t){t.add(this.toCSS(e),this.fileInfo(),this.getIndex())}},{key:\"toCSS\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.value,n=e.firstSelector;return t instanceof M&&(e.firstSelector=!0),t=t.toCSS?t.toCSS(e):t,e.firstSelector=n,\"\"===t&&\"&\"===this.combinator.value.charAt(0)?\"\":this.combinator.toCSS(e)+t}}]),t}(I);R.prototype.type=\"Element\";var O={ALWAYS:0,PARENS_DIVISION:1,PARENS:2,STRICT_LEGACY:3},F={OFF:0,LOCAL:1,ALL:2};function V(e,t){return e(t={exports:{}},t.exports),t.exports}var $=V((function(e){var n=function(){function e(e,t){return null!=t&&e instanceof t}var n,i,r;try{n=Map}catch(h){n=function(){}}try{i=Set}catch(h){i=function(){}}try{r=Promise}catch(h){r=function(){}}function a(s,o,l,u,h){\"object\"===typeof o&&(l=o.depth,u=o.prototype,h=o.includeNonEnumerable,o=o.circular);var f=[],p=[],v=\"undefined\"!=typeof t;function d(s,l){if(null===s)return null;if(0===l)return s;var m,g;if(\"object\"!=typeof s)return s;if(e(s,n))m=new n;else if(e(s,i))m=new i;else if(e(s,r))m=new r((function(e,t){s.then((function(t){e(d(t,l-1))}),(function(e){t(d(e,l-1))}))}));else if(a.__isArray(s))m=[];else if(a.__isRegExp(s))m=new RegExp(s.source,c(s)),s.lastIndex&&(m.lastIndex=s.lastIndex);else if(a.__isDate(s))m=new Date(s.getTime());else{if(v&&t.isBuffer(s))return m=t.allocUnsafe?t.allocUnsafe(s.length):new t(s.length),s.copy(m),m;e(s,Error)?m=Object.create(s):\"undefined\"==typeof u?(g=Object.getPrototypeOf(s),m=Object.create(g)):(m=Object.create(u),g=u)}if(o){var y=f.indexOf(s);if(-1!=y)return p[y];f.push(s),p.push(m)}for(var b in e(s,n)&&s.forEach((function(e,t){var n=d(t,l-1),i=d(e,l-1);m.set(n,i)})),e(s,i)&&s.forEach((function(e){var t=d(e,l-1);m.add(t)})),s){var w;g&&(w=Object.getOwnPropertyDescriptor(g,b)),w&&null==w.set||(m[b]=d(s[b],l-1))}if(Object.getOwnPropertySymbols){var k=Object.getOwnPropertySymbols(s);for(b=0;b<k.length;b++){var x=k[b];(!(I=Object.getOwnPropertyDescriptor(s,x))||I.enumerable||h)&&(m[x]=d(s[x],l-1),I.enumerable||Object.defineProperty(m,x,{enumerable:!1}))}}if(h){var S=Object.getOwnPropertyNames(s);for(b=0;b<S.length;b++){var I,C=S[b];(I=Object.getOwnPropertyDescriptor(s,C))&&I.enumerable||(m[C]=d(s[C],l-1),Object.defineProperty(m,C,{enumerable:!1}))}}return m}return\"undefined\"==typeof o&&(o=!0),\"undefined\"==typeof l&&(l=1/0),d(s,l)}function s(e){return Object.prototype.toString.call(e)}function o(e){return\"object\"===typeof e&&\"[object Date]\"===s(e)}function l(e){return\"object\"===typeof e&&\"[object Array]\"===s(e)}function u(e){return\"object\"===typeof e&&\"[object RegExp]\"===s(e)}function c(e){var t=\"\";return e.global&&(t+=\"g\"),e.ignoreCase&&(t+=\"i\"),e.multiline&&(t+=\"m\"),t}return a.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},a.__objToStr=s,a.__isDate=o,a.__isArray=l,a.__isRegExp=u,a.__getRegExpFlags=c,a}();e.exports&&(e.exports=n)}));function L(e,t){for(var n=e+1,i=null,r=-1;--n>=0&&\"\\n\"!==t.charAt(n);)r++;return\"number\"===typeof e&&(i=(t.slice(0,e).match(/\\n/g)||\"\").length),{line:i,column:r}}function D(e){var t,n=e.length,i=new Array(n);for(t=0;t<n;t++)i[t]=e[t];return i}function N(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}function j(e,t){var n=t||{};if(!t._defaults){n={};var i=$(e);n._defaults=i;var r=t?$(t):{};Object.assign(n,i,r)}return n}function B(e,t){if(t&&t._defaults)return t;var n=j(e,t);if(n.strictMath&&(n.math=O.STRICT_LEGACY),n.relativeUrls&&(n.rewriteUrls=F.ALL),\"string\"===typeof n.math)switch(n.math.toLowerCase()){case\"always\":n.math=O.ALWAYS;break;case\"parens-division\":n.math=O.PARENS_DIVISION;break;case\"strict\":case\"parens\":n.math=O.PARENS;break;case\"strict-legacy\":n.math=O.STRICT_LEGACY}if(\"string\"===typeof n.rewriteUrls)switch(n.rewriteUrls.toLowerCase()){case\"off\":n.rewriteUrls=F.OFF;break;case\"local\":n.rewriteUrls=F.LOCAL;break;case\"all\":n.rewriteUrls=F.ALL}return n}function U(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function q(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=0,i=e.length;n<i;n++){var r=e[n];Array.isArray(r)?q(r,t):void 0!==r&&t.push(r)}return t}var T=Object.freeze({getLocation:L,copyArray:D,clone:N,defaults:j,copyOptions:B,merge:U,flattenArray:q}),z=function(e,t,n){Error.call(this);var i=e.filename||n;if(this.message=e.message,this.stack=e.stack,t&&i){var r=t.contents[i],a=L(e.index,r),s=a.line,o=a.column,l=e.call&&L(e.call,r).line,u=r?r.split(\"\\n\"):\"\";if(this.type=e.type||\"Syntax\",this.filename=i,this.index=e.index,this.line=\"number\"===typeof s?s+1:null,this.column=o,!this.line&&this.stack){var c=this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);c&&(c[2]&&(this.line=parseInt(c[2])-2),c[3]&&(this.column=parseInt(c[3])))}this.callLine=l+1,this.callExtract=u[l],this.extract=[u[this.line-2],u[this.line-1],u[this.line]]}};if(\"undefined\"===typeof Object.create){var G=function(){};G.prototype=Error.prototype,z.prototype=new G}else z.prototype=Object.create(Error.prototype);z.prototype.constructor=z,z.prototype.toString=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=\"\",n=this.extract||[],i=[],r=function(e){return e};if(e.stylize){var a=s(e.stylize);if(\"function\"!==a)throw Error(\"options.stylize should be a function, got a \".concat(a,\"!\"));r=e.stylize}if(null!==this.line){if(\"string\"===typeof n[0]&&i.push(r(\"\".concat(this.line-1,\" \").concat(n[0]),\"grey\")),\"string\"===typeof n[1]){var o=\"\".concat(this.line,\" \");n[1]&&(o+=n[1].slice(0,this.column)+r(r(r(n[1].substr(this.column,1),\"bold\")+n[1].slice(this.column+1),\"red\"),\"inverse\")),i.push(o)}\"string\"===typeof n[2]&&i.push(r(\"\".concat(this.line+1,\" \").concat(n[2]),\"grey\")),i=\"\".concat(i.join(\"\\n\")+r(\"\",\"reset\"),\"\\n\")}return t+=r(\"\".concat(this.type,\"Error: \").concat(this.message),\"red\"),this.filename&&(t+=r(\" in \",\"red\")+this.filename),this.line&&(t+=r(\" on line \".concat(this.line,\", column \").concat(this.column+1,\":\"),\"grey\")),t+=\"\\n\".concat(i),this.callLine&&(t+=\"\".concat(r(\"from \",\"red\")+(this.filename||\"\"),\"/n\"),t+=\"\".concat(r(this.callLine,\"grey\"),\" \").concat(this.callExtract,\"/n\")),t};var J=function(e){function t(e,n,i,r,a,s){var l;return o(this,t),(l=m(this,h(t).call(this))).extendList=n,l.condition=i,l.evaldCondition=!i,l._index=r,l._fileInfo=a,l.elements=l.getElements(e),l.mixinElements_=void 0,l.copyVisibilityInfo(s),l.setParent(l.elements,d(l)),l}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.elements&&(this.elements=e.visitArray(this.elements)),this.extendList&&(this.extendList=e.visitArray(this.extendList)),this.condition&&(this.condition=e.visit(this.condition))}},{key:\"createDerived\",value:function(e,n,i){var r=new t(e=this.getElements(e),n||this.extendList,null,this.getIndex(),this.fileInfo(),this.visibilityInfo());return r.evaldCondition=null!=i?i:this.evaldCondition,r.mediaEmpty=this.mediaEmpty,r}},{key:\"getElements\",value:function(e){return e?(\"string\"===typeof e&&this.parse.parseNode(e,[\"selector\"],this._index,this._fileInfo,(function(t,n){if(t)throw new z({index:t.index,message:t.message},this.parse.imports,this._fileInfo.filename);e=n[0].elements})),e):[new R(\"\",\"&\",!1,this._index,this._fileInfo)]}},{key:\"createEmptySelectors\",value:function(){var e=[new t([new R(\"\",\"&\",!1,this._index,this._fileInfo)],null,null,this._index,this._fileInfo)];return e[0].mediaEmpty=!0,e}},{key:\"match\",value:function(e){var t,n,i=this.elements,r=i.length;if(0===(t=(e=e.mixinElements()).length)||r<t)return 0;for(n=0;n<t;n++)if(i[n].value!==e[n])return 0;return t}},{key:\"mixinElements\",value:function(){if(this.mixinElements_)return this.mixinElements_;var e=this.elements.map((function(e){return e.combinator.value+(e.value.value||e.value)})).join(\"\").match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);return e?\"&\"===e[0]&&e.shift():e=[],this.mixinElements_=e}},{key:\"isJustParentSelector\",value:function(){return!this.mediaEmpty&&1===this.elements.length&&\"&\"===this.elements[0].value&&(\" \"===this.elements[0].combinator.value||\"\"===this.elements[0].combinator.value)}},{key:\"eval\",value:function(e){var t=this.condition&&this.condition.eval(e),n=this.elements,i=this.extendList;return n=n&&n.map((function(t){return t.eval(e)})),i=i&&i.map((function(t){return t.eval(e)})),this.createDerived(n,i,t)}},{key:\"genCSS\",value:function(e,t){var n;for(e&&e.firstSelector||\"\"!==this.elements[0].combinator.value||t.add(\" \",this.fileInfo(),this.getIndex()),n=0;n<this.elements.length;n++)this.elements[n].genCSS(e,t)}},{key:\"getIsOutput\",value:function(){return this.evaldCondition}}]),t}(I);J.prototype.type=\"Selector\";var W=function(e){function t(e){var n;if(o(this,t),n=m(this,h(t).call(this)),!e)throw new Error(\"Value requires an array argument\");return Array.isArray(e)?n.value=e:n.value=[e],n}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.value&&(this.value=e.visitArray(this.value))}},{key:\"eval\",value:function(e){return 1===this.value.length?this.value[0].eval(e):new t(this.value.map((function(t){return t.eval(e)})))}},{key:\"genCSS\",value:function(e,t){var n;for(n=0;n<this.value.length;n++)this.value[n].genCSS(e,t),n+1<this.value.length&&t.add(e&&e.compress?\",\":\", \")}}]),t}(I);W.prototype.type=\"Value\";var H=function(e){function t(e){var n;return o(this,t),(n=m(this,h(t).call(this))).value=e,n}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){if(\"%\"===this.value)throw{type:\"Syntax\",message:\"Invalid % without number\"};t.add(this.value)}}]),t}(I);H.prototype.type=\"Keyword\",H.True=new H(\"true\"),H.False=new H(\"false\");var Q=function(e){function t(e,n,i,r,a,s){var l;return o(this,t),(l=m(this,h(t).call(this))).value=e,l._index=n,l._fileInfo=i,l.mapLines=r,l.rulesetLike=\"undefined\"!==typeof a&&a,l.allowRoot=!0,l.copyVisibilityInfo(s),l}return c(t,e),u(t,[{key:\"eval\",value:function(){return new t(this.value,this._index,this._fileInfo,this.mapLines,this.rulesetLike,this.visibilityInfo())}},{key:\"compare\",value:function(e){return e.toCSS&&this.toCSS()===e.toCSS()?0:void 0}},{key:\"isRulesetLike\",value:function(){return this.rulesetLike}},{key:\"genCSS\",value:function(e,t){this.nodeVisible=Boolean(this.value),this.nodeVisible&&t.add(this.value,this._fileInfo,this._index,this.mapLines)}}]),t}(I);Q.prototype.type=\"Anonymous\";var K=O,Z=function(e){function t(e,n,i,r,a,s,l,u){var c;return o(this,t),(c=m(this,h(t).call(this))).name=e,c.value=n instanceof I?n:new W([n?new Q(n):null]),c.important=i?\" \".concat(i.trim()):\"\",c.merge=r,c._index=a,c._fileInfo=s,c.inline=l||!1,c.variable=void 0!==u?u:e.charAt&&\"@\"===e.charAt(0),c.allowRoot=!0,c.setParent(c.value,d(c)),c}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){t.add(this.name+(e.compress?\":\":\": \"),this.fileInfo(),this.getIndex());try{this.value.genCSS(e,t)}catch(n){throw n.index=this._index,n.filename=this._fileInfo.filename,n}t.add(this.important+(this.inline||e.lastRule&&e.compress?\"\":\";\"),this._fileInfo,this._index)}},{key:\"eval\",value:function(e){var n,i,r=!1,a=this.name,s=this.variable;\"string\"!==typeof a&&(a=1===a.length&&a[0]instanceof H?a[0].value:Y(e,a),s=!1),\"font\"===a&&e.math===K.ALWAYS&&(r=!0,n=e.math,e.math=K.PARENS_DIVISION);try{if(e.importantScope.push({}),i=this.value.eval(e),!this.variable&&\"DetachedRuleset\"===i.type)throw{message:\"Rulesets cannot be evaluated on a property.\",index:this.getIndex(),filename:this.fileInfo().filename};var o=this.important,l=e.importantScope.pop();return!o&&l.important&&(o=l.important),new t(a,i,o,this.merge,this.getIndex(),this.fileInfo(),this.inline,s)}catch(u){throw\"number\"!==typeof u.index&&(u.index=this.getIndex(),u.filename=this.fileInfo().filename),u}finally{r&&(e.math=n)}}},{key:\"makeImportant\",value:function(){return new t(this.name,this.value,\"!important\",this.merge,this.getIndex(),this.fileInfo(),this.inline)}}]),t}(I);function Y(e,t){var n,i=\"\",r=t.length,a={add:function(e){i+=e}};for(n=0;n<r;n++)t[n].eval(e).genCSS(e,a);return i}Z.prototype.type=\"Declaration\";var X=function e(t,n,i){var r=\"\";if(t.dumpLineNumbers&&!t.compress)switch(t.dumpLineNumbers){case\"comments\":r=e.asComment(n);break;case\"mediaquery\":r=e.asMediaQuery(n);break;case\"all\":r=e.asComment(n)+(i||\"\")+e.asMediaQuery(n)}return r};X.asComment=function(e){return\"/* line \".concat(e.debugInfo.lineNumber,\", \").concat(e.debugInfo.fileName,\" */\\n\")},X.asMediaQuery=function(e){var t=e.debugInfo.fileName;return/^[a-z]+:\\/\\//i.test(t)||(t=\"file://\".concat(t)),\"@media -sass-debug-info{filename{font-family:\".concat(t.replace(/([.:\\/\\\\])/g,(function(e){return\"\\\\\"==e&&(e=\"/\"),\"\\\\\".concat(e)})),\"}line{font-family:\\\\00003\").concat(e.debugInfo.lineNumber,\"}}\\n\")};var ee=function(e){function t(e,n,i,r){var a;return o(this,t),(a=m(this,h(t).call(this))).value=e,a.isLineComment=n,a._index=i,a._fileInfo=r,a.allowRoot=!0,a}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){this.debugInfo&&t.add(X(e,this),this.fileInfo(),this.getIndex()),t.add(this.value)}},{key:\"isSilent\",value:function(e){var t=e.compress&&\"!\"!==this.value[2];return this.isLineComment||t}}]),t}(I);ee.prototype.type=\"Comment\";var te={},ne=function(e,t,n){if(e)for(var i=0;i<n.length;i++)e.hasOwnProperty(n[i])&&(t[n[i]]=e[n[i]])},ie=[\"paths\",\"rewriteUrls\",\"rootpath\",\"strictImports\",\"insecure\",\"dumpLineNumbers\",\"compress\",\"syncImport\",\"chunkInput\",\"mime\",\"useFileCache\",\"processImports\",\"pluginManager\"];te.Parse=function(e){ne(e,this,ie),\"string\"===typeof this.paths&&(this.paths=[this.paths])};var re=[\"paths\",\"compress\",\"math\",\"strictUnits\",\"sourceMap\",\"importMultiple\",\"urlArgs\",\"javascriptEnabled\",\"pluginManager\",\"importantScope\",\"rewriteUrls\"];function ae(e){return!/^(?:[a-z-]+:|\\/|#)/i.test(e)}function se(e){return\".\"===e.charAt(0)}function oe(e){return{_data:{},add:function(e,t){e=e.toLowerCase(),this._data.hasOwnProperty(e),this._data[e]=t},addMultiple:function(e){var t=this;Object.keys(e).forEach((function(n){t.add(n,e[n])}))},get:function(t){return this._data[t]||e&&e.get(t)},getLocalFunctions:function(){return this._data},inherit:function(){return oe(this)},create:function(e){return oe(e)}}}te.Eval=function(){function e(t,n){o(this,e),ne(t,this,re),\"string\"===typeof this.paths&&(this.paths=[this.paths]),this.frames=n||[],this.importantScope=this.importantScope||[],this.inCalc=!1,this.mathOn=!0}return u(e,[{key:\"enterCalc\",value:function(){this.calcStack||(this.calcStack=[]),this.calcStack.push(!0),this.inCalc=!0}},{key:\"exitCalc\",value:function(){this.calcStack.pop(),this.calcStack||(this.inCalc=!1)}},{key:\"inParenthesis\",value:function(){this.parensStack||(this.parensStack=[]),this.parensStack.push(!0)}},{key:\"outOfParenthesis\",value:function(){this.parensStack.pop()}},{key:\"isMathOn\",value:function(e){return!!this.mathOn&&!!(\"/\"!==e||this.math===O.ALWAYS||this.parensStack&&this.parensStack.length)&&(!(this.math>O.PARENS_DIVISION)||this.parensStack&&this.parensStack.length)}},{key:\"pathRequiresRewrite\",value:function(e){return(this.rewriteUrls===F.LOCAL?se:ae)(e)}},{key:\"rewritePath\",value:function(e,t){var n;return t=t||\"\",n=this.normalizePath(t+e),se(e)&&ae(t)&&!1===se(n)&&(n=\"./\".concat(n)),n}},{key:\"normalizePath\",value:function(e){var t,n=e.split(\"/\").reverse();for(e=[];0!==n.length;)switch(t=n.pop()){case\".\":break;case\"..\":0===e.length||\"..\"===e[e.length-1]?e.push(t):e.pop();break;default:e.push(t)}return e.join(\"/\")}}]),e}();var le=oe(null),ue={eval:function(){var e=this.value_,t=this.error_;if(t)throw t;if(null!=e)return e?H.True:H.False},value:function(e){this.value_=e},error:function(e){this.error_=e},reset:function(){this.value_=this.error_=null}},ce=function(e){function t(e,n,i,r){var a;return o(this,t),(a=m(this,h(t).call(this))).selectors=e,a.rules=n,a._lookups={},a._variables=null,a._properties=null,a.strictImports=i,a.copyVisibilityInfo(r),a.allowRoot=!0,a.setParent(a.selectors,d(a)),a.setParent(a.rules,d(a)),a}return c(t,e),u(t,[{key:\"isRulesetLike\",value:function(){return!0}},{key:\"accept\",value:function(e){this.paths?this.paths=e.visitArray(this.paths,!0):this.selectors&&(this.selectors=e.visitArray(this.selectors)),this.rules&&this.rules.length&&(this.rules=e.visitArray(this.rules))}},{key:\"eval\",value:function(e){var n,i,r,a,s,o=!1;if(this.selectors&&(i=this.selectors.length)){for(n=new Array(i),ue.error({type:\"Syntax\",message:\"it is currently only allowed in parametric mixin guards,\"}),a=0;a<i;a++){r=this.selectors[a].eval(e);for(var l=0;l<r.elements.length;l++)if(r.elements[l].isVariable){s=!0;break}n[a]=r,r.evaldCondition&&(o=!0)}if(s){var u=new Array(i);for(a=0;a<i;a++)r=n[a],u[a]=r.toCSS(e);this.parse.parseNode(u.join(\",\"),[\"selectors\"],n[0].getIndex(),n[0].fileInfo(),(function(e,t){t&&(n=q(t))}))}ue.reset()}else o=!0;var c,h,f=this.rules?D(this.rules):null,p=new t(n,f,this.strictImports,this.visibilityInfo());p.originalRuleset=this,p.root=this.root,p.firstRoot=this.firstRoot,p.allowImports=this.allowImports,this.debugInfo&&(p.debugInfo=this.debugInfo),o||(f.length=0),p.functionRegistry=function(e){for(var t,n=0,i=e.length;n!==i;++n)if(t=e[n].functionRegistry)return t;return le}(e.frames).inherit();var v=e.frames;v.unshift(p);var d=e.selectors;d||(e.selectors=d=[]),d.unshift(this.selectors),(p.root||p.allowImports||!p.strictImports)&&p.evalImports(e);var m=p.rules;for(a=0;c=m[a];a++)c.evalFirst&&(m[a]=c.eval(e));var y=e.mediaBlocks&&e.mediaBlocks.length||0;for(a=0;c=m[a];a++)\"MixinCall\"===c.type?(f=c.eval(e).filter((function(e){return!(e instanceof Z&&e.variable)||!p.variable(e.name)})),m.splice.apply(m,g([a,1].concat(f))),a+=f.length-1,p.resetCache()):\"VariableCall\"===c.type&&(f=c.eval(e).rules.filter((function(e){return!(e instanceof Z&&e.variable)})),m.splice.apply(m,g([a,1].concat(f))),a+=f.length-1,p.resetCache());for(a=0;c=m[a];a++)c.evalFirst||(m[a]=c=c.eval?c.eval(e):c);for(a=0;c=m[a];a++)if(c instanceof t&&c.selectors&&1===c.selectors.length&&c.selectors[0]&&c.selectors[0].isJustParentSelector())for(m.splice(a--,1),l=0;h=c.rules[l];l++)h instanceof I&&(h.copyVisibilityInfo(c.visibilityInfo()),h instanceof Z&&h.variable||m.splice(++a,0,h));if(v.shift(),d.shift(),e.mediaBlocks)for(a=y;a<e.mediaBlocks.length;a++)e.mediaBlocks[a].bubbleSelectors(n);return p}},{key:\"evalImports\",value:function(e){var t,n,i=this.rules;if(i)for(t=0;t<i.length;t++)\"Import\"===i[t].type&&((n=i[t].eval(e))&&(n.length||0===n.length)?(i.splice.apply(i,g([t,1].concat(n))),t+=n.length-1):i.splice(t,1,n),this.resetCache())}},{key:\"makeImportant\",value:function(){return new t(this.selectors,this.rules.map((function(e){return e.makeImportant?e.makeImportant():e})),this.strictImports,this.visibilityInfo())}},{key:\"matchArgs\",value:function(e){return!e||0===e.length}},{key:\"matchCondition\",value:function(e,t){var n=this.selectors[this.selectors.length-1];return!!n.evaldCondition&&!(n.condition&&!n.condition.eval(new te.Eval(t,t.frames)))}},{key:\"resetCache\",value:function(){this._rulesets=null,this._variables=null,this._properties=null,this._lookups={}}},{key:\"variables\",value:function(){return this._variables||(this._variables=this.rules?this.rules.reduce((function(e,t){if(t instanceof Z&&!0===t.variable&&(e[t.name]=t),\"Import\"===t.type&&t.root&&t.root.variables){var n=t.root.variables();for(var i in n)n.hasOwnProperty(i)&&(e[i]=t.root.variable(i))}return e}),{}):{}),this._variables}},{key:\"properties\",value:function(){return this._properties||(this._properties=this.rules?this.rules.reduce((function(e,t){if(t instanceof Z&&!0!==t.variable){var n=1===t.name.length&&t.name[0]instanceof H?t.name[0].value:t.name;e[\"$\".concat(n)]?e[\"$\".concat(n)].push(t):e[\"$\".concat(n)]=[t]}return e}),{}):{}),this._properties}},{key:\"variable\",value:function(e){var t=this.variables()[e];if(t)return this.parseValue(t)}},{key:\"property\",value:function(e){var t=this.properties()[e];if(t)return this.parseValue(t)}},{key:\"lastDeclaration\",value:function(){for(var e=this.rules.length;e>0;e--){var t=this.rules[e-1];if(t instanceof Z)return this.parseValue(t)}}},{key:\"parseValue\",value:function(e){var t=this;function n(e){return e.value instanceof Q&&!e.parsed?(\"string\"===typeof e.value.value?this.parse.parseNode(e.value.value,[\"value\",\"important\"],e.value.getIndex(),e.fileInfo(),(function(t,n){t&&(e.parsed=!0),n&&(e.value=n[0],e.important=n[1]||\"\",e.parsed=!0)})):e.parsed=!0,e):e}if(Array.isArray(e)){var i=[];return e.forEach((function(e){i.push(n.call(t,e))})),i}return n.call(t,e)}},{key:\"rulesets\",value:function(){if(!this.rules)return[];var e,t,n=[],i=this.rules;for(e=0;t=i[e];e++)t.isRuleset&&n.push(t);return n}},{key:\"prependRule\",value:function(e){var t=this.rules;t?t.unshift(e):this.rules=[e],this.setParent(e,this)}},{key:\"find\",value:function(e){var t,n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this,r=arguments.length>2?arguments[2]:void 0,a=[],s=e.toCSS();return s in this._lookups?this._lookups[s]:(this.rulesets().forEach((function(s){if(s!==i)for(var o=0;o<s.selectors.length;o++)if(t=e.match(s.selectors[o])){if(e.elements.length>t){if(!r||r(s)){n=s.find(new J(e.elements.slice(t)),i,r);for(var l=0;l<n.length;++l)n[l].path.push(s);Array.prototype.push.apply(a,n)}}else a.push({rule:s,path:[]});break}})),this._lookups[s]=a,a)}},{key:\"genCSS\",value:function(e,t){var n,i,r,a,s,o=[],l=[];e.tabLevel=e.tabLevel||0,this.root||e.tabLevel++;var u,c=e.compress?\"\":Array(e.tabLevel+1).join(\"  \"),h=e.compress?\"\":Array(e.tabLevel).join(\"  \"),f=0,p=0;for(n=0;a=this.rules[n];n++)a instanceof ee?(p===n&&p++,l.push(a)):a.isCharset&&a.isCharset()?(l.splice(f,0,a),f++,p++):\"Import\"===a.type?(l.splice(p,0,a),p++):l.push(a);if(l=o.concat(l),!this.root){(r=X(e,this,h))&&(t.add(r),t.add(h));var v,d=this.paths,m=d.length;for(u=e.compress?\",\":\",\\n\".concat(h),n=0;n<m;n++)if(v=(s=d[n]).length)for(n>0&&t.add(u),e.firstSelector=!0,s[0].genCSS(e,t),e.firstSelector=!1,i=1;i<v;i++)s[i].genCSS(e,t);t.add((e.compress?\"{\":\" {\\n\")+c)}for(n=0;a=l[n];n++){n+1===l.length&&(e.lastRule=!0);var g=e.lastRule;a.isRulesetLike(a)&&(e.lastRule=!1),a.genCSS?a.genCSS(e,t):a.value&&t.add(a.value.toString()),e.lastRule=g,!e.lastRule&&a.isVisible()?t.add(e.compress?\"\":\"\\n\".concat(c)):e.lastRule=!1}this.root||(t.add(e.compress?\"}\":\"\\n\".concat(h,\"}\")),e.tabLevel--),t.isEmpty()||e.compress||!this.firstRoot||t.add(\"\\n\")}},{key:\"joinSelectors\",value:function(e,t,n){for(var i=0;i<n.length;i++)this.joinSelector(e,t,n[i])}},{key:\"joinSelector\",value:function(e,t,n){function i(e,t){var n,i;if(0===e.length)n=new M(e[0]);else{var r=new Array(e.length);for(i=0;i<e.length;i++)r[i]=new R(null,e[i],t.isVariable,t._index,t._fileInfo);n=new M(new J(r))}return n}function r(e,t){var n;return n=new R(null,e,t.isVariable,t._index,t._fileInfo),new J([n])}function a(e,t,n,i){var r,a,s;if(r=[],e.length>0?(a=(r=D(e)).pop(),s=i.createDerived(D(a.elements))):s=i.createDerived([]),t.length>0){var o=n.combinator,l=t[0].elements[0];o.emptyOrWhitespace&&!l.combinator.emptyOrWhitespace&&(o=l.combinator),s.elements.push(new R(o,l.value,n.isVariable,n._index,n._fileInfo)),s.elements=s.elements.concat(t[0].elements.slice(1))}if(0!==s.elements.length&&r.push(s),t.length>1){var u=t.slice(1);u=u.map((function(e){return e.createDerived(e.elements,[])})),r=r.concat(u)}return r}function s(e,t,n,i,r){var s;for(s=0;s<e.length;s++){var o=a(e[s],t,n,i);r.push(o)}return r}function o(e,t){var n,i;if(0!==e.length)if(0!==t.length)for(n=0;i=t[n];n++)i.length>0?i[i.length-1]=i[i.length-1].createDerived(i[i.length-1].elements.concat(e)):i.push(new J(e));else t.push([new J(e)])}function l(e,t,n){var u,c,h,f,p,v,d,m,g,y,b=!1;function w(e){var t;return e.value instanceof M&&(t=e.value.value)instanceof J?t:null}for(f=[],p=[[]],u=0;m=n.elements[u];u++)if(\"&\"!==m.value){var k=w(m);if(null!=k){o(f,p);var x=[],S=void 0,I=[];for(S=l(x,t,k),b=b||S,h=0;h<x.length;h++)s(p,[r(i(x[h],m),m)],m,n,I);p=I,f=[]}else f.push(m)}else{for(b=!0,v=[],o(f,p),c=0;c<p.length;c++)if(d=p[c],0===t.length)d.length>0&&d[0].elements.push(new R(m.combinator,\"\",m.isVariable,m._index,m._fileInfo)),v.push(d);else for(h=0;h<t.length;h++){var C=a(d,t[h],m,n);v.push(C)}p=v,f=[]}for(o(f,p),u=0;u<p.length;u++)(g=p[u].length)>0&&(e.push(p[u]),y=p[u][g-1],p[u][g-1]=y.createDerived(y.elements,n.extendList));return b}function u(e,t){var n=t.createDerived(t.elements,t.extendList,t.evaldCondition);return n.copyVisibilityInfo(e),n}var c,h;if(!l(h=[],t,n))if(t.length>0)for(h=[],c=0;c<t.length;c++){var f=t[c].map(u.bind(this,n.visibilityInfo()));f.push(n),h.push(f)}else h=[[n]];for(c=0;c<h.length;c++)e.push(h[c])}}]),t}(I);ce.prototype.type=\"Ruleset\",ce.prototype.isRuleset=!0;var he=function(e){function t(e,n,i,r,a,s,l,u){var c,f;if(o(this,t),(c=m(this,h(t).call(this))).name=e,c.value=n instanceof I?n:n?new Q(n):n,i){for(Array.isArray(i)?c.rules=i:(c.rules=[i],c.rules[0].selectors=new J([],null,null,r,a).createEmptySelectors()),f=0;f<c.rules.length;f++)c.rules[f].allowImports=!0;c.setParent(c.rules,d(c))}return c._index=r,c._fileInfo=a,c.debugInfo=s,c.isRooted=l||!1,c.copyVisibilityInfo(u),c.allowRoot=!0,c}return c(t,e),u(t,[{key:\"accept\",value:function(e){var t=this.value,n=this.rules;n&&(this.rules=e.visitArray(n)),t&&(this.value=e.visit(t))}},{key:\"isRulesetLike\",value:function(){return this.rules||!this.isCharset()}},{key:\"isCharset\",value:function(){return\"@charset\"===this.name}},{key:\"genCSS\",value:function(e,t){var n=this.value,i=this.rules;t.add(this.name,this.fileInfo(),this.getIndex()),n&&(t.add(\" \"),n.genCSS(e,t)),i?this.outputRuleset(e,t,i):t.add(\";\")}},{key:\"eval\",value:function(e){var n,i,r=this.value,a=this.rules;return n=e.mediaPath,i=e.mediaBlocks,e.mediaPath=[],e.mediaBlocks=[],r&&(r=r.eval(e)),a&&((a=[a[0].eval(e)])[0].root=!0),e.mediaPath=n,e.mediaBlocks=i,new t(this.name,r,a,this.getIndex(),this.fileInfo(),this.debugInfo,this.isRooted,this.visibilityInfo())}},{key:\"variable\",value:function(e){if(this.rules)return ce.prototype.variable.call(this.rules[0],e)}},{key:\"find\",value:function(){if(this.rules){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return ce.prototype.find.apply(this.rules[0],t)}}},{key:\"rulesets\",value:function(){if(this.rules)return ce.prototype.rulesets.apply(this.rules[0])}},{key:\"outputRuleset\",value:function(e,t,n){var i,r=n.length;if(e.tabLevel=1+(0|e.tabLevel),e.compress){for(t.add(\"{\"),i=0;i<r;i++)n[i].genCSS(e,t);return t.add(\"}\"),void e.tabLevel--}var a=\"\\n\".concat(Array(e.tabLevel).join(\"  \")),s=\"\".concat(a,\"  \");if(r){for(t.add(\" {\".concat(s)),n[0].genCSS(e,t),i=1;i<r;i++)t.add(s),n[i].genCSS(e,t);t.add(\"\".concat(a,\"}\"))}else t.add(\" {\".concat(a,\"}\"));e.tabLevel--}}]),t}(I);he.prototype.type=\"AtRule\";var fe=function(e){function t(e,n){var i;return o(this,t),(i=m(this,h(t).call(this))).ruleset=e,i.frames=n,i.setParent(i.ruleset,d(i)),i}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.ruleset=e.visit(this.ruleset)}},{key:\"eval\",value:function(e){var n=this.frames||D(e.frames);return new t(this.ruleset,n)}},{key:\"callEval\",value:function(e){return this.ruleset.eval(this.frames?new te.Eval(e,this.frames.concat(e.frames)):e)}}]),t}(I);fe.prototype.type=\"DetachedRuleset\",fe.prototype.evalFirst=!0;var pe=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).numerator=e?D(e).sort():[],r.denominator=n?D(n).sort():[],i?r.backupUnit=i:e&&e.length&&(r.backupUnit=e[0]),r}return c(t,e),u(t,[{key:\"clone\",value:function(){return new t(D(this.numerator),D(this.denominator),this.backupUnit)}},{key:\"genCSS\",value:function(e,t){var n=e&&e.strictUnits;1===this.numerator.length?t.add(this.numerator[0]):!n&&this.backupUnit?t.add(this.backupUnit):!n&&this.denominator.length&&t.add(this.denominator[0])}},{key:\"toString\",value:function(){var e,t=this.numerator.join(\"*\");for(e=0;e<this.denominator.length;e++)t+=\"/\".concat(this.denominator[e]);return t}},{key:\"compare\",value:function(e){return this.is(e.toString())?0:void 0}},{key:\"is\",value:function(e){return this.toString().toUpperCase()===e.toUpperCase()}},{key:\"isLength\",value:function(){return RegExp(\"^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$\",\"gi\").test(this.toCSS())}},{key:\"isEmpty\",value:function(){return 0===this.numerator.length&&0===this.denominator.length}},{key:\"isSingular\",value:function(){return this.numerator.length<=1&&0===this.denominator.length}},{key:\"map\",value:function(e){var t;for(t=0;t<this.numerator.length;t++)this.numerator[t]=e(this.numerator[t],!1);for(t=0;t<this.denominator.length;t++)this.denominator[t]=e(this.denominator[t],!0)}},{key:\"usedUnits\",value:function(){var e,t,n,i={};for(n in t=function(t){return e.hasOwnProperty(t)&&!i[n]&&(i[n]=t),t},x)x.hasOwnProperty(n)&&(e=x[n],this.map(t));return i}},{key:\"cancel\",value:function(){var e,t,n={};for(t=0;t<this.numerator.length;t++)n[e=this.numerator[t]]=(n[e]||0)+1;for(t=0;t<this.denominator.length;t++)n[e=this.denominator[t]]=(n[e]||0)-1;for(e in this.numerator=[],this.denominator=[],n)if(n.hasOwnProperty(e)){var i=n[e];if(i>0)for(t=0;t<i;t++)this.numerator.push(e);else if(i<0)for(t=0;t<-i;t++)this.denominator.push(e)}this.numerator.sort(),this.denominator.sort()}}]),t}(I);pe.prototype.type=\"Unit\";var ve=function(e){function t(e,n){var i;if(o(this,t),(i=m(this,h(t).call(this))).value=parseFloat(e),isNaN(i.value))throw new Error(\"Dimension is not a number.\");return i.unit=n&&n instanceof pe?n:new pe(n?[n]:void 0),i.setParent(i.unit,d(i)),i}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.unit=e.visit(this.unit)}},{key:\"eval\",value:function(e){return this}},{key:\"toColor\",value:function(){return new C([this.value,this.value,this.value])}},{key:\"genCSS\",value:function(e,t){if(e&&e.strictUnits&&!this.unit.isSingular())throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \".concat(this.unit.toString()));var n=this.fround(e,this.value),i=String(n);if(0!==n&&n<1e-6&&n>-1e-6&&(i=n.toFixed(20).replace(/0+$/,\"\")),e&&e.compress){if(0===n&&this.unit.isLength())return void t.add(i);n>0&&n<1&&(i=i.substr(1))}t.add(i),this.unit.genCSS(e,t)}},{key:\"operate\",value:function(e,n,i){var r=this._operate(e,n,this.value,i.value),a=this.unit.clone();if(\"+\"===n||\"-\"===n)if(0===a.numerator.length&&0===a.denominator.length)a=i.unit.clone(),this.unit.backupUnit&&(a.backupUnit=this.unit.backupUnit);else if(0===i.unit.numerator.length&&0===a.denominator.length);else{if(i=i.convertTo(this.unit.usedUnits()),e.strictUnits&&i.unit.toString()!==a.toString())throw new Error(\"Incompatible units. Change the units or use the unit function. \"+\"Bad units: '\".concat(a.toString(),\"' and '\").concat(i.unit.toString(),\"'.\"));r=this._operate(e,n,this.value,i.value)}else\"*\"===n?(a.numerator=a.numerator.concat(i.unit.numerator).sort(),a.denominator=a.denominator.concat(i.unit.denominator).sort(),a.cancel()):\"/\"===n&&(a.numerator=a.numerator.concat(i.unit.denominator).sort(),a.denominator=a.denominator.concat(i.unit.numerator).sort(),a.cancel());return new t(r,a)}},{key:\"compare\",value:function(e){var n,i;if(e instanceof t){if(this.unit.isEmpty()||e.unit.isEmpty())n=this,i=e;else if(n=this.unify(),i=e.unify(),0!==n.unit.compare(i.unit))return;return I.numericCompare(n.value,i.value)}}},{key:\"unify\",value:function(){return this.convertTo({length:\"px\",duration:\"s\",angle:\"rad\"})}},{key:\"convertTo\",value:function(e){var n,i,r,a,s,o=this.value,l=this.unit.clone(),u={};if(\"string\"===typeof e){for(n in x)x[n].hasOwnProperty(e)&&((u={})[n]=e);e=u}for(i in s=function(e,t){return r.hasOwnProperty(e)?(t?o/=r[e]/r[a]:o*=r[e]/r[a],a):e},e)e.hasOwnProperty(i)&&(a=e[i],r=x[i],l.map(s));return l.cancel(),new t(o,l)}}]),t}(I);ve.prototype.type=\"Dimension\";var de=O,me=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).op=e.trim(),r.operands=n,r.isSpaced=i,r}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.operands=e.visitArray(this.operands)}},{key:\"eval\",value:function(e){var n,i=this.operands[0].eval(e),r=this.operands[1].eval(e);if(e.isMathOn(this.op)){if(n=\"./\"===this.op?\"/\":this.op,i instanceof ve&&r instanceof C&&(i=i.toColor()),r instanceof ve&&i instanceof C&&(r=r.toColor()),!i.operate){if(i instanceof t&&\"/\"===i.op&&e.math===de.PARENS_DIVISION)return new t(this.op,[i,r],this.isSpaced);throw{type:\"Operation\",message:\"Operation on an invalid type\"}}return i.operate(e,n,r)}return new t(this.op,[i,r],this.isSpaced)}},{key:\"genCSS\",value:function(e,t){this.operands[0].genCSS(e,t),this.isSpaced&&t.add(\" \"),t.add(this.op),this.isSpaced&&t.add(\" \"),this.operands[1].genCSS(e,t)}}]),t}(I);me.prototype.type=\"Operation\";var ge=O,ye=function(e){function t(e,n){var i;if(o(this,t),(i=m(this,h(t).call(this))).value=e,i.noSpacing=n,!e)throw new Error(\"Expression requires an array parameter\");return i}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.value=e.visitArray(this.value)}},{key:\"eval\",value:function(e){var n,i=e.isMathOn(),r=this.parens&&(e.math!==ge.STRICT_LEGACY||!this.parensInOp),a=!1;return r&&e.inParenthesis(),this.value.length>1?n=new t(this.value.map((function(t){return t.eval?t.eval(e):t})),this.noSpacing):1===this.value.length?(!this.value[0].parens||this.value[0].parensInOp||e.inCalc||(a=!0),n=this.value[0].eval(e)):n=this,r&&e.outOfParenthesis(),!this.parens||!this.parensInOp||i||a||n instanceof ve||(n=new M(n)),n}},{key:\"genCSS\",value:function(e,t){for(var n=0;n<this.value.length;n++)this.value[n].genCSS(e,t),!this.noSpacing&&n+1<this.value.length&&t.add(\" \")}},{key:\"throwAwayComments\",value:function(){this.value=this.value.filter((function(e){return!(e instanceof ee)}))}}]),t}(I);ye.prototype.type=\"Expression\";var be=function(){function e(t,n,i,r){o(this,e),this.name=t.toLowerCase(),this.index=i,this.context=n,this.currentFileInfo=r,this.func=n.frames[0].functionRegistry.get(this.name)}return u(e,[{key:\"isValid\",value:function(){return Boolean(this.func)}},{key:\"call\",value:function(e){return Array.isArray(e)&&(e=e.filter((function(e){return\"Comment\"!==e.type})).map((function(e){if(\"Expression\"===e.type){var t=e.value.filter((function(e){return\"Comment\"!==e.type}));return 1===t.length?t[0]:new ye(t)}return e}))),this.func.apply(this,g(e))}}]),e}(),we=function(e){function t(e,n,i,r){var a;return o(this,t),(a=m(this,h(t).call(this))).name=e,a.args=n,a.calc=\"calc\"===e,a._index=i,a._fileInfo=r,a}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.args&&(this.args=e.visitArray(this.args))}},{key:\"eval\",value:function(e){var n=e.mathOn;e.mathOn=!this.calc,(this.calc||e.inCalc)&&e.enterCalc();var i,r=this.args.map((function(t){return t.eval(e)}));(this.calc||e.inCalc)&&e.exitCalc(),e.mathOn=n;var a=new be(this.name,e,this.getIndex(),this.fileInfo());if(a.isValid()){try{i=a.call(r)}catch(s){throw{type:s.type||\"Runtime\",message:\"error evaluating function `\".concat(this.name,\"`\").concat(s.message?\": \".concat(s.message):\"\"),index:this.getIndex(),filename:this.fileInfo().filename,line:s.lineNumber,column:s.columnNumber}}if(null!==i&&void 0!==i)return i instanceof I||(i=new Q(i&&!0!==i?i.toString():null)),i._index=this._index,i._fileInfo=this._fileInfo,i}return new t(this.name,r,this.getIndex(),this.fileInfo())}},{key:\"genCSS\",value:function(e,t){t.add(\"\".concat(this.name,\"(\"),this.fileInfo(),this.getIndex());for(var n=0;n<this.args.length;n++)this.args[n].genCSS(e,t),n+1<this.args.length&&t.add(\", \");t.add(\")\")}}]),t}(I);we.prototype.type=\"Call\";var ke=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).name=e,r._index=n,r._fileInfo=i,r}return c(t,e),u(t,[{key:\"eval\",value:function(e){var n,i=this.name;if(0===i.indexOf(\"@@\")&&(i=\"@\".concat(new t(i.slice(1),this.getIndex(),this.fileInfo()).eval(e).value)),this.evaluating)throw{type:\"Name\",message:\"Recursive variable definition for \".concat(i),filename:this.fileInfo().filename,index:this.getIndex()};if(this.evaluating=!0,n=this.find(e.frames,(function(t){var n=t.variable(i);if(n)return n.important&&(e.importantScope[e.importantScope.length-1].important=n.important),e.inCalc?new we(\"_SELF\",[n.value]).eval(e):n.value.eval(e)})))return this.evaluating=!1,n;throw{type:\"Name\",message:\"variable \".concat(i,\" is undefined\"),filename:this.fileInfo().filename,index:this.getIndex()}}},{key:\"find\",value:function(e,t){for(var n,i=0;i<e.length;i++)if(n=t.call(e,e[i]))return n;return null}}]),t}(I);ke.prototype.type=\"Variable\";var xe=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).name=e,r._index=n,r._fileInfo=i,r}return c(t,e),u(t,[{key:\"eval\",value:function(e){var t,n=this.name,i=e.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;if(this.evaluating)throw{type:\"Name\",message:\"Recursive property reference for \".concat(n),filename:this.fileInfo().filename,index:this.getIndex()};if(this.evaluating=!0,t=this.find(e.frames,(function(t){var r,a=t.property(n);if(a){for(var s=0;s<a.length;s++)r=a[s],a[s]=new Z(r.name,r.value,r.important,r.merge,r.index,r.currentFileInfo,r.inline,r.variable);return i(a),(r=a[a.length-1]).important&&(e.importantScope[e.importantScope.length-1].important=r.important),r=r.value.eval(e)}})))return this.evaluating=!1,t;throw{type:\"Name\",message:\"Property '\".concat(n,\"' is undefined\"),filename:this.currentFileInfo.filename,index:this.index}}},{key:\"find\",value:function(e,t){for(var n,i=0;i<e.length;i++)if(n=t.call(e,e[i]))return n;return null}}]),t}(I);xe.prototype.type=\"Property\";var Se=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).key=e,r.op=n,r.value=i,r}return c(t,e),u(t,[{key:\"eval\",value:function(e){return new t(this.key.eval?this.key.eval(e):this.key,this.op,this.value&&this.value.eval?this.value.eval(e):this.value)}},{key:\"genCSS\",value:function(e,t){t.add(this.toCSS(e))}},{key:\"toCSS\",value:function(e){var t=this.key.toCSS?this.key.toCSS(e):this.key;return this.op&&(t+=this.op,t+=this.value.toCSS?this.value.toCSS(e):this.value),\"[\".concat(t,\"]\")}}]),t}(I);Se.prototype.type=\"Attribute\";var Ie=function(e){function t(e,n,i,r,a){var s;return o(this,t),(s=m(this,h(t).call(this))).escaped=null==i||i,s.value=n||\"\",s.quote=e.charAt(0),s._index=r,s._fileInfo=a,s.variableRegex=/@\\{([\\w-]+)\\}/g,s.propRegex=/\\$\\{([\\w-]+)\\}/g,s.allowRoot=i,s}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){this.escaped||t.add(this.quote,this.fileInfo(),this.getIndex()),t.add(this.value),this.escaped||t.add(this.quote)}},{key:\"containsVariables\",value:function(){return this.value.match(this.variableRegex)}},{key:\"eval\",value:function(e){var n=this,i=this.value,r=function(i,r){var a=new ke(\"@\".concat(r),n.getIndex(),n.fileInfo()).eval(e,!0);return a instanceof t?a.value:a.toCSS()},a=function(i,r){var a=new xe(\"$\".concat(r),n.getIndex(),n.fileInfo()).eval(e,!0);return a instanceof t?a.value:a.toCSS()};function s(e,t,n){var i=e;do{e=i.toString(),i=e.replace(t,n)}while(e!==i);return i}return i=s(i,this.variableRegex,r),i=s(i,this.propRegex,a),new t(this.quote+i+this.quote,i,this.escaped,this.getIndex(),this.fileInfo())}},{key:\"compare\",value:function(e){return\"Quoted\"!==e.type||this.escaped||e.escaped?e.toCSS&&this.toCSS()===e.toCSS()?0:void 0:I.numericCompare(this.value,e.value)}}]),t}(I);Ie.prototype.type=\"Quoted\";var Ce=function(e){function t(e,n,i,r){var a;return o(this,t),(a=m(this,h(t).call(this))).value=e,a._index=n,a._fileInfo=i,a.isEvald=r,a}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.value=e.visit(this.value)}},{key:\"genCSS\",value:function(e,t){t.add(\"url(\"),this.value.genCSS(e,t),t.add(\")\")}},{key:\"eval\",value:function(e){var n,i=this.value.eval(e);if(!this.isEvald&&(\"string\"===typeof(n=this.fileInfo()&&this.fileInfo().rootpath)&&\"string\"===typeof i.value&&e.pathRequiresRewrite(i.value)?(i.quote||(n=_e(n)),i.value=e.rewritePath(i.value,n)):i.value=e.normalizePath(i.value),e.urlArgs&&!i.value.match(/^\\s*data:/))){var r=(-1===i.value.indexOf(\"?\")?\"?\":\"&\")+e.urlArgs;-1!==i.value.indexOf(\"#\")?i.value=i.value.replace(\"#\",\"\".concat(r,\"#\")):i.value+=r}return new t(i,this.getIndex(),this.fileInfo(),!0)}}]),t}(I);function _e(e){return e.replace(/[\\(\\)'\"\\s]/g,(function(e){return\"\\\\\".concat(e)}))}Ce.prototype.type=\"Url\";var Ae=function(e){function t(e,n,i,r,a){var s;o(this,t),(s=m(this,h(t).call(this)))._index=i,s._fileInfo=r;var l=new J([],null,null,s._index,s._fileInfo).createEmptySelectors();return s.features=new W(n),s.rules=[new ce(l,e)],s.rules[0].allowImports=!0,s.copyVisibilityInfo(a),s.allowRoot=!0,s.setParent(l,d(s)),s.setParent(s.features,d(s)),s.setParent(s.rules,d(s)),s}return c(t,e),u(t,[{key:\"isRulesetLike\",value:function(){return!0}},{key:\"accept\",value:function(e){this.features&&(this.features=e.visit(this.features)),this.rules&&(this.rules=e.visitArray(this.rules))}},{key:\"genCSS\",value:function(e,t){t.add(\"@media \",this._fileInfo,this._index),this.features.genCSS(e,t),this.outputRuleset(e,t,this.rules)}},{key:\"eval\",value:function(e){e.mediaBlocks||(e.mediaBlocks=[],e.mediaPath=[]);var n=new t(null,[],this._index,this._fileInfo,this.visibilityInfo());return this.debugInfo&&(this.rules[0].debugInfo=this.debugInfo,n.debugInfo=this.debugInfo),n.features=this.features.eval(e),e.mediaPath.push(n),e.mediaBlocks.push(n),this.rules[0].functionRegistry=e.frames[0].functionRegistry.inherit(),e.frames.unshift(this.rules[0]),n.rules=[this.rules[0].eval(e)],e.frames.shift(),e.mediaPath.pop(),0===e.mediaPath.length?n.evalTop(e):n.evalNested(e)}},{key:\"evalTop\",value:function(e){var t=this;if(e.mediaBlocks.length>1){var n=new J([],null,null,this.getIndex(),this.fileInfo()).createEmptySelectors();(t=new ce(n,e.mediaBlocks)).multiMedia=!0,t.copyVisibilityInfo(this.visibilityInfo()),this.setParent(t,this)}return delete e.mediaBlocks,delete e.mediaPath,t}},{key:\"evalNested\",value:function(e){var t,n,i=e.mediaPath.concat([this]);for(t=0;t<i.length;t++)n=i[t].features instanceof W?i[t].features.value:i[t].features,i[t]=Array.isArray(n)?n:[n];return this.features=new W(this.permute(i).map((function(e){for(e=e.map((function(e){return e.toCSS?e:new Q(e)})),t=e.length-1;t>0;t--)e.splice(t,0,new Q(\"and\"));return new ye(e)}))),this.setParent(this.features,this),new ce([],[])}},{key:\"permute\",value:function(e){if(0===e.length)return[];if(1===e.length)return e[0];for(var t=[],n=this.permute(e.slice(1)),i=0;i<n.length;i++)for(var r=0;r<e[0].length;r++)t.push([e[0][r]].concat(n[i]));return t}},{key:\"bubbleSelectors\",value:function(e){e&&(this.rules=[new ce(D(e),[this.rules[0]])],this.setParent(this.rules,this))}}]),t}(he);Ae.prototype.type=\"Media\";var Me=function(e){function t(e,n,i,r,a,s){var l;if(o(this,t),(l=m(this,h(t).call(this))).options=i,l._index=r,l._fileInfo=a,l.path=e,l.features=n,l.allowRoot=!0,void 0!==l.options.less||l.options.inline)l.css=!l.options.less||l.options.inline;else{var u=l.getPath();u&&/[#\\.\\&\\?]css([\\?;].*)?$/.test(u)&&(l.css=!0)}return l.copyVisibilityInfo(s),l.setParent(l.features,d(l)),l.setParent(l.path,d(l)),l}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.features&&(this.features=e.visit(this.features)),this.path=e.visit(this.path),this.options.isPlugin||this.options.inline||!this.root||(this.root=e.visit(this.root))}},{key:\"genCSS\",value:function(e,t){this.css&&void 0===this.path._fileInfo.reference&&(t.add(\"@import \",this._fileInfo,this._index),this.path.genCSS(e,t),this.features&&(t.add(\" \"),this.features.genCSS(e,t)),t.add(\";\"))}},{key:\"getPath\",value:function(){return this.path instanceof Ce?this.path.value.value:this.path.value}},{key:\"isVariableImport\",value:function(){var e=this.path;return e instanceof Ce&&(e=e.value),!(e instanceof Ie)||e.containsVariables()}},{key:\"evalForImport\",value:function(e){var n=this.path;return n instanceof Ce&&(n=n.value),new t(n.eval(e),this.features,this.options,this._index,this._fileInfo,this.visibilityInfo())}},{key:\"evalPath\",value:function(e){var t=this.path.eval(e),n=this._fileInfo;if(!(t instanceof Ce)){var i=t.value;n&&i&&e.pathRequiresRewrite(i)?t.value=e.rewritePath(i,n.rootpath):t.value=e.normalizePath(t.value)}return t}},{key:\"eval\",value:function(e){var t=this.doEval(e);return(this.options.reference||this.blocksVisibility())&&(t.length||0===t.length?t.forEach((function(e){e.addVisibilityBlock()})):t.addVisibilityBlock()),t}},{key:\"doEval\",value:function(e){var n,i,r=this.features&&this.features.eval(e);if(this.options.isPlugin){if(this.root&&this.root.eval)try{this.root.eval(e)}catch(o){throw o.message=\"Plugin error during evaluation\",new z(o,this.root.imports,this.root.filename)}return(i=e.frames[0]&&e.frames[0].functionRegistry)&&this.root&&this.root.functions&&i.addMultiple(this.root.functions),[]}if(this.skip&&(\"function\"===typeof this.skip&&(this.skip=this.skip()),this.skip))return[];if(this.options.inline){var a=new Q(this.root,0,{filename:this.importedFilename,reference:this.path._fileInfo&&this.path._fileInfo.reference},!0,!0);return this.features?new Ae([a],this.features.value):[a]}if(this.css){var s=new t(this.evalPath(e),r,this.options,this._index);if(!s.css&&this.error)throw this.error;return s}return(n=new ce(null,D(this.root.rules))).evalImports(e),this.features?new Ae(n.rules,this.features.value):n.rules}}]),t}(I);Me.prototype.type=\"Import\";var Pe=function(e){function t(e,n,i,r){var a;return o(this,t),(a=m(this,h(t).call(this))).escaped=n,a.expression=e,a._index=i,a._fileInfo=r,a}return c(t,e),u(t,[{key:\"eval\",value:function(e){var t=this.evaluateJavaScript(this.expression,e),n=s(t);return\"number\"!==n||isNaN(t)?\"string\"===n?new Ie('\"'.concat(t,'\"'),t,this.escaped,this._index):Array.isArray(t)?new Q(t.join(\", \")):new Q(t):new ve(t)}}]),t}(function(e){function t(){return o(this,t),m(this,h(t).apply(this,arguments))}return c(t,e),u(t,[{key:\"evaluateJavaScript\",value:function(e,t){var n,i=this,r={};if(!t.javascriptEnabled)throw{message:\"Inline JavaScript is not enabled. Is it set in your options?\",filename:this.fileInfo().filename,index:this.getIndex()};e=e.replace(/@\\{([\\w-]+)\\}/g,(function(e,n){return i.jsify(new ke(\"@\".concat(n),i.getIndex(),i.fileInfo()).eval(t))}));try{e=new Function(\"return (\".concat(e,\")\"))}catch(o){throw{message:\"JavaScript evaluation error: \".concat(o.message,\" from `\").concat(e,\"`\"),filename:this.fileInfo().filename,index:this.getIndex()}}var a=t.frames[0].variables();for(var s in a)a.hasOwnProperty(s)&&(r[s.slice(1)]={value:a[s].value,toJS:function(){return this.value.eval(t).toCSS()}});try{n=e.call(r)}catch(o){throw{message:\"JavaScript evaluation error: '\".concat(o.name,\": \").concat(o.message.replace(/[\"]/g,\"'\"),\"'\"),filename:this.fileInfo().filename,index:this.getIndex()}}return n}},{key:\"jsify\",value:function(e){return Array.isArray(e.value)&&e.value.length>1?\"[\".concat(e.value.map((function(e){return e.toCSS()})).join(\", \"),\"]\"):e.toCSS()}}]),t}(I));Pe.prototype.type=\"JavaScript\";var Ee=function(e){function t(e,n){var i;return o(this,t),(i=m(this,h(t).call(this))).key=e,i.value=n,i}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.value=e.visit(this.value)}},{key:\"eval\",value:function(e){return this.value.eval?new t(this.key,this.value.eval(e)):this}},{key:\"genCSS\",value:function(e,t){t.add(\"\".concat(this.key,\"=\")),this.value.genCSS?this.value.genCSS(e,t):t.add(this.value)}}]),t}(I);Ee.prototype.type=\"Assignment\";var Re=function(e){function t(e,n,i,r,a){var s;return o(this,t),(s=m(this,h(t).call(this))).op=e.trim(),s.lvalue=n,s.rvalue=i,s._index=r,s.negate=a,s}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.lvalue=e.visit(this.lvalue),this.rvalue=e.visit(this.rvalue)}},{key:\"eval\",value:function(e){var t=function(e,t,n){switch(e){case\"and\":return t&&n;case\"or\":return t||n;default:switch(I.compare(t,n)){case-1:return\"<\"===e||\"=<\"===e||\"<=\"===e;case 0:return\"=\"===e||\">=\"===e||\"=<\"===e||\"<=\"===e;case 1:return\">\"===e||\">=\"===e;default:return!1}}}(this.op,this.lvalue.eval(e),this.rvalue.eval(e));return this.negate?!t:t}}]),t}(I);Re.prototype.type=\"Condition\";var Oe=function(e){function t(e){var n;return o(this,t),(n=m(this,h(t).call(this))).value=e,n}return c(t,e),t}(I);Oe.prototype.type=\"UnicodeDescriptor\";var Fe=function(e){function t(e){var n;return o(this,t),(n=m(this,h(t).call(this))).value=e,n}return c(t,e),u(t,[{key:\"genCSS\",value:function(e,t){t.add(\"-\"),this.value.genCSS(e,t)}},{key:\"eval\",value:function(e){return e.isMathOn()?new me(\"*\",[new ve(-1),this.value]).eval(e):new t(this.value.eval(e))}}]),t}(I);Fe.prototype.type=\"Negative\";var Ve=function(e){function t(e,n,i,r,a){var s;switch(o(this,t),(s=m(this,h(t).call(this))).selector=e,s.option=n,s.object_id=t.next_id++,s.parent_ids=[s.object_id],s._index=i,s._fileInfo=r,s.copyVisibilityInfo(a),s.allowRoot=!0,n){case\"all\":s.allowBefore=!0,s.allowAfter=!0;break;default:s.allowBefore=!1,s.allowAfter=!1}return s.setParent(s.selector,d(s)),s}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.selector=e.visit(this.selector)}},{key:\"eval\",value:function(e){return new t(this.selector.eval(e),this.option,this.getIndex(),this.fileInfo(),this.visibilityInfo())}},{key:\"clone\",value:function(e){return new t(this.selector,this.option,this.getIndex(),this.fileInfo(),this.visibilityInfo())}},{key:\"findSelfSelectors\",value:function(e){var t,n,i=[];for(t=0;t<e.length;t++)n=e[t].elements,t>0&&n.length&&\"\"===n[0].combinator.value&&(n[0].combinator.value=\" \"),i=i.concat(e[t].elements);this.selfSelectors=[new J(i)],this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo())}}]),t}(I);Ve.next_id=0,Ve.prototype.type=\"Extend\";var $e=function(e){function t(e,n,i){var r;return o(this,t),(r=m(this,h(t).call(this))).variable=e,r._index=n,r._fileInfo=i,r.allowRoot=!0,r}return c(t,e),u(t,[{key:\"eval\",value:function(e){var t,n=new ke(this.variable,this.getIndex(),this.fileInfo()).eval(e),i=new z({message:\"Could not evaluate variable call \".concat(this.variable)});if(!n.ruleset){if(n.rules)t=n;else if(Array.isArray(n))t=new ce(\"\",n);else{if(!Array.isArray(n.value))throw i;t=new ce(\"\",n.value)}n=new fe(t)}if(n.ruleset)return n.callEval(e);throw i}}]),t}(I);$e.prototype.type=\"VariableCall\";var Le=function(e){function t(e,n,i,r,a){var s;return o(this,t),(s=m(this,h(t).call(this))).value=e,s.lookups=n,s.important=i,s._index=r,s._fileInfo=a,s}return c(t,e),u(t,[{key:\"eval\",value:function(e){var t,n,i=this.value.eval(e);for(t=0;t<this.lookups.length;t++){if(n=this.lookups[t],Array.isArray(i)&&(i=new ce([new J],i)),\"\"===n)i=i.lastDeclaration();else if(\"@\"===n.charAt(0)){if(\"@\"===n.charAt(1)&&(n=\"@\".concat(new ke(n.substr(1)).eval(e).value)),i.variables&&(i=i.variable(n)),!i)throw{type:\"Name\",message:\"variable \".concat(n,\" not found\"),filename:this.fileInfo().filename,index:this.getIndex()}}else{if(n=\"$@\"===n.substring(0,2)?\"$\".concat(new ke(n.substr(1)).eval(e).value):\"$\"===n.charAt(0)?n:\"$\".concat(n),i.properties&&(i=i.property(n)),!i)throw{type:\"Name\",message:'property \"'.concat(n.substr(1),'\" not found'),filename:this.fileInfo().filename,index:this.getIndex()};i=i[i.length-1]}i.value&&(i=i.eval(e).value),i.ruleset&&(i=i.ruleset.eval(e))}return i}}]),t}(I);Le.prototype.type=\"NamespaceValue\";var De=function(e){function t(e,n,i,r,a,s,l){var u;o(this,t),(u=m(this,h(t).call(this))).name=e||\"anonymous mixin\",u.selectors=[new J([new R(null,e,!1,u._index,u._fileInfo)])],u.params=n,u.condition=r,u.variadic=a,u.arity=n.length,u.rules=i,u._lookups={};var c=[];return u.required=n.reduce((function(e,t){return!t.name||t.name&&!t.value?e+1:(c.push(t.name),e)}),0),u.optionalParameters=c,u.frames=s,u.copyVisibilityInfo(l),u.allowRoot=!0,u}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.params&&this.params.length&&(this.params=e.visitArray(this.params)),this.rules=e.visitArray(this.rules),this.condition&&(this.condition=e.visit(this.condition))}},{key:\"evalParams\",value:function(e,t,n,i){var r,a,s,o,l,u,c,h,f=new ce(null,null),p=D(this.params),v=0;if(t.frames&&t.frames[0]&&t.frames[0].functionRegistry&&(f.functionRegistry=t.frames[0].functionRegistry.inherit()),t=new te.Eval(t,[f].concat(t.frames)),n)for(v=(n=D(n)).length,s=0;s<v;s++)if(u=(a=n[s])&&a.name){for(c=!1,o=0;o<p.length;o++)if(!i[o]&&u===p[o].name){i[o]=a.value.eval(e),f.prependRule(new Z(u,a.value.eval(e))),c=!0;break}if(c){n.splice(s,1),s--;continue}throw{type:\"Runtime\",message:\"Named argument for \".concat(this.name,\" \").concat(n[s].name,\" not found\")}}for(h=0,s=0;s<p.length;s++)if(!i[s]){if(a=n&&n[h],u=p[s].name)if(p[s].variadic){for(r=[],o=h;o<v;o++)r.push(n[o].value.eval(e));f.prependRule(new Z(u,new ye(r).eval(e)))}else{if(l=a&&a.value)l=Array.isArray(l)?new fe(new ce(\"\",l)):l.eval(e);else{if(!p[s].value)throw{type:\"Runtime\",message:\"wrong number of arguments for \".concat(this.name,\" (\").concat(v,\" for \").concat(this.arity,\")\")};l=p[s].value.eval(t),f.resetCache()}f.prependRule(new Z(u,l)),i[s]=l}if(p[s].variadic&&n)for(o=h;o<v;o++)i[o]=n[o].value.eval(e);h++}return f}},{key:\"makeImportant\",value:function(){var e=this.rules?this.rules.map((function(e){return e.makeImportant?e.makeImportant(!0):e})):this.rules;return new t(this.name,this.params,e,this.condition,this.variadic,this.frames)}},{key:\"eval\",value:function(e){return new t(this.name,this.params,this.rules,this.condition,this.variadic,this.frames||D(e.frames))}},{key:\"evalCall\",value:function(e,t,n){var i,r,a=[],s=this.frames?this.frames.concat(e.frames):e.frames,o=this.evalParams(e,new te.Eval(e,s),t,a);return o.prependRule(new Z(\"@arguments\",new ye(a).eval(e))),i=D(this.rules),(r=new ce(null,i)).originalRuleset=this,r=r.eval(new te.Eval(e,[this,o].concat(s))),n&&(r=r.makeImportant()),r}},{key:\"matchCondition\",value:function(e,t){return!(this.condition&&!this.condition.eval(new te.Eval(t,[this.evalParams(t,new te.Eval(t,this.frames?this.frames.concat(t.frames):t.frames),e,[])].concat(this.frames||[]).concat(t.frames))))}},{key:\"matchArgs\",value:function(e,t){var n,i=e&&e.length||0,r=this.optionalParameters,a=e?e.reduce((function(e,t){return r.indexOf(t.name)<0?e+1:e}),0):0;if(this.variadic){if(a<this.required-1)return!1}else{if(a<this.required)return!1;if(i>this.params.length)return!1}n=Math.min(a,this.arity);for(var s=0;s<n;s++)if(!this.params[s].name&&!this.params[s].variadic&&e[s].value.eval(t).toCSS()!=this.params[s].value.eval(t).toCSS())return!1;return!0}}]),t}(ce);De.prototype.type=\"MixinDefinition\",De.prototype.evalFirst=!0;var Ne=function(e){function t(e,n,i,r,a){var s;return o(this,t),(s=m(this,h(t).call(this))).selector=new J(e),s.arguments=n||[],s._index=i,s._fileInfo=r,s.important=a,s.allowRoot=!0,s.setParent(s.selector,d(s)),s}return c(t,e),u(t,[{key:\"accept\",value:function(e){this.selector&&(this.selector=e.visit(this.selector)),this.arguments.length&&(this.arguments=e.visitArray(this.arguments))}},{key:\"eval\",value:function(e){var t,n,i,r,a,s,o,l,u,c,h,f,p,v,d,m=[],g=[],y=!1,b=[],w=[],k=-1,x=0,S=1,I=2;function C(t,n){var i,r,a;for(i=0;i<2;i++){for(w[i]=!0,ue.value(i),r=0;r<n.length&&w[i];r++)(a=n[r]).matchCondition&&(w[i]=w[i]&&a.matchCondition(null,e));t.matchCondition&&(w[i]=w[i]&&t.matchCondition(m,e))}return w[0]||w[1]?w[0]!=w[1]?w[1]?S:I:x:k}for(this.selector=this.selector.eval(e),s=0;s<this.arguments.length;s++)if(a=(r=this.arguments[s]).value.eval(e),r.expand&&Array.isArray(a.value))for(a=a.value,o=0;o<a.length;o++)m.push({value:a[o]});else m.push({name:r.name,value:a});for(d=function(t){return t.matchArgs(null,e)},s=0;s<e.frames.length;s++)if((t=e.frames[s].find(this.selector,null,d)).length>0){for(c=!0,o=0;o<t.length;o++){for(n=t[o].rule,i=t[o].path,u=!1,l=0;l<e.frames.length;l++)if(!(n instanceof De)&&n===(e.frames[l].originalRuleset||e.frames[l])){u=!0;break}u||n.matchArgs(m,e)&&((h={mixin:n,group:C(n,i)}).group!==k&&b.push(h),y=!0)}for(ue.reset(),p=[0,0,0],o=0;o<b.length;o++)p[b[o].group]++;if(p[x]>0)f=I;else if(f=S,p[S]+p[I]>1)throw{type:\"Runtime\",message:\"Ambiguous use of `default()` found when matching for `\".concat(this.format(m),\"`\"),index:this.getIndex(),filename:this.fileInfo().filename};for(o=0;o<b.length;o++)if((h=b[o].group)===x||h===f)try{(n=b[o].mixin)instanceof De||(v=n.originalRuleset||n,(n=new De(\"\",[],n.rules,null,!1,null,v.visibilityInfo())).originalRuleset=v);var _=n.evalCall(e,m,this.important).rules;this._setVisibilityToReplacement(_),Array.prototype.push.apply(g,_)}catch(A){throw{message:A.message,index:this.getIndex(),filename:this.fileInfo().filename,stack:A.stack}}if(y)return g}throw c?{type:\"Runtime\",message:\"No matching definition was found for `\".concat(this.format(m),\"`\"),index:this.getIndex(),filename:this.fileInfo().filename}:{type:\"Name\",message:\"\".concat(this.selector.toCSS().trim(),\" is undefined\"),index:this.getIndex(),filename:this.fileInfo().filename}}},{key:\"_setVisibilityToReplacement\",value:function(e){var t;if(this.blocksVisibility())for(t=0;t<e.length;t++)e[t].addVisibilityBlock()}},{key:\"format\",value:function(e){return\"\".concat(this.selector.toCSS().trim(),\"(\").concat(e?e.map((function(e){var t=\"\";return e.name&&(t+=\"\".concat(e.name,\":\")),e.value.toCSS?t+=e.value.toCSS():t+=\"???\",t})).join(\", \"):\"\",\")\")}}]),t}(I);Ne.prototype.type=\"MixinCall\";var je={Node:I,Color:C,AtRule:he,DetachedRuleset:fe,Operation:me,Dimension:ve,Unit:pe,Keyword:H,Variable:ke,Property:xe,Ruleset:ce,Element:R,Attribute:Se,Combinator:E,Selector:J,Quoted:Ie,Expression:ye,Declaration:Z,Call:we,URL:Ce,Import:Me,Comment:ee,Anonymous:Q,Value:W,JavaScript:Pe,Assignment:Ee,Condition:Re,Paren:M,Media:Ae,UnicodeDescriptor:Oe,Negative:Fe,Extend:Ve,VariableCall:$e,NamespaceValue:Le,mixin:{Call:Ne,Definition:De}},Be={error:function(e){this._fireEvent(\"error\",e)},warn:function(e){this._fireEvent(\"warn\",e)},info:function(e){this._fireEvent(\"info\",e)},debug:function(e){this._fireEvent(\"debug\",e)},addListener:function(e){this._listeners.push(e)},removeListener:function(e){for(var t=0;t<this._listeners.length;t++)if(this._listeners[t]===e)return void this._listeners.splice(t,1)},_fireEvent:function(e,t){for(var n=0;n<this._listeners.length;n++){var i=this._listeners[n][e];i&&i(t)}},_listeners:[]},Ue=function(){function e(t,n){o(this,e),this.fileManagers=n||[],t=t||{};for(var i=[\"encodeBase64\",\"mimeLookup\",\"charsetLookup\",\"getSourceMapGenerator\"],r=[],a=r.concat(i),s=0;s<a.length;s++){var l=a[s],u=t[l];u?this[l]=u.bind(t):s<r.length&&this.warn(\"missing required function in environment - \".concat(l))}}return u(e,[{key:\"getFileManager\",value:function(e,t,n,i,r){e||Be.warn(\"getFileManager called with no filename.. Please report this issue. continuing.\"),null==t&&Be.warn(\"getFileManager called with null directory.. Please report this issue. continuing.\");var a=this.fileManagers;n.pluginManager&&(a=[].concat(a).concat(n.pluginManager.getFileManagers()));for(var s=a.length-1;s>=0;s--){var o=a[s];if(o[r?\"supportsSync\":\"supports\"](e,t,n,i))return o}return null}},{key:\"addFileManager\",value:function(e){this.fileManagers.push(e)}},{key:\"clearFileManagers\",value:function(){this.fileManagers=[]}}]),e}(),qe=function(){function e(){o(this,e)}return u(e,[{key:\"getPath\",value:function(e){var t=e.lastIndexOf(\"?\");return t>0&&(e=e.slice(0,t)),(t=e.lastIndexOf(\"/\"))<0&&(t=e.lastIndexOf(\"\\\\\")),t<0?\"\":e.slice(0,t+1)}},{key:\"tryAppendExtension\",value:function(e,t){return/(\\.[a-z]*$)|([\\?;].*)$/.test(e)?e:e+t}},{key:\"tryAppendLessExtension\",value:function(e){return this.tryAppendExtension(e,\".less\")}},{key:\"supportsSync\",value:function(){return!1}},{key:\"alwaysMakePathsAbsolute\",value:function(){return!1}},{key:\"isPathAbsolute\",value:function(e){return/^(?:[a-z-]+:|\\/|\\\\|#)/i.test(e)}},{key:\"join\",value:function(e,t){return e?e+t:t}},{key:\"pathDiff\",value:function(e,t){var n,i,r,a,s=this.extractUrlParts(e),o=this.extractUrlParts(t),l=\"\";if(s.hostPart!==o.hostPart)return\"\";for(i=Math.max(o.directories.length,s.directories.length),n=0;n<i&&o.directories[n]===s.directories[n];n++);for(a=o.directories.slice(n),r=s.directories.slice(n),n=0;n<a.length-1;n++)l+=\"../\";for(n=0;n<r.length-1;n++)l+=\"\".concat(r[n],\"/\");return l}},{key:\"extractUrlParts\",value:function(e,t){var n,i,r=/^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i,a=e.match(r),s={},o=[],l=[];if(!a)throw new Error(\"Could not parse sheet href - '\".concat(e,\"'\"));if(t&&(!a[1]||a[2])){if(!(i=t.match(r)))throw new Error(\"Could not parse page url - '\".concat(t,\"'\"));a[1]=a[1]||i[1]||\"\",a[2]||(a[3]=i[3]+a[3])}if(a[3])for(o=a[3].replace(/\\\\/g,\"/\").split(\"/\"),n=0;n<o.length;n++)\"..\"===o[n]?l.pop():\".\"!==o[n]&&l.push(o[n]);return s.hostPart=a[1],s.directories=l,s.rawPath=(a[1]||\"\")+o.join(\"/\"),s.path=(a[1]||\"\")+l.join(\"/\"),s.filename=a[4],s.fileUrl=s.path+(a[4]||\"\"),s.url=s.fileUrl+(a[5]||\"\"),s}}]),e}(),Te=function(){function e(){o(this,e),this.require=function(){return null}}return u(e,[{key:\"evalPlugin\",value:function(e,t,n,i,r){var a,s,o,l,u,c;l=t.pluginManager,r&&(u=\"string\"===typeof r?r:r.filename);var h=(new this.less.FileManager).extractUrlParts(u).filename;if(u&&(s=l.get(u))){if(c=this.trySetOptions(s,u,h,i))return c;try{s.use&&s.use.call(this.context,s)}catch(p){return p.message=p.message||\"Error during @plugin call\",new z(p,n,u)}return s}o={exports:{},pluginManager:l,fileInfo:r},a=le.create();var f=function(e){s=e};try{new Function(\"module\",\"require\",\"registerPlugin\",\"functions\",\"tree\",\"less\",\"fileInfo\",e)(o,this.require(u),f,a,this.less.tree,this.less,r)}catch(p){return new z(p,n,u)}if(s||(s=o.exports),(s=this.validatePlugin(s,u,h))instanceof z)return s;if(!s)return new z({message:\"Not a valid plugin\"},n,u);if(s.imports=n,s.filename=u,(!s.minVersion||this.compareVersion(\"3.0.0\",s.minVersion)<0)&&(c=this.trySetOptions(s,u,h,i)))return c;if(l.addPlugin(s,r.filename,a),s.functions=a.getLocalFunctions(),c=this.trySetOptions(s,u,h,i))return c;try{s.use&&s.use.call(this.context,s)}catch(p){return p.message=p.message||\"Error during @plugin call\",new z(p,n,u)}return s}},{key:\"trySetOptions\",value:function(e,t,n,i){if(i&&!e.setOptions)return new z({message:\"Options have been provided but the plugin \".concat(n,\" does not support any options.\")});try{e.setOptions&&e.setOptions(i)}catch(r){return new z(r)}}},{key:\"validatePlugin\",value:function(e,t,n){return e?(\"function\"===typeof e&&(e=new e),e.minVersion&&this.compareVersion(e.minVersion,this.less.version)<0?new z({message:\"Plugin \".concat(n,\" requires version \").concat(this.versionToString(e.minVersion))}):e):null}},{key:\"compareVersion\",value:function(e,t){\"string\"===typeof e&&(e=e.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/)).shift();for(var n=0;n<e.length;n++)if(e[n]!==t[n])return parseInt(e[n])>parseInt(t[n])?-1:1;return 0}},{key:\"versionToString\",value:function(e){for(var t=\"\",n=0;n<e.length;n++)t+=(t?\".\":\"\")+e[n];return t}},{key:\"printUsage\",value:function(e){for(var t=0;t<e.length;t++){var n=e[t];n.printUsage&&n.printUsage()}}}]),e}(),ze={visitDeeper:!0},Ge=!1;function Je(e){return e}function We(e,t){var n,i;for(n in e)switch(s(i=e[n])){case\"function\":i.prototype&&i.prototype.type&&(i.prototype.typeIndex=t++);break;case\"object\":t=We(i,t)}return t}var He=function(){function e(t){o(this,e),this._implementation=t,this._visitInCache={},this._visitOutCache={},Ge||(We(je,1),Ge=!0)}return u(e,[{key:\"visit\",value:function(e){if(!e)return e;var t=e.typeIndex;if(!t)return e.value&&e.value.typeIndex&&this.visit(e.value),e;var n,i=this._implementation,r=this._visitInCache[t],a=this._visitOutCache[t],s=ze;if(s.visitDeeper=!0,r||(r=i[n=\"visit\".concat(e.type)]||Je,a=i[\"\".concat(n,\"Out\")]||Je,this._visitInCache[t]=r,this._visitOutCache[t]=a),r!==Je){var o=r.call(i,e,s);e&&i.isReplacing&&(e=o)}return s.visitDeeper&&e&&e.accept&&e.accept(this),a!=Je&&a.call(i,e),e}},{key:\"visitArray\",value:function(e,t){if(!e)return e;var n,i=e.length;if(t||!this._implementation.isReplacing){for(n=0;n<i;n++)this.visit(e[n]);return e}var r=[];for(n=0;n<i;n++){var a=this.visit(e[n]);void 0!==a&&(a.splice?a.length&&this.flatten(a,r):r.push(a))}return r}},{key:\"flatten\",value:function(e,t){var n,i,r,a,s,o;for(t||(t=[]),i=0,n=e.length;i<n;i++)if(void 0!==(r=e[i]))if(r.splice)for(s=0,a=r.length;s<a;s++)void 0!==(o=r[s])&&(o.splice?o.length&&this.flatten(o,t):t.push(o));else t.push(r);return t}}]),e}(),Qe=function(){function e(t){o(this,e),this.imports=[],this.variableImports=[],this._onSequencerEmpty=t,this._currentDepth=0}return u(e,[{key:\"addImport\",value:function(e){var t=this,n={callback:e,args:null,isReady:!1};return this.imports.push(n),function(){for(var e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];n.args=Array.prototype.slice.call(i,0),n.isReady=!0,t.tryRun()}}},{key:\"addVariableImport\",value:function(e){this.variableImports.push(e)}},{key:\"tryRun\",value:function(){this._currentDepth++;try{for(;;){for(;this.imports.length>0;){var e=this.imports[0];if(!e.isReady)return;this.imports=this.imports.slice(1),e.callback.apply(null,e.args)}if(0===this.variableImports.length)break;var t=this.variableImports[0];this.variableImports=this.variableImports.slice(1),t()}}finally{this._currentDepth--}0===this._currentDepth&&this._onSequencerEmpty&&this._onSequencerEmpty()}}]),e}(),Ke=function(e,t){this._visitor=new He(this),this._importer=e,this._finish=t,this.context=new te.Eval,this.importCount=0,this.onceFileDetectionMap={},this.recursionDetector={},this._sequencer=new Qe(this._onSequencerEmpty.bind(this))};Ke.prototype={isReplacing:!1,run:function(e){try{this._visitor.visit(e)}catch(t){this.error=t}this.isFinished=!0,this._sequencer.tryRun()},_onSequencerEmpty:function(){this.isFinished&&this._finish(this.error)},visitImport:function(e,t){var n=e.options.inline;if(!e.css||n){var i=new te.Eval(this.context,D(this.context.frames)),r=i.frames[0];this.importCount++,e.isVariableImport()?this._sequencer.addVariableImport(this.processImportNode.bind(this,e,i,r)):this.processImportNode(e,i,r)}t.visitDeeper=!1},processImportNode:function(e,t,n){var i,r=e.options.inline;try{i=e.evalForImport(t)}catch(u){u.filename||(u.index=e.getIndex(),u.filename=e.fileInfo().filename),e.css=!0,e.error=u}if(!i||i.css&&!r)this.importCount--,this.isFinished&&this._sequencer.tryRun();else{i.options.multiple&&(t.importMultiple=!0);for(var a=void 0===i.css,s=0;s<n.rules.length;s++)if(n.rules[s]===e){n.rules[s]=i;break}var o=this.onImported.bind(this,i,t),l=this._sequencer.addImport(o);this._importer.push(i.getPath(),a,i.fileInfo(),i.options,l)}},onImported:function(e,t,n,i,r,a){n&&(n.filename||(n.index=e.getIndex(),n.filename=e.fileInfo().filename),this.error=n);var s=this,o=e.options.inline,l=e.options.isPlugin,u=e.options.optional,c=r||a in s.recursionDetector;if(t.importMultiple||(e.skip=!!c||function(){return a in s.onceFileDetectionMap||(s.onceFileDetectionMap[a]=!0,!1)}),!a&&u&&(e.skip=!0),i&&(e.root=i,e.importedFilename=a,!o&&!l&&(t.importMultiple||!c))){s.recursionDetector[a]=!0;var h=this.context;this.context=t;try{this._visitor.visit(i)}catch(n){this.error=n}this.context=h}s.importCount--,s.isFinished&&s._sequencer.tryRun()},visitDeclaration:function(e,t){\"DetachedRuleset\"===e.value.type?this.context.frames.unshift(e):t.visitDeeper=!1},visitDeclarationOut:function(e){\"DetachedRuleset\"===e.value.type&&this.context.frames.shift()},visitAtRule:function(e,t){this.context.frames.unshift(e)},visitAtRuleOut:function(e){this.context.frames.shift()},visitMixinDefinition:function(e,t){this.context.frames.unshift(e)},visitMixinDefinitionOut:function(e){this.context.frames.shift()},visitRuleset:function(e,t){this.context.frames.unshift(e)},visitRulesetOut:function(e){this.context.frames.shift()},visitMedia:function(e,t){this.context.frames.unshift(e.rules[0])},visitMediaOut:function(e){this.context.frames.shift()}};var Ze=function(){function e(t){o(this,e),this.visible=t}return u(e,[{key:\"run\",value:function(e){this.visit(e)}},{key:\"visitArray\",value:function(e){if(!e)return e;var t,n=e.length;for(t=0;t<n;t++)this.visit(e[t]);return e}},{key:\"visit\",value:function(e){return e?e.constructor===Array?this.visitArray(e):(!e.blocksVisibility||e.blocksVisibility()||(this.visible?e.ensureVisibility():e.ensureInvisibility(),e.accept(this)),e):e}}]),e}(),Ye=function(){function e(){o(this,e),this._visitor=new He(this),this.contexts=[],this.allExtendsStack=[[]]}return u(e,[{key:\"run\",value:function(e){return(e=this._visitor.visit(e)).allExtends=this.allExtendsStack[0],e}},{key:\"visitDeclaration\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitMixinDefinition\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitRuleset\",value:function(e,t){if(!e.root){var n,i,r,a,s=[],o=e.rules,l=o?o.length:0;for(n=0;n<l;n++)e.rules[n]instanceof je.Extend&&(s.push(o[n]),e.extendOnEveryPath=!0);var u=e.paths;for(n=0;n<u.length;n++){var c=u[n],h=c[c.length-1].extendList;for((a=h?D(h).concat(s):s)&&(a=a.map((function(e){return e.clone()}))),i=0;i<a.length;i++)this.foundExtends=!0,(r=a[i]).findSelfSelectors(c),r.ruleset=e,0===i&&(r.firstExtendOnThisSelectorPath=!0),this.allExtendsStack[this.allExtendsStack.length-1].push(r)}this.contexts.push(e.selectors)}}},{key:\"visitRulesetOut\",value:function(e){e.root||(this.contexts.length=this.contexts.length-1)}},{key:\"visitMedia\",value:function(e,t){e.allExtends=[],this.allExtendsStack.push(e.allExtends)}},{key:\"visitMediaOut\",value:function(e){this.allExtendsStack.length=this.allExtendsStack.length-1}},{key:\"visitAtRule\",value:function(e,t){e.allExtends=[],this.allExtendsStack.push(e.allExtends)}},{key:\"visitAtRuleOut\",value:function(e){this.allExtendsStack.length=this.allExtendsStack.length-1}}]),e}(),Xe=function(){function e(){o(this,e),this._visitor=new He(this)}return u(e,[{key:\"run\",value:function(e){var t=new Ye;if(this.extendIndices={},t.run(e),!t.foundExtends)return e;e.allExtends=e.allExtends.concat(this.doExtendChaining(e.allExtends,e.allExtends)),this.allExtendsStack=[e.allExtends];var n=this._visitor.visit(e);return this.checkExtendsForNonMatched(e.allExtends),n}},{key:\"checkExtendsForNonMatched\",value:function(e){var t=this.extendIndices;e.filter((function(e){return!e.hasFoundMatches&&1==e.parent_ids.length})).forEach((function(e){var n=\"_unknown_\";try{n=e.selector.toCSS({})}catch(i){}t[\"\".concat(e.index,\" \").concat(n)]||(t[\"\".concat(e.index,\" \").concat(n)]=!0,Be.warn(\"extend '\".concat(n,\"' has no matches\")))}))}},{key:\"doExtendChaining\",value:function(e,t,n){var i,r,a,s,o,l,u,c,h=[],f=this;for(n=n||0,i=0;i<e.length;i++)for(r=0;r<t.length;r++)l=e[i],u=t[r],l.parent_ids.indexOf(u.object_id)>=0||(o=[u.selfSelectors[0]],(a=f.findMatch(l,o)).length&&(l.hasFoundMatches=!0,l.selfSelectors.forEach((function(e){var t=u.visibilityInfo();s=f.extendSelector(a,o,e,l.isVisible()),(c=new je.Extend(u.selector,u.option,0,u.fileInfo(),t)).selfSelectors=s,s[s.length-1].extendList=[c],h.push(c),c.ruleset=u.ruleset,c.parent_ids=c.parent_ids.concat(u.parent_ids,l.parent_ids),u.firstExtendOnThisSelectorPath&&(c.firstExtendOnThisSelectorPath=!0,u.ruleset.paths.push(s))}))));if(h.length){if(this.extendChainCount++,n>100){var p=\"{unable to calculate}\",v=\"{unable to calculate}\";try{p=h[0].selfSelectors[0].toCSS(),v=h[0].selector.toCSS()}catch(d){}throw{message:\"extend circular reference detected. One of the circular extends is currently:\".concat(p,\":extend(\").concat(v,\")\")}}return h.concat(f.doExtendChaining(h,t,n+1))}return h}},{key:\"visitDeclaration\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitMixinDefinition\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitSelector\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitRuleset\",value:function(e,t){if(!e.root){var n,i,r,a,s=this.allExtendsStack[this.allExtendsStack.length-1],o=[],l=this;for(r=0;r<s.length;r++)for(i=0;i<e.paths.length;i++)if(a=e.paths[i],!e.extendOnEveryPath){var u=a[a.length-1].extendList;u&&u.length||(n=this.findMatch(s[r],a)).length&&(s[r].hasFoundMatches=!0,s[r].selfSelectors.forEach((function(e){var t;t=l.extendSelector(n,a,e,s[r].isVisible()),o.push(t)})))}e.paths=e.paths.concat(o)}}},{key:\"findMatch\",value:function(e,t){var n,i,r,a,s,o,l,u=this,c=e.selector.elements,h=[],f=[];for(n=0;n<t.length;n++)for(i=t[n],r=0;r<i.elements.length;r++)for(a=i.elements[r],(e.allowBefore||0===n&&0===r)&&h.push({pathIndex:n,index:r,matched:0,initialCombinator:a.combinator}),o=0;o<h.length;o++)l=h[o],\"\"===(s=a.combinator.value)&&0===r&&(s=\" \"),!u.isElementValuesEqual(c[l.matched].value,a.value)||l.matched>0&&c[l.matched].combinator.value!==s?l=null:l.matched++,l&&(l.finished=l.matched===c.length,l.finished&&!e.allowAfter&&(r+1<i.elements.length||n+1<t.length)&&(l=null)),l?l.finished&&(l.length=c.length,l.endPathIndex=n,l.endPathElementIndex=r+1,h.length=0,f.push(l)):(h.splice(o,1),o--);return f}},{key:\"isElementValuesEqual\",value:function(e,t){if(\"string\"===typeof e||\"string\"===typeof t)return e===t;if(e instanceof je.Attribute)return e.op===t.op&&e.key===t.key&&(e.value&&t.value?(e=e.value.value||e.value)===(t=t.value.value||t.value):!e.value&&!t.value);if(e=e.value,t=t.value,e instanceof je.Selector){if(!(t instanceof je.Selector)||e.elements.length!==t.elements.length)return!1;for(var n=0;n<e.elements.length;n++){if(e.elements[n].combinator.value!==t.elements[n].combinator.value&&(0!==n||(e.elements[n].combinator.value||\" \")!==(t.elements[n].combinator.value||\" \")))return!1;if(!this.isElementValuesEqual(e.elements[n].value,t.elements[n].value))return!1}return!0}return!1}},{key:\"extendSelector\",value:function(e,t,n,i){var r,a,s,o,l,u=0,c=0,h=[];for(r=0;r<e.length;r++)a=t[(o=e[r]).pathIndex],s=new je.Element(o.initialCombinator,n.elements[0].value,n.elements[0].isVariable,n.elements[0].getIndex(),n.elements[0].fileInfo()),o.pathIndex>u&&c>0&&(h[h.length-1].elements=h[h.length-1].elements.concat(t[u].elements.slice(c)),c=0,u++),l=a.elements.slice(c,o.index).concat([s]).concat(n.elements.slice(1)),u===o.pathIndex&&r>0?h[h.length-1].elements=h[h.length-1].elements.concat(l):(h=h.concat(t.slice(u,o.pathIndex))).push(new je.Selector(l)),u=o.endPathIndex,(c=o.endPathElementIndex)>=t[u].elements.length&&(c=0,u++);return u<t.length&&c>0&&(h[h.length-1].elements=h[h.length-1].elements.concat(t[u].elements.slice(c)),u++),h=(h=h.concat(t.slice(u,t.length))).map((function(e){var t=e.createDerived(e.elements);return i?t.ensureVisibility():t.ensureInvisibility(),t}))}},{key:\"visitMedia\",value:function(e,t){var n=e.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length-1]);n=n.concat(this.doExtendChaining(n,e.allExtends)),this.allExtendsStack.push(n)}},{key:\"visitMediaOut\",value:function(e){var t=this.allExtendsStack.length-1;this.allExtendsStack.length=t}},{key:\"visitAtRule\",value:function(e,t){var n=e.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length-1]);n=n.concat(this.doExtendChaining(n,e.allExtends)),this.allExtendsStack.push(n)}},{key:\"visitAtRuleOut\",value:function(e){var t=this.allExtendsStack.length-1;this.allExtendsStack.length=t}}]),e}(),et=function(){function e(){o(this,e),this.contexts=[[]],this._visitor=new He(this)}return u(e,[{key:\"run\",value:function(e){return this._visitor.visit(e)}},{key:\"visitDeclaration\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitMixinDefinition\",value:function(e,t){t.visitDeeper=!1}},{key:\"visitRuleset\",value:function(e,t){var n,i=this.contexts[this.contexts.length-1],r=[];this.contexts.push(r),e.root||((n=e.selectors)&&(n=n.filter((function(e){return e.getIsOutput()})),e.selectors=n.length?n:n=null,n&&e.joinSelectors(r,i,n)),n||(e.rules=null),e.paths=r)}},{key:\"visitRulesetOut\",value:function(e){this.contexts.length=this.contexts.length-1}},{key:\"visitMedia\",value:function(e,t){var n=this.contexts[this.contexts.length-1];e.rules[0].root=0===n.length||n[0].multiMedia}},{key:\"visitAtRule\",value:function(e,t){var n=this.contexts[this.contexts.length-1];e.rules&&e.rules.length&&(e.rules[0].root=e.isRooted||0===n.length||null)}}]),e}(),tt=function(){function e(t){o(this,e),this._visitor=new He(this),this._context=t}return u(e,[{key:\"containsSilentNonBlockedChild\",value:function(e){var t;if(!e)return!1;for(var n=0;n<e.length;n++)if((t=e[n]).isSilent&&t.isSilent(this._context)&&!t.blocksVisibility())return!0;return!1}},{key:\"keepOnlyVisibleChilds\",value:function(e){e&&e.rules&&(e.rules=e.rules.filter((function(e){return e.isVisible()})))}},{key:\"isEmpty\",value:function(e){return!e||!e.rules||0===e.rules.length}},{key:\"hasVisibleSelector\",value:function(e){return!(!e||!e.paths)&&e.paths.length>0}},{key:\"resolveVisibility\",value:function(e,t){if(!e.blocksVisibility()){if(this.isEmpty(e)&&!this.containsSilentNonBlockedChild(t))return;return e}var n=e.rules[0];if(this.keepOnlyVisibleChilds(n),!this.isEmpty(n))return e.ensureVisibility(),e.removeVisibilityBlock(),e}},{key:\"isVisibleRuleset\",value:function(e){return!!e.firstRoot||!this.isEmpty(e)&&!(!e.root&&!this.hasVisibleSelector(e))}}]),e}(),nt=function(e){this._visitor=new He(this),this._context=e,this.utils=new tt(e)};nt.prototype={isReplacing:!0,run:function(e){return this._visitor.visit(e)},visitDeclaration:function(e,t){if(!e.blocksVisibility()&&!e.variable)return e},visitMixinDefinition:function(e,t){e.frames=[]},visitExtend:function(e,t){},visitComment:function(e,t){if(!e.blocksVisibility()&&!e.isSilent(this._context))return e},visitMedia:function(e,t){var n=e.rules[0].rules;return e.accept(this._visitor),t.visitDeeper=!1,this.utils.resolveVisibility(e,n)},visitImport:function(e,t){if(!e.blocksVisibility())return e},visitAtRule:function(e,t){return e.rules&&e.rules.length?this.visitAtRuleWithBody(e,t):this.visitAtRuleWithoutBody(e,t)},visitAnonymous:function(e,t){if(!e.blocksVisibility())return e.accept(this._visitor),e},visitAtRuleWithBody:function(e,t){function n(e){var t=e.rules;return 1===t.length&&(!t[0].paths||0===t[0].paths.length)}function i(e){var t=e.rules;return n(e)?t[0].rules:t}var r=i(e);return e.accept(this._visitor),t.visitDeeper=!1,this.utils.isEmpty(e)||this._mergeRules(e.rules[0].rules),this.utils.resolveVisibility(e,r)},visitAtRuleWithoutBody:function(e,t){if(!e.blocksVisibility()){if(\"@charset\"===e.name){if(this.charset){if(e.debugInfo){var n=new je.Comment(\"/* \".concat(e.toCSS(this._context).replace(/\\n/g,\"\"),\" */\\n\"));return n.debugInfo=e.debugInfo,this._visitor.visit(n)}return}this.charset=!0}return e}},checkValidNodes:function(e,t){if(e)for(var n=0;n<e.length;n++){var i=e[n];if(t&&i instanceof je.Declaration&&!i.variable)throw{message:\"Properties must be inside selector blocks. They cannot be in the root\",index:i.getIndex(),filename:i.fileInfo()&&i.fileInfo().filename};if(i instanceof je.Call)throw{message:\"Function '\".concat(i.name,\"' is undefined\"),index:i.getIndex(),filename:i.fileInfo()&&i.fileInfo().filename};if(i.type&&!i.allowRoot)throw{message:\"\".concat(i.type,\" node returned by a function is not valid here\"),index:i.getIndex(),filename:i.fileInfo()&&i.fileInfo().filename}}},visitRuleset:function(e,t){var n,i=[];if(this.checkValidNodes(e.rules,e.firstRoot),e.root)e.accept(this._visitor),t.visitDeeper=!1;else{this._compileRulesetPaths(e);for(var r=e.rules,a=r?r.length:0,s=0;s<a;)(n=r[s])&&n.rules?(i.push(this._visitor.visit(n)),r.splice(s,1),a--):s++;a>0?e.accept(this._visitor):e.rules=null,t.visitDeeper=!1}return e.rules&&(this._mergeRules(e.rules),this._removeDuplicateRules(e.rules)),this.utils.isVisibleRuleset(e)&&(e.ensureVisibility(),i.splice(0,0,e)),1===i.length?i[0]:i},_compileRulesetPaths:function(e){e.paths&&(e.paths=e.paths.filter((function(e){var t;for(\" \"===e[0].elements[0].combinator.value&&(e[0].elements[0].combinator=new je.Combinator(\"\")),t=0;t<e.length;t++)if(e[t].isVisible()&&e[t].getIsOutput())return!0;return!1})))},_removeDuplicateRules:function(e){if(e){var t,n,i,r={};for(i=e.length-1;i>=0;i--)if((n=e[i])instanceof je.Declaration)if(r[n.name]){(t=r[n.name])instanceof je.Declaration&&(t=r[n.name]=[r[n.name].toCSS(this._context)]);var a=n.toCSS(this._context);-1!==t.indexOf(a)?e.splice(i,1):t.push(a)}else r[n.name]=n}},_mergeRules:function(e){if(e){for(var t={},n=[],i=0;i<e.length;i++){var r=e[i];if(r.merge){var a=r.name;t[a]?e.splice(i--,1):n.push(t[a]=[]),t[a].push(r)}}n.forEach((function(e){if(e.length>0){var t=e[0],n=[],i=[new je.Expression(n)];e.forEach((function(e){\"+\"===e.merge&&n.length>0&&i.push(new je.Expression(n=[])),n.push(e.value),t.important=t.important||e.important})),t.value=new je.Value(i)}}))}}};var it={Visitor:He,ImportVisitor:Ke,MarkVisibleSelectorsVisitor:Ze,ExtendVisitor:Xe,JoinSelectorVisitor:et,ToCSSVisitor:nt},rt=function(e,t){var n,i,r,a,s,o,l,u,c,h=e.length,f=0,p=0,v=[],d=0;function m(t){var n=s-d;n<512&&!t||!n||(v.push(e.slice(d,s+1)),d=s+1)}for(s=0;s<h;s++)if(!((l=e.charCodeAt(s))>=97&&l<=122||l<34))switch(l){case 40:p++,i=s;continue;case 41:if(--p<0)return t(\"missing opening `(`\",s);continue;case 59:p||m();continue;case 123:f++,n=s;continue;case 125:if(--f<0)return t(\"missing opening `{`\",s);f||p||m();continue;case 92:if(s<h-1){s++;continue}return t(\"unescaped `\\\\`\",s);case 34:case 39:case 96:for(c=0,o=s,s+=1;s<h;s++)if(!((u=e.charCodeAt(s))>96)){if(u==l){c=1;break}if(92==u){if(s==h-1)return t(\"unescaped `\\\\`\",s);s++}}if(c)continue;return t(\"unmatched `\".concat(String.fromCharCode(l),\"`\"),o);case 47:if(p||s==h-1)continue;if(47==(u=e.charCodeAt(s+1)))for(s+=2;s<h&&(!((u=e.charCodeAt(s))<=13)||10!=u&&13!=u);s++);else if(42==u){for(r=o=s,s+=2;s<h-1&&(125==(u=e.charCodeAt(s))&&(a=s),42!=u||47!=e.charCodeAt(s+1));s++);if(s==h-1)return t(\"missing closing `*/`\",o);s++}continue;case 42:if(s<h-1&&47==e.charCodeAt(s+1))return t(\"unmatched `/*`\",s);continue}return 0!==f?t(r>n&&a>r?\"missing closing `}` or `*/`\":\"missing closing `}`\",n):0!==p?t(\"missing closing `)`\",i):(m(!0),v)},at=function(){var e,t,n,i,r,a,s,o=[],l={},u=32,c=9,h=10,f=13,p=43,v=44,d=47,m=57;function g(n){for(var i,o,p,v=l.i,m=t,y=l.i-s,b=l.i+a.length-y,w=l.i+=n,k=e;l.i<b;l.i++){if(i=k.charCodeAt(l.i),l.autoCommentAbsorb&&i===d){if(\"/\"===(o=k.charAt(l.i+1))){p={index:l.i,isLineComment:!0};var x=k.indexOf(\"\\n\",l.i+2);x<0&&(x=b),l.i=x,p.text=k.substr(p.index,l.i-p.index),l.commentStore.push(p);continue}if(\"*\"===o){var S=k.indexOf(\"*/\",l.i+2);if(S>=0){p={index:l.i,text:k.substr(l.i,S+2-l.i),isLineComment:!1},l.i+=p.text.length-1,l.commentStore.push(p);continue}}break}if(i!==u&&i!==h&&i!==c&&i!==f)break}if(a=a.slice(n+l.i-w+y),s=l.i,!a.length){if(t<r.length-1)return a=r[++t],g(0),!0;l.finished=!0}return v!==l.i||m!==t}return l.save=function(){s=l.i,o.push({current:a,i:l.i,j:t})},l.restore=function(e){(l.i>n||l.i===n&&e&&!i)&&(n=l.i,i=e);var r=o.pop();a=r.current,s=l.i=r.i,t=r.j},l.forget=function(){o.pop()},l.isWhitespace=function(t){var n=l.i+(t||0),i=e.charCodeAt(n);return i===u||i===f||i===c||i===h},l.$re=function(e){l.i>s&&(a=a.slice(l.i-s),s=l.i);var t=e.exec(a);return t?(g(t[0].length),\"string\"===typeof t?t:1===t.length?t[0]:t):null},l.$char=function(t){return e.charAt(l.i)!==t?null:(g(1),t)},l.$str=function(t){for(var n=t.length,i=0;i<n;i++)if(e.charAt(l.i+i)!==t.charAt(i))return null;return g(n),t},l.$quoted=function(t){var n=t||l.i,i=e.charAt(n);if(\"'\"===i||'\"'===i){for(var r=e.length,a=n,s=1;s+a<r;s++)switch(e.charAt(s+a)){case\"\\\\\":s++;continue;case\"\\r\":case\"\\n\":break;case i:var o=e.substr(a,s+1);return t||0===t?[i,o]:(g(s+1),o)}return null}},l.$parseUntil=function(t){var n,i=\"\",r=null,a=!1,s=0,o=[],u=[],c=e.length,h=l.i,f=l.i,p=l.i,v=!0;n=\"string\"===typeof t?function(e){return e===t}:function(e){return t.test(e)};do{var d=e.charAt(p);if(0===s&&n(d))(r=e.substr(f,p-f))?u.push(r):u.push(\" \"),r=u,g(p-h),v=!1;else{if(a){\"*\"===d&&\"/\"===e.charAt(p+1)&&(p++,s--,a=!1),p++;continue}switch(d){case\"\\\\\":p++,d=e.charAt(p),u.push(e.substr(f,p-f+1)),f=p+1;break;case\"/\":\"*\"===e.charAt(p+1)&&(p++,a=!0,s++);break;case\"'\":case'\"':(i=l.$quoted(p))?(u.push(e.substr(f,p-f),i),f=(p+=i[1].length-1)+1):(g(p-h),r=d,v=!1);break;case\"{\":o.push(\"}\"),s++;break;case\"(\":o.push(\")\"),s++;break;case\"[\":o.push(\"]\"),s++;break;case\"}\":case\")\":case\"]\":var m=o.pop();d===m?s--:(g(p-h),r=m,v=!1)}++p>c&&(v=!1)}}while(v);return r||null},l.autoCommentAbsorb=!0,l.commentStore=[],l.finished=!1,l.peek=function(t){if(\"string\"===typeof t){for(var n=0;n<t.length;n++)if(e.charAt(l.i+n)!==t.charAt(n))return!1;return!0}return t.test(a)},l.peekChar=function(t){return e.charAt(l.i)===t},l.currentChar=function(){return e.charAt(l.i)},l.prevChar=function(){return e.charAt(l.i-1)},l.getInput=function(){return e},l.peekNotNumeric=function(){var t=e.charCodeAt(l.i);return t>m||t<p||t===d||t===v},l.start=function(i,o,u){e=i,l.i=t=s=n=0,r=o?rt(i,u):[i],a=r[0],g(0)},l.end=function(){var t,r=l.i>=e.length;return l.i<n&&(t=i,l.i=n),{isFinished:r,furthest:l.i,furthestPossibleErrorMessage:t,furthestReachedEnd:l.i>=e.length-1,furthestChar:e[l.i]}},l},st=function e(t,n,i){var r,a=at();function s(e,t){throw new z({index:a.i,filename:i.filename,type:t||\"Syntax\",message:e},n)}function o(e,t){var n=e instanceof Function?e.call(r):a.$re(e);if(n)return n;s(t||(\"string\"===typeof e?\"expected '\".concat(e,\"' got '\").concat(a.currentChar(),\"'\"):\"unexpected token\"))}function l(e,t){if(a.$char(e))return e;s(t||\"expected '\".concat(e,\"' got '\").concat(a.currentChar(),\"'\"))}function u(e){var t=i.filename;return{lineNumber:L(e,a.getInput()).line+1,fileName:t}}function c(e,t,i,s,o){var l,u=[],c=a;try{c.start(e,!1,(function(e,t){o({message:e,index:t+i})}));for(var h,f,p=0;h=t[p];p++)if(f=c.i,l=r[h]()){try{l._index=f+i,l._fileInfo=s}catch(v){}u.push(l)}else u.push(null);c.end().isFinished?o(null,u):o(!0,null)}catch(v){throw new z({index:v.index+i,message:v.message},n,s.filename)}}return{parserInput:a,imports:n,fileInfo:i,parseNode:c,parse:function(r,s,o){var l,u,c,h,f=null,p=\"\";if(u=o&&o.globalVars?\"\".concat(e.serializeVars(o.globalVars),\"\\n\"):\"\",c=o&&o.modifyVars?\"\\n\".concat(e.serializeVars(o.modifyVars)):\"\",t.pluginManager)for(var v=t.pluginManager.getPreProcessors(),d=0;d<v.length;d++)r=v[d].process(r,{context:t,imports:n,fileInfo:i});(u||o&&o.banner)&&(p=(o&&o.banner?o.banner:\"\")+u,(h=n.contentsIgnoredChars)[i.filename]=h[i.filename]||0,h[i.filename]+=p.length),r=p+(r=r.replace(/\\r\\n?/g,\"\\n\")).replace(/^\\uFEFF/,\"\")+c,n.contents[i.filename]=r;try{a.start(r,t.chunkInput,(function(e,t){throw new z({index:t,type:\"Parse\",message:e,filename:i.filename},n)})),je.Node.prototype.parse=this,l=new je.Ruleset(null,this.parsers.primary()),je.Node.prototype.rootNode=l,l.root=!0,l.firstRoot=!0,l.functionRegistry=le.inherit()}catch(b){return s(new z(b,n,i.filename))}var m=a.end();if(!m.isFinished){var g=m.furthestPossibleErrorMessage;g||(g=\"Unrecognised input\",\"}\"===m.furthestChar?g+=\". Possibly missing opening '{'\":\")\"===m.furthestChar?g+=\". Possibly missing opening '('\":m.furthestReachedEnd&&(g+=\". Possibly missing something\")),f=new z({type:\"Parse\",message:g,index:m.furthest,filename:i.filename},n)}var y=function(e){return(e=f||e||n.error)?(e instanceof z||(e=new z(e,n,i.filename)),s(e)):s(null,l)};if(!1===t.processImports)return y();new it.ImportVisitor(n,y).run(l)},parsers:r={primary:function(){for(var e,t=this.mixin,n=[];;){for(;e=this.comment();)n.push(e);if(a.finished)break;if(a.peek(\"}\"))break;if(e=this.extendRule())n=n.concat(e);else if(e=t.definition()||this.declaration()||this.ruleset()||t.call(!1,!1)||this.variableCall()||this.entities.call()||this.atrule())n.push(e);else{for(var i=!1;a.$char(\";\");)i=!0;if(!i)break}}return n},comment:function(){if(a.commentStore.length){var e=a.commentStore.shift();return new je.Comment(e.text,e.isLineComment,e.index,i)}},entities:{mixinLookup:function(){return r.mixin.call(!0,!0)},quoted:function(e){var t,n=a.i,r=!1;if(a.save(),a.$char(\"~\"))r=!0;else if(e)return void a.restore();if(t=a.$quoted())return a.forget(),new je.Quoted(t.charAt(0),t.substr(1,t.length-2),r,n,i);a.restore()},keyword:function(){var e=a.$char(\"%\")||a.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);if(e)return je.Color.fromKeyword(e)||new je.Keyword(e)},call:function(){var e,t,n,r=a.i;if(!a.peek(/^url\\(/i))if(a.save(),e=a.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/)){if(e=e[1],(n=this.customFuncCall(e))&&(t=n.parse())&&n.stop)return a.forget(),t;if(t=this.arguments(t),a.$char(\")\"))return a.forget(),new je.Call(e,t,r,i);a.restore(\"Could not parse call arguments or missing ')'\")}else a.forget()},customFuncCall:function(e){return{alpha:t(r.ieAlpha,!0),boolean:t(n),if:t(n)}[e.toLowerCase()];function t(e,t){return{parse:e,stop:t}}function n(){return[o(r.condition,\"expected condition\")]}},arguments:function(e){var t,n,i=e||[],s=[];for(a.save();;){if(e)e=!1;else{if(!(n=r.detachedRuleset()||this.assignment()||r.expression()))break;n.value&&1==n.value.length&&(n=n.value[0]),i.push(n)}a.$char(\",\")||(a.$char(\";\")||t)&&(t=!0,n=i.length<1?i[0]:new je.Value(i),s.push(n),i=[])}return a.forget(),t?s:i},literal:function(){return this.dimension()||this.color()||this.quoted()||this.unicodeDescriptor()},assignment:function(){var e,t;if(a.save(),e=a.$re(/^\\w+(?=\\s?=)/i))if(a.$char(\"=\")){if(t=r.entity())return a.forget(),new je.Assignment(e,t);a.restore()}else a.restore();else a.restore()},url:function(){var e,t=a.i;if(a.autoCommentAbsorb=!1,a.$str(\"url(\"))return e=this.quoted()||this.variable()||this.property()||a.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/)||\"\",a.autoCommentAbsorb=!0,l(\")\"),new je.URL(null!=e.value||e instanceof je.Variable||e instanceof je.Property?e:new je.Anonymous(e,t),t,i);a.autoCommentAbsorb=!0},variable:function(){var e,t,n=a.i;if(a.save(),\"@\"===a.currentChar()&&(t=a.$re(/^@@?[\\w-]+/))){if(\"(\"===(e=a.currentChar())||\"[\"===e&&!a.prevChar().match(/^\\s/)){var s=r.variableCall(t);if(s)return a.forget(),s}return a.forget(),new je.Variable(t,n,i)}a.restore()},variableCurly:function(){var e,t=a.i;if(\"@\"===a.currentChar()&&(e=a.$re(/^@\\{([\\w-]+)\\}/)))return new je.Variable(\"@\".concat(e[1]),t,i)},property:function(){var e,t=a.i;if(\"$\"===a.currentChar()&&(e=a.$re(/^\\$[\\w-]+/)))return new je.Property(e,t,i)},propertyCurly:function(){var e,t=a.i;if(\"$\"===a.currentChar()&&(e=a.$re(/^\\$\\{([\\w-]+)\\}/)))return new je.Property(\"$\".concat(e[1]),t,i)},color:function(){var e;if(a.save(),\"#\"===a.currentChar()&&(e=a.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))&&!e[2])return a.forget(),new je.Color(e[1],void 0,e[0]);a.restore()},colorKeyword:function(){a.save();var e=a.autoCommentAbsorb;a.autoCommentAbsorb=!1;var t=a.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);if(a.autoCommentAbsorb=e,t){a.restore();var n=je.Color.fromKeyword(t);return n?(a.$str(t),n):void 0}a.forget()},dimension:function(){if(!a.peekNotNumeric()){var e=a.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);return e?new je.Dimension(e[1],e[2]):void 0}},unicodeDescriptor:function(){var e;if(e=a.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/))return new je.UnicodeDescriptor(e[0])},javascript:function(){var e,t=a.i;a.save();var n=a.$char(\"~\");if(a.$char(\"`\")){if(e=a.$re(/^[^`]*`/))return a.forget(),new je.JavaScript(e.substr(0,e.length-1),Boolean(n),t,i);a.restore(\"invalid javascript definition\")}else a.restore()}},variable:function(){var e;if(\"@\"===a.currentChar()&&(e=a.$re(/^(@[\\w-]+)\\s*:/)))return e[1]},variableCall:function(e){var t,n,s=a.i,o=!!e,l=e;if(a.save(),l||\"@\"===a.currentChar()&&(l=a.$re(/^(@[\\w-]+)(\\(\\s*\\))?/))){if(!(t=this.mixin.ruleLookups())&&(o&&\"()\"!==a.$str(\"()\")||\"()\"!==l[2]))return void a.restore(\"Missing '[...]' lookup in variable call\");o||(l=l[1]),t&&r.important()&&(n=!0);var u=new je.VariableCall(l,s,i);return!o&&r.end()?(a.forget(),u):(a.forget(),new je.NamespaceValue(u,t,n,s,i))}a.restore()},extend:function(e){var t,n,r,l,u,c=a.i;if(a.$str(e?\"&:extend(\":\":extend(\")){do{for(r=null,t=null;!(r=a.$re(/^(all)(?=\\s*(\\)|,))/))&&(n=this.element());)t?t.push(n):t=[n];r=r&&r[1],t||s(\"Missing target selector for :extend().\"),u=new je.Extend(new je.Selector(t),r,c,i),l?l.push(u):l=[u]}while(a.$char(\",\"));return o(/^\\)/),e&&o(/^;/),l}},extendRule:function(){return this.extend(!0)},mixin:{call:function(e,t){var n,s,o,u,c=a.currentChar(),h=!1,f=a.i;if(\".\"===c||\"#\"===c){if(a.save(),s=this.elements()){if(a.$char(\"(\")&&(o=this.args(!0).args,l(\")\"),u=!0),!1!==t&&(n=this.ruleLookups()),!0===t&&!n)return void a.restore();if(e&&!n&&!u)return void a.restore();if(!e&&r.important()&&(h=!0),e||r.end()){a.forget();var p=new je.mixin.Call(s,o,f,i,!n&&h);return n?new je.NamespaceValue(p,n,h):p}}a.restore()}},elements:function(){for(var e,t,n,r,s,o=/^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;s=a.i,t=a.$re(o);)r=new je.Element(n,t,!1,s,i),e?e.push(r):e=[r],n=a.$char(\">\");return e},args:function(e){var t,n,i,o,l,u,c,h=r.entities,f={args:null,variadic:!1},p=[],v=[],d=[],m=!0;for(a.save();;){if(e)u=r.detachedRuleset()||r.expression();else{if(a.commentStore.length=0,a.$str(\"...\")){f.variadic=!0,a.$char(\";\")&&!t&&(t=!0),(t?v:d).push({variadic:!0});break}u=h.variable()||h.property()||h.literal()||h.keyword()||this.call(!0)}if(!u||!m)break;o=null,u.throwAwayComments&&u.throwAwayComments(),l=u;var g=null;if(e?u.value&&1==u.value.length&&(g=u.value[0]):g=u,g&&(g instanceof je.Variable||g instanceof je.Property))if(a.$char(\":\")){if(p.length>0&&(t&&s(\"Cannot mix ; and , as delimiter types\"),n=!0),!(l=r.detachedRuleset()||r.expression())){if(!e)return a.restore(),f.args=[],f;s(\"could not understand value for named argument\")}o=i=g.name}else if(a.$str(\"...\")){if(!e){f.variadic=!0,a.$char(\";\")&&!t&&(t=!0),(t?v:d).push({name:u.name,variadic:!0});break}c=!0}else e||(i=o=g.name,l=null);l&&p.push(l),d.push({name:o,value:l,expand:c}),a.$char(\",\")?m=!0:((m=\";\"===a.$char(\";\"))||t)&&(n&&s(\"Cannot mix ; and , as delimiter types\"),t=!0,p.length>1&&(l=new je.Value(p)),v.push({name:i,value:l,expand:c}),i=null,p=[],n=!1)}return a.forget(),f.args=t?v:d,f},definition:function(){var e,t,n,i,s=[],l=!1;if(!(\".\"!==a.currentChar()&&\"#\"!==a.currentChar()||a.peek(/^[^{]*\\}/)))if(a.save(),t=a.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/)){e=t[1];var u=this.args(!1);if(s=u.args,l=u.variadic,!a.$char(\")\"))return void a.restore(\"Missing closing ')'\");if(a.commentStore.length=0,a.$str(\"when\")&&(i=o(r.conditions,\"expected condition\")),n=r.block())return a.forget(),new je.mixin.Definition(e,s,n,i,l);a.restore()}else a.forget()},ruleLookups:function(){var e,t=[];if(\"[\"===a.currentChar()){for(;;){if(a.save(),!(e=this.lookupValue())&&\"\"!==e){a.restore();break}t.push(e),a.forget()}return t.length>0?t:void 0}},lookupValue:function(){if(a.save(),a.$char(\"[\")){var e=a.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);if(a.$char(\"]\"))return e||\"\"===e?(a.forget(),e):void a.restore();a.restore()}else a.restore()}},entity:function(){var e=this.entities;return this.comment()||e.literal()||e.variable()||e.url()||e.property()||e.call()||e.keyword()||this.mixin.call(!0)||e.javascript()},end:function(){return a.$char(\";\")||a.peek(\"}\")},ieAlpha:function(){var e;if(a.$re(/^opacity=/i))return(e=a.$re(/^\\d+/))||(e=o(r.entities.variable,\"Could not parse alpha\"),e=\"@{\".concat(e.name.slice(1),\"}\")),l(\")\"),new je.Quoted(\"\",\"alpha(opacity=\".concat(e,\")\"))},element:function(){var e,t,n,r=a.i;if(t=this.combinator(),(e=a.$re(/^(?:\\d+\\.\\d+|\\d+)%/)||a.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/)||a.$char(\"*\")||a.$char(\"&\")||this.attribute()||a.$re(/^\\([^&()@]+\\)/)||a.$re(/^[\\.#:](?=@)/)||this.entities.variableCurly())||(a.save(),a.$char(\"(\")?(n=this.selector(!1))&&a.$char(\")\")?(e=new je.Paren(n),a.forget()):a.restore(\"Missing closing ')'\"):a.forget()),e)return new je.Element(t,e,e instanceof je.Variable,r,i)},combinator:function(){var e=a.currentChar();if(\"/\"===e){a.save();var t=a.$re(/^\\/[a-z]+\\//i);if(t)return a.forget(),new je.Combinator(t);a.restore()}if(\">\"===e||\"+\"===e||\"~\"===e||\"|\"===e||\"^\"===e){for(a.i++,\"^\"===e&&\"^\"===a.currentChar()&&(e=\"^^\",a.i++);a.isWhitespace();)a.i++;return new je.Combinator(e)}return a.isWhitespace(-1)?new je.Combinator(\" \"):new je.Combinator(null)},selector:function(e){var t,n,r,l,u,c,h,f=a.i;for(e=!1!==e;(e&&(n=this.extend())||e&&(c=a.$str(\"when\"))||(l=this.element()))&&(c?h=o(this.conditions,\"expected condition\"):h?s(\"CSS guard can only be used at the end of selector\"):n?u=u?u.concat(n):n:(u&&s(\"Extend can only be used at the end of selector\"),r=a.currentChar(),t?t.push(l):t=[l],l=null),\"{\"!==r&&\"}\"!==r&&\";\"!==r&&\",\"!==r&&\")\"!==r););if(t)return new je.Selector(t,u,h,f,i);u&&s(\"Extend must be used to extend a selector, it cannot be used on its own\")},selectors:function(){for(var e,t;(e=this.selector())&&(t?t.push(e):t=[e],a.commentStore.length=0,e.condition&&t.length>1&&s(\"Guards are only currently allowed on a single selector.\"),a.$char(\",\"));)e.condition&&s(\"Guards are only currently allowed on a single selector.\"),a.commentStore.length=0;return t},attribute:function(){if(a.$char(\"[\")){var e,t,n,i=this.entities;return(e=i.variableCurly())||(e=o(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/)),(n=a.$re(/^[|~*$^]?=/))&&(t=i.quoted()||a.$re(/^[0-9]+%/)||a.$re(/^[\\w-]+/)||i.variableCurly()),l(\"]\"),new je.Attribute(e,n,t)}},block:function(){var e;if(a.$char(\"{\")&&(e=this.primary())&&a.$char(\"}\"))return e},blockRuleset:function(){var e=this.block();return e&&(e=new je.Ruleset(null,e)),e},detachedRuleset:function(){var e,t,n;if(a.save(),!a.$re(/^[.#]\\(/)||(t=(e=this.mixin.args(!1)).args,n=e.variadic,a.$char(\")\"))){var i=this.blockRuleset();if(i)return a.forget(),t?new je.mixin.Definition(null,t,i,null,n):new je.DetachedRuleset(i);a.restore()}else a.restore()},ruleset:function(){var e,n,i;if(a.save(),t.dumpLineNumbers&&(i=u(a.i)),(e=this.selectors())&&(n=this.block())){a.forget();var r=new je.Ruleset(e,n,t.strictImports);return t.dumpLineNumbers&&(r.debugInfo=i),r}a.restore()},declaration:function(){var e,t,n,r,s,o,l=a.i,u=a.currentChar();if(\".\"!==u&&\"#\"!==u&&\"&\"!==u&&\":\"!==u)if(a.save(),e=this.variable()||this.ruleProperty()){if((o=\"string\"===typeof e)&&(t=this.detachedRuleset())&&(n=!0),a.commentStore.length=0,!t){if(s=!o&&e.length>1&&e.pop().value,t=e[0].value&&\"--\"===e[0].value.slice(0,2)?this.permissiveValue():this.anonymousValue())return a.forget(),new je.Declaration(e,t,!1,s,l,i);t||(t=this.value()),t?r=this.important():o&&(t=this.permissiveValue())}if(t&&(this.end()||n))return a.forget(),new je.Declaration(e,t,r,s,l,i);a.restore()}else a.restore()},anonymousValue:function(){var e=a.i,t=a.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);if(t)return new je.Anonymous(t[1],e)},permissiveValue:function(e){var t,n,r,o,l=e||\";\",u=a.i,c=[];function h(){var e=a.currentChar();return\"string\"===typeof l?e===l:l.test(e)}if(!h()){o=[];do{((n=this.comment())||(n=this.entity()))&&o.push(n)}while(n);if(r=h(),o.length>0){if(o=new je.Expression(o),r)return o;c.push(o),\" \"===a.prevChar()&&c.push(new je.Anonymous(\" \",u))}if(a.save(),o=a.$parseUntil(l)){if(\"string\"===typeof o&&s(\"Expected '\".concat(o,\"'\"),\"Parse\"),1===o.length&&\" \"===o[0])return a.forget(),new je.Anonymous(\"\",u);var f;for(t=0;t<o.length;t++)if(f=o[t],Array.isArray(f))c.push(new je.Quoted(f[0],f[1],!0,u,i));else{t===o.length-1&&(f=f.trim());var p=new je.Quoted(\"'\",f,!0,u,i);p.variableRegex=/@([\\w-]+)/g,p.propRegex=/\\$([\\w-]+)/g,c.push(p)}return a.forget(),new je.Expression(c,!0)}a.restore()}},import:function(){var e,t,n=a.i,r=a.$re(/^@import?\\s+/);if(r){var o=(r?this.importOptions():null)||{};if(e=this.entities.quoted()||this.entities.url())return t=this.mediaFeatures(),a.$char(\";\")||(a.i=n,s(\"missing semi-colon or unrecognised media features on import\")),t=t&&new je.Value(t),new je.Import(e,t,o,n,i);a.i=n,s(\"malformed import statement\")}},importOptions:function(){var e,t,n,i={};if(!a.$char(\"(\"))return null;do{if(e=this.importOption()){switch(n=!0,t=e){case\"css\":t=\"less\",n=!1;break;case\"once\":t=\"multiple\",n=!1}if(i[t]=n,!a.$char(\",\"))break}}while(e);return l(\")\"),i},importOption:function(){var e=a.$re(/^(less|css|multiple|once|inline|reference|optional)/);if(e)return e[1]},mediaFeature:function(){var e,t,n=this.entities,r=[];a.save();do{(e=n.keyword()||n.variable()||n.mixinLookup())?r.push(e):a.$char(\"(\")&&(t=this.property(),e=this.value(),a.$char(\")\")?t&&e?r.push(new je.Paren(new je.Declaration(t,e,null,null,a.i,i,!0))):e?r.push(new je.Paren(e)):s(\"badly formed media feature definition\"):s(\"Missing closing ')'\",\"Parse\"))}while(e);if(a.forget(),r.length>0)return new je.Expression(r)},mediaFeatures:function(){var e,t=this.entities,n=[];do{if(e=this.mediaFeature()){if(n.push(e),!a.$char(\",\"))break}else if((e=t.variable()||t.mixinLookup())&&(n.push(e),!a.$char(\",\")))break}while(e);return n.length>0?n:null},media:function(){var e,n,r,o,l=a.i;if(t.dumpLineNumbers&&(o=u(l)),a.save(),a.$str(\"@media\"))return e=this.mediaFeatures(),(n=this.block())||s(\"media definitions require block statements after any features\"),a.forget(),r=new je.Media(n,e,l,i),t.dumpLineNumbers&&(r.debugInfo=o),r;a.restore()},plugin:function(){var e,t,n,r=a.i;if(a.$re(/^@plugin?\\s+/)){if(n=(t=this.pluginArgs())?{pluginArgs:t,isPlugin:!0}:{isPlugin:!0},e=this.entities.quoted()||this.entities.url())return a.$char(\";\")||(a.i=r,s(\"missing semi-colon on @plugin\")),new je.Import(e,null,n,r,i);a.i=r,s(\"malformed @plugin statement\")}},pluginArgs:function(){if(a.save(),!a.$char(\"(\"))return a.restore(),null;var e=a.$re(/^\\s*([^\\);]+)\\)\\s*/);return e[1]?(a.forget(),e[1].trim()):(a.restore(),null)},atrule:function(){var e,n,r,o,l,c,h,f=a.i,p=!0,v=!0;if(\"@\"===a.currentChar()){if(n=this.import()||this.plugin()||this.media())return n;if(a.save(),e=a.$re(/^@[a-z-]+/)){switch(o=e,\"-\"==e.charAt(1)&&e.indexOf(\"-\",2)>0&&(o=\"@\".concat(e.slice(e.indexOf(\"-\",2)+1))),o){case\"@charset\":l=!0,p=!1;break;case\"@namespace\":c=!0,p=!1;break;case\"@keyframes\":case\"@counter-style\":l=!0;break;case\"@document\":case\"@supports\":h=!0,v=!1;break;default:h=!0}if(a.commentStore.length=0,l?(n=this.entity())||s(\"expected \".concat(e,\" identifier\")):c?(n=this.expression())||s(\"expected \".concat(e,\" expression\")):h&&(n=this.permissiveValue(/^[{;]/),p=\"{\"===a.currentChar(),n?n.value||(n=null):p||\";\"===a.currentChar()||s(\"\".concat(e,\" rule is missing block or ending semi-colon\"))),p&&(r=this.blockRuleset()),r||!p&&n&&a.$char(\";\"))return a.forget(),new je.AtRule(e,n,r,f,i,t.dumpLineNumbers?u(f):null,v);a.restore(\"at-rule options not recognised\")}}},value:function(){var e,t=[],n=a.i;do{if((e=this.expression())&&(t.push(e),!a.$char(\",\")))break}while(e);if(t.length>0)return new je.Value(t,n)},important:function(){if(\"!\"===a.currentChar())return a.$re(/^! *important/)},sub:function(){var e,t;if(a.save(),a.$char(\"(\"))return(e=this.addition())&&a.$char(\")\")?(a.forget(),(t=new je.Expression([e])).parens=!0,t):void a.restore(\"Expected ')'\");a.restore()},multiplication:function(){var e,t,n,i,r;if(e=this.operand()){for(r=a.isWhitespace(-1);!a.peek(/^\\/[*\\/]/);){if(a.save(),!(n=a.$char(\"/\")||a.$char(\"*\")||a.$str(\"./\"))){a.forget();break}if(!(t=this.operand())){a.restore();break}a.forget(),e.parensInOp=!0,t.parensInOp=!0,i=new je.Operation(n,[i||e,t],r),r=a.isWhitespace(-1)}return i||e}},addition:function(){var e,t,n,i,r;if(e=this.multiplication()){for(r=a.isWhitespace(-1);(n=a.$re(/^[-+]\\s+/)||!r&&(a.$char(\"+\")||a.$char(\"-\")))&&(t=this.multiplication());)e.parensInOp=!0,t.parensInOp=!0,i=new je.Operation(n,[i||e,t],r),r=a.isWhitespace(-1);return i||e}},conditions:function(){var e,t,n,i=a.i;if(e=this.condition(!0)){for(;a.peek(/^,\\s*(not\\s*)?\\(/)&&a.$char(\",\")&&(t=this.condition(!0));)n=new je.Condition(\"or\",n||e,t,i);return n||e}},condition:function(e){var t,n,i;function r(){return a.$str(\"or\")}if(t=this.conditionAnd(e)){if(n=r()){if(!(i=this.condition(e)))return;t=new je.Condition(n,t,i)}return t}},conditionAnd:function(e){var t,n,i,r=this;function s(){var t=r.negatedCondition(e)||r.parenthesisCondition(e);return t||e?t:r.atomicCondition(e)}function o(){return a.$str(\"and\")}if(t=s()){if(n=o()){if(!(i=this.conditionAnd(e)))return;t=new je.Condition(n,t,i)}return t}},negatedCondition:function(e){if(a.$str(\"not\")){var t=this.parenthesisCondition(e);return t&&(t.negate=!t.negate),t}},parenthesisCondition:function(e){function t(t){var n;if(a.save(),n=t.condition(e)){if(a.$char(\")\"))return a.forget(),n;a.restore()}else a.restore()}var n;if(a.save(),a.$str(\"(\")){if(n=t(this))return a.forget(),n;if(n=this.atomicCondition(e)){if(a.$char(\")\"))return a.forget(),n;a.restore(\"expected ')' got '\".concat(a.currentChar(),\"'\"))}else a.restore()}else a.restore()},atomicCondition:function(e){var t,n,i,r,o=this.entities,l=a.i;function u(){return this.addition()||o.keyword()||o.quoted()||o.mixinLookup()}if(t=(u=u.bind(this))())return a.$char(\">\")?r=a.$char(\"=\")?\">=\":\">\":a.$char(\"<\")?r=a.$char(\"=\")?\"<=\":\"<\":a.$char(\"=\")&&(r=a.$char(\">\")?\"=>\":a.$char(\"<\")?\"=<\":\"=\"),r?(n=u())?i=new je.Condition(r,t,n,l,!1):s(\"expected expression\"):i=new je.Condition(\"=\",t,new je.Keyword(\"true\"),l,!1),i},operand:function(){var e,t=this.entities;a.peek(/^-[@\\$\\(]/)&&(e=a.$char(\"-\"));var n=this.sub()||t.dimension()||t.color()||t.variable()||t.property()||t.call()||t.quoted(!0)||t.colorKeyword()||t.mixinLookup();return e&&(n.parensInOp=!0,n=new je.Negative(n)),n},expression:function(){var e,t,n=[],i=a.i;do{(e=this.comment())?n.push(e):(e=this.addition()||this.entity())&&(n.push(e),a.peek(/^\\/[\\/*]/)||(t=a.$char(\"/\"))&&n.push(new je.Anonymous(t,i)))}while(e);if(n.length>0)return new je.Expression(n)},property:function(){var e=a.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);if(e)return e[1]},ruleProperty:function(){var e,t,n=[],r=[];a.save();var s=a.$re(/^([_a-zA-Z0-9-]+)\\s*:/);if(s)return n=[new je.Keyword(s[1])],a.forget(),n;function o(e){var t=a.i,i=a.$re(e);if(i)return r.push(t),n.push(i[1])}for(o(/^(\\*?)/);o(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/););if(n.length>1&&o(/^((?:\\+_|\\+)?)\\s*:/)){for(a.forget(),\"\"===n[0]&&(n.shift(),r.shift()),t=0;t<n.length;t++)e=n[t],n[t]=\"@\"!==e.charAt(0)&&\"$\"!==e.charAt(0)?new je.Keyword(e):\"@\"===e.charAt(0)?new je.Variable(\"@\".concat(e.slice(2,-1)),r[t],i):new je.Property(\"$\".concat(e.slice(2,-1)),r[t],i);return n}a.restore()}}}};function ot(e){return e?H.True:H.False}function lt(e,t,n){return e?t:n||new Q}st.serializeVars=function(e){var t=\"\";for(var n in e)if(Object.hasOwnProperty.call(e,n)){var i=e[n];t+=\"\".concat((\"@\"===n[0]?\"\":\"@\")+n,\": \").concat(i).concat(\";\"===String(i).slice(-1)?\"\":\";\")}return t};var ut,ct={boolean:ot,if:lt};function ht(e){return Math.min(1,Math.max(0,e))}function ft(e,t){var n=ut.hsla(t.h,t.s,t.l,t.a);if(n)return e.value&&/^(rgb|hsl)/.test(e.value)?n.value=e.value:n.value=\"rgb\",n}function pt(e){if(e.toHSL)return e.toHSL();throw new Error(\"Argument cannot be evaluated to a color\")}function vt(e){if(e.toHSV)return e.toHSV();throw new Error(\"Argument cannot be evaluated to a color\")}function dt(e){if(e instanceof ve)return parseFloat(e.unit.is(\"%\")?e.value/100:e.value);if(\"number\"===typeof e)return e;throw{type:\"Argument\",message:\"color functions take numbers as parameters\"}}function mt(e,t){return e instanceof ve&&e.unit.is(\"%\")?parseFloat(e.value*t/100):dt(e)}var gt=ut={rgb:function(e,t,n){var i=ut.rgba(e,t,n,1);if(i)return i.value=\"rgb\",i},rgba:function(e,t,n,i){try{if(e instanceof C)return i=t?dt(t):e.alpha,new C(e.rgb,i,\"rgba\");var r=[e,t,n].map((function(e){return mt(e,255)}));return i=dt(i),new C(r,i,\"rgba\")}catch(a){}},hsl:function(e,t,n){var i=ut.hsla(e,t,n,1);if(i)return i.value=\"hsl\",i},hsla:function(e,t,n,i){try{var r,a,s=function(e){return 6*(e=e<0?e+1:e>1?e-1:e)<1?r+(a-r)*e*6:2*e<1?a:3*e<2?r+(a-r)*(2/3-e)*6:r};if(e instanceof C)return i=t?dt(t):e.alpha,new C(e.rgb,i,\"hsla\");e=dt(e)%360/360,t=ht(dt(t)),n=ht(dt(n)),i=ht(dt(i)),r=2*n-(a=n<=.5?n*(t+1):n+t-n*t);var o=[255*s(e+1/3),255*s(e),255*s(e-1/3)];return i=dt(i),new C(o,i,\"hsla\")}catch(l){}},hsv:function(e,t,n){return ut.hsva(e,t,n,1)},hsva:function(e,t,n,i){var r,a;e=dt(e)%360/360*360,t=dt(t),n=dt(n),i=dt(i);var s=[n,n*(1-t),n*(1-(a=e/60-(r=Math.floor(e/60%6)))*t),n*(1-(1-a)*t)],o=[[0,3,1],[2,0,1],[1,0,3],[1,2,0],[3,1,0],[0,1,2]];return ut.rgba(255*s[o[r][0]],255*s[o[r][1]],255*s[o[r][2]],i)},hue:function(e){return new ve(pt(e).h)},saturation:function(e){return new ve(100*pt(e).s,\"%\")},lightness:function(e){return new ve(100*pt(e).l,\"%\")},hsvhue:function(e){return new ve(vt(e).h)},hsvsaturation:function(e){return new ve(100*vt(e).s,\"%\")},hsvvalue:function(e){return new ve(100*vt(e).v,\"%\")},red:function(e){return new ve(e.rgb[0])},green:function(e){return new ve(e.rgb[1])},blue:function(e){return new ve(e.rgb[2])},alpha:function(e){return new ve(pt(e).a)},luma:function(e){return new ve(e.luma()*e.alpha*100,\"%\")},luminance:function(e){var t=.2126*e.rgb[0]/255+.7152*e.rgb[1]/255+.0722*e.rgb[2]/255;return new ve(t*e.alpha*100,\"%\")},saturate:function(e,t,n){if(!e.rgb)return null;var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.s+=i.s*t.value/100:i.s+=t.value/100,i.s=ht(i.s),ft(e,i)},desaturate:function(e,t,n){var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.s-=i.s*t.value/100:i.s-=t.value/100,i.s=ht(i.s),ft(e,i)},lighten:function(e,t,n){var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.l+=i.l*t.value/100:i.l+=t.value/100,i.l=ht(i.l),ft(e,i)},darken:function(e,t,n){var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.l-=i.l*t.value/100:i.l-=t.value/100,i.l=ht(i.l),ft(e,i)},fadein:function(e,t,n){var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.a+=i.a*t.value/100:i.a+=t.value/100,i.a=ht(i.a),ft(e,i)},fadeout:function(e,t,n){var i=pt(e);return\"undefined\"!==typeof n&&\"relative\"===n.value?i.a-=i.a*t.value/100:i.a-=t.value/100,i.a=ht(i.a),ft(e,i)},fade:function(e,t){var n=pt(e);return n.a=t.value/100,n.a=ht(n.a),ft(e,n)},spin:function(e,t){var n=pt(e),i=(n.h+t.value)%360;return n.h=i<0?360+i:i,ft(e,n)},mix:function(e,t,n){n||(n=new ve(50));var i=n.value/100,r=2*i-1,a=pt(e).a-pt(t).a,s=((r*a==-1?r:(r+a)/(1+r*a))+1)/2,o=1-s,l=[e.rgb[0]*s+t.rgb[0]*o,e.rgb[1]*s+t.rgb[1]*o,e.rgb[2]*s+t.rgb[2]*o],u=e.alpha*i+t.alpha*(1-i);return new C(l,u)},greyscale:function(e){return ut.desaturate(e,new ve(100))},contrast:function(e,t,n,i){if(!e.rgb)return null;if(\"undefined\"===typeof n&&(n=ut.rgba(255,255,255,1)),\"undefined\"===typeof t&&(t=ut.rgba(0,0,0,1)),t.luma()>n.luma()){var r=n;n=t,t=r}return i=\"undefined\"===typeof i?.43:dt(i),e.luma()<i?n:t},argb:function(e){return new Q(e.toARGB())},color:function(e){if(e instanceof Ie&&/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(e.value)){var t=e.value.slice(1);return new C(t,void 0,\"#\".concat(t))}if(e instanceof C||(e=C.fromKeyword(e.value)))return e.value=void 0,e;throw{type:\"Argument\",message:\"argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF\"}},tint:function(e,t){return ut.mix(ut.rgb(255,255,255),e,t)},shade:function(e,t){return ut.mix(ut.rgb(0,0,0),e,t)}};function yt(e,t,n){var i,r,a,s,o=t.alpha,l=n.alpha,u=[];a=l+o*(1-l);for(var c=0;c<3;c++)s=e(i=t.rgb[c]/255,r=n.rgb[c]/255),a&&(s=(l*r+o*(i-l*(i+r-s)))/a),u[c]=255*s;return new C(u,a)}var bt={multiply:function(e,t){return e*t},screen:function(e,t){return e+t-e*t},overlay:function(e,t){return(e*=2)<=1?bt.multiply(e,t):bt.screen(e-1,t)},softlight:function(e,t){var n=1,i=e;return t>.5&&(i=1,n=e>.25?Math.sqrt(e):((16*e-12)*e+4)*e),e-(1-2*t)*i*(n-e)},hardlight:function(e,t){return bt.overlay(t,e)},difference:function(e,t){return Math.abs(e-t)},exclusion:function(e,t){return e+t-2*e*t},average:function(e,t){return(e+t)/2},negation:function(e,t){return 1-Math.abs(e+t-1)}};for(var wt in bt)bt.hasOwnProperty(wt)&&(yt[wt]=yt.bind(null,bt[wt]));var kt=function(e){var t=function(e,t){return new Ce(t,e.index,e.currentFileInfo).eval(e.context)};return{\"data-uri\":function(n,i){i||(i=n,n=null);var r=n&&n.value,a=i.value,s=this.currentFileInfo,o=s.rewriteUrls?s.currentDirectory:s.entryPath,l=a.indexOf(\"#\"),u=\"\";-1!==l&&(u=a.slice(l),a=a.slice(0,l));var c=N(this.context);c.rawBuffer=!0;var h=e.getFileManager(a,o,c,e,!0);if(!h)return t(this,i);var f=!1;if(n)f=/;base64$/.test(r);else{if(\"image/svg+xml\"===(r=e.mimeLookup(a)))f=!1;else{var p=e.charsetLookup(r);f=[\"US-ASCII\",\"UTF-8\"].indexOf(p)<0}f&&(r+=\";base64\")}var v=h.loadFileSync(a,o,c,e);if(!v.contents)return Be.warn(\"Skipped data-uri embedding of \".concat(a,\" because file not found\")),t(this,i||n);var d=v.contents;if(f&&!e.encodeBase64)return t(this,i);d=f?e.encodeBase64(d):encodeURIComponent(d);var m=\"data:\".concat(r,\",\").concat(d).concat(u);return new Ce(new Ie('\"'.concat(m,'\"'),m,!1,this.index,this.currentFileInfo),this.index,this.currentFileInfo)}}},xt=function(e){return Array.isArray(e.value)?e.value:Array(e)},St={_SELF:function(e){return e},extract:function(e,t){return t=t.value-1,xt(e)[t]},length:function(e){return new ve(xt(e).length)},range:function(e,t,n){var i,r,a=1,s=[];t?(r=t,i=e.value,n&&(a=n.value)):(i=1,r=e);for(var o=i;o<=r.value;o+=a)s.push(new ve(o,r.unit));return new ye(s)},each:function(e,t){var n,i,r=[];i=!e.value||e instanceof Ie?e.ruleset?e.ruleset.rules:e.rules?e.rules:Array.isArray(e)?e:[e]:Array.isArray(e.value)?e.value:[e.value];var a=\"@value\",s=\"@key\",o=\"@index\";t.params?(a=t.params[0]&&t.params[0].name,s=t.params[1]&&t.params[1].name,o=t.params[2]&&t.params[2].name,t=t.rules):t=t.ruleset;for(var l=0;l<i.length;l++){var u=void 0,c=void 0,h=i[l];h instanceof Z?(u=\"string\"===typeof h.name?h.name:h.name[0].value,c=h.value):(u=new ve(l+1),c=h),h instanceof ee||(n=t.rules.slice(0),a&&n.push(new Z(a,c,!1,!1,this.index,this.currentFileInfo)),o&&n.push(new Z(o,new ve(l+1),!1,!1,this.index,this.currentFileInfo)),s&&n.push(new Z(s,u,!1,!1,this.index,this.currentFileInfo)),r.push(new ce([new J([new R(\"\",\"&\")])],n,t.strictImports,t.visibilityInfo())))}return new ce([new J([new R(\"\",\"&\")])],r,t.strictImports,t.visibilityInfo()).eval(this.context)}},It=function(e,t,n){if(!(n instanceof ve))throw{type:\"Argument\",message:\"argument must be a number\"};return null==t?t=n.unit:n=n.unify(),new ve(e(parseFloat(n.value)),t)},Ct={ceil:null,floor:null,sqrt:null,abs:null,tan:\"\",sin:\"\",cos:\"\",atan:\"rad\",asin:\"rad\",acos:\"rad\"};for(var _t in Ct)Ct.hasOwnProperty(_t)&&(Ct[_t]=It.bind(null,Math[_t],Ct[_t]));Ct.round=function(e,t){var n=\"undefined\"===typeof t?0:t.value;return It((function(e){return e.toFixed(n)}),null,e)};var At,Mt=function(e,t){switch((t=Array.prototype.slice.call(t)).length){case 0:throw{type:\"Argument\",message:\"one or more arguments required\"}}var n,i,r,a,s,o,l,u,c=[],h={};for(n=0;n<t.length;n++)if((r=t[n])instanceof ve)if(l=\"\"!==(o=\"\"===(a=\"\"===r.unit.toString()&&void 0!==u?new ve(r.value,u).unify():r.unify()).unit.toString()&&void 0!==l?l:a.unit.toString())&&void 0===l||\"\"!==o&&\"\"===c[0].unify().unit.toString()?o:l,u=\"\"!==o&&void 0===u?r.unit.toString():u,void 0!==(i=void 0!==h[\"\"]&&\"\"!==o&&o===l?h[\"\"]:h[o]))s=\"\"===c[i].unit.toString()&&void 0!==u?new ve(c[i].value,u).unify():c[i].unify(),(e&&a.value<s.value||!e&&a.value>s.value)&&(c[i]=r);else{if(void 0!==l&&o!==l)throw{type:\"Argument\",message:\"incompatible types\"};h[o]=c.length,c.push(r)}else Array.isArray(t[n].value)&&Array.prototype.push.apply(t,Array.prototype.slice.call(t[n].value));return 1==c.length?c[0]:(t=c.map((function(e){return e.toCSS(this.context)})).join(this.context.compress?\",\":\", \"),new Q(\"\".concat(e?\"min\":\"max\",\"(\").concat(t,\")\")))},Pt={min:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Mt(!0,t)},max:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Mt(!1,t)},convert:function(e,t){return e.convertTo(t.value)},pi:function(){return new ve(Math.PI)},mod:function(e,t){return new ve(e.value%t.value,e.unit)},pow:function(e,t){if(\"number\"===typeof e&&\"number\"===typeof t)e=new ve(e),t=new ve(t);else if(!(e instanceof ve)||!(t instanceof ve))throw{type:\"Argument\",message:\"arguments must be numbers\"};return new ve(Math.pow(e.value,t.value),e.unit)},percentage:function(e){return It((function(e){return 100*e}),\"%\",e)}},Et={e:function(e){return new Ie('\"',e instanceof Pe?e.evaluated:e.value,!0)},escape:function(e){return new Q(encodeURI(e.value).replace(/=/g,\"%3D\").replace(/:/g,\"%3A\").replace(/#/g,\"%23\").replace(/;/g,\"%3B\").replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"))},replace:function(e,t,n,i){var r=e.value;return n=\"Quoted\"===n.type?n.value:n.toCSS(),r=r.replace(new RegExp(t.value,i?i.value:\"\"),n),new Ie(e.quote||\"\",r,e.escaped)},\"%\":function(e){for(var t=Array.prototype.slice.call(arguments,1),n=e.value,i=function(e){n=n.replace(/%[sda]/i,(function(n){var i=\"Quoted\"===t[e].type&&n.match(/s/i)?t[e].value:t[e].toCSS();return n.match(/[A-Z]$/)?encodeURIComponent(i):i}))},r=0;r<t.length;r++)i(r);return n=n.replace(/%%/g,\"%\"),new Ie(e.quote||\"\",n,e.escaped)}},Rt=function(e){return{\"svg-gradient\":function(e){var t,n,i,r,a,s,o,l,u=\"linear\",c='x=\"0\" y=\"0\" width=\"1\" height=\"1\"',h={compress:!1},f=e.toCSS(h);function p(){throw{type:\"Argument\",message:\"svg-gradient expects direction, start_color [start_position], [color position,]..., end_color [end_position] or direction, color list\"}}switch(2==arguments.length?(arguments[1].value.length<2&&p(),t=arguments[1].value):arguments.length<3?p():t=Array.prototype.slice.call(arguments,1),f){case\"to bottom\":n='x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';break;case\"to right\":n='x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';break;case\"to bottom right\":n='x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';break;case\"to top right\":n='x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';break;case\"ellipse\":case\"ellipse at center\":u=\"radial\",n='cx=\"50%\" cy=\"50%\" r=\"75%\"',c='x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';break;default:throw{type:\"Argument\",message:\"svg-gradient direction must be 'to bottom', 'to right', 'to bottom right', 'to top right' or 'ellipse at center'\"}}for(i='<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\"><'.concat(u,'Gradient id=\"g\" ').concat(n,\">\"),r=0;r<t.length;r+=1)t[r]instanceof ye?(a=t[r].value[0],s=t[r].value[1]):(a=t[r],s=void 0),a instanceof C&&((0===r||r+1===t.length)&&void 0===s||s instanceof ve)||p(),o=s?s.toCSS(h):0===r?\"0%\":\"100%\",l=a.alpha,i+='<stop offset=\"'.concat(o,'\" stop-color=\"').concat(a.toRGB(),'\"').concat(l<1?' stop-opacity=\"'.concat(l,'\"'):\"\",\"/>\");return i+=\"</\".concat(u,\"Gradient><rect \").concat(c,' fill=\"url(#g)\" /></svg>'),i=encodeURIComponent(i),i=\"data:image/svg+xml,\".concat(i),new Ce(new Ie(\"'\".concat(i,\"'\"),i,!1,this.index,this.currentFileInfo),this.index,this.currentFileInfo)}}},Ot=function(e,t){return e instanceof t?H.True:H.False},Ft=function(e,t){if(void 0===t)throw{type:\"Argument\",message:\"missing the required second argument to isunit.\"};if(\"string\"!==typeof(t=\"string\"===typeof t.value?t.value:t))throw{type:\"Argument\",message:\"Second argument to isunit should be a unit or a string.\"};return e instanceof ve&&e.unit.is(t)?H.True:H.False},Vt={isruleset:function(e){return Ot(e,fe)},iscolor:function(e){return Ot(e,C)},isnumber:function(e){return Ot(e,ve)},isstring:function(e){return Ot(e,Ie)},iskeyword:function(e){return Ot(e,H)},isurl:function(e){return Ot(e,Ce)},ispixel:function(e){return Ft(e,\"px\")},ispercentage:function(e){return Ft(e,\"%\")},isem:function(e){return Ft(e,\"em\")},isunit:Ft,unit:function(e,t){if(!(e instanceof ve))throw{type:\"Argument\",message:\"the first argument to unit must be a number\".concat(e instanceof me?\". Have you forgotten parenthesis?\":\"\")};return t=t?t instanceof H?t.value:t.toCSS():\"\",new ve(e.value,t)},\"get-unit\":function(e){return new Q(e.unit)}},$t=function(e){var t={functionRegistry:le,functionCaller:be};return le.addMultiple(ct),le.add(\"default\",ue.eval.bind(ue)),le.addMultiple(gt),le.addMultiple(yt),le.addMultiple(kt(e)),le.addMultiple(St),le.addMultiple(Ct),le.addMultiple(Pt),le.addMultiple(Et),le.addMultiple(Rt()),le.addMultiple(Vt),t},Lt=function(e){return function(){function t(n){o(this,t),this._css=[],this._rootNode=n.rootNode,this._contentsMap=n.contentsMap,this._contentsIgnoredCharsMap=n.contentsIgnoredCharsMap,n.sourceMapFilename&&(this._sourceMapFilename=n.sourceMapFilename.replace(/\\\\/g,\"/\")),this._outputFilename=n.outputFilename,this.sourceMapURL=n.sourceMapURL,n.sourceMapBasepath&&(this._sourceMapBasepath=n.sourceMapBasepath.replace(/\\\\/g,\"/\")),n.sourceMapRootpath?(this._sourceMapRootpath=n.sourceMapRootpath.replace(/\\\\/g,\"/\"),\"/\"!==this._sourceMapRootpath.charAt(this._sourceMapRootpath.length-1)&&(this._sourceMapRootpath+=\"/\")):this._sourceMapRootpath=\"\",this._outputSourceFiles=n.outputSourceFiles,this._sourceMapGeneratorConstructor=e.getSourceMapGenerator(),this._lineNumber=0,this._column=0}return u(t,[{key:\"removeBasepath\",value:function(e){return this._sourceMapBasepath&&0===e.indexOf(this._sourceMapBasepath)&&(\"\\\\\"!==(e=e.substring(this._sourceMapBasepath.length)).charAt(0)&&\"/\"!==e.charAt(0)||(e=e.substring(1))),e}},{key:\"normalizeFilename\",value:function(e){return e=e.replace(/\\\\/g,\"/\"),e=this.removeBasepath(e),(this._sourceMapRootpath||\"\")+e}},{key:\"add\",value:function(e,t,n,i){if(e){var r,a,s,o,l;if(t&&t.filename){var u=this._contentsMap[t.filename];if(this._contentsIgnoredCharsMap[t.filename]&&((n-=this._contentsIgnoredCharsMap[t.filename])<0&&(n=0),u=u.slice(this._contentsIgnoredCharsMap[t.filename])),void 0===u)return;o=(a=(u=u.substring(0,n)).split(\"\\n\"))[a.length-1]}if(s=(r=e.split(\"\\n\"))[r.length-1],t&&t.filename)if(i)for(l=0;l<r.length;l++)this._sourceMapGenerator.addMapping({generated:{line:this._lineNumber+l+1,column:0===l?this._column:0},original:{line:a.length+l,column:0===l?o.length:0},source:this.normalizeFilename(t.filename)});else this._sourceMapGenerator.addMapping({generated:{line:this._lineNumber+1,column:this._column},original:{line:a.length,column:o.length},source:this.normalizeFilename(t.filename)});1===r.length?this._column+=s.length:(this._lineNumber+=r.length-1,this._column=s.length),this._css.push(e)}}},{key:\"isEmpty\",value:function(){return 0===this._css.length}},{key:\"toCSS\",value:function(e){if(this._sourceMapGenerator=new this._sourceMapGeneratorConstructor({file:this._outputFilename,sourceRoot:null}),this._outputSourceFiles)for(var t in this._contentsMap)if(this._contentsMap.hasOwnProperty(t)){var n=this._contentsMap[t];this._contentsIgnoredCharsMap[t]&&(n=n.slice(this._contentsIgnoredCharsMap[t])),this._sourceMapGenerator.setSourceContent(this.normalizeFilename(t),n)}if(this._rootNode.genCSS(e,this),this._css.length>0){var i,r=JSON.stringify(this._sourceMapGenerator.toJSON());this.sourceMapURL?i=this.sourceMapURL:this._sourceMapFilename&&(i=this._sourceMapFilename),this.sourceMapURL=i,this.sourceMap=r}return this._css.join(\"\")}}]),t}()},Dt=function(e,t){return function(){function n(e){o(this,n),this.options=e}return u(n,[{key:\"toCSS\",value:function(t,n,i){var r=new e({contentsIgnoredCharsMap:i.contentsIgnoredChars,rootNode:t,contentsMap:i.contents,sourceMapFilename:this.options.sourceMapFilename,sourceMapURL:this.options.sourceMapURL,outputFilename:this.options.sourceMapOutputFilename,sourceMapBasepath:this.options.sourceMapBasepath,sourceMapRootpath:this.options.sourceMapRootpath,outputSourceFiles:this.options.outputSourceFiles,sourceMapGenerator:this.options.sourceMapGenerator,sourceMapFileInline:this.options.sourceMapFileInline}),a=r.toCSS(n);return this.sourceMap=r.sourceMap,this.sourceMapURL=r.sourceMapURL,this.options.sourceMapInputFilename&&(this.sourceMapInputFilename=r.normalizeFilename(this.options.sourceMapInputFilename)),void 0!==this.options.sourceMapBasepath&&void 0!==this.sourceMapURL&&(this.sourceMapURL=r.removeBasepath(this.sourceMapURL)),a+this.getCSSAppendage()}},{key:\"getCSSAppendage\",value:function(){var e=this.sourceMapURL;if(this.options.sourceMapFileInline){if(void 0===this.sourceMap)return\"\";e=\"data:application/json;base64,\".concat(t.encodeBase64(this.sourceMap))}return e?\"/*# sourceMappingURL=\".concat(e,\" */\"):\"\"}},{key:\"getExternalSourceMap\",value:function(){return this.sourceMap}},{key:\"setExternalSourceMap\",value:function(e){this.sourceMap=e}},{key:\"isInline\",value:function(){return this.options.sourceMapFileInline}},{key:\"getSourceMapURL\",value:function(){return this.sourceMapURL}},{key:\"getOutputFilename\",value:function(){return this.options.sourceMapOutputFilename}},{key:\"getInputFilename\",value:function(){return this.sourceMapInputFilename}}]),n}()},Nt=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=n.variables,r=new te.Eval(n);\"object\"!==s(i)||Array.isArray(i)||(i=Object.keys(i).map((function(e){var t=i[e];return t instanceof je.Value||(t instanceof je.Expression||(t=new je.Expression([t])),t=new je.Value([t])),new je.Declaration(\"@\".concat(e),t,!1,null,0)})),r.frames=[new je.Ruleset(null,i)]);var a,o,l=[new it.JoinSelectorVisitor,new it.MarkVisibleSelectorsVisitor(!0),new it.ExtendVisitor,new it.ToCSSVisitor({compress:Boolean(n.compress)})],u=[];if(n.pluginManager){o=n.pluginManager.visitor();for(var c=0;c<2;c++)for(o.first();a=o.get();)a.isPreEvalVisitor?0!==c&&-1!==u.indexOf(a)||(u.push(a),a.run(e)):0!==c&&-1!==l.indexOf(a)||(a.isPreVisitor?l.unshift(a):l.push(a))}for(t=e.eval(r),c=0;c<l.length;c++)l[c].run(t);if(n.pluginManager)for(o.first();a=o.get();)-1===l.indexOf(a)&&-1===u.indexOf(a)&&a.run(t);return t},jt=function(e){return function(){function t(e,n){o(this,t),this.root=e,this.imports=n}return u(t,[{key:\"toCSS\",value:function(t){var n,i,r={};try{n=Nt(this.root,t)}catch(c){throw new z(c,this.imports)}try{var a=Boolean(t.compress);a&&Be.warn(\"The compress option has been deprecated. We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.\");var s={compress:a,dumpLineNumbers:t.dumpLineNumbers,strictUnits:Boolean(t.strictUnits),numPrecision:8};t.sourceMap?(i=new e(t.sourceMap),r.css=i.toCSS(n,s,this.imports)):r.css=n.toCSS(s)}catch(c){throw new z(c,this.imports)}if(t.pluginManager)for(var o=t.pluginManager.getPostProcessors(),l=0;l<o.length;l++)r.css=o[l].process(r.css,{sourceMap:i,options:t,imports:this.imports});for(var u in t.sourceMap&&(r.map=i.getExternalSourceMap()),r.imports=[],this.imports.files)this.imports.files.hasOwnProperty(u)&&u!==this.imports.rootFilename&&r.imports.push(u);return r}}]),t}()},Bt=function(e){return function(){function t(e,n,i){o(this,t),this.less=e,this.rootFilename=i.filename,this.paths=n.paths||[],this.contents={},this.contentsIgnoredChars={},this.mime=n.mime,this.error=null,this.context=n,this.queue=[],this.files={}}return u(t,[{key:\"push\",value:function(t,n,i,r,a){var s=this,o=this.context.pluginManager.Loader;this.queue.push(t);var l=function(e,n,i){s.queue.splice(s.queue.indexOf(t),1);var o=i===s.rootFilename;r.optional&&e?(a(null,{rules:[]},!1,null),Be.info(\"The file \".concat(i,\" was skipped because it was not found and the import was marked optional.\"))):(s.files[i]||r.inline||(s.files[i]={root:n,options:r}),e&&!s.error&&(s.error=e),a(e,n,o,i))},u={rewriteUrls:this.context.rewriteUrls,entryPath:i.entryPath,rootpath:i.rootpath,rootFilename:i.rootFilename},c=e.getFileManager(t,i.currentDirectory,this.context,e);if(c){var h,f=function(e){var t,n=e.filename,a=e.contents.replace(/^\\uFEFF/,\"\");u.currentDirectory=c.getPath(n),u.rewriteUrls&&(u.rootpath=c.join(s.context.rootpath||\"\",c.pathDiff(u.currentDirectory,u.entryPath)),!c.isPathAbsolute(u.rootpath)&&c.alwaysMakePathsAbsolute()&&(u.rootpath=c.join(u.entryPath,u.rootpath))),u.filename=n;var h=new te.Parse(s.context);h.processImports=!1,s.contents[n]=a,(i.reference||r.reference)&&(u.reference=!0),r.isPlugin?(t=o.evalPlugin(a,h,s,r.pluginArgs,u))instanceof z?l(t,null,n):l(null,t,n):r.inline?l(null,a,n):!s.files[n]||s.files[n].options.multiple||r.multiple?new st(h,s,u).parse(a,(function(e,t){l(e,t,n)})):l(null,s.files[n].root,n)},p=N(this.context);n&&(p.ext=r.isPlugin?\".js\":\".less\"),r.isPlugin?(p.mime=\"application/javascript\",h=o.loadPlugin(t,i.currentDirectory,p,e,c)):h=c.loadFile(t,i.currentDirectory,p,e,(function(e,t){e?l(e):f(t)})),h&&h.then(f,l)}else l({message:\"Could not find a file-manager for \".concat(t)})}}]),t}()},Ut=function(e,t,n){return function e(n,i,r){if(\"function\"===typeof i?(r=i,i=B(this.options,{})):i=B(this.options,i||{}),!r){var a=this;return new Promise((function(t,r){e.call(a,n,i,(function(e,n){e?r(e):t(n)}))}))}this.parse(n,i,(function(e,n,i,a){if(e)return r(e);var s;try{s=new t(n,i).toCSS(a)}catch(e){return r(e)}r(null,s)}))}},qt=function(){function e(t){o(this,e),this.less=t,this.visitors=[],this.preProcessors=[],this.postProcessors=[],this.installedPlugins=[],this.fileManagers=[],this.iterator=-1,this.pluginCache={},this.Loader=new t.PluginLoader(t)}return u(e,[{key:\"addPlugins\",value:function(e){if(e)for(var t=0;t<e.length;t++)this.addPlugin(e[t])}},{key:\"addPlugin\",value:function(e,t,n){this.installedPlugins.push(e),t&&(this.pluginCache[t]=e),e.install&&e.install(this.less,this,n||this.less.functions.functionRegistry)}},{key:\"get\",value:function(e){return this.pluginCache[e]}},{key:\"addVisitor\",value:function(e){this.visitors.push(e)}},{key:\"addPreProcessor\",value:function(e,t){var n;for(n=0;n<this.preProcessors.length&&!(this.preProcessors[n].priority>=t);n++);this.preProcessors.splice(n,0,{preProcessor:e,priority:t})}},{key:\"addPostProcessor\",value:function(e,t){var n;for(n=0;n<this.postProcessors.length&&!(this.postProcessors[n].priority>=t);n++);this.postProcessors.splice(n,0,{postProcessor:e,priority:t})}},{key:\"addFileManager\",value:function(e){this.fileManagers.push(e)}},{key:\"getPreProcessors\",value:function(){for(var e=[],t=0;t<this.preProcessors.length;t++)e.push(this.preProcessors[t].preProcessor);return e}},{key:\"getPostProcessors\",value:function(){for(var e=[],t=0;t<this.postProcessors.length;t++)e.push(this.postProcessors[t].postProcessor);return e}},{key:\"getVisitors\",value:function(){return this.visitors}},{key:\"visitor\",value:function(){var e=this;return{first:function(){return e.iterator=-1,e.visitors[e.iterator]},get:function(){return e.iterator+=1,e.visitors[e.iterator]}}}},{key:\"getFileManagers\",value:function(){return this.fileManagers}}]),e}();function Tt(e,t){return!t&&At||(At=new qt(e)),At}var zt,Gt,Jt=function(e,t,n){return function e(t,i,r){if(\"function\"===typeof i?(r=i,i=B(this.options,{})):i=B(this.options,i||{}),!r){var a=this;return new Promise((function(n,r){e.call(a,t,i,(function(e,t){e?r(e):n(t)}))}))}var s,o,l=new Tt(this,!i.reUsePluginManager);if(i.pluginManager=l,s=new te.Parse(i),i.rootFileInfo)o=i.rootFileInfo;else{var u=i.filename||\"input\",c=u.replace(/[^\\/\\\\]*$/,\"\");(o={filename:u,rewriteUrls:s.rewriteUrls,rootpath:s.rootpath||\"\",currentDirectory:c,entryPath:c,rootFilename:u}).rootpath&&\"/\"!==o.rootpath.slice(-1)&&(o.rootpath+=\"/\")}var h=new n(this,s,o);this.importManager=h,i.plugins&&i.plugins.forEach((function(e){var t,n;if(e.fileContent){if(n=e.fileContent.replace(/^\\uFEFF/,\"\"),(t=l.Loader.evalPlugin(n,s,h,e.options,e.filename))instanceof z)return r(t)}else l.addPlugin(e)})),new st(s,h,o).parse(t,(function(e,t){if(e)return r(e);r(null,t,h,i)}),i)}},Wt=function(e,t){e=new Ue(e,t);var n,i=Lt(e),r=Dt(i,e),a=jt(r),s=Bt(e),o=Ut(e,a),l=Jt(e,a,s),u=$t(e),c={version:[3,10,3],data:S,tree:je,Environment:Ue,AbstractFileManager:qe,AbstractPluginLoader:Te,environment:e,visitors:it,Parser:st,functions:u,contexts:te,SourceMapOutput:i,SourceMapBuilder:r,ParseTree:a,ImportManager:s,render:o,parse:l,LessError:z,transformTree:Nt,utils:T,PluginManager:Tt,logger:Be},h=function(e){return function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];return v(e,n)}},f=Object.create(c);for(var p in c.tree)if(\"function\"===typeof(n=c.tree[p]))f[p.toLowerCase()]=h(n);else for(var d in f[p]=Object.create(null),n)f[p][d.toLowerCase()]=h(n[d]);return f},Ht={},Qt=function(e){function t(){return o(this,t),m(this,h(t).apply(this,arguments))}return c(t,e),u(t,[{key:\"alwaysMakePathsAbsolute\",value:function(){return!0}},{key:\"join\",value:function(e,t){return e?this.extractUrlParts(t,e).path:t}},{key:\"doXHR\",value:function(e,t,n,i){var r=new XMLHttpRequest,a=!zt.isFileProtocol||zt.fileAsync;function s(t,n,i){t.status>=200&&t.status<300?n(t.responseText,t.getResponseHeader(\"Last-Modified\")):\"function\"===typeof i&&i(t.status,e)}\"function\"===typeof r.overrideMimeType&&r.overrideMimeType(\"text/css\"),Gt.debug(\"XHR: Getting '\".concat(e,\"'\")),r.open(\"GET\",e,a),r.setRequestHeader(\"Accept\",t||\"text/x-less, text/css; q=0.9, */*; q=0.5\"),r.send(null),zt.isFileProtocol&&!zt.fileAsync?0===r.status||r.status>=200&&r.status<300?n(r.responseText):i(r.status,e):a?r.onreadystatechange=function(){4==r.readyState&&s(r,n,i)}:s(r,n,i)}},{key:\"supports\",value:function(){return!0}},{key:\"clearFileCache\",value:function(){Ht={}}},{key:\"loadFile\",value:function(e,t,n,i){t&&!this.isPathAbsolute(e)&&(e=t+e),e=n.ext?this.tryAppendExtension(e,n.ext):e,n=n||{};var r=this.extractUrlParts(e,window.location.href).url,a=this;return new Promise((function(e,t){if(n.useFileCache&&Ht[r])try{var i=Ht[r];return e({contents:i,filename:r,webInfo:{lastModified:new Date}})}catch(s){return t({filename:r,message:\"Error loading file \".concat(r,\" error was \").concat(s.message)})}a.doXHR(r,n.mime,(function(t,n){Ht[r]=t,e({contents:t,filename:r,webInfo:{lastModified:n}})}),(function(e,n){t({type:\"File\",message:\"'\".concat(n,\"' wasn't found (\").concat(e,\")\"),href:r})}))}))}}]),t}(qe),Kt=function(e,t){return zt=e,Gt=t,Qt},Zt=function(e){function t(e){var n;return o(this,t),(n=m(this,h(t).call(this))).less=e,n}return c(t,e),u(t,[{key:\"loadPlugin\",value:function(e,t,n,i,r){return new Promise((function(a,s){r.loadFile(e,t,n,i).then(a).catch(s)}))}}]),t}(Te),Yt=function(e,t){var n=4,i=3,r=2,a=1;t.logLevel=\"undefined\"!==typeof t.logLevel?t.logLevel:\"development\"===t.env?i:a,t.loggers||(t.loggers=[{debug:function(e){t.logLevel>=n&&console.log(e)},info:function(e){t.logLevel>=i&&console.log(e)},warn:function(e){t.logLevel>=r&&console.warn(e)},error:function(e){t.logLevel>=a&&console.error(e)}}]);for(var s=0;s<t.loggers.length;s++)e.logger.addListener(t.loggers[s])},Xt=function(e,t,i){function a(t,a){var s,o,l=\"less-error-message:\".concat(n(a||\"\")),u='<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>',c=e.document.createElement(\"div\"),h=[],f=t.filename||a,p=f.match(/([^\\/]+(\\?.*)?)$/)[1];c.id=l,c.className=\"less-error-message\",o=\"<h3>\".concat(t.type||\"Syntax\",\"Error: \").concat(t.message||\"There is an error in your .less file\")+'</h3><p>in <a href=\"'.concat(f,'\">').concat(p,\"</a> \");var v=function(e,t,n){void 0!==e.extract[t]&&h.push(u.replace(/\\{line\\}/,(parseInt(e.line,10)||0)+(t-1)).replace(/\\{class\\}/,n).replace(/\\{content\\}/,e.extract[t]))};t.line&&(v(t,0,\"\"),v(t,1,\"line\"),v(t,2,\"\"),o+=\"on line \".concat(t.line,\", column \").concat(t.column+1,\":</p><ul>\").concat(h.join(\"\"),\"</ul>\")),t.stack&&(t.extract||i.logLevel>=4)&&(o+=\"<br/>Stack Trace</br />\".concat(t.stack.split(\"\\n\").slice(1).join(\"<br/>\"))),c.innerHTML=o,r.createCSS(e.document,[\".less-error-message ul, .less-error-message li {\",\"list-style-type: none;\",\"margin-right: 15px;\",\"padding: 4px 0;\",\"margin: 0;\",\"}\",\".less-error-message label {\",\"font-size: 12px;\",\"margin-right: 15px;\",\"padding: 4px 0;\",\"color: #cc7777;\",\"}\",\".less-error-message pre {\",\"color: #dd6666;\",\"padding: 4px 0;\",\"margin: 0;\",\"display: inline-block;\",\"}\",\".less-error-message pre.line {\",\"color: #ff0000;\",\"}\",\".less-error-message h3 {\",\"font-size: 20px;\",\"font-weight: bold;\",\"padding: 15px 0 5px 0;\",\"margin: 0;\",\"}\",\".less-error-message a {\",\"color: #10a\",\"}\",\".less-error-message .error {\",\"color: red;\",\"font-weight: bold;\",\"padding-bottom: 2px;\",\"border-bottom: 1px dashed red;\",\"}\"].join(\"\\n\"),{title:\"error-message\"}),c.style.cssText=[\"font-family: Arial, sans-serif\",\"border: 1px solid #e00\",\"background-color: #eee\",\"border-radius: 5px\",\"-webkit-border-radius: 5px\",\"-moz-border-radius: 5px\",\"color: #e00\",\"padding: 15px\",\"margin-bottom: 15px\"].join(\";\"),\"development\"===i.env&&(s=setInterval((function(){var t=e.document,n=t.body;n&&(t.getElementById(l)?n.replaceChild(c,t.getElementById(l)):n.insertBefore(c,n.firstChild),clearInterval(s))}),10))}function s(t){var i=e.document.getElementById(\"less-error-message:\".concat(n(t)));i&&i.parentNode.removeChild(i)}function o(e){i.errorReporting&&\"html\"!==i.errorReporting?\"console\"===i.errorReporting||\"function\"===typeof i.errorReporting&&i.errorReporting(\"remove\",e):s(e)}function l(e,n){var r=\"{line} {content}\",a=e.filename||n,s=[],o=\"\".concat(e.type||\"Syntax\",\"Error: \").concat(e.message||\"There is an error in your .less file\",\" in \").concat(a),l=function(e,t,n){void 0!==e.extract[t]&&s.push(r.replace(/\\{line\\}/,(parseInt(e.line,10)||0)+(t-1)).replace(/\\{class\\}/,n).replace(/\\{content\\}/,e.extract[t]))};e.line&&(l(e,0,\"\"),l(e,1,\"line\"),l(e,2,\"\"),o+=\" on line \".concat(e.line,\", column \").concat(e.column+1,\":\\n\").concat(s.join(\"\\n\"))),e.stack&&(e.extract||i.logLevel>=4)&&(o+=\"\\nStack Trace\\n\".concat(e.stack)),t.logger.error(o)}function u(e,t){i.errorReporting&&\"html\"!==i.errorReporting?\"console\"===i.errorReporting?l(e,t):\"function\"===typeof i.errorReporting&&i.errorReporting(\"add\",e,t):a(e,t)}return{add:u,remove:o}},en=function(e,t,n){var i=null;if(\"development\"!==t.env)try{i=\"undefined\"===typeof e.localStorage?null:e.localStorage}catch(r){}return{setCSS:function(e,t,r,a){if(i){n.info(\"saving \".concat(e,\" to cache.\"));try{i.setItem(e,a),i.setItem(\"\".concat(e,\":timestamp\"),t),r&&i.setItem(\"\".concat(e,\":vars\"),JSON.stringify(r))}catch(s){n.error('failed to save \"'.concat(e,'\" to local storage for caching.'))}}},getCSS:function(e,t,n){var r=i&&i.getItem(e),a=i&&i.getItem(\"\".concat(e,\":timestamp\")),s=i&&i.getItem(\"\".concat(e,\":vars\"));if(n=n||{},s=s||\"{}\",a&&t.lastModified&&new Date(t.lastModified).valueOf()===new Date(a).valueOf()&&JSON.stringify(n)===s)return r}}},tn=function(){function e(){throw{type:\"Runtime\",message:\"Image size functions are not supported in browser version of less\"}}var t={\"image-size\":function(t){return e(),-1},\"image-width\":function(t){return e(),-1},\"image-height\":function(t){return e(),-1}};le.addMultiple(t)},nn=function(e,t){var n=e.document,a=Wt();a.options=t;var s=a.environment,o=Kt(t,a.logger),l=new o;s.addFileManager(l),a.FileManager=o,a.PluginLoader=Zt,Yt(a,t);var u=Xt(e,a,t),c=a.cache=t.cache||en(e,t,a.logger);tn(a.environment),t.functions&&a.functions.functionRegistry.addMultiple(t.functions);var h=/^text\\/(x-)?less$/;function f(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}function p(e,t){var n=Array.prototype.slice.call(arguments,2);return function(){var i=n.concat(Array.prototype.slice.call(arguments,0));return e.apply(t,i)}}function v(e){for(var i,r=n.getElementsByTagName(\"style\"),s=0;s<r.length;s++)if((i=r[s]).type.match(h)){var o=f(t);o.modifyVars=e;var l=i.innerHTML||\"\";o.filename=n.location.href.replace(/#.*$/,\"\"),a.render(l,o,p((function(e,t,n){t?u.add(t,\"inline\"):(e.type=\"text/css\",e.styleSheet?e.styleSheet.cssText=n.css:e.innerHTML=n.css)}),null,i))}}function d(e,n,r,o,h){var p=f(t);function v(t){var i=t.contents,s=t.filename,h=t.webInfo,f={currentDirectory:l.getPath(s),filename:s,rootFilename:s,rewriteUrls:p.rewriteUrls};if(f.entryPath=f.currentDirectory,f.rootpath=p.rootpath||f.currentDirectory,h){h.remaining=o;var v=c.getCSS(s,h,p.modifyVars);if(!r&&v)return h.local=!0,void n(null,v,i,e,h,s)}u.remove(s),p.rootFileInfo=f,a.render(i,p,(function(t,r){t?(t.href=s,n(t)):(c.setCSS(e.href,h.lastModified,p.modifyVars,r.css),n(null,r.css,i,e,h,s))}))}i(p,e),p.mime=e.type,h&&(p.modifyVars=h),l.loadFile(e.href,null,p,s).then((function(e){v(e)})).catch((function(e){console.log(e),n(e)}))}function m(e,t,n){for(var i=0;i<a.sheets.length;i++)d(a.sheets[i],e,t,a.sheets.length-(i+1),n)}function g(){\"development\"===a.env&&(a.watchTimer=setInterval((function(){a.watchMode&&(l.clearFileCache(),m((function(t,n,i,a,s){t?u.add(t,t.href||a.href):n&&r.createCSS(e.document,n,a)})))}),t.poll))}return a.watch=function(){return a.watchMode||(a.env=\"development\",g()),this.watchMode=!0,!0},a.unwatch=function(){return clearInterval(a.watchTimer),this.watchMode=!1,!1},a.registerStylesheetsImmediately=function(){var e=n.getElementsByTagName(\"link\");a.sheets=[];for(var t=0;t<e.length;t++)(\"stylesheet/less\"===e[t].rel||e[t].rel.match(/stylesheet/)&&e[t].type.match(h))&&a.sheets.push(e[t])},a.registerStylesheets=function(){return new Promise((function(e,t){a.registerStylesheetsImmediately(),e()}))},a.modifyVars=function(e){return a.refresh(!0,e,!1)},a.refresh=function(t,n,i){return(t||i)&&!1!==i&&l.clearFileCache(),new Promise((function(i,s){var o,l,c,h;o=l=new Date,0===(h=a.sheets.length)?(l=new Date,c=l-o,a.logger.info(\"Less has finished and no sheets were loaded.\"),i({startTime:o,endTime:l,totalMilliseconds:c,sheets:a.sheets.length})):m((function(t,n,f,p,v){if(t)return u.add(t,t.href||p.href),void s(t);v.local?a.logger.info(\"Loading \".concat(p.href,\" from cache.\")):a.logger.info(\"Rendered \".concat(p.href,\" successfully.\")),r.createCSS(e.document,n,p),a.logger.info(\"CSS for \".concat(p.href,\" generated in \").concat(new Date-l,\"ms\")),0===--h&&(c=new Date-o,a.logger.info(\"Less has finished. CSS generated in \".concat(c,\"ms\")),i({startTime:o,endTime:l,totalMilliseconds:c,sheets:a.sheets.length})),l=new Date}),t,n),v(n)}))},a.refreshStyles=v,a},rn=e();if(window.less)for(var an in window.less)window.less.hasOwnProperty(an)&&(rn[an]=window.less[an]);a(window,rn),rn.plugins=rn.plugins||[],window.LESS_PLUGINS&&(rn.plugins=rn.plugins.concat(window.LESS_PLUGINS));var sn,on,ln,un=nn(window,rn);function cn(e){e.filename&&console.warn(e),rn.async||on.removeChild(ln)}return window.less=un,rn.onReady&&(/!watch/.test(window.location.hash)&&un.watch(),rn.async||(sn=\"body { display: none !important }\",on=document.head||document.getElementsByTagName(\"head\")[0],(ln=document.createElement(\"style\")).type=\"text/css\",ln.styleSheet?ln.styleSheet.cssText=sn:ln.appendChild(document.createTextNode(sn)),on.appendChild(ln)),un.registerStylesheetsImmediately(),un.pageLoadFinished=un.refresh(\"development\"===un.env).then(cn,cn)),un}()}).call(this,n(\"HDXh\").Buffer)}}]);","map":{"version":3,"sources":["static/chunks/7b4c3b51.86b8b53e85aec47e6697.js"],"names":["window","push","H5Sr","module","exports","__webpack_require__","Buffer","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","createCSS","document","styles","sheet","id","concat","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","scripts","addDefaultOptions","undefined","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","_construct","Parent","args","Class","a","apply","Function","bind","arguments","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","from","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","unitConversions","m","cm","mm","in","px","pt","pc","duration","s","ms","angle","rad","Math","PI","deg","grad","turn","data","Node","this","parent","visibilityBlocks","nodeVisible","rootNode","parsed","get","fileInfo","getIndex","nodes","set","node","forEach","_index","_fileInfo","context","strs","genCSS","add","chunk","index","isEmpty","join","output","visitor","visit","op","b","precision","numPrecision","Number","toFixed","info","compare","type","numericCompare","Color","_Node","rgb","originalForm","_this","match","map","c","parseInt","alpha","split","r","g","pow","toCSS","doNotCompress","colorFunction","fround","indexOf","clamp","round","toHSL","h","l","toRGB","splitcolor","other","_operate","toHex","max","min","d","v","x","fromKeyword","keyword","toLowerCase","slice","Paren","eval","_noSpaceCombinators",""," ","|","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","visibilityInfo","copyVisibilityInfo","setParent","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","STRICT_LEGACY","RewriteUrls","OFF","LOCAL","ALL","createCommonjsModule","fn","clone_1","clone","_instanceof","nativeMap","nativeSet","nativePromise","Map","Set","Promise","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","getTime","isBuffer","allocUnsafe","copy","keyChild","valueChild","entryChild","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","allPropertyNames","getOwnPropertyNames","propertyName","Infinity","__objToStr","re","flags","global","ignoreCase","multiline","clonePrototype","getLocation","inputStream","n","line","column","copyArray","cloned","prop","defaults","obj1","obj2","newObj","_defaults","assign","copyOptions","opts","strictMath","merge","flattenArray","result","utils","freeze","LessError","fileContentMap","currentFilename","filename","message","stack","input","contents","loc","col","callLine","lines","found","callExtract","extract","F","error","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","newSelector","mediaEmpty","els","parseNode","imports","sels","olen","len","mixinElements","shift","extend","createDerived","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","Declaration","name","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","func","addMultiple","functions","keys","getLocalFunctions","inherit","Eval","_class","frames","inCalc","mathOn","calcStack","parensStack","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","selCnt","selector","hasVariable","hasOnePassingSelector","j","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","splice","resetCache","isJustParentSelector","bubbleSelectors","importRules","makeImportant","lastSelector","_rulesets","reduce","variables","vars","decl","parseValue","properties","toParse","transformDeclaration","filtRules","isRuleset","foundMixins","rulesets","find","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathSubCnt","pathCnt","currentLastRule","isRulesetLike","isVisible","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","k","currentElements","newSelectors","selectorsMultiplied","el","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","createEmptySelectors","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","_len","_key","ruleCnt","DetachedRuleset","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","callback","group","mapUnit","groupName","atomicUnit","counter","count","Dimension","unit","parseFloat","isNaN","isSingular","strValue","String","isLength","convertTo","usedUnits","cancel","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","isMathOn","toColor","operate","MATH$2","Expression","noSpacing","returnValue","inParenthesis","parens","parensInOp","doubleParen","outOfParenthesis","functionCaller","item","subNodes","Call","calc","currentMathContext","enterCalc","exitCalc","funcCaller","isValid","columnNumber","Variable","evaluating","frame","fun","Property","property","mergeRules","pluginManager","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","pathRequiresRewrite","escapePath","rewritePath","Media","_AtRule","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","containsVariables","doEval","blocksVisibility","addVisibilityBlock","registry","skip","importedFilename","newImport","evalPath","JavaScript","_JsEvalNode","string","expression","evaluateJavaScript","JsEvalNode","evalContext","jsify","toJS","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","callEval","NamespaceValue","ruleCall","lookups","lastDeclaration","substring","Definition","_Ruleset","params","variadic","arity","optionalParameters","required","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","prependRule","_arguments","mixinFrames","evalParams","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","matchCondition","expand","matchArgs","format","newRules","evalCall","_setVisibilityToReplacement","replacement","tree","logger","msg","_fireEvent","warn","debug","addListener","listener","_listeners","removeListener","logFunction","environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","propName","environmentFunc","currentDirectory","isSync","getFileManagers","fileManager","AbstractFileManager","lastIndexOf","ext","tryAppendExtension","basePath","laterPath","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","plugins","printUsage","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","accept","nonReplacing","cnt","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","importSequencer","importItem","isReady","tryRun","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","isVariableImport","addVariableImport","processImportNode","evaldImportNode","evalForImport","multiple","importMultiple","tryAppendLessExtension","onImported","sequencedOnImported","addImport","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ensureVisibility","ensureInvisibility","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","findSelfSelectors","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","JoinSelectorVisitor","getIsOutput","joinSelectors","CSSVisitorUtils","_context","bodyRules","isSilent","owner","thing","originalRules","containsSilentNonBlockedChild","compiledRulesBody","keepOnlyVisibleChilds","removeVisibilityBlock","hasVisibleSelector","mixinNode","visitExtend","extendNode","visitComment","commentNode","resolveVisibility","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","isVisibleRuleset","ruleList","ruleCache","ruleCSS","groups","groupsArr","space","comma","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","if","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","throwAwayComments","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","import","dir","importOptions","mediaFeatures","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","toHSV","number","scaled","size","rgba","m1","m2","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","luma","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","toARGB","tint","shade","colorBlend","mode","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","dataUri","fallback","functionThis","data-uri","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","getFileManager","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","list","_SELF","values","range","step","to","stepValue","each","rs","valueName","keyName","indexName","MathHelper","mathFunctions","ceil","sin","cos","atan","asin","acos","f$1","fraction","num","pm","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","_len2","_key2","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","%","_loop","token","svg","svg-gradient","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","_unit","get-unit","Functions","sourceMapOutput","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","normalizeFilename","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","sourceMapBuilder","SourceMapBuilder","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","sourceMapInputFilename","getCSSAppendage","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","parseTree","ParseTree","toCSSOptions","postProcessors","getPostProcessors","getExternalSourceMap","files","rootFilename","importManager","ImportManager","rootFileInfo","mime","queue","pluginLoader","Loader","fileParsedFunc","importedEqualsRoot","newFileInfo","promise","loadFileCallback","loadedFile","resolvedFilename","pathDiff","isPathAbsolute","alwaysMakePathsAbsolute","newEnv","evalPlugin","loadPlugin","loadFile","Render","render","PluginManager","installedPlugins","pluginCache","PluginLoader","install","preProcessor","priority","indexToInsertAt","postProcessor","manager","PluginManagerFactory","newFactory","logger$1","reUsePluginManager","evalResult","fileContent","lessRoot","environment$1","initial","Environment","ctor","api","fileCache","_AbstractFileManager","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","lessText","webInfo","lastModified","doXHR","FM","log","_AbstractPluginLoader","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","_imageSize","imageFunctions","image-size","image-width","image-height","addFileManager","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","clearFileCache","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","options$1","LESS_PLUGINS","resolveOrReject","pageLoadFinished","factory"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAASC,IAEL,SAASC,GAW3BH,EAAOC,QAET,WAAc,aAGpB,IAAIG,EAAiB,WACnB,MAAO,CAELC,mBAAmB,EAGnBC,SAAS,EAKTC,UAAU,EAGVC,MAAM,EAONC,MAAO,GAGPC,OAAO,EAKPC,eAAe,EAGfC,UAAU,EAKVC,SAAU,GAMVC,aAAa,EAQbC,KAAM,EAGNC,aAAa,EAKbC,WAAY,KAIZC,WAAY,KAGZC,QAAS,KAIb,SAASC,EAAUC,GACjB,OAAOA,EAAKC,QAAQ,sBAAuB,IAC1CA,QAAQ,uBAAwB,IAChCA,QAAQ,MAAO,IACfA,QAAQ,eAAgB,IACxBA,QAAQ,aAAc,KACtBA,QAAQ,MAAO,KAElB,SAASC,EAAYC,EAASC,GAC5B,IAAK,IAAIC,KAAOD,EAAIE,QAClB,GAAIF,EAAIE,QAAQC,eAAeF,GAC7B,GAAY,QAARA,GAAyB,oBAARA,GAAqC,aAARA,GAA8B,mBAARA,EACtEF,EAAQE,GAAOD,EAAIE,QAAQD,QAE3B,IACEF,EAAQE,GAAOG,KAAKC,MAAML,EAAIE,QAAQD,IACtC,MAAOK,KAMjB,IAAIC,EAAU,CACZC,UAAW,SAAmBC,EAAUC,EAAQC,GAE9C,IAAIf,EAAOe,EAAMf,MAAQ,GAErBgB,EAAK,QAAQC,OAAOF,EAAMG,OAASnB,EAAUC,IAE7CmB,EAAeN,EAASO,eAAeJ,GACvCK,GAAmB,EAEnBC,EAAYT,EAASU,cAAc,SACvCD,EAAUE,aAAa,OAAQ,YAE3BT,EAAMU,OACRH,EAAUE,aAAa,QAAST,EAAMU,OAGxCH,EAAUN,GAAKA,EAEVM,EAAUI,aACbJ,EAAUK,YAAYd,EAASe,eAAed,IAE9CO,EAAoC,OAAjBF,GAAyBA,EAAaU,WAAWC,OAAS,GAAKR,EAAUO,WAAWC,OAAS,GAAKX,EAAaY,WAAWC,YAAcV,EAAUS,WAAWC,WAGlL,IAAIC,EAAOpB,EAASqB,qBAAqB,QAAQ,GAGjD,GAAqB,OAAjBf,IAA8C,IAArBE,EAA4B,CACvD,IAAIc,EAASpB,GAASA,EAAMqB,aAAe,KAEvCD,EACFA,EAAOE,WAAWC,aAAahB,EAAWa,GAE1CF,EAAKN,YAAYL,GAWrB,GAPIH,IAAqC,IAArBE,GAClBF,EAAakB,WAAWE,YAAYpB,GAMlCG,EAAUI,WACZ,IACEJ,EAAUI,WAAWc,QAAU1B,EAC/B,MAAO2B,GACP,MAAM,IAAIC,MAAM,2CAItBC,cAAe,SAAuBnE,GACpC,IAAIqC,EAAWrC,EAAOqC,SACtB,OAAOA,EAAS8B,eAAiB,WAC/B,IAAIC,EAAU/B,EAASqB,qBAAqB,UAC5C,OAAOU,EAAQA,EAAQd,OAAS,GAFD,KAOjCe,EAAoB,SAAWrE,EAAQ2B,GAEzCD,EAAYC,EAASQ,EAAQgC,cAAcnE,SAEZsE,IAA3B3C,EAAQ4C,iBACV5C,EAAQ4C,eAAiB,yDAAyDC,KAAKxE,EAAOyE,SAASC,WASzG/C,EAAQgD,MAAQhD,EAAQgD,QAAS,EACjChD,EAAQiD,UAAYjD,EAAQiD,YAAa,EAEzCjD,EAAQkD,KAAOlD,EAAQkD,OAASlD,EAAQ4C,eAAiB,IAAO,MAChE5C,EAAQmD,IAAMnD,EAAQmD,MAAoC,aAA5B9E,EAAOyE,SAASM,UAAuD,WAA5B/E,EAAOyE,SAASM,UAAqD,aAA5B/E,EAAOyE,SAASM,UAA2B/E,EAAOyE,SAASO,MAAQhF,EAAOyE,SAASO,KAAK1B,OAAS,GAAK3B,EAAQ4C,eAAiB,cAAgB,cACjQ,IAAIU,EAAkB,6CAA6CC,KAAKlF,EAAOyE,SAASU,MAEpFF,IACFtD,EAAQsD,gBAAkBA,EAAgB,SAGfX,IAAzB3C,EAAQyD,eACVzD,EAAQyD,cAAe,QAGDd,IAApB3C,EAAQ0D,UACV1D,EAAQ0D,SAAU,GAGhB1D,EAAQ2D,eACV3D,EAAQV,YAAc,QAI1B,SAASsE,EAAQC,GAWf,OATED,EADoB,oBAAXE,QAAoD,kBAApBA,OAAOC,SACtC,SAAUF,GAClB,cAAcA,GAGN,SAAUA,GAClB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAI9GA,GAGjB,SAASK,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAIxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM7C,OAAQ8C,IAAK,CACrC,IAAIC,EAAaF,EAAMC,GACvBC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeR,EAAQG,EAAWM,IAAKN,IAIlD,SAASO,EAAab,EAAac,EAAYC,GAG7C,OAFID,GAAYZ,EAAkBF,EAAYH,UAAWiB,GACrDC,GAAab,EAAkBF,EAAae,GACzCf,EAGT,SAASgB,EAAUC,EAAUC,GAC3B,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIjB,UAAU,sDAGtBgB,EAASpB,UAAYa,OAAOS,OAAOD,GAAcA,EAAWrB,UAAW,CACrED,YAAa,CACXwB,MAAOH,EACPR,UAAU,EACVD,cAAc,KAGdU,GAAYG,EAAgBJ,EAAUC,GAG5C,SAASI,EAAgBC,GAIvB,OAHAD,EAAkBZ,OAAOc,eAAiBd,OAAOe,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAahB,OAAOe,eAAeF,KAEvBA,GAGzB,SAASF,EAAgBE,EAAGI,GAM1B,OALAN,EAAkBX,OAAOc,gBAAkB,SAAyBD,EAAGI,GAErE,OADAJ,EAAEG,UAAYC,EACPJ,IAGcA,EAAGI,GAG5B,SAASC,IACP,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKpC,UAAUqC,SAASC,KAAKN,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAO/D,GACP,OAAO,GAIX,SAASkE,EAAWC,EAAQC,EAAMC,GAchC,OAZEH,EADER,IACWC,QAAQC,UAER,SAAoBO,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEtI,KAAKuI,MAAMD,EAAGF,GAChB,IACIvC,EAAW,IADG2C,SAASC,KAAKF,MAAMJ,EAAQG,IAG9C,OADID,GAAOlB,EAAgBtB,EAAUwC,EAAM1C,WACpCE,IAIO0C,MAAM,KAAMG,WAGhC,SAASC,EAAuBC,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EAGT,SAASE,EAA2BF,EAAMX,GACxC,OAAIA,GAAyB,kBAATA,GAAqC,oBAATA,EAIzCU,EAAuBC,GAHrBX,EAMX,SAASc,EAAmBC,GAC1B,OAAOC,EAAmBD,IAAQE,EAAiBF,IAAQG,IAG7D,SAASF,EAAmBD,GAC1B,GAAII,MAAMC,QAAQL,GAAM,CACtB,IAAK,IAAI7C,EAAI,EAAGmD,EAAO,IAAIF,MAAMJ,EAAI3F,QAAS8C,EAAI6C,EAAI3F,OAAQ8C,IAAKmD,EAAKnD,GAAK6C,EAAI7C,GAEjF,OAAOmD,GAIX,SAASJ,EAAiBK,GACxB,GAAI/D,OAAOC,YAAYe,OAAO+C,IAAkD,uBAAzC/C,OAAOb,UAAUqC,SAASC,KAAKsB,GAAgC,OAAOH,MAAMI,KAAKD,GAG1H,SAASJ,IACP,MAAM,IAAIpD,UAAU,mDAGtB,IAAI0D,EAAS,CACXC,UAAa,UACbC,aAAgB,UAChBC,KAAQ,UACRC,WAAc,UACdC,MAAS,UACTC,MAAS,UACTC,OAAU,UACVC,MAAS,UACTC,eAAkB,UAClBC,KAAQ,UACRC,WAAc,UACdC,MAAS,UACTC,UAAa,UACbC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,MAAS,UACTC,eAAkB,UAClBC,SAAY,UACZC,QAAW,UACXC,KAAQ,UACRC,SAAY,UACZC,SAAY,UACZC,cAAiB,UACjBC,SAAY,UACZC,SAAY,UACZC,UAAa,UACbC,UAAa,UACbC,YAAe,UACfC,eAAkB,UAClBC,WAAc,UACdC,WAAc,UACdC,QAAW,UACXC,WAAc,UACdC,aAAgB,UAChBC,cAAiB,UACjBC,cAAiB,UACjBC,cAAiB,UACjBC,cAAiB,UACjBC,WAAc,UACdC,SAAY,UACZC,YAAe,UACfC,QAAW,UACXC,QAAW,UACXC,WAAc,UACdC,UAAa,UACbC,YAAe,UACfC,YAAe,UACfC,QAAW,UACXC,UAAa,UACbC,WAAc,UACdC,KAAQ,UACRC,UAAa,UACbC,KAAQ,UACRC,KAAQ,UACRC,MAAS,UACTC,YAAe,UACfC,SAAY,UACZC,QAAW,UACXC,UAAa,UACbC,OAAU,UACVC,MAAS,UACTC,MAAS,UACTC,SAAY,UACZC,cAAiB,UACjBC,UAAa,UACbC,aAAgB,UAChBC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,qBAAwB,UACxBC,UAAa,UACbC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,YAAe,UACfC,cAAiB,UACjBC,aAAgB,UAChBC,eAAkB,UAClBC,eAAkB,UAClBC,eAAkB,UAClBC,YAAe,UACfC,KAAQ,UACRC,UAAa,UACbC,MAAS,UACTC,QAAW,UACXC,OAAU,UACVC,iBAAoB,UACpBC,WAAc,UACdC,aAAgB,UAChBC,aAAgB,UAChBC,eAAkB,UAClBC,gBAAmB,UACnBC,kBAAqB,UACrBC,gBAAmB,UACnBC,gBAAmB,UACnBC,aAAgB,UAChBC,UAAa,UACbC,UAAa,UACbC,SAAY,UACZC,YAAe,UACfC,KAAQ,UACRC,QAAW,UACXC,MAAS,UACTC,UAAa,UACbC,OAAU,UACVC,UAAa,UACbC,OAAU,UACVC,cAAiB,UACjBC,UAAa,UACbC,cAAiB,UACjBC,cAAiB,UACjBC,WAAc,UACdC,UAAa,UACbC,KAAQ,UACRC,KAAQ,UACRC,KAAQ,UACRC,WAAc,UACdC,OAAU,UACVC,cAAiB,UACjBC,IAAO,UACPC,UAAa,UACbC,UAAa,UACbC,YAAe,UACfC,OAAU,UACVC,WAAc,UACdC,SAAY,UACZC,SAAY,UACZC,OAAU,UACVC,OAAU,UACVC,QAAW,UACXC,UAAa,UACbC,UAAa,UACbC,UAAa,UACbC,KAAQ,UACRC,YAAe,UACfC,UAAa,UACbC,IAAO,UACPC,KAAQ,UACRC,QAAW,UACXC,OAAU,UACVC,UAAa,UACbC,OAAU,UACVC,MAAS,UACTC,MAAS,UACTC,WAAc,UACdC,OAAU,UACVC,YAAe,WAGbC,EAAkB,CACpBzP,OAAQ,CACN0P,EAAK,EACLC,GAAM,IACNC,GAAM,KACNC,GAAM,MACNC,GAAM,MAAS,GACfC,GAAM,MAAS,GACfC,GAAM,MAAS,GAAK,IAEtBC,SAAU,CACRC,EAAK,EACLC,GAAM,MAERC,MAAO,CACLC,IAAO,GAAK,EAAIC,KAAKC,IACrBC,IAAO,EAAI,IACXC,KAAQ,EAAI,IACZC,KAAQ,IAIRC,EAAO,CACTvK,OAAQA,EACRqJ,gBAAiBA,GAGfmB,EAEJ,WACE,SAASA,IACPrO,EAAgBsO,KAAMD,GAEtBC,KAAKC,OAAS,KACdD,KAAKE,sBAAmB/P,EACxB6P,KAAKG,iBAAchQ,EACnB6P,KAAKI,SAAW,KAChBJ,KAAKK,OAAS,KACd,IAAI3L,EAAOsL,KACX1N,OAAOC,eAAeyN,KAAM,kBAAmB,CAC7CM,IAAK,WACH,OAAO5L,EAAK6L,cAGhBjO,OAAOC,eAAeyN,KAAM,QAAS,CACnCM,IAAK,WACH,OAAO5L,EAAK8L,cA+JlB,OA1JA/N,EAAasN,EAAM,CAAC,CAClBvN,IAAK,YACLQ,MAAO,SAAmByN,EAAOR,GAC/B,SAASS,EAAIC,GACPA,GAAQA,aAAgBZ,IAC1BY,EAAKV,OAASA,GAId/K,MAAMC,QAAQsL,GAChBA,EAAMG,QAAQF,GAEdA,EAAID,KAGP,CACDjO,IAAK,WACLQ,MAAO,WACL,OAAOgN,KAAKa,QAAUb,KAAKC,QAAUD,KAAKC,OAAOO,YAAc,IAEhE,CACDhO,IAAK,WACLQ,MAAO,WACL,OAAOgN,KAAKc,WAAad,KAAKC,QAAUD,KAAKC,OAAOM,YAAc,KAEnE,CACD/N,IAAK,gBACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,QACLQ,MAAO,SAAe+N,GACpB,IAAIC,EAAO,GASX,OARAhB,KAAKiB,OAAOF,EAAS,CACnBG,IAAK,SAAaC,EAAOZ,EAAUa,GACjCJ,EAAKlV,KAAKqV,IAEZE,QAAS,WACP,OAAuB,IAAhBL,EAAK7R,UAGT6R,EAAKM,KAAK,MAElB,CACD9O,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAIlB,KAAKhN,SAEjB,CACDR,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKhN,MAAQwO,EAAQC,MAAMzB,KAAKhN,SAEjC,CACDR,IAAK,OACLQ,MAAO,WACL,OAAOgN,OAER,CACDxN,IAAK,WACLQ,MAAO,SAAkB+N,EAASW,EAAItN,EAAGuN,GACvC,OAAQD,GACN,IAAK,IACH,OAAOtN,EAAIuN,EAEb,IAAK,IACH,OAAOvN,EAAIuN,EAEb,IAAK,IACH,OAAOvN,EAAIuN,EAEb,IAAK,IACH,OAAOvN,EAAIuN,KAGhB,CACDnP,IAAK,SACLQ,MAAO,SAAgB+N,EAAS/N,GAC9B,IAAI4O,EAAYb,GAAWA,EAAQc,aAEnC,OAAOD,EAAYE,QAAQ9O,EAAQ,OAAO+O,QAAQH,IAAc5O,IAGjE,CACDR,IAAK,mBACLQ,MAAO,WAKL,OAJ6B,MAAzBgN,KAAKE,mBACPF,KAAKE,iBAAmB,GAGO,IAA1BF,KAAKE,mBAEb,CACD1N,IAAK,qBACLQ,MAAO,WACwB,MAAzBgN,KAAKE,mBACPF,KAAKE,iBAAmB,GAG1BF,KAAKE,iBAAmBF,KAAKE,iBAAmB,IAEjD,CACD1N,IAAK,wBACLQ,MAAO,WACwB,MAAzBgN,KAAKE,mBACPF,KAAKE,iBAAmB,GAG1BF,KAAKE,iBAAmBF,KAAKE,iBAAmB,IAIjD,CACD1N,IAAK,mBACLQ,MAAO,WACLgN,KAAKG,aAAc,IAIpB,CACD3N,IAAK,qBACLQ,MAAO,WACLgN,KAAKG,aAAc,IAMpB,CACD3N,IAAK,YACLQ,MAAO,WACL,OAAOgN,KAAKG,cAEb,CACD3N,IAAK,iBACLQ,MAAO,WACL,MAAO,CACLkN,iBAAkBF,KAAKE,iBACvBC,YAAaH,KAAKG,eAGrB,CACD3N,IAAK,qBACLQ,MAAO,SAA4BgP,GAC5BA,IAILhC,KAAKE,iBAAmB8B,EAAK9B,iBAC7BF,KAAKG,YAAc6B,EAAK7B,iBAIrBJ,EAhLT,GAmLAA,EAAKkC,QAAU,SAAU7N,EAAGuN,GAM1B,GAAIvN,EAAE6N,SAEO,WAAXN,EAAEO,MAAgC,cAAXP,EAAEO,KACzB,OAAO9N,EAAE6N,QAAQN,GACZ,GAAIA,EAAEM,QACX,OAAQN,EAAEM,QAAQ7N,GACb,GAAIA,EAAE8N,OAASP,EAAEO,KAAjB,CAOP,GAHA9N,EAAIA,EAAEpB,MACN2O,EAAIA,EAAE3O,OAEDkC,MAAMC,QAAQf,GACjB,OAAOA,IAAMuN,EAAI,OAAIxR,EAGvB,GAAIiE,EAAEjF,SAAWwS,EAAExS,OAAnB,CAIA,IAAK,IAAI8C,EAAI,EAAGA,EAAImC,EAAEjF,OAAQ8C,IAC5B,GAAiC,IAA7B8N,EAAKkC,QAAQ7N,EAAEnC,GAAI0P,EAAE1P,IACvB,OAIJ,OAAO,KAGT8N,EAAKoC,eAAiB,SAAU/N,EAAGuN,GACjC,OAAOvN,EAAIuN,GAAK,EAAIvN,IAAMuN,EAAI,EAAIvN,EAAIuN,EAAI,OAAIxR,GAMhD,IAAIiS,EAEJ,SAAUC,GAGR,SAASD,EAAME,EAAKlO,EAAGmO,GACrB,IAAIC,EAEJ9Q,EAAgBsO,KAAMoC,GAItB,IAAI1N,EAAOD,EAFX+N,EAAQ5N,EAA2BoL,KAAM9M,EAAgBkP,GAAOrO,KAAKiM,QAsCrE,OA5BI9K,MAAMC,QAAQmN,GAChBE,EAAMF,IAAMA,EACHA,EAAInT,QAAU,GACvBqT,EAAMF,IAAM,GACZA,EAAIG,MAAM,SAASC,KAAI,SAAUC,EAAG1Q,GAC9BA,EAAI,EACNyC,EAAK4N,IAAIxW,KAAK8W,SAASD,EAAG,KAE1BjO,EAAKmO,MAAQD,SAASD,EAAG,IAAM,SAInCH,EAAMF,IAAM,GACZA,EAAIQ,MAAM,IAAIJ,KAAI,SAAUC,EAAG1Q,GACzBA,EAAI,EACNyC,EAAK4N,IAAIxW,KAAK8W,SAASD,EAAIA,EAAG,KAE9BjO,EAAKmO,MAAQD,SAASD,EAAIA,EAAG,IAAM,QAKzCH,EAAMK,MAAQL,EAAMK,QAAuB,kBAANzO,EAAiBA,EAAI,GAE9B,qBAAjBmO,IACTC,EAAMxP,MAAQuP,GAGTC,EAkNT,OA/PA5P,EAAUwP,EAAOC,GAgDjB5P,EAAa2P,EAAO,CAAC,CACnB5P,IAAK,OACLQ,MAAO,WACL,IAAI+P,EAAI/C,KAAKsC,IAAI,GAAK,IAClBU,EAAIhD,KAAKsC,IAAI,GAAK,IAClBX,EAAI3B,KAAKsC,IAAI,GAAK,IAItB,MAAO,OAHPS,EAAIA,GAAK,OAAUA,EAAI,MAAQtD,KAAKwD,KAAKF,EAAI,MAAS,MAAO,MAGzC,OAFpBC,EAAIA,GAAK,OAAUA,EAAI,MAAQvD,KAAKwD,KAAKD,EAAI,MAAS,MAAO,MAE5B,OADjCrB,EAAIA,GAAK,OAAUA,EAAI,MAAQlC,KAAKwD,KAAKtB,EAAI,MAAS,MAAO,QAG9D,CACDnP,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAIlB,KAAKkD,MAAMnC,MAEvB,CACDvO,IAAK,QACLQ,MAAO,SAAe+N,EAASoC,GAC7B,IACIzW,EACAmW,EACAO,EAHA7W,EAAWwU,GAAWA,EAAQxU,WAAa4W,EAI3CjP,EAAO,GAMX,GAFA2O,EAAQ7C,KAAKqD,OAAOtC,EAASf,KAAK6C,OAE9B7C,KAAKhN,MACP,GAAkC,IAA9BgN,KAAKhN,MAAMsQ,QAAQ,OACjBT,EAAQ,IACVO,EAAgB,YAEb,CAAA,GAAkC,IAA9BpD,KAAKhN,MAAMsQ,QAAQ,OAO5B,OAAOtD,KAAKhN,MALVoQ,EADEP,EAAQ,EACM,OAEA,WAMhBA,EAAQ,IACVO,EAAgB,QAIpB,OAAQA,GACN,IAAK,OACHlP,EAAO8L,KAAKsC,IAAII,KAAI,SAAUC,GAC5B,OAAOY,EAAM9D,KAAK+D,MAAMb,GAAI,QAC3BrU,OAAOiV,EAAMV,EAAO,IACvB,MAEF,IAAK,OACH3O,EAAKpI,KAAKyX,EAAMV,EAAO,IAEzB,IAAK,MACHnW,EAAQsT,KAAKyD,QACbvP,EAAO,CAAC8L,KAAKqD,OAAOtC,EAASrU,EAAMgX,GAAI,GAAGpV,OAAO0R,KAAKqD,OAAOtC,EAAmB,IAAVrU,EAAM2S,GAAU,KAAM,GAAG/Q,OAAO0R,KAAKqD,OAAOtC,EAAmB,IAAVrU,EAAMiX,GAAU,MAAMrV,OAAO4F,GAG5J,GAAIkP,EAEF,MAAO,GAAG9U,OAAO8U,EAAe,KAAK9U,OAAO4F,EAAKoN,KAAK,IAAIhT,OAAO/B,EAAW,GAAK,MAAO,KAK1F,GAFAG,EAAQsT,KAAK4D,QAETrX,EAAU,CACZ,IAAIsX,EAAanX,EAAMoW,MAAM,IAEzBe,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAAOA,EAAW,KACrGnX,EAAQ,IAAI4B,OAAOuV,EAAW,IAAIvV,OAAOuV,EAAW,IAAIvV,OAAOuV,EAAW,KAI9E,OAAOnX,IAQR,CACD8F,IAAK,UACLQ,MAAO,SAAiB+N,EAASW,EAAIoC,GAInC,IAHA,IAAIxB,EAAM,IAAIpN,MAAM,GAChB2N,EAAQ7C,KAAK6C,OAAS,EAAIiB,EAAMjB,OAASiB,EAAMjB,MAE1CF,EAAI,EAAGA,EAAI,EAAGA,IACrBL,EAAIK,GAAK3C,KAAK+D,SAAShD,EAASW,EAAI1B,KAAKsC,IAAIK,GAAImB,EAAMxB,IAAIK,IAG7D,OAAO,IAAIP,EAAME,EAAKO,KAEvB,CACDrQ,IAAK,QACLQ,MAAO,WACL,OAAOgR,EAAMhE,KAAKsC,OAEnB,CACD9P,IAAK,QACLQ,MAAO,WACL,IAMI0Q,EACArE,EAPA0D,EAAI/C,KAAKsC,IAAI,GAAK,IAClBU,EAAIhD,KAAKsC,IAAI,GAAK,IAClBX,EAAI3B,KAAKsC,IAAI,GAAK,IAClBlO,EAAI4L,KAAK6C,MACToB,EAAMxE,KAAKwE,IAAIlB,EAAGC,EAAGrB,GACrBuC,EAAMzE,KAAKyE,IAAInB,EAAGC,EAAGrB,GAGrBgC,GAAKM,EAAMC,GAAO,EAClBC,EAAIF,EAAMC,EAEd,GAAID,IAAQC,EACVR,EAAIrE,EAAI,MACH,CAGL,OAFAA,EAAIsE,EAAI,GAAMQ,GAAK,EAAIF,EAAMC,GAAOC,GAAKF,EAAMC,GAEvCD,GACN,KAAKlB,EACHW,GAAKV,EAAIrB,GAAKwC,GAAKnB,EAAIrB,EAAI,EAAI,GAC/B,MAEF,KAAKqB,EACHU,GAAK/B,EAAIoB,GAAKoB,EAAI,EAClB,MAEF,KAAKxC,EACH+B,GAAKX,EAAIC,GAAKmB,EAAI,EAItBT,GAAK,EAGP,MAAO,CACLA,EAAO,IAAJA,EACHrE,EAAGA,EACHsE,EAAGA,EACHvP,EAAGA,KAIN,CACD5B,IAAK,QACLQ,MAAO,WACL,IAMI0Q,EACArE,EAPA0D,EAAI/C,KAAKsC,IAAI,GAAK,IAClBU,EAAIhD,KAAKsC,IAAI,GAAK,IAClBX,EAAI3B,KAAKsC,IAAI,GAAK,IAClBlO,EAAI4L,KAAK6C,MACToB,EAAMxE,KAAKwE,IAAIlB,EAAGC,EAAGrB,GACrBuC,EAAMzE,KAAKyE,IAAInB,EAAGC,EAAGrB,GAGrByC,EAAIH,EACJE,EAAIF,EAAMC,EAQd,GALE7E,EADU,IAAR4E,EACE,EAEAE,EAAIF,EAGNA,IAAQC,EACVR,EAAI,MACC,CACL,OAAQO,GACN,KAAKlB,EACHW,GAAKV,EAAIrB,GAAKwC,GAAKnB,EAAIrB,EAAI,EAAI,GAC/B,MAEF,KAAKqB,EACHU,GAAK/B,EAAIoB,GAAKoB,EAAI,EAClB,MAEF,KAAKxC,EACH+B,GAAKX,EAAIC,GAAKmB,EAAI,EAItBT,GAAK,EAGP,MAAO,CACLA,EAAO,IAAJA,EACHrE,EAAGA,EACH+E,EAAGA,EACHhQ,EAAGA,KAGN,CACD5B,IAAK,SACLQ,MAAO,WACL,OAAOgR,EAAM,CAAc,IAAbhE,KAAK6C,OAAavU,OAAO0R,KAAKsC,QAE7C,CACD9P,IAAK,UACLQ,MAAO,SAAiBqR,GACtB,OAAOA,EAAE/B,KAAO+B,EAAE/B,IAAI,KAAOtC,KAAKsC,IAAI,IAAM+B,EAAE/B,IAAI,KAAOtC,KAAKsC,IAAI,IAAM+B,EAAE/B,IAAI,KAAOtC,KAAKsC,IAAI,IAAM+B,EAAExB,QAAU7C,KAAK6C,MAAQ,OAAI1S,MAI9HiS,EAhQT,CAiQErC,GAIF,SAASwD,EAAMa,EAAGH,GAChB,OAAOxE,KAAKyE,IAAIzE,KAAKwE,IAAIG,EAAG,GAAIH,GAGlC,SAASD,EAAMI,GACb,MAAO,IAAI9V,OAAO8V,EAAE1B,KAAI,SAAUC,GAEhC,QADAA,EAAIY,EAAM9D,KAAK+D,MAAMb,GAAI,MACb,GAAK,IAAM,IAAMA,EAAE7O,SAAS,OACvCwN,KAAK,KAVVc,EAAM3Q,UAAUyQ,KAAO,QAavBE,EAAMkC,YAAc,SAAUC,GAC5B,IAAI5B,EACAnQ,EAAM+R,EAAQC,cAQlB,GANIjP,EAAO3H,eAAe4E,GACxBmQ,EAAI,IAAIP,EAAM7M,EAAO/C,GAAKiS,MAAM,IACf,gBAARjS,IACTmQ,EAAI,IAAIP,EAAM,CAAC,EAAG,EAAG,GAAI,IAGvBO,EAEF,OADAA,EAAE3P,MAAQuR,EACH5B,GAIX,IAAI+B,EAEJ,SAAUrC,GAGR,SAASqC,EAAM/D,GACb,IAAI6B,EAMJ,OAJA9Q,EAAgBsO,KAAM0E,IAEtBlC,EAAQ5N,EAA2BoL,KAAM9M,EAAgBwR,GAAO3Q,KAAKiM,QAC/DhN,MAAQ2N,EACP6B,EAiBT,OA1BA5P,EAAU8R,EAAOrC,GAYjB5P,EAAaiS,EAAO,CAAC,CACnBlS,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,KACXlB,KAAKhN,MAAMiO,OAAOF,EAASQ,GAC3BA,EAAOL,IAAI,OAEZ,CACD1O,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAI2D,EAAM1E,KAAKhN,MAAM2R,KAAK5D,QAI9B2D,EA3BT,CA4BE3E,GAEF2E,EAAMjT,UAAUyQ,KAAO,QAEvB,IAAI0C,EAAsB,CACxBC,IAAI,EACJC,KAAK,EACLC,KAAK,GAGHC,EAEJ,SAAU3C,GAGR,SAAS2C,EAAWhS,GAClB,IAAIwP,EAcJ,OAZA9Q,EAAgBsO,KAAMgF,GAEtBxC,EAAQ5N,EAA2BoL,KAAM9M,EAAgB8R,GAAYjR,KAAKiM,OAE5D,MAAVhN,GACFwP,EAAMxP,MAAQ,IACdwP,EAAMyC,mBAAoB,IAE1BzC,EAAMxP,MAAQA,EAAQA,EAAMkS,OAAS,GACrC1C,EAAMyC,kBAAoC,KAAhBzC,EAAMxP,OAG3BwP,EAWT,OA5BA5P,EAAUoS,EAAY3C,GAoBtB5P,EAAauS,EAAY,CAAC,CACxBxS,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAI4D,EAAepE,EAAQxU,UAAYqY,EAAoB5E,KAAKhN,OAAS,GAAK,IAC9EuO,EAAOL,IAAIiE,EAAenF,KAAKhN,MAAQmS,OAIpCH,EA7BT,CA8BEjF,GAEFiF,EAAWvT,UAAUyQ,KAAO,aAE5B,IAAIkD,EAEJ,SAAU/C,GAGR,SAAS+C,EAAQC,EAAYrS,EAAOsS,EAAYlE,EAAOmE,EAAiBC,GACtE,IAAIhD,EAuBJ,OArBA9Q,EAAgBsO,KAAMoF,IAEtB5C,EAAQ5N,EAA2BoL,KAAM9M,EAAgBkS,GAASrR,KAAKiM,QACjEqF,WAAaA,aAAsBL,EAAaK,EAAa,IAAIL,EAAWK,GAGhF7C,EAAMxP,MADa,kBAAVA,EACKA,EAAMkS,OACXlS,GAGK,GAGhBwP,EAAM8C,WAAaA,EACnB9C,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAElB/C,EAAMiD,mBAAmBD,GAEzBhD,EAAMkD,UAAUlD,EAAM6C,WAAY5Q,EAAuB+N,IAElDA,EAoDT,OA9EA5P,EAAUwS,EAAS/C,GA6BnB5P,EAAa2S,EAAS,CAAC,CACrB5S,IAAK,SACLQ,MAAO,SAAgBwO,GACrB,IAAIxO,EAAQgN,KAAKhN,MACjBgN,KAAKqF,WAAa7D,EAAQC,MAAMzB,KAAKqF,YAEd,WAAnBjU,EAAQ4B,KACVgN,KAAKhN,MAAQwO,EAAQC,MAAMzO,MAG9B,CACDR,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAIqE,EAAQpF,KAAKqF,WAAYrF,KAAKhN,MAAM2R,KAAO3E,KAAKhN,MAAM2R,KAAK5D,GAAWf,KAAKhN,MAAOgN,KAAKsF,WAAYtF,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwF,oBAEtJ,CACDhT,IAAK,QACLQ,MAAO,WACL,OAAO,IAAIoS,EAAQpF,KAAKqF,WAAYrF,KAAKhN,MAAOgN,KAAKsF,WAAYtF,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwF,oBAEzG,CACDhT,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAIlB,KAAKkD,MAAMnC,GAAUf,KAAKO,WAAYP,KAAKQ,cAEvD,CACDhO,IAAK,QACLQ,MAAO,WACL,IAAI+N,EAAUvM,UAAUrF,OAAS,QAAsBgB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,GAC9ExB,EAAQgN,KAAKhN,MACb2S,EAAgB5E,EAAQ4E,cAW5B,OATI3S,aAAiB0R,IAGnB3D,EAAQ4E,eAAgB,GAG1B3S,EAAQA,EAAMkQ,MAAQlQ,EAAMkQ,MAAMnC,GAAW/N,EAC7C+N,EAAQ4E,cAAgBA,EAEV,KAAV3S,GAAoD,MAApCgN,KAAKqF,WAAWrS,MAAM4S,OAAO,GACxC,GAEA5F,KAAKqF,WAAWnC,MAAMnC,GAAW/N,MAKvCoS,EA/ET,CAgFErF,GAEFqF,EAAQ3T,UAAUyQ,KAAO,UAEzB,IAAI2D,EAAS,CACXC,OAAQ,EACRC,gBAAiB,EACjBC,OAAQ,EACRC,cAAe,GAEbC,EAAc,CAChBC,IAAK,EACLC,MAAO,EACPC,IAAK,GAGP,SAASC,EAAqBC,EAAIva,GACjC,OAAiCua,EAA1Bva,EAAS,CAAEC,QAAS,IAAiBD,EAAOC,SAAUD,EAAOC,QAGrE,IAAIua,EAAUF,GAAqB,SAAUta,GAC7C,IAAIya,EAAQ,WAEZ,SAASC,EAAYrV,EAAK6Q,GACxB,OAAe,MAARA,GAAgB7Q,aAAe6Q,EAGxC,IAAIyE,EASAC,EAOAC,EAfJ,IACEF,EAAYG,IACZ,MAAM/Y,GAGN4Y,EAAY,aAId,IACEC,EAAYG,IACZ,MAAMhZ,GACN6Y,EAAY,aAId,IACEC,EAAgBG,QAChB,MAAMjZ,GACN8Y,EAAgB,aAwBlB,SAASJ,EAAMxG,EAAQgH,EAAUC,EAAOzV,EAAW0V,GACzB,kBAAbF,IACTC,EAAQD,EAASC,MACjBzV,EAAYwV,EAASxV,UACrB0V,EAAuBF,EAASE,qBAChCF,EAAWA,EAASA,UAItB,IAAIG,EAAa,GACbC,EAAc,GAEdC,EAA6B,oBAAVnb,EASvB,SAASob,EAAOtH,EAAQiH,GAEtB,GAAe,OAAXjH,EACF,OAAO,KAET,GAAc,IAAViH,EACF,OAAOjH,EAET,IAAIuH,EACAC,EACJ,GAAqB,iBAAVxH,EACT,OAAOA,EAGT,GAAIyG,EAAYzG,EAAQ0G,GACtBa,EAAQ,IAAIb,OACP,GAAID,EAAYzG,EAAQ2G,GAC7BY,EAAQ,IAAIZ,OACP,GAAIF,EAAYzG,EAAQ4G,GAC7BW,EAAQ,IAAIX,GAAc,SAAUa,EAASC,GAC3C1H,EAAO2H,MAAK,SAAS5U,GACnB0U,EAAQH,EAAOvU,EAAOkU,EAAQ,OAC7B,SAASW,GACVF,EAAOJ,EAAOM,EAAKX,EAAQ,eAG1B,GAAIT,EAAMqB,UAAU7H,GACzBuH,EAAQ,QACH,GAAIf,EAAMsB,WAAW9H,GAC1BuH,EAAQ,IAAIQ,OAAO/H,EAAOgI,OAAQC,EAAiBjI,IAC/CA,EAAOkI,YAAWX,EAAMW,UAAYlI,EAAOkI,gBAC1C,GAAI1B,EAAM2B,SAASnI,GACxBuH,EAAQ,IAAI3T,KAAKoM,EAAOoI,eACnB,CAAA,GAAIf,GAAanb,EAAOmc,SAASrI,GAStC,OANEuH,EAFErb,EAAOoc,YAEDpc,EAAOoc,YAAYtI,EAAO9Q,QAG1B,IAAIhD,EAAO8T,EAAO9Q,QAE5B8Q,EAAOuI,KAAKhB,GACLA,EACEd,EAAYzG,EAAQlQ,OAC7ByX,EAAQlV,OAAOS,OAAOkN,GAEE,oBAAbxO,GACTgW,EAAQnV,OAAOe,eAAe4M,GAC9BuH,EAAQlV,OAAOS,OAAO0U,KAGtBD,EAAQlV,OAAOS,OAAOtB,GACtBgW,EAAQhW,GAIZ,GAAIwV,EAAU,CACZ,IAAI7F,EAAQgG,EAAW9D,QAAQrD,GAE/B,IAAc,GAAVmB,EACF,OAAOiG,EAAYjG,GAErBgG,EAAWtb,KAAKmU,GAChBoH,EAAYvb,KAAK0b,GAiBnB,IAAK,IAAIvV,KAdLyU,EAAYzG,EAAQ0G,IACtB1G,EAAOW,SAAQ,SAAS5N,EAAOR,GAC7B,IAAIiW,EAAWlB,EAAO/U,EAAK0U,EAAQ,GAC/BwB,EAAanB,EAAOvU,EAAOkU,EAAQ,GACvCM,EAAM9G,IAAI+H,EAAUC,MAGpBhC,EAAYzG,EAAQ2G,IACtB3G,EAAOW,SAAQ,SAAS5N,GACtB,IAAI2V,EAAapB,EAAOvU,EAAOkU,EAAQ,GACvCM,EAAMtG,IAAIyH,MAIA1I,EAAQ,CACpB,IAAI2I,EACAnB,IACFmB,EAAQtW,OAAOuW,yBAAyBpB,EAAOxV,IAG7C2W,GAAsB,MAAbA,EAAMlI,MAGnB8G,EAAMvV,GAAKsV,EAAOtH,EAAOhO,GAAIiV,EAAQ,IAGvC,GAAI5U,OAAOwW,sBACT,CAAA,IAAIC,EAAUzW,OAAOwW,sBAAsB7I,GAC3C,IAAShO,EAAI,EAAGA,EAAI8W,EAAQ5Z,OAAQ8C,IAAK,CAGvC,IAAI+W,EAASD,EAAQ9W,MACjBC,EAAaI,OAAOuW,yBAAyB5I,EAAQ+I,KACtC9W,EAAWC,YAAegV,KAG7CK,EAAMwB,GAAUzB,EAAOtH,EAAO+I,GAAS9B,EAAQ,GAC1ChV,EAAWC,YACdG,OAAOC,eAAeiV,EAAOwB,EAAQ,CACnC7W,YAAY,MAMpB,GAAIgV,EACF,CAAA,IAAI8B,EAAmB3W,OAAO4W,oBAAoBjJ,GAClD,IAAShO,EAAI,EAAGA,EAAIgX,EAAiB9Z,OAAQ8C,IAAK,CAChD,IACIC,EADAiX,EAAeF,EAAiBhX,IAChCC,EAAaI,OAAOuW,yBAAyB5I,EAAQkJ,KACvCjX,EAAWC,aAG7BqV,EAAM2B,GAAgB5B,EAAOtH,EAAOkJ,GAAejC,EAAQ,GAC3D5U,OAAOC,eAAeiV,EAAO2B,EAAc,CACzChX,YAAY,MAKlB,OAAOqV,EAGT,MAxIuB,oBAAZP,IACTA,GAAW,GAEO,oBAATC,IACTA,EAAQkC,EAAAA,GAoIH7B,EAAOtH,EAAQiH,GAqBxB,SAASmC,EAAWlW,GAClB,OAAOb,OAAOb,UAAUqC,SAASC,KAAKZ,GAIxC,SAASiV,EAASjV,GAChB,MAAoB,kBAANA,GAAoC,kBAAlBkW,EAAWlW,GAI7C,SAAS2U,EAAU3U,GACjB,MAAoB,kBAANA,GAAoC,mBAAlBkW,EAAWlW,GAI7C,SAAS4U,EAAW5U,GAClB,MAAoB,kBAANA,GAAoC,oBAAlBkW,EAAWlW,GAI7C,SAAS+U,EAAiBoB,GACxB,IAAIC,EAAQ,GAIZ,OAHID,EAAGE,SAAQD,GAAS,KACpBD,EAAGG,aAAYF,GAAS,KACxBD,EAAGI,YAAWH,GAAS,KACpBA,EAIT,OAxCA9C,EAAMkD,eAAiB,SAAwB1J,GAC7C,GAAe,OAAXA,EACF,OAAO,KAET,IAAI0C,EAAI,aAER,OADAA,EAAElR,UAAYwO,EACP,IAAI0C,GAQb8D,EAAM4C,WAAaA,EAKnB5C,EAAM2B,SAAWA,EAKjB3B,EAAMqB,UAAYA,EAKlBrB,EAAMsB,WAAaA,EASnBtB,EAAMyB,iBAAmBA,EAElBzB,EA1PK,GA6PPza,EAAOC,UACVD,EAAOC,QAAUwa,MAKnB,SAASmD,EAAYxI,EAAOyI,GAK1B,IAJA,IAAIC,EAAI1I,EAAQ,EACZ2I,EAAO,KACPC,GAAU,IAELF,GAAK,GAA+B,OAA1BD,EAAYjE,OAAOkE,IACpCE,IAOF,MAJqB,kBAAV5I,IACT2I,GAAQF,EAAYpF,MAAM,EAAGrD,GAAOqB,MAAM,QAAU,IAAItT,QAGnD,CACL4a,KAAMA,EACNC,OAAQA,GAGZ,SAASC,EAAUnV,GACjB,IAAI7C,EACA9C,EAAS2F,EAAI3F,OACbqZ,EAAO,IAAItT,MAAM/F,GAErB,IAAK8C,EAAI,EAAGA,EAAI9C,EAAQ8C,IACtBuW,EAAKvW,GAAK6C,EAAI7C,GAGhB,OAAOuW,EAET,SAAS/B,EAAMpV,GACb,IAAI6Y,EAAS,GAEb,IAAK,IAAIC,KAAQ9Y,EACXA,EAAIzD,eAAeuc,KACrBD,EAAOC,GAAQ9Y,EAAI8Y,IAIvB,OAAOD,EAET,SAASE,EAASC,EAAMC,GACtB,IAAIC,EAASD,GAAQ,GAErB,IAAKA,EAAKE,UAAW,CACnBD,EAAS,GAET,IAAIC,EAAYhE,EAAQ6D,GAExBE,EAAOC,UAAYA,EACnB,IAAIN,EAASI,EAAO9D,EAAQ8D,GAAQ,GACpChY,OAAOmY,OAAOF,EAAQC,EAAWN,GAGnC,OAAOK,EAET,SAASG,EAAYL,EAAMC,GACzB,GAAIA,GAAQA,EAAKE,UACf,OAAOF,EAGT,IAAIK,EAAOP,EAASC,EAAMC,GAW1B,GATIK,EAAKC,aACPD,EAAK5d,KAAO8Y,EAAOI,eAIjB0E,EAAKxZ,eACPwZ,EAAK7d,YAAcoZ,EAAYG,KAGR,kBAAdsE,EAAK5d,KACd,OAAQ4d,EAAK5d,KAAKyX,eAChB,IAAK,SACHmG,EAAK5d,KAAO8Y,EAAOC,OACnB,MAEF,IAAK,kBACH6E,EAAK5d,KAAO8Y,EAAOE,gBACnB,MAEF,IAAK,SACL,IAAK,SACH4E,EAAK5d,KAAO8Y,EAAOG,OACnB,MAEF,IAAK,gBACH2E,EAAK5d,KAAO8Y,EAAOI,cAIzB,GAAgC,kBAArB0E,EAAK7d,YACd,OAAQ6d,EAAK7d,YAAY0X,eACvB,IAAK,MACHmG,EAAK7d,YAAcoZ,EAAYC,IAC/B,MAEF,IAAK,QACHwE,EAAK7d,YAAcoZ,EAAYE,MAC/B,MAEF,IAAK,MACHuE,EAAK7d,YAAcoZ,EAAYG,IAKrC,OAAOsE,EAET,SAASE,EAAMR,EAAMC,GACnB,IAAK,IAAIH,KAAQG,EACXA,EAAK1c,eAAeuc,KACtBE,EAAKF,GAAQG,EAAKH,IAItB,OAAOE,EAET,SAASS,EAAahW,GAGpB,IAFA,IAAIiW,EAASvW,UAAUrF,OAAS,QAAsBgB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,GAExEvC,EAAI,EAAG9C,EAAS2F,EAAI3F,OAAQ8C,EAAI9C,EAAQ8C,IAAK,CACpD,IAAIe,EAAQ8B,EAAI7C,GAEZiD,MAAMC,QAAQnC,GAChB8X,EAAa9X,EAAO+X,QAEN5a,IAAV6C,GACF+X,EAAOjf,KAAKkH,GAKlB,OAAO+X,EAGT,IAAIC,EAAqB1Y,OAAO2Y,OAAO,CACrCrB,YAAaA,EACbK,UAAWA,EACXxD,MAAOA,EACP2D,SAAUA,EACVM,YAAaA,EACbG,MAAOA,EACPC,aAAcA,IA0BZI,EAAY,SAAmBpb,EAAGqb,EAAgBC,GACpDrb,MAAMgE,KAAKiM,MACX,IAAIqL,EAAWvb,EAAEub,UAAYD,EAI7B,GAHApL,KAAKsL,QAAUxb,EAAEwb,QACjBtL,KAAKuL,MAAQzb,EAAEyb,MAEXJ,GAAkBE,EAAU,CAC9B,IAAIG,EAAQL,EAAeM,SAASJ,GAChCK,EAAM9B,EAAY9Z,EAAEsR,MAAOoK,GAC3BzB,EAAO2B,EAAI3B,KACX4B,EAAMD,EAAI1B,OACV4B,EAAW9b,EAAEiE,MAAQ6V,EAAY9Z,EAAEiE,KAAMyX,GAAOzB,KAChD8B,EAAQL,EAAQA,EAAM1I,MAAM,MAAQ,GAOxC,GANA9C,KAAKkC,KAAOpS,EAAEoS,MAAQ,SACtBlC,KAAKqL,SAAWA,EAChBrL,KAAKoB,MAAQtR,EAAEsR,MACfpB,KAAK+J,KAAuB,kBAATA,EAAoBA,EAAO,EAAI,KAClD/J,KAAKgK,OAAS2B,GAET3L,KAAK+J,MAAQ/J,KAAKuL,MAAO,CAC5B,IAAIO,EAAQ9L,KAAKuL,MAAM9I,MAAM,sCAEzBqJ,IACEA,EAAM,KACR9L,KAAK+J,KAAOnH,SAASkJ,EAAM,IAAM,GAG/BA,EAAM,KACR9L,KAAKgK,OAASpH,SAASkJ,EAAM,MAKnC9L,KAAK4L,SAAWA,EAAW,EAC3B5L,KAAK+L,YAAcF,EAAMD,GACzB5L,KAAKgM,QAAU,CAACH,EAAM7L,KAAK+J,KAAO,GAAI8B,EAAM7L,KAAK+J,KAAO,GAAI8B,EAAM7L,KAAK+J,SAI3E,GAA6B,qBAAlBzX,OAAOS,OAAwB,CACxC,IAAIkZ,EAAI,aAERA,EAAExa,UAAY1B,MAAM0B,UACpByZ,EAAUzZ,UAAY,IAAIwa,OAE1Bf,EAAUzZ,UAAYa,OAAOS,OAAOhD,MAAM0B,WAG5CyZ,EAAUzZ,UAAUD,YAAc0Z,EASlCA,EAAUzZ,UAAUqC,SAAW,WAC7B,IAAItG,EAAUgH,UAAUrF,OAAS,QAAsBgB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,GAC9E8W,EAAU,GACVU,EAAUhM,KAAKgM,SAAW,GAC1BE,EAAQ,GAERC,EAAU,SAAiBC,GAC7B,OAAOA,GAGT,GAAI5e,EAAQ2e,QAAS,CACnB,IAAIjK,EAAO9Q,EAAQ5D,EAAQ2e,SAE3B,GAAa,aAATjK,EACF,MAAMnS,MAAM,+CAA+CzB,OAAO4T,EAAM,MAG1EiK,EAAU3e,EAAQ2e,QAGpB,GAAkB,OAAdnM,KAAK+J,KAAe,CAKtB,GAJ0B,kBAAfiC,EAAQ,IACjBE,EAAMpgB,KAAKqgB,EAAQ,GAAG7d,OAAO0R,KAAK+J,KAAO,EAAG,KAAKzb,OAAO0d,EAAQ,IAAK,SAG7C,kBAAfA,EAAQ,GAAiB,CAClC,IAAIK,EAAW,GAAG/d,OAAO0R,KAAK+J,KAAM,KAEhCiC,EAAQ,KACVK,GAAYL,EAAQ,GAAGvH,MAAM,EAAGzE,KAAKgK,QAAUmC,EAAQA,EAAQA,EAAQH,EAAQ,GAAGM,OAAOtM,KAAKgK,OAAQ,GAAI,QAAUgC,EAAQ,GAAGvH,MAAMzE,KAAKgK,OAAS,GAAI,OAAQ,YAGjKkC,EAAMpgB,KAAKugB,GAGa,kBAAfL,EAAQ,IACjBE,EAAMpgB,KAAKqgB,EAAQ,GAAG7d,OAAO0R,KAAK+J,KAAO,EAAG,KAAKzb,OAAO0d,EAAQ,IAAK,SAGvEE,EAAQ,GAAG5d,OAAO4d,EAAM5K,KAAK,MAAQ6K,EAAQ,GAAI,SAAU,MAoB7D,OAjBAb,GAAWa,EAAQ,GAAG7d,OAAO0R,KAAKkC,KAAM,WAAW5T,OAAO0R,KAAKsL,SAAU,OAErEtL,KAAKqL,WACPC,GAAWa,EAAQ,OAAQ,OAASnM,KAAKqL,UAGvCrL,KAAK+J,OACPuB,GAAWa,EAAQ,YAAY7d,OAAO0R,KAAK+J,KAAM,aAAazb,OAAO0R,KAAKgK,OAAS,EAAG,KAAM,SAG9FsB,GAAW,KAAKhd,OAAO4d,GAEnBlM,KAAK4L,WACPN,GAAW,GAAGhd,OAAO6d,EAAQ,QAAS,QAAUnM,KAAKqL,UAAY,IAAK,MACtEC,GAAW,GAAGhd,OAAO6d,EAAQnM,KAAK4L,SAAU,QAAS,KAAKtd,OAAO0R,KAAK+L,YAAa,OAG9ET,GAGT,IAAIiB,EAEJ,SAAUlK,GAGR,SAASkK,EAASC,EAAUC,EAAYC,EAAWtL,EAAOmE,EAAiBC,GACzE,IAAIhD,EAiBJ,OAfA9Q,EAAgBsO,KAAMuM,IAEtB/J,EAAQ5N,EAA2BoL,KAAM9M,EAAgBqZ,GAAUxY,KAAKiM,QAClEyM,WAAaA,EACnBjK,EAAMkK,UAAYA,EAClBlK,EAAMmK,gBAAkBD,EACxBlK,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAMgK,SAAWhK,EAAMoK,YAAYJ,GACnChK,EAAMqK,oBAAiB1c,EAEvBqS,EAAMiD,mBAAmBD,GAEzBhD,EAAMkD,UAAUlD,EAAMgK,SAAU/X,EAAuB+N,IAEhDA,EA6IT,OAjKA5P,EAAU2Z,EAAUlK,GAuBpB5P,EAAa8Z,EAAU,CAAC,CACtB/Z,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKwM,WACPxM,KAAKwM,SAAWhL,EAAQsL,WAAW9M,KAAKwM,WAGtCxM,KAAKyM,aACPzM,KAAKyM,WAAajL,EAAQsL,WAAW9M,KAAKyM,aAGxCzM,KAAK0M,YACP1M,KAAK0M,UAAYlL,EAAQC,MAAMzB,KAAK0M,cAGvC,CACDla,IAAK,gBACLQ,MAAO,SAAuBwZ,EAAUC,EAAYE,GAElD,IAAII,EAAc,IAAIR,EADtBC,EAAWxM,KAAK4M,YAAYJ,GACaC,GAAczM,KAAKyM,WAAY,KAAMzM,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwF,kBAGrH,OAFAuH,EAAYJ,eAAmC,MAAlBA,EAAyBA,EAAiB3M,KAAK2M,eAC5EI,EAAYC,WAAahN,KAAKgN,WACvBD,IAER,CACDva,IAAK,cACLQ,MAAO,SAAqBia,GAC1B,OAAKA,GAIc,kBAARA,GACTjN,KAAKlS,MAAMof,UAAUD,EAAK,CAAC,YAAajN,KAAKa,OAAQb,KAAKc,WAAW,SAAU+G,EAAKkD,GAClF,GAAIlD,EACF,MAAM,IAAIqD,EAAU,CAClB9J,MAAOyG,EAAIzG,MACXkK,QAASzD,EAAIyD,SACZtL,KAAKlS,MAAMqf,QAASnN,KAAKc,UAAUuK,UAGxC4B,EAAMlC,EAAO,GAAGyB,YAIbS,GAhBE,CAAC,IAAI7H,EAAQ,GAAI,KAAK,EAAOpF,KAAKa,OAAQb,KAAKc,cAkBzD,CACDtO,IAAK,uBACLQ,MAAO,WACL,IACIoa,EAAO,CAAC,IAAIb,EAAS,CADhB,IAAInH,EAAQ,GAAI,KAAK,EAAOpF,KAAKa,OAAQb,KAAKc,YACxB,KAAM,KAAMd,KAAKa,OAAQb,KAAKc,YAE7D,OADAsM,EAAK,GAAGJ,YAAa,EACdI,IAER,CACD5a,IAAK,QACLQ,MAAO,SAAe8Q,GACpB,IAEIuJ,EACApb,EAHAua,EAAWxM,KAAKwM,SAChBc,EAAMd,EAASrd,OAMnB,GAAa,KAFbke,GADAvJ,EAAQA,EAAMyJ,iBACDpe,SAEKme,EAAMD,EACtB,OAAO,EAEP,IAAKpb,EAAI,EAAGA,EAAIob,EAAMpb,IACpB,GAAIua,EAASva,GAAGe,QAAU8Q,EAAM7R,GAC9B,OAAO,EAKb,OAAOob,IAER,CACD7a,IAAK,gBACLQ,MAAO,WACL,GAAIgN,KAAK6M,eACP,OAAO7M,KAAK6M,eAGd,IAAIL,EAAWxM,KAAKwM,SAAS9J,KAAI,SAAU0B,GACzC,OAAOA,EAAEiB,WAAWrS,OAASoR,EAAEpR,MAAMA,OAASoR,EAAEpR,UAC/CsO,KAAK,IAAImB,MAAM,+BAUlB,OARI+J,EACkB,MAAhBA,EAAS,IACXA,EAASgB,QAGXhB,EAAW,GAGNxM,KAAK6M,eAAiBL,IAE9B,CACDha,IAAK,uBACLQ,MAAO,WACL,OAAQgN,KAAKgN,YAAuC,IAAzBhN,KAAKwM,SAASrd,QAA2C,MAA3B6Q,KAAKwM,SAAS,GAAGxZ,QAAwD,MAAtCgN,KAAKwM,SAAS,GAAGnH,WAAWrS,OAAuD,KAAtCgN,KAAKwM,SAAS,GAAGnH,WAAWrS,SAEtK,CACDR,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAI4L,EAAiB3M,KAAK0M,WAAa1M,KAAK0M,UAAU/H,KAAK5D,GACvDyL,EAAWxM,KAAKwM,SAChBC,EAAazM,KAAKyM,WAOtB,OANAD,EAAWA,GAAYA,EAAS9J,KAAI,SAAU5S,GAC5C,OAAOA,EAAE6U,KAAK5D,MAEhB0L,EAAaA,GAAcA,EAAW/J,KAAI,SAAU+K,GAClD,OAAOA,EAAO9I,KAAK5D,MAEdf,KAAK0N,cAAclB,EAAUC,EAAYE,KAEjD,CACDna,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAItP,EAOJ,IAJM8O,GAAYA,EAAQ4E,eAAwD,KAAtC3F,KAAKwM,SAAS,GAAGnH,WAAWrS,OACtEuO,EAAOL,IAAI,IAAKlB,KAAKO,WAAYP,KAAKQ,YAGnCvO,EAAI,EAAGA,EAAI+N,KAAKwM,SAASrd,OAAQ8C,IAC1B+N,KAAKwM,SAASva,GAChBgP,OAAOF,EAASQ,KAG3B,CACD/O,IAAK,cACLQ,MAAO,WACL,OAAOgN,KAAK2M,mBAITJ,EAlKT,CAmKExM,GAEFwM,EAAS9a,UAAUyQ,KAAO,WAE1B,IAAIyL,EAEJ,SAAUtL,GAGR,SAASsL,EAAM3a,GACb,IAAIwP,EAMJ,GAJA9Q,EAAgBsO,KAAM2N,GAEtBnL,EAAQ5N,EAA2BoL,KAAM9M,EAAgBya,GAAO5Z,KAAKiM,QAEhEhN,EACH,MAAM,IAAIjD,MAAM,oCASlB,OANKmF,MAAMC,QAAQnC,GAGjBwP,EAAMxP,MAAQA,EAFdwP,EAAMxP,MAAQ,CAACA,GAKVwP,EAoCT,OAvDA5P,EAAU+a,EAAOtL,GAsBjB5P,EAAakb,EAAO,CAAC,CACnBnb,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKhN,QACPgN,KAAKhN,MAAQwO,EAAQsL,WAAW9M,KAAKhN,UAGxC,CACDR,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAA0B,IAAtBf,KAAKhN,MAAM7D,OACN6Q,KAAKhN,MAAM,GAAG2R,KAAK5D,GAEnB,IAAI4M,EAAM3N,KAAKhN,MAAM0P,KAAI,SAAU0B,GACxC,OAAOA,EAAEO,KAAK5D,SAInB,CACDvO,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAItP,EAEJ,IAAKA,EAAI,EAAGA,EAAI+N,KAAKhN,MAAM7D,OAAQ8C,IACjC+N,KAAKhN,MAAMf,GAAGgP,OAAOF,EAASQ,GAE1BtP,EAAI,EAAI+N,KAAKhN,MAAM7D,QACrBoS,EAAOL,IAAIH,GAAWA,EAAQxU,SAAW,IAAM,UAMhDohB,EAxDT,CAyDE5N,GAEF4N,EAAMlc,UAAUyQ,KAAO,QAEvB,IAAI0L,EAEJ,SAAUvL,GAGR,SAASuL,EAAQ5a,GACf,IAAIwP,EAMJ,OAJA9Q,EAAgBsO,KAAM4N,IAEtBpL,EAAQ5N,EAA2BoL,KAAM9M,EAAgB0a,GAAS7Z,KAAKiM,QACjEhN,MAAQA,EACPwP,EAiBT,OA1BA5P,EAAUgb,EAASvL,GAYnB5P,EAAamb,EAAS,CAAC,CACrBpb,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,GAAmB,MAAfvB,KAAKhN,MACP,KAAM,CACJkP,KAAM,SACNoJ,QAAS,4BAIb/J,EAAOL,IAAIlB,KAAKhN,WAIb4a,EA3BT,CA4BE7N,GAEF6N,EAAQnc,UAAUyQ,KAAO,UACzB0L,EAAQC,KAAO,IAAID,EAAQ,QAC3BA,EAAQE,MAAQ,IAAIF,EAAQ,SAE5B,IAAIG,EAEJ,SAAU1L,GAGR,SAAS0L,EAAU/a,EAAOoO,EAAOmE,EAAiByI,EAAUC,EAAazI,GACvE,IAAIhD,EAcJ,OAZA9Q,EAAgBsO,KAAM+N,IAEtBvL,EAAQ5N,EAA2BoL,KAAM9M,EAAgB6a,GAAWha,KAAKiM,QACnEhN,MAAQA,EACdwP,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAMwL,SAAWA,EACjBxL,EAAMyL,YAAqC,qBAAhBA,GAAsCA,EACjEzL,EAAM0L,WAAY,EAElB1L,EAAMiD,mBAAmBD,GAElBhD,EA6BT,OA9CA5P,EAAUmb,EAAW1L,GAoBrB5P,EAAasb,EAAW,CAAC,CACvBvb,IAAK,OACLQ,MAAO,WACL,OAAO,IAAI+a,EAAU/N,KAAKhN,MAAOgN,KAAKa,OAAQb,KAAKc,UAAWd,KAAKgO,SAAUhO,KAAKiO,YAAajO,KAAKwF,oBAErG,CACDhT,IAAK,UACLQ,MAAO,SAAiB8Q,GACtB,OAAOA,EAAMZ,OAASlD,KAAKkD,UAAYY,EAAMZ,QAAU,OAAI/S,IAE5D,CACDqC,IAAK,gBACLQ,MAAO,WACL,OAAOgN,KAAKiO,cAEb,CACDzb,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BvB,KAAKG,YAAcgO,QAAQnO,KAAKhN,OAE5BgN,KAAKG,aACPoB,EAAOL,IAAIlB,KAAKhN,MAAOgN,KAAKc,UAAWd,KAAKa,OAAQb,KAAKgO,cAKxDD,EA/CT,CAgDEhO,GAEFgO,EAAUtc,UAAUyQ,KAAO,YAE3B,IAAIkM,EAAOvI,EAEPwI,EAEJ,SAAUhM,GAGR,SAASgM,EAAYC,EAAMtb,EAAOub,EAAW1D,EAAOzJ,EAAOmE,EAAiBiJ,EAAQC,GAClF,IAAIjM,EAiBJ,OAfA9Q,EAAgBsO,KAAMqO,IAEtB7L,EAAQ5N,EAA2BoL,KAAM9M,EAAgBmb,GAAata,KAAKiM,QACrEsO,KAAOA,EACb9L,EAAMxP,MAAQA,aAAiB+M,EAAO/M,EAAQ,IAAI2a,EAAM,CAAC3a,EAAQ,IAAI+a,EAAU/a,GAAS,OACxFwP,EAAM+L,UAAYA,EAAY,IAAIjgB,OAAOigB,EAAUrJ,QAAU,GAC7D1C,EAAMqI,MAAQA,EACdrI,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAMgM,OAASA,IAAU,EACzBhM,EAAMiM,cAAwBte,IAAbse,EAAyBA,EAAWH,EAAK1I,QAA6B,MAAnB0I,EAAK1I,OAAO,GAChFpD,EAAM0L,WAAY,EAElB1L,EAAMkD,UAAUlD,EAAMxP,MAAOyB,EAAuB+N,IAE7CA,EAiFT,OArGA5P,EAAUyb,EAAahM,GAuBvB5P,EAAa4b,EAAa,CAAC,CACzB7b,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAIlB,KAAKsO,MAAQvN,EAAQxU,SAAW,IAAM,MAAOyT,KAAKO,WAAYP,KAAKQ,YAE9E,IACER,KAAKhN,MAAMiO,OAAOF,EAASQ,GAC3B,MAAOzR,GAGP,MAFAA,EAAEsR,MAAQpB,KAAKa,OACf/Q,EAAEub,SAAWrL,KAAKc,UAAUuK,SACtBvb,EAGRyR,EAAOL,IAAIlB,KAAKuO,WAAavO,KAAKwO,QAAUzN,EAAQ2N,UAAY3N,EAAQxU,SAAW,GAAK,KAAMyT,KAAKc,UAAWd,KAAKa,UAEpH,CACDrO,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IACI4N,EAEAC,EAHAC,GAAa,EAEbP,EAAOtO,KAAKsO,KAEZG,EAAWzO,KAAKyO,SAEA,kBAATH,IAGTA,EAAuB,IAAhBA,EAAKnf,QAAgBmf,EAAK,aAAcV,EAAUU,EAAK,GAAGtb,MAAQ8b,EAAS/N,EAASuN,GAC3FG,GAAW,GAIA,SAATH,GAAmBvN,EAAQhU,OAASqhB,EAAKtI,SAC3C+I,GAAa,EACbF,EAAW5N,EAAQhU,KACnBgU,EAAQhU,KAAOqhB,EAAKrI,iBAGtB,IAIE,GAHAhF,EAAQgO,eAAejjB,KAAK,IAC5B8iB,EAAa5O,KAAKhN,MAAM2R,KAAK5D,IAExBf,KAAKyO,UAAgC,oBAApBG,EAAW1M,KAC/B,KAAM,CACJoJ,QAAS,8CACTlK,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,UAI9B,IAAIkD,EAAYvO,KAAKuO,UACjBS,EAAkBjO,EAAQgO,eAAeE,MAM7C,OAJKV,GAAaS,EAAgBT,YAChCA,EAAYS,EAAgBT,WAGvB,IAAIF,EAAYC,EAAMM,EAAYL,EAAWvO,KAAK6K,MAAO7K,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwO,OAAQC,GAC/G,MAAO3e,GAMP,KALuB,kBAAZA,EAAEsR,QACXtR,EAAEsR,MAAQpB,KAAKQ,WACf1Q,EAAEub,SAAWrL,KAAKO,WAAW8K,UAGzBvb,EACN,QACI+e,IACF9N,EAAQhU,KAAO4hB,MAIpB,CACDnc,IAAK,gBACLQ,MAAO,WACL,OAAO,IAAIqb,EAAYrO,KAAKsO,KAAMtO,KAAKhN,MAAO,aAAcgN,KAAK6K,MAAO7K,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwO,YAI5GH,EAtGT,CAuGEtO,GAEF,SAAS+O,EAAS/N,EAASuN,GACzB,IACIrc,EADAe,EAAQ,GAER8W,EAAIwE,EAAKnf,OACToS,EAAS,CACXL,IAAK,SAAa7B,GAChBrM,GAASqM,IAIb,IAAKpN,EAAI,EAAGA,EAAI6X,EAAG7X,IACjBqc,EAAKrc,GAAG0S,KAAK5D,GAASE,OAAOF,EAASQ,GAGxC,OAAOvO,EAGTqb,EAAY5c,UAAUyQ,KAAO,cAE7B,IAAIgN,EAAY,SAASA,EAAUnO,EAASoO,EAAKC,GAC/C,IAAIrE,EAAS,GAEb,GAAIhK,EAAQjQ,kBAAoBiQ,EAAQxU,SACtC,OAAQwU,EAAQjQ,iBACd,IAAK,WACHia,EAASmE,EAAUG,UAAUF,GAC7B,MAEF,IAAK,aACHpE,EAASmE,EAAUI,aAAaH,GAChC,MAEF,IAAK,MACHpE,EAASmE,EAAUG,UAAUF,IAAQC,GAAiB,IAAMF,EAAUI,aAAaH,GAKzF,OAAOpE,GAGTmE,EAAUG,UAAY,SAAUF,GAC9B,MAAO,WAAW7gB,OAAO6gB,EAAID,UAAUK,WAAY,MAAMjhB,OAAO6gB,EAAID,UAAUM,SAAU,UAG1FN,EAAUI,aAAe,SAAUH,GACjC,IAAIM,EAAuBN,EAAID,UAAUM,SAMzC,MAJK,gBAAgBnf,KAAKof,KACxBA,EAAuB,UAAUnhB,OAAOmhB,IAGnC,gDAAgDnhB,OAAOmhB,EAAqBniB,QAAQ,eAAe,SAAU8G,GAKlH,MAJS,MAALA,IACFA,EAAI,KAGC,KAAK9F,OAAO8F,MACjB,6BAA6B9F,OAAO6gB,EAAID,UAAUK,WAAY,SAGpE,IAAIG,GAEJ,SAAUrN,GAGR,SAASqN,EAAQ1c,EAAO2c,EAAevO,EAAOmE,GAC5C,IAAI/C,EAUJ,OARA9Q,EAAgBsO,KAAM0P,IAEtBlN,EAAQ5N,EAA2BoL,KAAM9M,EAAgBwc,GAAS3b,KAAKiM,QACjEhN,MAAQA,EACdwP,EAAMmN,cAAgBA,EACtBnN,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM0L,WAAY,EACX1L,EAoBT,OAjCA5P,EAAU8c,EAASrN,GAgBnB5P,EAAaid,EAAS,CAAC,CACrBld,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC1BvB,KAAKkP,WACP3N,EAAOL,IAAIgO,EAAUnO,EAASf,MAAOA,KAAKO,WAAYP,KAAKQ,YAG7De,EAAOL,IAAIlB,KAAKhN,SAEjB,CACDR,IAAK,WACLQ,MAAO,SAAkB+N,GACvB,IAAI6O,EAAe7O,EAAQxU,UAA8B,MAAlByT,KAAKhN,MAAM,GAClD,OAAOgN,KAAK2P,eAAiBC,MAI1BF,EAlCT,CAmCE3P,GAEF2P,GAAQje,UAAUyQ,KAAO,UAEzB,IAAI2N,GAAW,GAEXC,GAAmB,SAA0BC,EAAUC,EAAaC,GACtE,GAAKF,EAIL,IAAK,IAAI9d,EAAI,EAAGA,EAAIge,EAAiB9gB,OAAQ8C,IACvC8d,EAASniB,eAAeqiB,EAAiBhe,MAC3C+d,EAAYC,EAAiBhe,IAAM8d,EAASE,EAAiBhe,MAS/Die,GAAsB,CAC1B,QACA,cACA,WACA,gBACA,WACA,kBACA,WACA,aACA,aACA,OACA,eAEA,iBAEA,iBAGAL,GAASM,MAAQ,SAAU3iB,GACzBsiB,GAAiBtiB,EAASwS,KAAMkQ,IAEN,kBAAflQ,KAAKvT,QACduT,KAAKvT,MAAQ,CAACuT,KAAKvT,SAIvB,IAAI2jB,GAAqB,CAAC,QAC1B,WACA,OACA,cACA,YACA,iBACA,UACA,oBACA,gBACA,iBACA,eAGA,SAASC,GAAeC,GACtB,OAAQ,sBAAsBjgB,KAAKigB,GAGrC,SAASC,GAAoBD,GAC3B,MAA0B,MAAnBA,EAAK1K,OAAO,GA+HrB,SAAS4K,GAAaC,GACpB,MAAO,CACLC,MAAO,GACPxP,IAAK,SAAaoN,EAAMqC,GAGtBrC,EAAOA,EAAK9J,cAERxE,KAAK0Q,MAAM9iB,eAAe0gB,GAE9BtO,KAAK0Q,MAAMpC,GAAQqC,GAErBC,YAAa,SAAqBC,GAChC,IAAIrO,EAAQxC,KAEZ1N,OAAOwe,KAAKD,GAAWjQ,SAAQ,SAAU0N,GACvC9L,EAAMtB,IAAIoN,EAAMuC,EAAUvC,QAG9BhO,IAAK,SAAagO,GAChB,OAAOtO,KAAK0Q,MAAMpC,IAASmC,GAAQA,EAAKnQ,IAAIgO,IAE9CyC,kBAAmB,WACjB,OAAO/Q,KAAK0Q,OAEdM,QAAS,WACP,OAAOR,GAAaxQ,OAEtBjN,OAAQ,SAAgB0d,GACtB,OAAOD,GAAaC,KAzJ1BZ,GAASoB,KAET,WACE,SAASC,EAAO1jB,EAAS2jB,GACvBzf,EAAgBsO,KAAMkR,GAEtBpB,GAAiBtiB,EAASwS,KAAMoQ,IAEN,kBAAfpQ,KAAKvT,QACduT,KAAKvT,MAAQ,CAACuT,KAAKvT,QAGrBuT,KAAKmR,OAASA,GAAU,GACxBnR,KAAK+O,eAAiB/O,KAAK+O,gBAAkB,GAC7C/O,KAAKoR,QAAS,EACdpR,KAAKqR,QAAS,EA0GhB,OAvGA5e,EAAaye,EAAQ,CAAC,CACpB1e,IAAK,YACLQ,MAAO,WACAgN,KAAKsR,YACRtR,KAAKsR,UAAY,IAGnBtR,KAAKsR,UAAUxlB,MAAK,GACpBkU,KAAKoR,QAAS,IAEf,CACD5e,IAAK,WACLQ,MAAO,WACLgN,KAAKsR,UAAUrC,MAEVjP,KAAKsR,YACRtR,KAAKoR,QAAS,KAGjB,CACD5e,IAAK,gBACLQ,MAAO,WACAgN,KAAKuR,cACRvR,KAAKuR,YAAc,IAGrBvR,KAAKuR,YAAYzlB,MAAK,KAEvB,CACD0G,IAAK,mBACLQ,MAAO,WACLgN,KAAKuR,YAAYtC,QAElB,CACDzc,IAAK,WACLQ,MAAO,SAAkB0O,GACvB,QAAK1B,KAAKqR,WAIC,MAAP3P,GAAc1B,KAAKjT,OAAS8Y,EAAOC,QAAY9F,KAAKuR,aAAgBvR,KAAKuR,YAAYpiB,YAIrF6Q,KAAKjT,KAAO8Y,EAAOE,kBACd/F,KAAKuR,aAAevR,KAAKuR,YAAYpiB,UAK/C,CACDqD,IAAK,sBACLQ,MAAO,SAA6Bsd,GAElC,OADiBtQ,KAAKlT,cAAgBoZ,EAAYE,MAAQmK,GAAsBF,IAC9DC,KAEnB,CACD9d,IAAK,cACLQ,MAAO,SAAqBsd,EAAMzjB,GAChC,IAAI2kB,EASJ,OARA3kB,EAAWA,GAAY,GACvB2kB,EAAUxR,KAAKyR,cAAc5kB,EAAWyjB,GAGpCC,GAAoBD,IAASD,GAAexjB,KAA8C,IAAjC0jB,GAAoBiB,KAC/EA,EAAU,KAAKljB,OAAOkjB,IAGjBA,IAER,CACDhf,IAAK,gBACLQ,MAAO,SAAuBsd,GAC5B,IACIoB,EADAC,EAAWrB,EAAKxN,MAAM,KAAK8O,UAI/B,IAFAtB,EAAO,GAEoB,IAApBqB,EAASxiB,QAGd,OAFAuiB,EAAUC,EAAS1C,OAGjB,IAAK,IACH,MAEF,IAAK,KACiB,IAAhBqB,EAAKnhB,QAA0C,OAA1BmhB,EAAKA,EAAKnhB,OAAS,GAC1CmhB,EAAKxkB,KAAK4lB,GAEVpB,EAAKrB,MAGP,MAEF,QACEqB,EAAKxkB,KAAK4lB,GAKhB,OAAOpB,EAAKhP,KAAK,SAId4P,EAvHT,GA4JA,IAAIW,GAAmBrB,GAAa,MAEhCsB,GAAc,CAChBnN,KAAM,WACJ,IAAIP,EAAIpE,KAAK+R,OACTjiB,EAAIkQ,KAAKgS,OAEb,GAAIliB,EACF,MAAMA,EAGR,GAAS,MAALsU,EACF,OAAOA,EAAIwJ,EAAQC,KAAOD,EAAQE,OAGtC9a,MAAO,SAAeoR,GACpBpE,KAAK+R,OAAS3N,GAEhB8H,MAAO,SAAepc,GACpBkQ,KAAKgS,OAASliB,GAEhBmiB,MAAO,WACLjS,KAAK+R,OAAS/R,KAAKgS,OAAS,OAI5BE,GAEJ,SAAU7P,GAGR,SAAS6P,EAAQC,EAAWC,EAAOzlB,EAAe6Y,GAChD,IAAIhD,EAoBJ,OAlBA9Q,EAAgBsO,KAAMkS,IAEtB1P,EAAQ5N,EAA2BoL,KAAM9M,EAAgBgf,GAASne,KAAKiM,QACjEmS,UAAYA,EAClB3P,EAAM4P,MAAQA,EACd5P,EAAM6P,SAAW,GACjB7P,EAAM8P,WAAa,KACnB9P,EAAM+P,YAAc,KACpB/P,EAAM7V,cAAgBA,EAEtB6V,EAAMiD,mBAAmBD,GAEzBhD,EAAM0L,WAAY,EAElB1L,EAAMkD,UAAUlD,EAAM2P,UAAW1d,EAAuB+N,IAExDA,EAAMkD,UAAUlD,EAAM4P,MAAO3d,EAAuB+N,IAE7CA,EA+2BT,OAt4BA5P,EAAUsf,EAAS7P,GA0BnB5P,EAAayf,EAAS,CAAC,CACrB1f,IAAK,gBACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKvT,MACPuT,KAAKvT,MAAQ+U,EAAQsL,WAAW9M,KAAKvT,OAAO,GACnCuT,KAAKmS,YACdnS,KAAKmS,UAAY3Q,EAAQsL,WAAW9M,KAAKmS,YAGvCnS,KAAKoS,OAASpS,KAAKoS,MAAMjjB,SAC3B6Q,KAAKoS,MAAQ5Q,EAAQsL,WAAW9M,KAAKoS,UAGxC,CACD5f,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIoR,EACAK,EACAC,EACAxgB,EACAygB,EACAC,GAAwB,EAE5B,GAAI3S,KAAKmS,YAAcK,EAASxS,KAAKmS,UAAUhjB,QAAS,CAOtD,IANAgjB,EAAY,IAAIjd,MAAMsd,GACtBV,GAAY5F,MAAM,CAChBhK,KAAM,SACNoJ,QAAS,6DAGNrZ,EAAI,EAAGA,EAAIugB,EAAQvgB,IAAK,CAC3BwgB,EAAWzS,KAAKmS,UAAUlgB,GAAG0S,KAAK5D,GAElC,IAAK,IAAI6R,EAAI,EAAGA,EAAIH,EAASjG,SAASrd,OAAQyjB,IAC5C,GAAIH,EAASjG,SAASoG,GAAGtN,WAAY,CACnCoN,GAAc,EACd,MAIJP,EAAUlgB,GAAKwgB,EAEXA,EAAS9F,iBACXgG,GAAwB,GAI5B,GAAID,EAAa,CACf,IAAIG,EAAmB,IAAI3d,MAAMsd,GAEjC,IAAKvgB,EAAI,EAAGA,EAAIugB,EAAQvgB,IACtBwgB,EAAWN,EAAUlgB,GACrB4gB,EAAiB5gB,GAAKwgB,EAASvP,MAAMnC,GAGvCf,KAAKlS,MAAMof,UAAU2F,EAAiBvR,KAAK,KAAM,CAAC,aAAc6Q,EAAU,GAAG3R,WAAY2R,EAAU,GAAG5R,YAAY,SAAUsH,EAAKkD,GAC3HA,IACFoH,EAAYrH,EAAaC,OAK/B+G,GAAYG,aAEZU,GAAwB,EAG1B,IAEIG,EACAC,EAHAX,EAAQpS,KAAKoS,MAAQnI,EAAUjK,KAAKoS,OAAS,KAC7CY,EAAU,IAAId,EAAQC,EAAWC,EAAOpS,KAAKrT,cAAeqT,KAAKwF,kBAGrEwN,EAAQC,gBAAkBjT,KAC1BgT,EAAQE,KAAOlT,KAAKkT,KACpBF,EAAQG,UAAYnT,KAAKmT,UACzBH,EAAQI,aAAepT,KAAKoT,aAExBpT,KAAKkP,YACP8D,EAAQ9D,UAAYlP,KAAKkP,WAGtByD,IACHP,EAAMjjB,OAAS,GAKjB6jB,EAAQnB,iBAAmB,SAAUV,GAKnC,IAJA,IAEIrF,EAFA7Z,EAAI,EACJ6X,EAAIqH,EAAOhiB,OAGR8C,IAAM6X,IAAK7X,EAGhB,GAFA6Z,EAAQqF,EAAOlf,GAAG4f,iBAGhB,OAAO/F,EAIX,OAAO+F,GAbkB,CAczB9Q,EAAQoQ,QAAQH,UAGlB,IAAIqC,EAAYtS,EAAQoQ,OACxBkC,EAAUC,QAAQN,GAElB,IAAIO,EAAexS,EAAQoR,UAEtBoB,IACHxS,EAAQoR,UAAYoB,EAAe,IAGrCA,EAAaD,QAAQtT,KAAKmS,YAEtBa,EAAQE,MAAQF,EAAQI,eAAiBJ,EAAQrmB,gBACnDqmB,EAAQQ,YAAYzS,GAKtB,IAAI0S,EAAUT,EAAQZ,MAEtB,IAAKngB,EAAI,EAAG6gB,EAAOW,EAAQxhB,GAAIA,IACzB6gB,EAAKY,YACPD,EAAQxhB,GAAK6gB,EAAKnO,KAAK5D,IAI3B,IAAI4S,EAAkB5S,EAAQ6S,aAAe7S,EAAQ6S,YAAYzkB,QAAU,EAE3E,IAAK8C,EAAI,EAAG6gB,EAAOW,EAAQxhB,GAAIA,IACX,cAAd6gB,EAAK5Q,MAEPkQ,EAAQU,EAAKnO,KAAK5D,GAAS8S,QAAO,SAAU9Q,GAC1C,QAAIA,aAAasL,GAAetL,EAAE0L,YAIxBuE,EAAQvE,SAAS1L,EAAEuL,SAK/BmF,EAAQK,OAAOzf,MAAMof,EAAS5e,EAAmB,CAAC5C,EAAG,GAAG3D,OAAO8jB,KAC/DngB,GAAKmgB,EAAMjjB,OAAS,EACpB6jB,EAAQe,cACe,iBAAdjB,EAAK5Q,OAEdkQ,EAAQU,EAAKnO,KAAK5D,GAASqR,MAAMyB,QAAO,SAAU9Q,GAChD,QAAIA,aAAasL,GAAetL,EAAE0L,aAOpCgF,EAAQK,OAAOzf,MAAMof,EAAS5e,EAAmB,CAAC5C,EAAG,GAAG3D,OAAO8jB,KAC/DngB,GAAKmgB,EAAMjjB,OAAS,EACpB6jB,EAAQe,cAKZ,IAAK9hB,EAAI,EAAG6gB,EAAOW,EAAQxhB,GAAIA,IACxB6gB,EAAKY,YACRD,EAAQxhB,GAAK6gB,EAAOA,EAAKnO,KAAOmO,EAAKnO,KAAK5D,GAAW+R,GAKzD,IAAK7gB,EAAI,EAAG6gB,EAAOW,EAAQxhB,GAAIA,IAE7B,GAAI6gB,aAAgBZ,GAAWY,EAAKX,WAAuC,IAA1BW,EAAKX,UAAUhjB,QAE1D2jB,EAAKX,UAAU,IAAMW,EAAKX,UAAU,GAAG6B,uBAGzC,IAFAP,EAAQK,OAAO7hB,IAAK,GAEX2gB,EAAI,EAAGG,EAAUD,EAAKV,MAAMQ,GAAIA,IACnCG,aAAmBhT,IACrBgT,EAAQtN,mBAAmBqN,EAAKtN,kBAE1BuN,aAAmB1E,GAAiB0E,EAAQtE,UAChDgF,EAAQK,SAAS7hB,EAAG,EAAG8gB,IAYnC,GAHAM,EAAU7F,QACV+F,EAAa/F,QAETzM,EAAQ6S,YACV,IAAK3hB,EAAI0hB,EAAiB1hB,EAAI8O,EAAQ6S,YAAYzkB,OAAQ8C,IACxD8O,EAAQ6S,YAAY3hB,GAAGgiB,gBAAgB9B,GAI3C,OAAOa,IAER,CACDxgB,IAAK,cACLQ,MAAO,SAAqB+N,GAC1B,IACI9O,EACAiiB,EAFA9B,EAAQpS,KAAKoS,MAIjB,GAAKA,EAIL,IAAKngB,EAAI,EAAGA,EAAImgB,EAAMjjB,OAAQ8C,IACN,WAAlBmgB,EAAMngB,GAAGiQ,QACXgS,EAAc9B,EAAMngB,GAAG0S,KAAK5D,MAERmT,EAAY/kB,QAAiC,IAAvB+kB,EAAY/kB,SACpDijB,EAAM0B,OAAOzf,MAAM+d,EAAOvd,EAAmB,CAAC5C,EAAG,GAAG3D,OAAO4lB,KAC3DjiB,GAAKiiB,EAAY/kB,OAAS,GAE1BijB,EAAM0B,OAAO7hB,EAAG,EAAGiiB,GAGrBlU,KAAK+T,gBAIV,CACDvhB,IAAK,gBACLQ,MAAO,WAQL,OAPa,IAAIkf,EAAQlS,KAAKmS,UAAWnS,KAAKoS,MAAM1P,KAAI,SAAUK,GAChE,OAAIA,EAAEoR,cACGpR,EAAEoR,gBAEFpR,KAEP/C,KAAKrT,cAAeqT,KAAKwF,oBAG9B,CACDhT,IAAK,YACLQ,MAAO,SAAmBkB,GACxB,OAAQA,GAAwB,IAAhBA,EAAK/E,SAGtB,CACDqD,IAAK,iBACLQ,MAAO,SAAwBkB,EAAM6M,GACnC,IAAIqT,EAAepU,KAAKmS,UAAUnS,KAAKmS,UAAUhjB,OAAS,GAE1D,QAAKilB,EAAazH,kBAIdyH,EAAa1H,YAAc0H,EAAa1H,UAAU/H,KAAK,IAAIkL,GAASoB,KAAKlQ,EAASA,EAAQoQ,YAM/F,CACD3e,IAAK,aACLQ,MAAO,WACLgN,KAAKqU,UAAY,KACjBrU,KAAKsS,WAAa,KAClBtS,KAAKuS,YAAc,KACnBvS,KAAKqS,SAAW,KAEjB,CACD7f,IAAK,YACLQ,MAAO,WAwBL,OAvBKgN,KAAKsS,aACRtS,KAAKsS,WAActS,KAAKoS,MAAapS,KAAKoS,MAAMkC,QAAO,SAAUtjB,EAAM+R,GAQrE,GAPIA,aAAasL,IAA8B,IAAftL,EAAE0L,WAChCzd,EAAK+R,EAAEuL,MAAQvL,GAMF,WAAXA,EAAEb,MAAqBa,EAAEmQ,MAAQnQ,EAAEmQ,KAAKqB,UAAW,CACrD,IAAIC,EAAOzR,EAAEmQ,KAAKqB,YAElB,IAAK,IAAIjG,KAAQkG,EACXA,EAAK5mB,eAAe0gB,KACtBtd,EAAKsd,GAAQvL,EAAEmQ,KAAKzE,SAASH,IAKnC,OAAOtd,IACN,IAnB6B,IAsB3BgP,KAAKsS,aAEb,CACD9f,IAAK,aACLQ,MAAO,WAiBL,OAhBKgN,KAAKuS,cACRvS,KAAKuS,YAAevS,KAAKoS,MAAapS,KAAKoS,MAAMkC,QAAO,SAAUtjB,EAAM+R,GACtE,GAAIA,aAAasL,IAA8B,IAAftL,EAAE0L,SAAmB,CACnD,IAAIH,EAAyB,IAAlBvL,EAAEuL,KAAKnf,QAAgB4T,EAAEuL,KAAK,aAAcV,EAAU7K,EAAEuL,KAAK,GAAGtb,MAAQ+P,EAAEuL,KAEhFtd,EAAK,IAAI1C,OAAOggB,IAGnBtd,EAAK,IAAI1C,OAAOggB,IAAOxiB,KAAKiX,GAF5B/R,EAAK,IAAI1C,OAAOggB,IAAS,CAACvL,GAM9B,OAAO/R,IACN,IAZ8B,IAe5BgP,KAAKuS,cAEb,CACD/f,IAAK,WACLQ,MAAO,SAAkBsb,GACvB,IAAImG,EAAOzU,KAAKuU,YAAYjG,GAE5B,GAAImG,EACF,OAAOzU,KAAK0U,WAAWD,KAG1B,CACDjiB,IAAK,WACLQ,MAAO,SAAkBsb,GACvB,IAAImG,EAAOzU,KAAK2U,aAAarG,GAE7B,GAAImG,EACF,OAAOzU,KAAK0U,WAAWD,KAG1B,CACDjiB,IAAK,kBACLQ,MAAO,WACL,IAAK,IAAIf,EAAI+N,KAAKoS,MAAMjjB,OAAQ8C,EAAI,EAAGA,IAAK,CAC1C,IAAIwiB,EAAOzU,KAAKoS,MAAMngB,EAAI,GAE1B,GAAIwiB,aAAgBpG,EAClB,OAAOrO,KAAK0U,WAAWD,MAI5B,CACDjiB,IAAK,aACLQ,MAAO,SAAoB4hB,GACzB,IAAIlgB,EAAOsL,KAEX,SAAS6U,EAAqBJ,GAC5B,OAAIA,EAAKzhB,iBAAiB+a,IAAc0G,EAAKpU,QACX,kBAArBoU,EAAKzhB,MAAMA,MACpBgN,KAAKlS,MAAMof,UAAUuH,EAAKzhB,MAAMA,MAAO,CAAC,QAAS,aAAcyhB,EAAKzhB,MAAMwN,WAAYiU,EAAKlU,YAAY,SAAUsH,EAAKkD,GAChHlD,IACF4M,EAAKpU,QAAS,GAGZ0K,IACF0J,EAAKzhB,MAAQ+X,EAAO,GACpB0J,EAAKlG,UAAYxD,EAAO,IAAM,GAC9B0J,EAAKpU,QAAS,MAIlBoU,EAAKpU,QAAS,EAGToU,GAEAA,EAIX,GAAKvf,MAAMC,QAAQyf,GAEZ,CACL,IAAInU,EAAQ,GAIZ,OAHAmU,EAAQhU,SAAQ,SAAUkJ,GACxBrJ,EAAM3U,KAAK+oB,EAAqB9gB,KAAKW,EAAMoV,OAEtCrJ,EANP,OAAOoU,EAAqB9gB,KAAKW,EAAMkgB,KAS1C,CACDpiB,IAAK,WACLQ,MAAO,WACL,IAAKgN,KAAKoS,MACR,MAAO,GAGT,IAEIngB,EACA6gB,EAHAgC,EAAY,GACZ1C,EAAQpS,KAAKoS,MAIjB,IAAKngB,EAAI,EAAG6gB,EAAOV,EAAMngB,GAAIA,IACvB6gB,EAAKiC,WACPD,EAAUhpB,KAAKgnB,GAInB,OAAOgC,IAER,CACDtiB,IAAK,cACLQ,MAAO,SAAqB8f,GAC1B,IAAIV,EAAQpS,KAAKoS,MAEbA,EACFA,EAAMkB,QAAQR,GAEd9S,KAAKoS,MAAQ,CAACU,GAGhB9S,KAAK0F,UAAUoN,EAAM9S,QAEtB,CACDxN,IAAK,OACLQ,MAAO,SAAcyf,GACnB,IAGIhQ,EACAuS,EAJAtgB,EAAOF,UAAUrF,OAAS,QAAsBgB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAKwL,KAC3E6T,EAASrf,UAAUrF,OAAS,EAAIqF,UAAU,QAAKrE,EAC/CiiB,EAAQ,GAGR5f,EAAMigB,EAASvP,QAEnB,OAAI1Q,KAAOwN,KAAKqS,SACPrS,KAAKqS,SAAS7f,IAGvBwN,KAAKiV,WAAWrU,SAAQ,SAAUkS,GAChC,GAAIA,IAASpe,EACX,IAAK,IAAIke,EAAI,EAAGA,EAAIE,EAAKX,UAAUhjB,OAAQyjB,IAGzC,GAFAnQ,EAAQgQ,EAAShQ,MAAMqQ,EAAKX,UAAUS,IAE3B,CACT,GAAIH,EAASjG,SAASrd,OAASsT,GAC7B,IAAKoR,GAAUA,EAAOf,GAAO,CAC3BkC,EAAclC,EAAKoC,KAAK,IAAI3I,EAASkG,EAASjG,SAAS/H,MAAMhC,IAAS/N,EAAMmf,GAE5E,IAAK,IAAI5hB,EAAI,EAAGA,EAAI+iB,EAAY7lB,SAAU8C,EACxC+iB,EAAY/iB,GAAGqe,KAAKxkB,KAAKgnB,GAG3B5d,MAAMzD,UAAU3F,KAAKuI,MAAM+d,EAAO4C,SAGpC5C,EAAMtmB,KAAK,CACTgnB,KAAMA,EACNxC,KAAM,KAIV,UAKRtQ,KAAKqS,SAAS7f,GAAO4f,EACdA,KAER,CACD5f,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAItP,EACA2gB,EAIJuC,EACIrC,EACAxC,EALA8E,EAAmB,GACnBC,EAAY,GAKhBtU,EAAQuU,SAAWvU,EAAQuU,UAAY,EAElCtV,KAAKkT,MACRnS,EAAQuU,WAGV,IAEIC,EAFAC,EAAazU,EAAQxU,SAAW,GAAK2I,MAAM6L,EAAQuU,SAAW,GAAGhU,KAAK,MACtEmU,EAAY1U,EAAQxU,SAAW,GAAK2I,MAAM6L,EAAQuU,UAAUhU,KAAK,MAEjEoU,EAAmB,EACnBC,EAAkB,EAEtB,IAAK1jB,EAAI,EAAG6gB,EAAO9S,KAAKoS,MAAMngB,GAAIA,IAC5B6gB,aAAgBpD,IACdiG,IAAoB1jB,GACtB0jB,IAGFN,EAAUvpB,KAAKgnB,IACNA,EAAK8C,WAAa9C,EAAK8C,aAChCP,EAAUvB,OAAO4B,EAAkB,EAAG5C,GACtC4C,IACAC,KACuB,WAAd7C,EAAK5Q,MACdmT,EAAUvB,OAAO6B,EAAiB,EAAG7C,GACrC6C,KAEAN,EAAUvpB,KAAKgnB,GAOnB,GAHAuC,EAAYD,EAAiB9mB,OAAO+mB,IAG/BrV,KAAKkT,KAAM,EACdiC,EAAcjG,EAAUnO,EAASf,KAAMyV,MAGrClU,EAAOL,IAAIiU,GACX5T,EAAOL,IAAIuU,IAGb,IAEII,EAFAppB,EAAQuT,KAAKvT,MACbqpB,EAAUrpB,EAAM0C,OAIpB,IAFAomB,EAAMxU,EAAQxU,SAAW,IAAM,MAAM+B,OAAOmnB,GAEvCxjB,EAAI,EAAGA,EAAI6jB,EAAS7jB,IAGvB,GAAM4jB,GAFNvF,EAAO7jB,EAAMwF,IAEW9C,OAYxB,IARI8C,EAAI,GACNsP,EAAOL,IAAIqU,GAGbxU,EAAQ4E,eAAgB,EACxB2K,EAAK,GAAGrP,OAAOF,EAASQ,GACxBR,EAAQ4E,eAAgB,EAEnBiN,EAAI,EAAGA,EAAIiD,EAAYjD,IAC1BtC,EAAKsC,GAAG3R,OAAOF,EAASQ,GAI5BA,EAAOL,KAAKH,EAAQxU,SAAW,IAAM,QAAUipB,GAIjD,IAAKvjB,EAAI,EAAG6gB,EAAOuC,EAAUpjB,GAAIA,IAAK,CAChCA,EAAI,IAAMojB,EAAUlmB,SACtB4R,EAAQ2N,UAAW,GAGrB,IAAIqH,EAAkBhV,EAAQ2N,SAE1BoE,EAAKkD,cAAclD,KACrB/R,EAAQ2N,UAAW,GAGjBoE,EAAK7R,OACP6R,EAAK7R,OAAOF,EAASQ,GACZuR,EAAK9f,OACduO,EAAOL,IAAI4R,EAAK9f,MAAMc,YAGxBiN,EAAQ2N,SAAWqH,GAEdhV,EAAQ2N,UAAYoE,EAAKmD,YAC5B1U,EAAOL,IAAIH,EAAQxU,SAAW,GAAK,KAAK+B,OAAOknB,IAE/CzU,EAAQ2N,UAAW,EAIlB1O,KAAKkT,OACR3R,EAAOL,IAAIH,EAAQxU,SAAW,IAAM,KAAK+B,OAAOmnB,EAAW,MAC3D1U,EAAQuU,YAGL/T,EAAOF,WAAcN,EAAQxU,WAAYyT,KAAKmT,WACjD5R,EAAOL,IAAI,QAGd,CACD1O,IAAK,gBACLQ,MAAO,SAAuBvG,EAAOsU,EAASoR,GAC5C,IAAK,IAAI9S,EAAI,EAAGA,EAAI8S,EAAUhjB,OAAQkQ,IACpCW,KAAKkW,aAAazpB,EAAOsU,EAASoR,EAAU9S,MAG/C,CACD7M,IAAK,eACLQ,MAAO,SAAsBvG,EAAOsU,EAAS0R,GAC3C,SAAS0D,EAAkBC,EAAeC,GACxC,IAAIC,EACA1D,EAEJ,GAA6B,IAAzBwD,EAAcjnB,OAChBmnB,EAAmB,IAAI5R,EAAM0R,EAAc,QACtC,CACL,IAAIG,EAAe,IAAIrhB,MAAMkhB,EAAcjnB,QAE3C,IAAKyjB,EAAI,EAAGA,EAAIwD,EAAcjnB,OAAQyjB,IACpC2D,EAAa3D,GAAK,IAAIxN,EAAQ,KAAMgR,EAAcxD,GAAIyD,EAAgB/Q,WAAY+Q,EAAgBxV,OAAQwV,EAAgBvV,WAG5HwV,EAAmB,IAAI5R,EAAM,IAAI6H,EAASgK,IAG5C,OAAOD,EAGT,SAASE,EAAeC,EAAkBJ,GACxC,IAAIK,EAIJ,OAFAA,EAAU,IAAItR,EAAQ,KAAMqR,EAAkBJ,EAAgB/Q,WAAY+Q,EAAgBxV,OAAQwV,EAAgBvV,WACvG,IAAIyL,EAAS,CAACmK,IAO3B,SAASC,EAAuBC,EAAeC,EAASC,EAAiBC,GACvE,IAAIC,EACA5C,EACA6C,EAaJ,GAXAD,EAAkB,GAGdJ,EAAcznB,OAAS,GAEzBilB,GADA4C,EAAkB/M,EAAU2M,IACG3H,MAC/BgI,EAAoBF,EAAiBrJ,cAAczD,EAAUmK,EAAa5H,YAE1EyK,EAAoBF,EAAiBrJ,cAAc,IAGjDmJ,EAAQ1nB,OAAS,EAAG,CAMtB,IAAIkW,EAAayR,EAAgBzR,WAC7B6R,EAAWL,EAAQ,GAAGrK,SAAS,GAE/BnH,EAAWJ,oBAAsBiS,EAAS7R,WAAWJ,oBACvDI,EAAa6R,EAAS7R,YAIxB4R,EAAkBzK,SAAS1gB,KAAK,IAAIsZ,EAAQC,EAAY6R,EAASlkB,MAAO8jB,EAAgBxR,WAAYwR,EAAgBjW,OAAQiW,EAAgBhW,YAC5ImW,EAAkBzK,SAAWyK,EAAkBzK,SAASle,OAAOuoB,EAAQ,GAAGrK,SAAS/H,MAAM,IAS3F,GAL0C,IAAtCwS,EAAkBzK,SAASrd,QAC7B6nB,EAAgBlrB,KAAKmrB,GAInBJ,EAAQ1nB,OAAS,EAAG,CACtB,IAAIgoB,EAAaN,EAAQpS,MAAM,GAC/B0S,EAAaA,EAAWzU,KAAI,SAAU+P,GACpC,OAAOA,EAAS/E,cAAc+E,EAASjG,SAAU,OAEnDwK,EAAkBA,EAAgB1oB,OAAO6oB,GAG3C,OAAOH,EAMT,SAASI,EAA2BR,EAAeS,EAAUP,EAAiBC,EAAkBhM,GAC9F,IAAI6H,EAEJ,IAAKA,EAAI,EAAGA,EAAIgE,EAAcznB,OAAQyjB,IAAK,CACzC,IAAIoE,EAAkBL,EAAuBC,EAAchE,GAAIyE,EAAUP,EAAiBC,GAC1FhM,EAAOjf,KAAKkrB,GAGd,OAAOjM,EAGT,SAASuM,EAA2B9K,EAAU2F,GAC5C,IAAIlgB,EACAslB,EAEJ,GAAwB,IAApB/K,EAASrd,OAIb,GAAyB,IAArBgjB,EAAUhjB,OAKd,IAAK8C,EAAI,EAAGslB,EAAMpF,EAAUlgB,GAAIA,IAE1BslB,EAAIpoB,OAAS,EACfooB,EAAIA,EAAIpoB,OAAS,GAAKooB,EAAIA,EAAIpoB,OAAS,GAAGue,cAAc6J,EAAIA,EAAIpoB,OAAS,GAAGqd,SAASle,OAAOke,IAE5F+K,EAAIzrB,KAAK,IAAIygB,EAASC,SATxB2F,EAAUrmB,KAAK,CAAC,IAAIygB,EAASC,KAiBjC,SAASgL,EAAsB/qB,EAAOsU,EAAS0W,GAW7C,IAAIxlB,EACA2gB,EACA8E,EACAC,EACAC,EACAC,EACAN,EACAO,EAEA3oB,EACAilB,EAFA2D,GAAoB,EAIxB,SAASC,EAAmBtB,GAC1B,IAAIuB,EAEJ,OAAMvB,EAAQ1jB,iBAAiB0R,IAI/BuT,EAAgBvB,EAAQ1jB,MAAMA,iBAECuZ,EAIxB0L,EATE,KAmBX,IANAN,EAAkB,GAIlBC,EAAe,CAAC,IAEX3lB,EAAI,EAAG6lB,EAAKL,EAAWjL,SAASva,GAAIA,IAEvC,GAAiB,MAAb6lB,EAAG9kB,MAAe,CACpB,IAAIklB,EAAiBF,EAAmBF,GAExC,GAAsB,MAAlBI,EAAwB,CAG1BZ,EAA2BK,EAAiBC,GAC5C,IAAIO,EAAc,GACdC,OAAW,EACXC,EAAuB,GAI3B,IAHAD,EAAWZ,EAAsBW,EAAapX,EAASmX,GACvDH,EAAoBA,GAAqBK,EAEpCV,EAAI,EAAGA,EAAIS,EAAYhpB,OAAQuoB,IAElCN,EAA2BQ,EAAc,CADfpB,EAAeL,EAAkBgC,EAAYT,GAAII,GAAKA,IAChBA,EAAIL,EAAYY,GAGlFT,EAAeS,EACfV,EAAkB,QAElBA,EAAgB7rB,KAAKgsB,OAElB,CAQL,IAPAC,GAAoB,EAEpBF,EAAsB,GAGtBP,EAA2BK,EAAiBC,GAEvChF,EAAI,EAAGA,EAAIgF,EAAazoB,OAAQyjB,IAInC,GAHA2E,EAAMK,EAAahF,GAGI,IAAnB7R,EAAQ5R,OAGNooB,EAAIpoB,OAAS,GACfooB,EAAI,GAAG/K,SAAS1gB,KAAK,IAAIsZ,EAAQ0S,EAAGzS,WAAY,GAAIyS,EAAGxS,WAAYwS,EAAGjX,OAAQiX,EAAGhX,YAGnF+W,EAAoB/rB,KAAKyrB,QAGzB,IAAKG,EAAI,EAAGA,EAAI3W,EAAQ5R,OAAQuoB,IAAK,CAGnC,IAAIV,EAAkBL,EAAuBY,EAAKxW,EAAQ2W,GAAII,EAAIL,GAElEI,EAAoB/rB,KAAKkrB,GAM/BY,EAAeC,EACfF,EAAkB,GAQtB,IAFAL,EAA2BK,EAAiBC,GAEvC3lB,EAAI,EAAGA,EAAI2lB,EAAazoB,OAAQ8C,KACnC9C,EAASyoB,EAAa3lB,GAAG9C,QAEZ,IACX1C,EAAMX,KAAK8rB,EAAa3lB,IACxBmiB,EAAewD,EAAa3lB,GAAG9C,EAAS,GACxCyoB,EAAa3lB,GAAG9C,EAAS,GAAKilB,EAAa1G,cAAc0G,EAAa5H,SAAUiL,EAAWhL,aAI/F,OAAOsL,EAGT,SAASO,EAAe9S,EAAgB+S,GACtC,IAAIxL,EAAcwL,EAAW7K,cAAc6K,EAAW/L,SAAU+L,EAAW9L,WAAY8L,EAAW5L,gBAElG,OADAI,EAAYtH,mBAAmBD,GACxBuH,EAIT,IAAI9a,EACAumB,EAKJ,IAFoBhB,EADpBgB,EAAW,GACyCzX,EAAS0R,GAG3D,GAAI1R,EAAQ5R,OAAS,EAGnB,IAFAqpB,EAAW,GAENvmB,EAAI,EAAGA,EAAI8O,EAAQ5R,OAAQ8C,IAAK,CACnC,IAAIwmB,EAAe1X,EAAQ9O,GAAGyQ,IAAI4V,EAAe/jB,KAAKyL,KAAMyS,EAASjN,mBACrEiT,EAAa3sB,KAAK2mB,GAClB+F,EAAS1sB,KAAK2sB,QAGhBD,EAAW,CAAC,CAAC/F,IAIjB,IAAKxgB,EAAI,EAAGA,EAAIumB,EAASrpB,OAAQ8C,IAC/BxF,EAAMX,KAAK0sB,EAASvmB,QAKnBigB,EAv4BT,CAw4BEnS,GAEFmS,GAAQzgB,UAAUyQ,KAAO,UACzBgQ,GAAQzgB,UAAUsjB,WAAY,EAE9B,IAAI2D,GAEJ,SAAUrW,GAGR,SAASqW,EAAOpK,EAAMtb,EAAOof,EAAOhR,EAAOmE,EAAiB2J,EAAWyJ,EAAUnT,GAC/E,IAAIhD,EAKAvQ,EAIJ,GAPAP,EAAgBsO,KAAM0Y,IAEtBlW,EAAQ5N,EAA2BoL,KAAM9M,EAAgBwlB,GAAQ3kB,KAAKiM,QAEhEsO,KAAOA,EACb9L,EAAMxP,MAAQA,aAAiB+M,EAAO/M,EAAQA,EAAQ,IAAI+a,EAAU/a,GAASA,EAEzEof,EAAO,CAQT,IAPIld,MAAMC,QAAQid,GAChB5P,EAAM4P,MAAQA,GAEd5P,EAAM4P,MAAQ,CAACA,GACf5P,EAAM4P,MAAM,GAAGD,UAAY,IAAI5F,EAAS,GAAI,KAAM,KAAMnL,EAAOmE,GAAiBqT,wBAG7E3mB,EAAI,EAAGA,EAAIuQ,EAAM4P,MAAMjjB,OAAQ8C,IAClCuQ,EAAM4P,MAAMngB,GAAGmhB,cAAe,EAGhC5Q,EAAMkD,UAAUlD,EAAM4P,MAAO3d,EAAuB+N,IAWtD,OARAA,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM0M,UAAYA,EAClB1M,EAAMmW,SAAWA,IAAY,EAE7BnW,EAAMiD,mBAAmBD,GAEzBhD,EAAM0L,WAAY,EACX1L,EAgJT,OAnLA5P,EAAU8lB,EAAQrW,GAsClB5P,EAAaimB,EAAQ,CAAC,CACpBlmB,IAAK,SACLQ,MAAO,SAAgBwO,GACrB,IAAIxO,EAAQgN,KAAKhN,MACbof,EAAQpS,KAAKoS,MAEbA,IACFpS,KAAKoS,MAAQ5Q,EAAQsL,WAAWsF,IAG9Bpf,IACFgN,KAAKhN,MAAQwO,EAAQC,MAAMzO,MAG9B,CACDR,IAAK,gBACLQ,MAAO,WACL,OAAOgN,KAAKoS,QAAUpS,KAAK4V,cAE5B,CACDpjB,IAAK,YACLQ,MAAO,WACL,MAAO,aAAegN,KAAKsO,OAE5B,CACD9b,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAIvO,EAAQgN,KAAKhN,MACbof,EAAQpS,KAAKoS,MACjB7Q,EAAOL,IAAIlB,KAAKsO,KAAMtO,KAAKO,WAAYP,KAAKQ,YAExCxN,IACFuO,EAAOL,IAAI,KACXlO,EAAMiO,OAAOF,EAASQ,IAGpB6Q,EACFpS,KAAK6Y,cAAc9X,EAASQ,EAAQ6Q,GAEpC7Q,EAAOL,IAAI,OAGd,CACD1O,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAI+X,EACAC,EACA/lB,EAAQgN,KAAKhN,MACbof,EAAQpS,KAAKoS,MAsBjB,OAnBA0G,EAAkB/X,EAAQiY,UAC1BD,EAAoBhY,EAAQ6S,YAE5B7S,EAAQiY,UAAY,GACpBjY,EAAQ6S,YAAc,GAElB5gB,IACFA,EAAQA,EAAM2R,KAAK5D,IAGjBqR,KAEFA,EAAQ,CAACA,EAAM,GAAGzN,KAAK5D,KACjB,GAAGmS,MAAO,GAIlBnS,EAAQiY,UAAYF,EACpB/X,EAAQ6S,YAAcmF,EACf,IAAIL,EAAO1Y,KAAKsO,KAAMtb,EAAOof,EAAOpS,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKkP,UAAWlP,KAAK2Y,SAAU3Y,KAAKwF,oBAElH,CACDhT,IAAK,WACLQ,MAAO,SAAkBsb,GACvB,GAAItO,KAAKoS,MAEP,OAAOF,GAAQzgB,UAAUgd,SAAS1a,KAAKiM,KAAKoS,MAAM,GAAI9D,KAGzD,CACD9b,IAAK,OACLQ,MAAO,WACL,GAAIgN,KAAKoS,MAAO,CACd,IAAK,IAAI6G,EAAOzkB,UAAUrF,OAAQ+E,EAAO,IAAIgB,MAAM+jB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EhlB,EAAKglB,GAAQ1kB,UAAU0kB,GAIzB,OAAOhH,GAAQzgB,UAAUyjB,KAAK7gB,MAAM2L,KAAKoS,MAAM,GAAIle,MAGtD,CACD1B,IAAK,WACLQ,MAAO,WACL,GAAIgN,KAAKoS,MAEP,OAAOF,GAAQzgB,UAAUwjB,SAAS5gB,MAAM2L,KAAKoS,MAAM,MAGtD,CACD5f,IAAK,gBACLQ,MAAO,SAAuB+N,EAASQ,EAAQ6Q,GAC7C,IACIngB,EADAknB,EAAU/G,EAAMjjB,OAIpB,GAFA4R,EAAQuU,SAAoC,GAAL,EAAnBvU,EAAQuU,UAExBvU,EAAQxU,SAAU,CAGpB,IAFAgV,EAAOL,IAAI,KAENjP,EAAI,EAAGA,EAAIknB,EAASlnB,IACvBmgB,EAAMngB,GAAGgP,OAAOF,EAASQ,GAK3B,OAFAA,EAAOL,IAAI,UACXH,EAAQuU,WAKV,IAAIG,EAAY,KAAKnnB,OAAO4G,MAAM6L,EAAQuU,UAAUhU,KAAK,OACrDkU,EAAa,GAAGlnB,OAAOmnB,EAAW,MAEtC,GAAK0D,EAEE,CAIL,IAHA5X,EAAOL,IAAI,KAAK5S,OAAOknB,IACvBpD,EAAM,GAAGnR,OAAOF,EAASQ,GAEpBtP,EAAI,EAAGA,EAAIknB,EAASlnB,IACvBsP,EAAOL,IAAIsU,GACXpD,EAAMngB,GAAGgP,OAAOF,EAASQ,GAG3BA,EAAOL,IAAI,GAAG5S,OAAOmnB,EAAW,WAVhClU,EAAOL,IAAI,KAAK5S,OAAOmnB,EAAW,MAapC1U,EAAQuU,eAILoD,EApLT,CAqLE3Y,GAEF2Y,GAAOjnB,UAAUyQ,KAAO,SAExB,IAAIkX,GAEJ,SAAU/W,GAGR,SAAS+W,EAAgBpG,EAAS7B,GAChC,IAAI3O,EAUJ,OARA9Q,EAAgBsO,KAAMoZ,IAEtB5W,EAAQ5N,EAA2BoL,KAAM9M,EAAgBkmB,GAAiBrlB,KAAKiM,QACzEgT,QAAUA,EAChBxQ,EAAM2O,OAASA,EAEf3O,EAAMkD,UAAUlD,EAAMwQ,QAASve,EAAuB+N,IAE/CA,EAqBT,OAlCA5P,EAAUwmB,EAAiB/W,GAgB3B5P,EAAa2mB,EAAiB,CAAC,CAC7B5mB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKgT,QAAUxR,EAAQC,MAAMzB,KAAKgT,WAEnC,CACDxgB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIoQ,EAASnR,KAAKmR,QAAUlH,EAAUlJ,EAAQoQ,QAC9C,OAAO,IAAIiI,EAAgBpZ,KAAKgT,QAAS7B,KAE1C,CACD3e,IAAK,WACLQ,MAAO,SAAkB+N,GACvB,OAAOf,KAAKgT,QAAQrO,KAAK3E,KAAKmR,OAAS,IAAItB,GAASoB,KAAKlQ,EAASf,KAAKmR,OAAO7iB,OAAOyS,EAAQoQ,SAAWpQ,OAIrGqY,EAnCT,CAoCErZ,GAEFqZ,GAAgB3nB,UAAUyQ,KAAO,kBACjCkX,GAAgB3nB,UAAUiiB,WAAY,EAEtC,IAAI2F,GAEJ,SAAUhX,GAGR,SAASgX,EAAKC,EAAWC,EAAaC,GACpC,IAAIhX,EAcJ,OAZA9Q,EAAgBsO,KAAMqZ,IAEtB7W,EAAQ5N,EAA2BoL,KAAM9M,EAAgBmmB,GAAMtlB,KAAKiM,QAC9DsZ,UAAYA,EAAYrP,EAAUqP,GAAWG,OAAS,GAC5DjX,EAAM+W,YAAcA,EAActP,EAAUsP,GAAaE,OAAS,GAE9DD,EACFhX,EAAMgX,WAAaA,EACVF,GAAaA,EAAUnqB,SAChCqT,EAAMgX,WAAaF,EAAU,IAGxB9W,EA2IT,OA5JA5P,EAAUymB,EAAMhX,GAoBhB5P,EAAa4mB,EAAM,CAAC,CAClB7mB,IAAK,QACLQ,MAAO,WACL,OAAO,IAAIqmB,EAAKpP,EAAUjK,KAAKsZ,WAAYrP,EAAUjK,KAAKuZ,aAAcvZ,KAAKwZ,cAE9E,CACDhnB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAE9B,IAAIvU,EAAc+T,GAAWA,EAAQ/T,YAEP,IAA1BgT,KAAKsZ,UAAUnqB,OACjBoS,EAAOL,IAAIlB,KAAKsZ,UAAU,KAChBtsB,GAAegT,KAAKwZ,WAC9BjY,EAAOL,IAAIlB,KAAKwZ,aACNxsB,GAAegT,KAAKuZ,YAAYpqB,QAC1CoS,EAAOL,IAAIlB,KAAKuZ,YAAY,MAG/B,CACD/mB,IAAK,WACLQ,MAAO,WACL,IAAIf,EACAynB,EAAY1Z,KAAKsZ,UAAUhY,KAAK,KAEpC,IAAKrP,EAAI,EAAGA,EAAI+N,KAAKuZ,YAAYpqB,OAAQ8C,IACvCynB,GAAa,IAAIprB,OAAO0R,KAAKuZ,YAAYtnB,IAG3C,OAAOynB,IAER,CACDlnB,IAAK,UACLQ,MAAO,SAAiB8Q,GACtB,OAAO9D,KAAK2Z,GAAG7V,EAAMhQ,YAAc,OAAI3D,IAExC,CACDqC,IAAK,KACLQ,MAAO,SAAY4mB,GACjB,OAAO5Z,KAAKlM,WAAW+lB,gBAAkBD,EAAWC,gBAErD,CACDrnB,IAAK,WACLQ,MAAO,WACL,OAAOgV,OAAO,wDAAyD,MAAM3X,KAAK2P,KAAKkD,WAExF,CACD1Q,IAAK,UACLQ,MAAO,WACL,OAAiC,IAA1BgN,KAAKsZ,UAAUnqB,QAA4C,IAA5B6Q,KAAKuZ,YAAYpqB,SAExD,CACDqD,IAAK,aACLQ,MAAO,WACL,OAAOgN,KAAKsZ,UAAUnqB,QAAU,GAAiC,IAA5B6Q,KAAKuZ,YAAYpqB,SAEvD,CACDqD,IAAK,MACLQ,MAAO,SAAa8mB,GAClB,IAAI7nB,EAEJ,IAAKA,EAAI,EAAGA,EAAI+N,KAAKsZ,UAAUnqB,OAAQ8C,IACrC+N,KAAKsZ,UAAUrnB,GAAK6nB,EAAS9Z,KAAKsZ,UAAUrnB,IAAI,GAGlD,IAAKA,EAAI,EAAGA,EAAI+N,KAAKuZ,YAAYpqB,OAAQ8C,IACvC+N,KAAKuZ,YAAYtnB,GAAK6nB,EAAS9Z,KAAKuZ,YAAYtnB,IAAI,KAGvD,CACDO,IAAK,YACLQ,MAAO,WACL,IAAI+mB,EAEAC,EACAC,EAFAlP,EAAS,GAab,IAAKkP,KATLD,EAAU,SAAiBE,GAMzB,OAJIH,EAAMnsB,eAAessB,KAAgBnP,EAAOkP,KAC9ClP,EAAOkP,GAAaC,GAGfA,GAGStb,EACZA,EAAgBhR,eAAeqsB,KACjCF,EAAQnb,EAAgBqb,GACxBja,KAAK0C,IAAIsX,IAIb,OAAOjP,IAER,CACDvY,IAAK,SACLQ,MAAO,WACL,IACIknB,EACAjoB,EAFAkoB,EAAU,GAId,IAAKloB,EAAI,EAAGA,EAAI+N,KAAKsZ,UAAUnqB,OAAQ8C,IAErCkoB,EADAD,EAAala,KAAKsZ,UAAUrnB,KACLkoB,EAAQD,IAAe,GAAK,EAGrD,IAAKjoB,EAAI,EAAGA,EAAI+N,KAAKuZ,YAAYpqB,OAAQ8C,IAEvCkoB,EADAD,EAAala,KAAKuZ,YAAYtnB,KACPkoB,EAAQD,IAAe,GAAK,EAMrD,IAAKA,KAHLla,KAAKsZ,UAAY,GACjBtZ,KAAKuZ,YAAc,GAEAY,EACjB,GAAIA,EAAQvsB,eAAessB,GAAa,CACtC,IAAIE,EAAQD,EAAQD,GAEpB,GAAIE,EAAQ,EACV,IAAKnoB,EAAI,EAAGA,EAAImoB,EAAOnoB,IACrB+N,KAAKsZ,UAAUxtB,KAAKouB,QAEjB,GAAIE,EAAQ,EACjB,IAAKnoB,EAAI,EAAGA,GAAKmoB,EAAOnoB,IACtB+N,KAAKuZ,YAAYztB,KAAKouB,GAM9Bla,KAAKsZ,UAAUG,OACfzZ,KAAKuZ,YAAYE,WAIdJ,EA7JT,CA8JEtZ,GAEFsZ,GAAK5nB,UAAUyQ,KAAO,OAKtB,IAAImY,GAEJ,SAAUhY,GAGR,SAASgY,EAAUrnB,EAAOsnB,GACxB,IAAI9X,EAOJ,GALA9Q,EAAgBsO,KAAMqa,IAEtB7X,EAAQ5N,EAA2BoL,KAAM9M,EAAgBmnB,GAAWtmB,KAAKiM,QACnEhN,MAAQunB,WAAWvnB,GAErBwnB,MAAMhY,EAAMxP,OACd,MAAM,IAAIjD,MAAM,8BAOlB,OAJAyS,EAAM8X,KAAOA,GAAQA,aAAgBjB,GAAOiB,EAAO,IAAIjB,GAAKiB,EAAO,CAACA,QAAQnqB,GAE5EqS,EAAMkD,UAAUlD,EAAM8X,KAAM7lB,EAAuB+N,IAE5CA,EA4KT,OA9LA5P,EAAUynB,EAAWhY,GAqBrB5P,EAAa4nB,EAAW,CAAC,CACvB7nB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKsa,KAAO9Y,EAAQC,MAAMzB,KAAKsa,QAEhC,CACD9nB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAOf,OAER,CACDxN,IAAK,UACLQ,MAAO,WACL,OAAO,IAAIoP,EAAM,CAACpC,KAAKhN,MAAOgN,KAAKhN,MAAOgN,KAAKhN,UAEhD,CACDR,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,GAAIR,GAAWA,EAAQ/T,cAAgBgT,KAAKsa,KAAKG,aAC/C,MAAM,IAAI1qB,MAAM,sFAAsFzB,OAAO0R,KAAKsa,KAAKxmB,aAGzH,IAAId,EAAQgN,KAAKqD,OAAOtC,EAASf,KAAKhN,OAClC0nB,EAAWC,OAAO3nB,GAOtB,GALc,IAAVA,GAAeA,EAAQ,MAAYA,GAAS,OAE9C0nB,EAAW1nB,EAAM+O,QAAQ,IAAIzU,QAAQ,MAAO,KAG1CyT,GAAWA,EAAQxU,SAAU,CAE/B,GAAc,IAAVyG,GAAegN,KAAKsa,KAAKM,WAE3B,YADArZ,EAAOL,IAAIwZ,GAKT1nB,EAAQ,GAAKA,EAAQ,IACvB0nB,EAAWA,EAASpO,OAAO,IAI/B/K,EAAOL,IAAIwZ,GACX1a,KAAKsa,KAAKrZ,OAAOF,EAASQ,KAK3B,CACD/O,IAAK,UACLQ,MAAO,SAAiB+N,EAASW,EAAIoC,GAEnC,IAAI9Q,EAAQgN,KAAK+D,SAAShD,EAASW,EAAI1B,KAAKhN,MAAO8Q,EAAM9Q,OAErDsnB,EAAOta,KAAKsa,KAAK7T,QAErB,GAAW,MAAP/E,GAAqB,MAAPA,EAChB,GAA8B,IAA1B4Y,EAAKhB,UAAUnqB,QAA4C,IAA5BmrB,EAAKf,YAAYpqB,OAClDmrB,EAAOxW,EAAMwW,KAAK7T,QAEdzG,KAAKsa,KAAKd,aACZc,EAAKd,WAAaxZ,KAAKsa,KAAKd,iBAEzB,GAAoC,IAAhC1V,EAAMwW,KAAKhB,UAAUnqB,QAA4C,IAA5BmrB,EAAKf,YAAYpqB,YAAqB,CAGpF,GAFA2U,EAAQA,EAAM+W,UAAU7a,KAAKsa,KAAKQ,aAE9B/Z,EAAQ/T,aAAe8W,EAAMwW,KAAKxmB,aAAewmB,EAAKxmB,WACxD,MAAM,IAAI/D,MAAM,kEAAoE,eAAezB,OAAOgsB,EAAKxmB,WAAY,WAAWxF,OAAOwV,EAAMwW,KAAKxmB,WAAY,OAGtKd,EAAQgN,KAAK+D,SAAShD,EAASW,EAAI1B,KAAKhN,MAAO8Q,EAAM9Q,WAEvC,MAAP0O,GACT4Y,EAAKhB,UAAYgB,EAAKhB,UAAUhrB,OAAOwV,EAAMwW,KAAKhB,WAAWG,OAC7Da,EAAKf,YAAce,EAAKf,YAAYjrB,OAAOwV,EAAMwW,KAAKf,aAAaE,OACnEa,EAAKS,UACW,MAAPrZ,IACT4Y,EAAKhB,UAAYgB,EAAKhB,UAAUhrB,OAAOwV,EAAMwW,KAAKf,aAAaE,OAC/Da,EAAKf,YAAce,EAAKf,YAAYjrB,OAAOwV,EAAMwW,KAAKhB,WAAWG,OACjEa,EAAKS,UAGP,OAAO,IAAIV,EAAUrnB,EAAOsnB,KAE7B,CACD9nB,IAAK,UACLQ,MAAO,SAAiB8Q,GACtB,IAAI1P,EACAuN,EAEJ,GAAMmC,aAAiBuW,EAAvB,CAIA,GAAIra,KAAKsa,KAAKjZ,WAAayC,EAAMwW,KAAKjZ,UACpCjN,EAAI4L,KACJ2B,EAAImC,OAKJ,GAHA1P,EAAI4L,KAAKgb,QACTrZ,EAAImC,EAAMkX,QAEqB,IAA3B5mB,EAAEkmB,KAAKrY,QAAQN,EAAE2Y,MACnB,OAIJ,OAAOva,EAAKoC,eAAe/N,EAAEpB,MAAO2O,EAAE3O,UAEvC,CACDR,IAAK,QACLQ,MAAO,WACL,OAAOgN,KAAK6a,UAAU,CACpB1rB,OAAQ,KACRiQ,SAAU,IACVG,MAAO,UAGV,CACD/M,IAAK,YACLQ,MAAO,SAAmBioB,GACxB,IAEIhpB,EACAgoB,EACAF,EACAmB,EAEAC,EAPAnoB,EAAQgN,KAAKhN,MACbsnB,EAAOta,KAAKsa,KAAK7T,QAKjB2U,EAAqB,GAGzB,GAA2B,kBAAhBH,EAA0B,CACnC,IAAKhpB,KAAK2M,EACJA,EAAgB3M,GAAGrE,eAAeqtB,MACpCG,EAAqB,IACFnpB,GAAKgpB,GAI5BA,EAAcG,EAkBhB,IAAKnB,KAfLkB,EAAY,SAAmBjB,EAAYX,GAEzC,OAAIQ,EAAMnsB,eAAessB,IACnBX,EACFvmB,GAAiB+mB,EAAMG,GAAcH,EAAMmB,GAE3CloB,GAAiB+mB,EAAMG,GAAcH,EAAMmB,GAGtCA,GAGFhB,GAGSe,EACZA,EAAYrtB,eAAeqsB,KAC7BiB,EAAaD,EAAYhB,GACzBF,EAAQnb,EAAgBqb,GACxBK,EAAK5X,IAAIyY,IAKb,OADAb,EAAKS,SACE,IAAIV,EAAUrnB,EAAOsnB,OAIzBD,EA/LT,CAgMEta,GAEFsa,GAAU5oB,UAAUyQ,KAAO,YAE3B,IAAImZ,GAASxV,EAETyV,GAEJ,SAAUjZ,GAGR,SAASiZ,EAAU5Z,EAAI6Z,EAAUC,GAC/B,IAAIhZ,EAQJ,OANA9Q,EAAgBsO,KAAMsb,IAEtB9Y,EAAQ5N,EAA2BoL,KAAM9M,EAAgBooB,GAAWvnB,KAAKiM,QACnE0B,GAAKA,EAAGwD,OACd1C,EAAM+Y,SAAWA,EACjB/Y,EAAMgZ,SAAWA,EACVhZ,EA6DT,OAxEA5P,EAAU0oB,EAAWjZ,GAcrB5P,EAAa6oB,EAAW,CAAC,CACvB9oB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKub,SAAW/Z,EAAQsL,WAAW9M,KAAKub,YAEzC,CACD/oB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAEIW,EAFAtN,EAAI4L,KAAKub,SAAS,GAAG5W,KAAK5D,GAC1BY,EAAI3B,KAAKub,SAAS,GAAG5W,KAAK5D,GAG9B,GAAIA,EAAQ0a,SAASzb,KAAK0B,IAAK,CAW7B,GAVAA,EAAiB,OAAZ1B,KAAK0B,GAAc,IAAM1B,KAAK0B,GAE/BtN,aAAaimB,IAAa1Y,aAAaS,IACzChO,EAAIA,EAAEsnB,WAGJ/Z,aAAa0Y,IAAajmB,aAAagO,IACzCT,EAAIA,EAAE+Z,YAGHtnB,EAAEunB,QAAS,CACd,GAAIvnB,aAAaknB,GAAsB,MAATlnB,EAAEsN,IAAcX,EAAQhU,OAASsuB,GAAOtV,gBACpE,OAAO,IAAIuV,EAAUtb,KAAK0B,GAAI,CAACtN,EAAGuN,GAAI3B,KAAKwb,UAG7C,KAAM,CACJtZ,KAAM,YACNoJ,QAAS,gCAIb,OAAOlX,EAAEunB,QAAQ5a,EAASW,EAAIC,GAE9B,OAAO,IAAI2Z,EAAUtb,KAAK0B,GAAI,CAACtN,EAAGuN,GAAI3B,KAAKwb,YAG9C,CACDhpB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BvB,KAAKub,SAAS,GAAGta,OAAOF,EAASQ,GAE7BvB,KAAKwb,UACPja,EAAOL,IAAI,KAGbK,EAAOL,IAAIlB,KAAK0B,IAEZ1B,KAAKwb,UACPja,EAAOL,IAAI,KAGblB,KAAKub,SAAS,GAAGta,OAAOF,EAASQ,OAI9B+Z,EAzET,CA0EEvb,GAEFub,GAAU7pB,UAAUyQ,KAAO,YAE3B,IAAI0Z,GAAS/V,EAETgW,GAEJ,SAAUxZ,GAGR,SAASwZ,EAAW7oB,EAAO8oB,GACzB,IAAItZ,EAQJ,GANA9Q,EAAgBsO,KAAM6b,IAEtBrZ,EAAQ5N,EAA2BoL,KAAM9M,EAAgB2oB,GAAY9nB,KAAKiM,QACpEhN,MAAQA,EACdwP,EAAMsZ,UAAYA,GAEb9oB,EACH,MAAM,IAAIjD,MAAM,0CAGlB,OAAOyS,EAoET,OAnFA5P,EAAUipB,EAAYxZ,GAkBtB5P,EAAaopB,EAAY,CAAC,CACxBrpB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKhN,MAAQwO,EAAQsL,WAAW9M,KAAKhN,SAEtC,CACDR,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIgb,EACA1K,EAAStQ,EAAQ0a,WACjBO,EAAgBhc,KAAKic,SAAWlb,EAAQhU,OAAS6uB,GAAO3V,gBAAkBjG,KAAKkc,YAC/EC,GAAc,EAgClB,OA9BIH,GACFjb,EAAQib,gBAGNhc,KAAKhN,MAAM7D,OAAS,EACtB4sB,EAAc,IAAIF,EAAW7b,KAAKhN,MAAM0P,KAAI,SAAU5S,GACpD,OAAKA,EAAE6U,KAIA7U,EAAE6U,KAAK5D,GAHLjR,KAIPkQ,KAAK8b,WACsB,IAAtB9b,KAAKhN,MAAM7D,SAChB6Q,KAAKhN,MAAM,GAAGipB,QAAWjc,KAAKhN,MAAM,GAAGkpB,YAAenb,EAAQqQ,SAChE+K,GAAc,GAGhBJ,EAAc/b,KAAKhN,MAAM,GAAG2R,KAAK5D,IAEjCgb,EAAc/b,KAGZgc,GACFjb,EAAQqb,oBAGNpc,KAAKic,SAAUjc,KAAKkc,YAAe7K,GAAW8K,GAAiBJ,aAAuB1B,KACxF0B,EAAc,IAAIrX,EAAMqX,IAGnBA,IAER,CACDvpB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9B,IAAK,IAAItP,EAAI,EAAGA,EAAI+N,KAAKhN,MAAM7D,OAAQ8C,IACrC+N,KAAKhN,MAAMf,GAAGgP,OAAOF,EAASQ,IAEzBvB,KAAK8b,WAAa7pB,EAAI,EAAI+N,KAAKhN,MAAM7D,QACxCoS,EAAOL,IAAI,OAIhB,CACD1O,IAAK,oBACLQ,MAAO,WACLgN,KAAKhN,MAAQgN,KAAKhN,MAAM6gB,QAAO,SAAUzP,GACvC,QAASA,aAAasL,WAKrBmM,EApFT,CAqFE9b,GAEF8b,GAAWpqB,UAAUyQ,KAAO,aAE5B,IAAIma,GAEJ,WACE,SAASA,EAAe/N,EAAMvN,EAASK,EAAOmE,GAC5C7T,EAAgBsO,KAAMqc,GAEtBrc,KAAKsO,KAAOA,EAAK9J,cACjBxE,KAAKoB,MAAQA,EACbpB,KAAKe,QAAUA,EACff,KAAKuF,gBAAkBA,EACvBvF,KAAK2Q,KAAO5P,EAAQoQ,OAAO,GAAGU,iBAAiBvR,IAAIN,KAAKsO,MA6C1D,OA1CA7b,EAAa4pB,EAAgB,CAAC,CAC5B7pB,IAAK,UACLQ,MAAO,WACL,OAAOmb,QAAQnO,KAAK2Q,QAErB,CACDne,IAAK,OACLQ,MAAO,SAAckB,GA+BnB,OA5BIgB,MAAMC,QAAQjB,KAChBA,EAAOA,EAAK2f,QAAO,SAAUyI,GAC3B,MAAkB,YAAdA,EAAKpa,QAKRQ,KAAI,SAAU4Z,GACf,GAAkB,eAAdA,EAAKpa,KAAuB,CAC9B,IAAIqa,EAAWD,EAAKtpB,MAAM6gB,QAAO,SAAUyI,GACzC,MAAkB,YAAdA,EAAKpa,QAOX,OAAwB,IAApBqa,EAASptB,OACJotB,EAAS,GAET,IAAIV,GAAWU,GAI1B,OAAOD,MAIJtc,KAAK2Q,KAAKtc,MAAM2L,KAAMnL,EAAmBX,QAI7CmoB,EArDT,GA2DIG,GAEJ,SAAUna,GAGR,SAASma,EAAKlO,EAAMpa,EAAMkN,EAAOmE,GAC/B,IAAI/C,EAUJ,OARA9Q,EAAgBsO,KAAMwc,IAEtBha,EAAQ5N,EAA2BoL,KAAM9M,EAAgBspB,GAAMzoB,KAAKiM,QAC9DsO,KAAOA,EACb9L,EAAMtO,KAAOA,EACbsO,EAAMia,KAAgB,SAATnO,EACb9L,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EACX/C,EAgGT,OA7GA5P,EAAU4pB,EAAMna,GAgBhB5P,EAAa+pB,EAAM,CAAC,CAClBhqB,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAK9L,OACP8L,KAAK9L,KAAOsN,EAAQsL,WAAW9M,KAAK9L,SAcvC,CACD1B,IAAK,OACLQ,MAAO,SAAe+N,GAIpB,IAAI2b,EAAqB3b,EAAQsQ,OACjCtQ,EAAQsQ,QAAUrR,KAAKyc,MAEnBzc,KAAKyc,MAAQ1b,EAAQqQ,SACvBrQ,EAAQ4b,YAGV,IASI5R,EATA7W,EAAO8L,KAAK9L,KAAKwO,KAAI,SAAUtO,GACjC,OAAOA,EAAEuQ,KAAK5D,OAGZf,KAAKyc,MAAQ1b,EAAQqQ,SACvBrQ,EAAQ6b,WAGV7b,EAAQsQ,OAASqL,EAEjB,IAAIG,EAAa,IAAIR,GAAerc,KAAKsO,KAAMvN,EAASf,KAAKQ,WAAYR,KAAKO,YAE9E,GAAIsc,EAAWC,UAAW,CACxB,IACE/R,EAAS8R,EAAW9oB,KAAKG,GACzB,MAAOpE,GACP,KAAM,CACJoS,KAAMpS,EAAEoS,MAAQ,UAChBoJ,QAAS,8BAA8Bhd,OAAO0R,KAAKsO,KAAM,KAAKhgB,OAAOwB,EAAEwb,QAAU,KAAKhd,OAAOwB,EAAEwb,SAAW,IAC1GlK,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,SAC1BtB,KAAMja,EAAEyf,WACRvF,OAAQla,EAAEitB,cAId,GAAe,OAAXhS,QAA8B5a,IAAX4a,EAarB,OAVMA,aAAkBhL,IAIpBgL,EAAS,IAAIgD,EAHVhD,IAAqB,IAAXA,EAGUA,EAAOjX,WAFP,OAM3BiX,EAAOlK,OAASb,KAAKa,OACrBkK,EAAOjK,UAAYd,KAAKc,UACjBiK,EAIX,OAAO,IAAIyR,EAAKxc,KAAKsO,KAAMpa,EAAM8L,KAAKQ,WAAYR,KAAKO,cAExD,CACD/N,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,GAAG5S,OAAO0R,KAAKsO,KAAM,KAAMtO,KAAKO,WAAYP,KAAKQ,YAE5D,IAAK,IAAIvO,EAAI,EAAGA,EAAI+N,KAAK9L,KAAK/E,OAAQ8C,IACpC+N,KAAK9L,KAAKjC,GAAGgP,OAAOF,EAASQ,GAEzBtP,EAAI,EAAI+N,KAAK9L,KAAK/E,QACpBoS,EAAOL,IAAI,MAIfK,EAAOL,IAAI,SAIRsb,EA9GT,CA+GEzc,GAEFyc,GAAK/qB,UAAUyQ,KAAO,OAEtB,IAAI8a,GAEJ,SAAU3a,GAGR,SAAS2a,EAAS1O,EAAMlN,EAAOmE,GAC7B,IAAI/C,EAQJ,OANA9Q,EAAgBsO,KAAMgd,IAEtBxa,EAAQ5N,EAA2BoL,KAAM9M,EAAgB8pB,GAAUjpB,KAAKiM,QAClEsO,KAAOA,EACb9L,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EACX/C,EAoET,OA/EA5P,EAAUoqB,EAAU3a,GAcpB5P,EAAauqB,EAAU,CAAC,CACtBxqB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAI0N,EACAH,EAAOtO,KAAKsO,KAMhB,GAJ2B,IAAvBA,EAAKhL,QAAQ,QACfgL,EAAO,IAAIhgB,OAAO,IAAI0uB,EAAS1O,EAAK7J,MAAM,GAAIzE,KAAKQ,WAAYR,KAAKO,YAAYoE,KAAK5D,GAAS/N,QAG5FgN,KAAKid,WACP,KAAM,CACJ/a,KAAM,OACNoJ,QAAS,qCAAqChd,OAAOggB,GACrDjD,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YAuBhB,GAnBAR,KAAKid,YAAa,EAClBxO,EAAWzO,KAAKkV,KAAKnU,EAAQoQ,QAAQ,SAAU+L,GAC7C,IAAI9Y,EAAI8Y,EAAMzO,SAASH,GAEvB,GAAIlK,EAOF,OANIA,EAAEmK,YACiBxN,EAAQgO,eAAehO,EAAQgO,eAAe5f,OAAS,GAC7Dof,UAAYnK,EAAEmK,WAI3BxN,EAAQqQ,OACH,IAAIoL,GAAK,QAAS,CAACpY,EAAEpR,QAAQ2R,KAAK5D,GAElCqD,EAAEpR,MAAM2R,KAAK5D,MAOxB,OADAf,KAAKid,YAAa,EACXxO,EAEP,KAAM,CACJvM,KAAM,OACNoJ,QAAS,YAAYhd,OAAOggB,EAAM,iBAClCjD,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,cAIjB,CACDhO,IAAK,OACLQ,MAAO,SAAc3B,EAAK8rB,GACxB,IAAK,IAAWpa,EAAP9Q,EAAI,EAAMA,EAAIZ,EAAIlC,OAAQ8C,IAGjC,GAFA8Q,EAAIoa,EAAIppB,KAAK1C,EAAKA,EAAIY,IAGpB,OAAO8Q,EAIX,OAAO,SAIJia,EAhFT,CAiFEjd,GAEFid,GAASvrB,UAAUyQ,KAAO,WAE1B,IAAIkb,GAEJ,SAAU/a,GAGR,SAAS+a,EAAS9O,EAAMlN,EAAOmE,GAC7B,IAAI/C,EAQJ,OANA9Q,EAAgBsO,KAAMod,IAEtB5a,EAAQ5N,EAA2BoL,KAAM9M,EAAgBkqB,GAAUrpB,KAAKiM,QAClEsO,KAAOA,EACb9L,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EACX/C,EAuET,OAlFA5P,EAAUwqB,EAAU/a,GAcpB5P,EAAa2qB,EAAU,CAAC,CACtB5qB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIsc,EACA/O,EAAOtO,KAAKsO,KAEZgP,EAAavc,EAAQwc,cAAcC,KAAKC,SAASC,aAAajsB,UAAUksB,YAE5E,GAAI3d,KAAKid,WACP,KAAM,CACJ/a,KAAM,OACNoJ,QAAS,oCAAoChd,OAAOggB,GACpDjD,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YA4BhB,GAxBAR,KAAKid,YAAa,EAClBI,EAAWrd,KAAKkV,KAAKnU,EAAQoQ,QAAQ,SAAU+L,GAC7C,IAAI9Y,EACAwZ,EAAOV,EAAMG,SAAS/O,GAE1B,GAAIsP,EAAM,CACR,IAAK,IAAI3rB,EAAI,EAAGA,EAAI2rB,EAAKzuB,OAAQ8C,IAC/BmS,EAAIwZ,EAAK3rB,GACT2rB,EAAK3rB,GAAK,IAAIoc,EAAYjK,EAAEkK,KAAMlK,EAAEpR,MAAOoR,EAAEmK,UAAWnK,EAAEyG,MAAOzG,EAAEhD,MAAOgD,EAAEmB,gBAAiBnB,EAAEoK,OAAQpK,EAAEqK,UAY3G,OATA6O,EAAWM,IACXxZ,EAAIwZ,EAAKA,EAAKzuB,OAAS,IAEjBof,YACiBxN,EAAQgO,eAAehO,EAAQgO,eAAe5f,OAAS,GAC7Dof,UAAYnK,EAAEmK,WAG/BnK,EAAIA,EAAEpR,MAAM2R,KAAK5D,OAOnB,OADAf,KAAKid,YAAa,EACXI,EAEP,KAAM,CACJnb,KAAM,OACNoJ,QAAS,aAAahd,OAAOggB,EAAM,kBACnCjD,SAAUrL,KAAKuF,gBAAgB8F,SAC/BjK,MAAOpB,KAAKoB,SAIjB,CACD5O,IAAK,OACLQ,MAAO,SAAc3B,EAAK8rB,GACxB,IAAK,IAAWpa,EAAP9Q,EAAI,EAAMA,EAAIZ,EAAIlC,OAAQ8C,IAGjC,GAFA8Q,EAAIoa,EAAIppB,KAAK1C,EAAKA,EAAIY,IAGpB,OAAO8Q,EAIX,OAAO,SAIJqa,EAnFT,CAoFErd,GAEFqd,GAAS3rB,UAAUyQ,KAAO,WAE1B,IAAI2b,GAEJ,SAAUxb,GAGR,SAASwb,EAAUrrB,EAAKkP,EAAI1O,GAC1B,IAAIwP,EAQJ,OANA9Q,EAAgBsO,KAAM6d,IAEtBrb,EAAQ5N,EAA2BoL,KAAM9M,EAAgB2qB,GAAW9pB,KAAKiM,QACnExN,IAAMA,EACZgQ,EAAMd,GAAKA,EACXc,EAAMxP,MAAQA,EACPwP,EA2BT,OAtCA5P,EAAUirB,EAAWxb,GAcrB5P,EAAaorB,EAAW,CAAC,CACvBrrB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAI8c,EAAU7d,KAAKxN,IAAImS,KAAO3E,KAAKxN,IAAImS,KAAK5D,GAAWf,KAAKxN,IAAKwN,KAAK0B,GAAI1B,KAAKhN,OAASgN,KAAKhN,MAAM2R,KAAO3E,KAAKhN,MAAM2R,KAAK5D,GAAWf,KAAKhN,SAElJ,CACDR,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAIlB,KAAKkD,MAAMnC,MAEvB,CACDvO,IAAK,QACLQ,MAAO,SAAe+N,GACpB,IAAI/N,EAAQgN,KAAKxN,IAAI0Q,MAAQlD,KAAKxN,IAAI0Q,MAAMnC,GAAWf,KAAKxN,IAO5D,OALIwN,KAAK0B,KACP1O,GAASgN,KAAK0B,GACd1O,GAASgN,KAAKhN,MAAMkQ,MAAQlD,KAAKhN,MAAMkQ,MAAMnC,GAAWf,KAAKhN,OAGxD,IAAI1E,OAAO0E,EAAO,SAItB6qB,EAvCT,CAwCE9d,GAEF8d,GAAUpsB,UAAUyQ,KAAO,YAE3B,IAAI4b,GAEJ,SAAUzb,GAGR,SAASyb,EAAO1R,EAAK2R,EAASC,EAAS5c,EAAOmE,GAC5C,IAAI/C,EAaJ,OAXA9Q,EAAgBsO,KAAM8d,IAEtBtb,EAAQ5N,EAA2BoL,KAAM9M,EAAgB4qB,GAAQ/pB,KAAKiM,QAChEge,QAAqB,MAAXA,GAAyBA,EACzCxb,EAAMxP,MAAQ+qB,GAAW,GACzBvb,EAAMyb,MAAQ7R,EAAIxG,OAAO,GACzBpD,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM0b,cAAgB,iBACtB1b,EAAM2b,UAAY,kBAClB3b,EAAM0L,UAAY8P,EACXxb,EAgET,OAhFA5P,EAAUkrB,EAAQzb,GAmBlB5P,EAAaqrB,EAAQ,CAAC,CACpBtrB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GACzBvB,KAAKge,SACRzc,EAAOL,IAAIlB,KAAKie,MAAOje,KAAKO,WAAYP,KAAKQ,YAG/Ce,EAAOL,IAAIlB,KAAKhN,OAEXgN,KAAKge,SACRzc,EAAOL,IAAIlB,KAAKie,SAGnB,CACDzrB,IAAK,oBACLQ,MAAO,WACL,OAAOgN,KAAKhN,MAAMyP,MAAMzC,KAAKke,iBAE9B,CACD1rB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIqd,EAAOpe,KACPhN,EAAQgN,KAAKhN,MAEbqrB,EAAsB,SAA6BtwB,EAAGugB,GACxD,IAAIlK,EAAI,IAAI4Y,GAAS,IAAI1uB,OAAOggB,GAAO8P,EAAK5d,WAAY4d,EAAK7d,YAAYoE,KAAK5D,GAAS,GACvF,OAAOqD,aAAa0Z,EAAS1Z,EAAEpR,MAAQoR,EAAElB,SAGvCob,EAAsB,SAA6BvwB,EAAGugB,GACxD,IAAIlK,EAAI,IAAIgZ,GAAS,IAAI9uB,OAAOggB,GAAO8P,EAAK5d,WAAY4d,EAAK7d,YAAYoE,KAAK5D,GAAS,GACvF,OAAOqD,aAAa0Z,EAAS1Z,EAAEpR,MAAQoR,EAAElB,SAG3C,SAASqb,EAAiBvrB,EAAOwrB,EAAQC,GACvC,IAAIC,EAAiB1rB,EAErB,GACEA,EAAQ0rB,EAAe5qB,WACvB4qB,EAAiB1rB,EAAM1F,QAAQkxB,EAAQC,SAChCzrB,IAAU0rB,GAEnB,OAAOA,EAKT,OAFA1rB,EAAQurB,EAAiBvrB,EAAOgN,KAAKke,cAAeG,GACpDrrB,EAAQurB,EAAiBvrB,EAAOgN,KAAKme,UAAWG,GACzC,IAAIR,EAAO9d,KAAKie,MAAQjrB,EAAQgN,KAAKie,MAAOjrB,EAAOgN,KAAKge,QAAShe,KAAKQ,WAAYR,KAAKO,cAE/F,CACD/N,IAAK,UACLQ,MAAO,SAAiB8Q,GAEtB,MAAmB,WAAfA,EAAM5B,MAAsBlC,KAAKge,SAAYla,EAAMka,QAG9Cla,EAAMZ,OAASlD,KAAKkD,UAAYY,EAAMZ,QAAU,OAAI/S,EAFpD4P,EAAKoC,eAAenC,KAAKhN,MAAO8Q,EAAM9Q,WAO5C8qB,EAjFT,CAkFE/d,GAEF+d,GAAOrsB,UAAUyQ,KAAO,SAExB,IAAIyc,GAEJ,SAAUtc,GAGR,SAASsc,EAAIC,EAAKxd,EAAOmE,EAAiBsZ,GACxC,IAAIrc,EASJ,OAPA9Q,EAAgBsO,KAAM2e,IAEtBnc,EAAQ5N,EAA2BoL,KAAM9M,EAAgByrB,GAAK5qB,KAAKiM,QAC7DhN,MAAQ4rB,EACdpc,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAMqc,QAAUA,EACTrc,EAsDT,OAlEA5P,EAAU+rB,EAAKtc,GAef5P,EAAaksB,EAAK,CAAC,CACjBnsB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKhN,MAAQwO,EAAQC,MAAMzB,KAAKhN,SAEjC,CACDR,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,QACXlB,KAAKhN,MAAMiO,OAAOF,EAASQ,GAC3BA,EAAOL,IAAI,OAEZ,CACD1O,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IACIlU,EADA+xB,EAAM5e,KAAKhN,MAAM2R,KAAK5D,GAG1B,IAAKf,KAAK6e,UAIgB,kBAFxBhyB,EAAWmT,KAAKO,YAAcP,KAAKO,WAAW1T,WAEW,kBAAd+xB,EAAI5rB,OAAsB+N,EAAQ+d,oBAAoBF,EAAI5rB,QAC9F4rB,EAAIX,QACPpxB,EAAWkyB,GAAWlyB,IAGxB+xB,EAAI5rB,MAAQ+N,EAAQie,YAAYJ,EAAI5rB,MAAOnG,IAE3C+xB,EAAI5rB,MAAQ+N,EAAQ0Q,cAAcmN,EAAI5rB,OAIpC+N,EAAQ5T,UACLyxB,EAAI5rB,MAAMyP,MAAM,cAAc,CACjC,IACItV,IADwC,IAA5ByxB,EAAI5rB,MAAMsQ,QAAQ,KAAc,IAAM,KAC5BvC,EAAQ5T,SAEF,IAA5ByxB,EAAI5rB,MAAMsQ,QAAQ,KACpBsb,EAAI5rB,MAAQ4rB,EAAI5rB,MAAM1F,QAAQ,IAAK,GAAGgB,OAAOnB,EAAS,MAEtDyxB,EAAI5rB,OAAS7F,EAMrB,OAAO,IAAIwxB,EAAIC,EAAK5e,KAAKQ,WAAYR,KAAKO,YAAY,OAInDoe,EAnET,CAoEE5e,GAIF,SAASgf,GAAWzO,GAClB,OAAOA,EAAKhjB,QAAQ,eAAe,SAAUmV,GAC3C,MAAO,KAAKnU,OAAOmU,MAJvBkc,GAAIltB,UAAUyQ,KAAO,MAQrB,IAAI+c,GAEJ,SAAUC,GAGR,SAASD,EAAMjsB,EAAOmsB,EAAU/d,EAAOmE,EAAiBC,GACtD,IAAIhD,EAEJ9Q,EAAgBsO,KAAMif,IAEtBzc,EAAQ5N,EAA2BoL,KAAM9M,EAAgB+rB,GAAOlrB,KAAKiM,QAC/Da,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB,IAAI4M,EAAY,IAAI5F,EAAS,GAAI,KAAM,KAAM/J,EAAM3B,OAAQ2B,EAAM1B,WAAW8X,uBAe5E,OAdApW,EAAM2c,SAAW,IAAIxR,EAAMwR,GAC3B3c,EAAM4P,MAAQ,CAAC,IAAIF,GAAQC,EAAWnf,IACtCwP,EAAM4P,MAAM,GAAGgB,cAAe,EAE9B5Q,EAAMiD,mBAAmBD,GAEzBhD,EAAM0L,WAAY,EAElB1L,EAAMkD,UAAUyM,EAAW1d,EAAuB+N,IAElDA,EAAMkD,UAAUlD,EAAM2c,SAAU1qB,EAAuB+N,IAEvDA,EAAMkD,UAAUlD,EAAM4P,MAAO3d,EAAuB+N,IAE7CA,EAsIT,OA/JA5P,EAAUqsB,EAAOC,GA4BjBzsB,EAAawsB,EAAO,CAAC,CACnBzsB,IAAK,gBACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKmf,WACPnf,KAAKmf,SAAW3d,EAAQC,MAAMzB,KAAKmf,WAGjCnf,KAAKoS,QACPpS,KAAKoS,MAAQ5Q,EAAQsL,WAAW9M,KAAKoS,UAGxC,CACD5f,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,UAAWlB,KAAKc,UAAWd,KAAKa,QAC3Cb,KAAKmf,SAASle,OAAOF,EAASQ,GAC9BvB,KAAK6Y,cAAc9X,EAASQ,EAAQvB,KAAKoS,SAE1C,CACD5f,IAAK,OACLQ,MAAO,SAAe+N,GACfA,EAAQ6S,cACX7S,EAAQ6S,YAAc,GACtB7S,EAAQiY,UAAY,IAGtB,IAAIlqB,EAAQ,IAAImwB,EAAM,KAAM,GAAIjf,KAAKa,OAAQb,KAAKc,UAAWd,KAAKwF,kBAelE,OAbIxF,KAAKkP,YACPlP,KAAKoS,MAAM,GAAGlD,UAAYlP,KAAKkP,UAC/BpgB,EAAMogB,UAAYlP,KAAKkP,WAGzBpgB,EAAMqwB,SAAWnf,KAAKmf,SAASxa,KAAK5D,GACpCA,EAAQiY,UAAUltB,KAAKgD,GACvBiS,EAAQ6S,YAAY9nB,KAAKgD,GACzBkR,KAAKoS,MAAM,GAAGP,iBAAmB9Q,EAAQoQ,OAAO,GAAGU,iBAAiBb,UACpEjQ,EAAQoQ,OAAOmC,QAAQtT,KAAKoS,MAAM,IAClCtjB,EAAMsjB,MAAQ,CAACpS,KAAKoS,MAAM,GAAGzN,KAAK5D,IAClCA,EAAQoQ,OAAO3D,QACfzM,EAAQiY,UAAU/J,MACkB,IAA7BlO,EAAQiY,UAAU7pB,OAAeL,EAAMswB,QAAQre,GAAWjS,EAAMuwB,WAAWte,KAEnF,CACDvO,IAAK,UACLQ,MAAO,SAAiB+N,GACtB,IAAIgK,EAAS/K,KAEb,GAAIe,EAAQ6S,YAAYzkB,OAAS,EAAG,CAClC,IAAIgjB,EAAY,IAAI5F,EAAS,GAAI,KAAM,KAAMvM,KAAKQ,WAAYR,KAAKO,YAAYqY,wBAC/E7N,EAAS,IAAImH,GAAQC,EAAWpR,EAAQ6S,cACjC0L,YAAa,EACpBvU,EAAOtF,mBAAmBzF,KAAKwF,kBAC/BxF,KAAK0F,UAAUqF,EAAQ/K,MAKzB,cAFOe,EAAQ6S,mBACR7S,EAAQiY,UACRjO,IAER,CACDvY,IAAK,aACLQ,MAAO,SAAoB+N,GACzB,IAAI9O,EACAe,EACAsd,EAAOvP,EAAQiY,UAAU1qB,OAAO,CAAC0R,OAErC,IAAK/N,EAAI,EAAGA,EAAIqe,EAAKnhB,OAAQ8C,IAC3Be,EAAQsd,EAAKre,GAAGktB,oBAAoBxR,EAAQ2C,EAAKre,GAAGktB,SAASnsB,MAAQsd,EAAKre,GAAGktB,SAC7E7O,EAAKre,GAAKiD,MAAMC,QAAQnC,GAASA,EAAQ,CAACA,GAuB5C,OAbAgN,KAAKmf,SAAW,IAAIxR,EAAM3N,KAAKuf,QAAQjP,GAAM5N,KAAI,SAAU4N,GAKzD,IAJAA,EAAOA,EAAK5N,KAAI,SAAU8c,GACxB,OAAOA,EAAStc,MAAQsc,EAAW,IAAIzR,EAAUyR,MAG9CvtB,EAAIqe,EAAKnhB,OAAS,EAAG8C,EAAI,EAAGA,IAC/Bqe,EAAKwD,OAAO7hB,EAAG,EAAG,IAAI8b,EAAU,QAGlC,OAAO,IAAI8N,GAAWvL,OAExBtQ,KAAK0F,UAAU1F,KAAKmf,SAAUnf,MAEvB,IAAIkS,GAAQ,GAAI,MAExB,CACD1f,IAAK,UACLQ,MAAO,SAAiB8B,GACtB,GAAmB,IAAfA,EAAI3F,OACN,MAAO,GACF,GAAmB,IAAf2F,EAAI3F,OACb,OAAO2F,EAAI,GAKX,IAHA,IAAIiW,EAAS,GACT0U,EAAOzf,KAAKuf,QAAQzqB,EAAI2P,MAAM,IAEzBxS,EAAI,EAAGA,EAAIwtB,EAAKtwB,OAAQ8C,IAC/B,IAAK,IAAI2gB,EAAI,EAAGA,EAAI9d,EAAI,GAAG3F,OAAQyjB,IACjC7H,EAAOjf,KAAK,CAACgJ,EAAI,GAAG8d,IAAItkB,OAAOmxB,EAAKxtB,KAIxC,OAAO8Y,IAGV,CACDvY,IAAK,kBACLQ,MAAO,SAAyBmf,GACzBA,IAILnS,KAAKoS,MAAQ,CAAC,IAAIF,GAAQjI,EAAUkI,GAAY,CAACnS,KAAKoS,MAAM,MAC5DpS,KAAK0F,UAAU1F,KAAKoS,MAAOpS,WAIxBif,EAhKT,CAiKEvG,IAEFuG,GAAMxtB,UAAUyQ,KAAO,QAcvB,IAAIwd,GAEJ,SAAUrd,GAGR,SAASqd,EAAOpP,EAAM6O,EAAU3xB,EAAS4T,EAAOmE,EAAiBC,GAC/D,IAAIhD,EAYJ,GAVA9Q,EAAgBsO,KAAM0f,IAEtBld,EAAQ5N,EAA2BoL,KAAM9M,EAAgBwsB,GAAQ3rB,KAAKiM,QAChExS,QAAUA,EAChBgV,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM8N,KAAOA,EACb9N,EAAM2c,SAAWA,EACjB3c,EAAM0L,WAAY,OAES/d,IAAvBqS,EAAMhV,QAAQgwB,MAAsBhb,EAAMhV,QAAQghB,OACpDhM,EAAMmd,KAAOnd,EAAMhV,QAAQgwB,MAAQhb,EAAMhV,QAAQghB,WAC5C,CACL,IAAIoR,EAAYpd,EAAMqd,UAElBD,GAAa,0BAA0BvvB,KAAKuvB,KAC9Cpd,EAAMmd,KAAM,GAUhB,OANAnd,EAAMiD,mBAAmBD,GAEzBhD,EAAMkD,UAAUlD,EAAM2c,SAAU1qB,EAAuB+N,IAEvDA,EAAMkD,UAAUlD,EAAM8N,KAAM7b,EAAuB+N,IAE5CA,EA4JT,OA3LA5P,EAAU8sB,EAAQrd,GAkClB5P,EAAaitB,EAAQ,CAAC,CACpBltB,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKmf,WACPnf,KAAKmf,SAAW3d,EAAQC,MAAMzB,KAAKmf,WAGrCnf,KAAKsQ,KAAO9O,EAAQC,MAAMzB,KAAKsQ,MAE1BtQ,KAAKxS,QAAQsyB,UAAa9f,KAAKxS,QAAQghB,SAAUxO,KAAKkT,OACzDlT,KAAKkT,KAAO1R,EAAQC,MAAMzB,KAAKkT,SAGlC,CACD1gB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC1BvB,KAAK2f,UAAyCxvB,IAAlC6P,KAAKsQ,KAAKxP,UAAUif,YAClCxe,EAAOL,IAAI,WAAYlB,KAAKc,UAAWd,KAAKa,QAC5Cb,KAAKsQ,KAAKrP,OAAOF,EAASQ,GAEtBvB,KAAKmf,WACP5d,EAAOL,IAAI,KACXlB,KAAKmf,SAASle,OAAOF,EAASQ,IAGhCA,EAAOL,IAAI,QAGd,CACD1O,IAAK,UACLQ,MAAO,WACL,OAAOgN,KAAKsQ,gBAAgBqO,GAAM3e,KAAKsQ,KAAKtd,MAAMA,MAAQgN,KAAKsQ,KAAKtd,QAErE,CACDR,IAAK,mBACLQ,MAAO,WACL,IAAIsd,EAAOtQ,KAAKsQ,KAMhB,OAJIA,aAAgBqO,KAClBrO,EAAOA,EAAKtd,SAGVsd,aAAgBwN,KACXxN,EAAK0P,sBAKf,CACDxtB,IAAK,gBACLQ,MAAO,SAAuB+N,GAC5B,IAAIuP,EAAOtQ,KAAKsQ,KAMhB,OAJIA,aAAgBqO,KAClBrO,EAAOA,EAAKtd,OAGP,IAAI0sB,EAAOpP,EAAK3L,KAAK5D,GAAUf,KAAKmf,SAAUnf,KAAKxS,QAASwS,KAAKa,OAAQb,KAAKc,UAAWd,KAAKwF,oBAEtG,CACDhT,IAAK,WACLQ,MAAO,SAAkB+N,GACvB,IAAIuP,EAAOtQ,KAAKsQ,KAAK3L,KAAK5D,GACtBR,EAAWP,KAAKc,UAEpB,KAAMwP,aAAgBqO,IAAM,CAE1B,IAAIiB,EAAYtP,EAAKtd,MAEjBuN,GAAYqf,GAAa7e,EAAQ+d,oBAAoBc,GACvDtP,EAAKtd,MAAQ+N,EAAQie,YAAYY,EAAWrf,EAAS1T,UAErDyjB,EAAKtd,MAAQ+N,EAAQ0Q,cAAcnB,EAAKtd,OAI5C,OAAOsd,IAER,CACD9d,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIgK,EAAS/K,KAAKigB,OAAOlf,GAYzB,OAVIf,KAAKxS,QAAQuyB,WAAa/f,KAAKkgB,sBAC7BnV,EAAO5b,QAA4B,IAAlB4b,EAAO5b,OAC1B4b,EAAOnK,SAAQ,SAAUD,GACvBA,EAAKwf,wBAGPpV,EAAOoV,sBAIJpV,IAER,CACDvY,IAAK,SACLQ,MAAO,SAAgB+N,GACrB,IAAIiS,EACAoN,EACAjB,EAAWnf,KAAKmf,UAAYnf,KAAKmf,SAASxa,KAAK5D,GAEnD,GAAIf,KAAKxS,QAAQsyB,SAAU,CACzB,GAAI9f,KAAKkT,MAAQlT,KAAKkT,KAAKvO,KACzB,IACE3E,KAAKkT,KAAKvO,KAAK5D,GACf,MAAOjR,GAEP,MADAA,EAAEwb,QAAU,iCACN,IAAIJ,EAAUpb,EAAGkQ,KAAKkT,KAAK/F,QAASnN,KAAKkT,KAAK7H,UAUxD,OANA+U,EAAWrf,EAAQoQ,OAAO,IAAMpQ,EAAQoQ,OAAO,GAAGU,mBAElC7R,KAAKkT,MAAQlT,KAAKkT,KAAKrC,WACrCuP,EAASxP,YAAY5Q,KAAKkT,KAAKrC,WAG1B,GAGT,GAAI7Q,KAAKqgB,OACkB,oBAAdrgB,KAAKqgB,OACdrgB,KAAKqgB,KAAOrgB,KAAKqgB,QAGfrgB,KAAKqgB,MACP,MAAO,GAIX,GAAIrgB,KAAKxS,QAAQghB,OAAQ,CACvB,IAAI/C,EAAW,IAAIsC,EAAU/N,KAAKkT,KAAM,EAAG,CACzC7H,SAAUrL,KAAKsgB,iBACfP,UAAW/f,KAAKsQ,KAAKxP,WAAad,KAAKsQ,KAAKxP,UAAUif,YACrD,GAAM,GACT,OAAO/f,KAAKmf,SAAW,IAAIF,GAAM,CAACxT,GAAWzL,KAAKmf,SAASnsB,OAAS,CAACyY,GAChE,GAAIzL,KAAK2f,IAAK,CACnB,IAAIY,EAAY,IAAIb,EAAO1f,KAAKwgB,SAASzf,GAAUoe,EAAUnf,KAAKxS,QAASwS,KAAKa,QAEhF,IAAK0f,EAAUZ,KAAO3f,KAAKkM,MACzB,MAAMlM,KAAKkM,MAGb,OAAOqU,EAIP,OAFAvN,EAAU,IAAId,GAAQ,KAAMjI,EAAUjK,KAAKkT,KAAKd,SACxCoB,YAAYzS,GACbf,KAAKmf,SAAW,IAAIF,GAAMjM,EAAQZ,MAAOpS,KAAKmf,SAASnsB,OAASggB,EAAQZ,UAK9EsN,EA5LT,CA6LE3f,GAEF2f,GAAOjuB,UAAUyQ,KAAO,SAExB,IAkFIue,GAEJ,SAAUC,GAGR,SAASD,EAAWE,EAAQ3C,EAAS5c,EAAOmE,GAC1C,IAAI/C,EASJ,OAPA9Q,EAAgBsO,KAAMygB,IAEtBje,EAAQ5N,EAA2BoL,KAAM9M,EAAgButB,GAAY1sB,KAAKiM,QACpEge,QAAUA,EAChBxb,EAAMoe,WAAaD,EACnBne,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EACX/C,EAsBT,OAlCA5P,EAAU6tB,EAAYC,GAetBjuB,EAAaguB,EAAY,CAAC,CACxBjuB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIgK,EAAS/K,KAAK6gB,mBAAmB7gB,KAAK4gB,WAAY7f,GAElDmB,EAAO9Q,EAAQ2Z,GAEnB,MAAa,WAAT7I,GAAsBsY,MAAMzP,GAEZ,WAAT7I,EACF,IAAI4b,GAAO,IAAKxvB,OAAOyc,EAAQ,KAAOA,EAAQ/K,KAAKge,QAAShe,KAAKa,QAC/D3L,MAAMC,QAAQ4V,GAChB,IAAIgD,EAAUhD,EAAOzJ,KAAK,OAE1B,IAAIyM,EAAUhD,GANd,IAAIsP,GAAUtP,OAWpB0V,EAnCT,CAlFA,SAAUpe,GAGR,SAASye,IAGP,OAFApvB,EAAgBsO,KAAM8gB,GAEflsB,EAA2BoL,KAAM9M,EAAgB4tB,GAAYzsB,MAAM2L,KAAMxL,YAuElF,OA5EA5B,EAAUkuB,EAAYze,GAQtB5P,EAAaquB,EAAY,CAAC,CACxBtuB,IAAK,qBACLQ,MAAO,SAA4B4tB,EAAY7f,GAC7C,IAAIgK,EACAqT,EAAOpe,KACP+gB,EAAc,GAElB,IAAKhgB,EAAQ1U,kBACX,KAAM,CACJif,QAAS,+DACTD,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YAIhBogB,EAAaA,EAAWtzB,QAAQ,kBAAkB,SAAUS,EAAGugB,GAC7D,OAAO8P,EAAK4C,MAAM,IAAIhE,GAAS,IAAI1uB,OAAOggB,GAAO8P,EAAK5d,WAAY4d,EAAK7d,YAAYoE,KAAK5D,OAG1F,IACE6f,EAAa,IAAItsB,SAAS,WAAWhG,OAAOsyB,EAAY,MACxD,MAAO9wB,GACP,KAAM,CACJwb,QAAS,gCAAgChd,OAAOwB,EAAEwb,QAAS,WAAWhd,OAAOsyB,EAAY,KACzFvV,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YAIhB,IAAI+T,EAAYxT,EAAQoQ,OAAO,GAAGoD,YAElC,IAAK,IAAImD,KAAKnD,EACRA,EAAU3mB,eAAe8pB,KAE3BqJ,EAAYrJ,EAAEjT,MAAM,IAAM,CACxBzR,MAAOuhB,EAAUmD,GAAG1kB,MACpBiuB,KAAM,WACJ,OAAOjhB,KAAKhN,MAAM2R,KAAK5D,GAASmC,WAMxC,IACE6H,EAAS6V,EAAW7sB,KAAKgtB,GACzB,MAAOjxB,GACP,KAAM,CACJwb,QAAS,iCAAiChd,OAAOwB,EAAEwe,KAAM,MAAMhgB,OAAOwB,EAAEwb,QAAQhe,QAAQ,OAAQ,KAAO,KACvG+d,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YAIhB,OAAOuK,IAER,CACDvY,IAAK,QACLQ,MAAO,SAAe3B,GACpB,OAAI6D,MAAMC,QAAQ9D,EAAI2B,QAAU3B,EAAI2B,MAAM7D,OAAS,EAC1C,IAAIb,OAAO+C,EAAI2B,MAAM0P,KAAI,SAAU0B,GACxC,OAAOA,EAAElB,WACR5B,KAAK,MAAO,KAERjQ,EAAI6R,YAKV4d,EA7ET,CA8EE/gB,IA0CF0gB,GAAWhvB,UAAUyQ,KAAO,aAE5B,IAAIgf,GAEJ,SAAU7e,GAGR,SAAS6e,EAAW1uB,EAAKosB,GACvB,IAAIpc,EAOJ,OALA9Q,EAAgBsO,KAAMkhB,IAEtB1e,EAAQ5N,EAA2BoL,KAAM9M,EAAgBguB,GAAYntB,KAAKiM,QACpExN,IAAMA,EACZgQ,EAAMxP,MAAQ4rB,EACPpc,EA8BT,OAxCA5P,EAAUsuB,EAAY7e,GAatB5P,EAAayuB,EAAY,CAAC,CACxB1uB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKhN,MAAQwO,EAAQC,MAAMzB,KAAKhN,SAEjC,CACDR,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAIf,KAAKhN,MAAM2R,KACN,IAAIuc,EAAWlhB,KAAKxN,IAAKwN,KAAKhN,MAAM2R,KAAK5D,IAG3Cf,OAER,CACDxN,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,GAAG5S,OAAO0R,KAAKxN,IAAK,MAE3BwN,KAAKhN,MAAMiO,OACbjB,KAAKhN,MAAMiO,OAAOF,EAASQ,GAE3BA,EAAOL,IAAIlB,KAAKhN,WAKfkuB,EAzCT,CA0CEnhB,GAEFmhB,GAAWzvB,UAAUyQ,KAAO,aAE5B,IAAIif,GAEJ,SAAU9e,GAGR,SAAS8e,EAAUzf,EAAIiC,EAAGZ,EAAG9Q,EAAGmvB,GAC9B,IAAI5e,EAUJ,OARA9Q,EAAgBsO,KAAMmhB,IAEtB3e,EAAQ5N,EAA2BoL,KAAM9M,EAAgBiuB,GAAWptB,KAAKiM,QACnE0B,GAAKA,EAAGwD,OACd1C,EAAM6e,OAAS1d,EACfnB,EAAM8e,OAASve,EACfP,EAAM3B,OAAS5O,EACfuQ,EAAM4e,OAASA,EACR5e,EA0CT,OAvDA5P,EAAUuuB,EAAW9e,GAgBrB5P,EAAa0uB,EAAW,CAAC,CACvB3uB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKqhB,OAAS7f,EAAQC,MAAMzB,KAAKqhB,QACjCrhB,KAAKshB,OAAS9f,EAAQC,MAAMzB,KAAKshB,UAElC,CACD9uB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIgK,EAAS,SAAUrJ,EAAItN,EAAGuN,GAC5B,OAAQD,GACN,IAAK,MACH,OAAOtN,GAAKuN,EAEd,IAAK,KACH,OAAOvN,GAAKuN,EAEd,QACE,OAAQ5B,EAAKkC,QAAQ7N,EAAGuN,IACtB,KAAM,EACJ,MAAc,MAAPD,GAAqB,OAAPA,GAAsB,OAAPA,EAEtC,KAAK,EACH,MAAc,MAAPA,GAAqB,OAAPA,GAAsB,OAAPA,GAAsB,OAAPA,EAErD,KAAK,EACH,MAAc,MAAPA,GAAqB,OAAPA,EAEvB,QACE,OAAO,IApBJ,CAwBX1B,KAAK0B,GAAI1B,KAAKqhB,OAAO1c,KAAK5D,GAAUf,KAAKshB,OAAO3c,KAAK5D,IAEvD,OAAOf,KAAKohB,QAAUrW,EAASA,MAI5BoW,EAxDT,CAyDEphB,GAEFohB,GAAU1vB,UAAUyQ,KAAO,YAE3B,IAAIqf,GAEJ,SAAUlf,GAGR,SAASkf,EAAkBvuB,GACzB,IAAIwP,EAMJ,OAJA9Q,EAAgBsO,KAAMuhB,IAEtB/e,EAAQ5N,EAA2BoL,KAAM9M,EAAgBquB,GAAmBxtB,KAAKiM,QAC3EhN,MAAQA,EACPwP,EAGT,OAZA5P,EAAU2uB,EAAmBlf,GAYtBkf,EAbT,CAcExhB,GAEFwhB,GAAkB9vB,UAAUyQ,KAAO,oBAEnC,IAAIsf,GAEJ,SAAUnf,GAGR,SAASmf,EAAS7gB,GAChB,IAAI6B,EAMJ,OAJA9Q,EAAgBsO,KAAMwhB,IAEtBhf,EAAQ5N,EAA2BoL,KAAM9M,EAAgBsuB,GAAUztB,KAAKiM,QAClEhN,MAAQ2N,EACP6B,EAoBT,OA7BA5P,EAAU4uB,EAAUnf,GAYpB5P,EAAa+uB,EAAU,CAAC,CACtBhvB,IAAK,SACLQ,MAAO,SAAgB+N,EAASQ,GAC9BA,EAAOL,IAAI,KACXlB,KAAKhN,MAAMiO,OAAOF,EAASQ,KAE5B,CACD/O,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAIA,EAAQ0a,WACH,IAAIH,GAAU,IAAK,CAAC,IAAIjB,IAAW,GAAIra,KAAKhN,QAAQ2R,KAAK5D,GAG3D,IAAIygB,EAASxhB,KAAKhN,MAAM2R,KAAK5D,QAIjCygB,EA9BT,CA+BEzhB,GAEFyhB,GAAS/vB,UAAUyQ,KAAO,WAE1B,IAAIuf,GAEJ,SAAUpf,GAGR,SAASof,EAAOhP,EAAUiP,EAAQtgB,EAAOmE,EAAiBC,GACxD,IAAIhD,EAgBJ,OAdA9Q,EAAgBsO,KAAMyhB,IAEtBjf,EAAQ5N,EAA2BoL,KAAM9M,EAAgBuuB,GAAQ1tB,KAAKiM,QAChEyS,SAAWA,EACjBjQ,EAAMkf,OAASA,EACflf,EAAMmf,UAAYF,EAAOG,UACzBpf,EAAMqf,WAAa,CAACrf,EAAMmf,WAC1Bnf,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAElB/C,EAAMiD,mBAAmBD,GAEzBhD,EAAM0L,WAAY,EAEVwT,GACN,IAAK,MACHlf,EAAMsf,aAAc,EACpBtf,EAAMuf,YAAa,EACnB,MAEF,QACEvf,EAAMsf,aAAc,EACpBtf,EAAMuf,YAAa,EAMvB,OAFAvf,EAAMkD,UAAUlD,EAAMiQ,SAAUhe,EAAuB+N,IAEhDA,EA0CT,OA3EA5P,EAAU6uB,EAAQpf,GAoClB5P,EAAagvB,EAAQ,CAAC,CACpBjvB,IAAK,SACLQ,MAAO,SAAgBwO,GACrBxB,KAAKyS,SAAWjR,EAAQC,MAAMzB,KAAKyS,YAEpC,CACDjgB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAI0gB,EAAOzhB,KAAKyS,SAAS9N,KAAK5D,GAAUf,KAAK0hB,OAAQ1hB,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwF,oBAEpG,CACDhT,IAAK,QACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAI0gB,EAAOzhB,KAAKyS,SAAUzS,KAAK0hB,OAAQ1hB,KAAKQ,WAAYR,KAAKO,WAAYP,KAAKwF,oBAGtF,CACDhT,IAAK,oBACLQ,MAAO,SAA2Bmf,GAChC,IACIlgB,EACA+vB,EAFAC,EAAe,GAInB,IAAKhwB,EAAI,EAAGA,EAAIkgB,EAAUhjB,OAAQ8C,IAChC+vB,EAAmB7P,EAAUlgB,GAAGua,SAG5Bva,EAAI,GAAK+vB,EAAiB7yB,QAAmD,KAAzC6yB,EAAiB,GAAG3c,WAAWrS,QACrEgvB,EAAiB,GAAG3c,WAAWrS,MAAQ,KAGzCivB,EAAeA,EAAa3zB,OAAO6jB,EAAUlgB,GAAGua,UAGlDxM,KAAKkiB,cAAgB,CAAC,IAAI3V,EAAS0V,IACnCjiB,KAAKkiB,cAAc,GAAGzc,mBAAmBzF,KAAKwF,sBAI3Cic,EA5ET,CA6EE1hB,GAEF0hB,GAAOG,QAAU,EACjBH,GAAOhwB,UAAUyQ,KAAO,SAExB,IAAIigB,GAEJ,SAAU9f,GAGR,SAAS8f,EAAa1T,EAAUrN,EAAOmE,GACrC,IAAI/C,EASJ,OAPA9Q,EAAgBsO,KAAMmiB,IAEtB3f,EAAQ5N,EAA2BoL,KAAM9M,EAAgBivB,GAAcpuB,KAAKiM,QACtEyO,SAAWA,EACjBjM,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM0L,WAAY,EACX1L,EAkCT,OA9CA5P,EAAUuvB,EAAc9f,GAexB5P,EAAa0vB,EAAc,CAAC,CAC1B3vB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIqR,EACAgQ,EAAkB,IAAIpF,GAAShd,KAAKyO,SAAUzO,KAAKQ,WAAYR,KAAKO,YAAYoE,KAAK5D,GACrFmL,EAAQ,IAAIhB,EAAU,CACxBI,QAAS,oCAAoChd,OAAO0R,KAAKyO,YAG3D,IAAK2T,EAAgBpP,QAAS,CAC5B,GAAIoP,EAAgBhQ,MAClBA,EAAQgQ,OACH,GAAIltB,MAAMC,QAAQitB,GACvBhQ,EAAQ,IAAIF,GAAQ,GAAIkQ,OACnB,CAAA,IAAIltB,MAAMC,QAAQitB,EAAgBpvB,OAGvC,MAAMkZ,EAFNkG,EAAQ,IAAIF,GAAQ,GAAIkQ,EAAgBpvB,OAK1CovB,EAAkB,IAAIhJ,GAAgBhH,GAGxC,GAAIgQ,EAAgBpP,QAClB,OAAOoP,EAAgBC,SAASthB,GAGlC,MAAMmL,MAIHiW,EA/CT,CAgDEpiB,GAEFoiB,GAAa1wB,UAAUyQ,KAAO,eAE9B,IAAIogB,GAEJ,SAAUjgB,GAGR,SAASigB,EAAeC,EAAUC,EAASjU,EAAWnN,EAAOb,GAC3D,IAAIiC,EAUJ,OARA9Q,EAAgBsO,KAAMsiB,IAEtB9f,EAAQ5N,EAA2BoL,KAAM9M,EAAgBovB,GAAgBvuB,KAAKiM,QACxEhN,MAAQuvB,EACd/f,EAAMggB,QAAUA,EAChBhgB,EAAM+L,UAAYA,EAClB/L,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYP,EACXiC,EA+ET,OA5FA5P,EAAU0vB,EAAgBjgB,GAgB1B5P,EAAa6vB,EAAgB,CAAC,CAC5B9vB,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAI9O,EACAqc,EACA8D,EAAQpS,KAAKhN,MAAM2R,KAAK5D,GAE5B,IAAK9O,EAAI,EAAGA,EAAI+N,KAAKwiB,QAAQrzB,OAAQ8C,IAAK,CAYxC,GAXAqc,EAAOtO,KAAKwiB,QAAQvwB,GAOhBiD,MAAMC,QAAQid,KAChBA,EAAQ,IAAIF,GAAQ,CAAC,IAAI3F,GAAa6F,IAG3B,KAAT9D,EACF8D,EAAQA,EAAMqQ,uBACT,GAAuB,MAAnBnU,EAAK1I,OAAO,IASrB,GARuB,MAAnB0I,EAAK1I,OAAO,KACd0I,EAAO,IAAIhgB,OAAO,IAAI0uB,GAAS1O,EAAKhC,OAAO,IAAI3H,KAAK5D,GAAS/N,QAG3Dof,EAAMmC,YACRnC,EAAQA,EAAM3D,SAASH,KAGpB8D,EACH,KAAM,CACJlQ,KAAM,OACNoJ,QAAS,YAAYhd,OAAOggB,EAAM,cAClCjD,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,gBAGX,CAWL,GATE8N,EAD2B,OAAzBA,EAAKoU,UAAU,EAAG,GACb,IAAIp0B,OAAO,IAAI0uB,GAAS1O,EAAKhC,OAAO,IAAI3H,KAAK5D,GAAS/N,OAEnC,MAAnBsb,EAAK1I,OAAO,GAAa0I,EAAO,IAAIhgB,OAAOggB,GAGhD8D,EAAMuC,aACRvC,EAAQA,EAAMiL,SAAS/O,KAGpB8D,EACH,KAAM,CACJlQ,KAAM,OACNoJ,QAAS,aAAchd,OAAOggB,EAAKhC,OAAO,GAAI,eAC9CjB,SAAUrL,KAAKO,WAAW8K,SAC1BjK,MAAOpB,KAAKQ,YAMhB4R,EAAQA,EAAMA,EAAMjjB,OAAS,GAG3BijB,EAAMpf,QACRof,EAAQA,EAAMzN,KAAK5D,GAAS/N,OAG1Bof,EAAMY,UACRZ,EAAQA,EAAMY,QAAQrO,KAAK5D,IAI/B,OAAOqR,MAIJkQ,EA7FT,CA8FEviB,GAEFuiB,GAAe7wB,UAAUyQ,KAAO,iBAEhC,IAAIygB,GAEJ,SAAUC,GAGR,SAASD,EAAWrU,EAAMuU,EAAQzQ,EAAO1F,EAAWoW,EAAU3R,EAAQ3L,GACpE,IAAIhD,EAEJ9Q,EAAgBsO,KAAM2iB,IAEtBngB,EAAQ5N,EAA2BoL,KAAM9M,EAAgByvB,GAAY5uB,KAAKiM,QACpEsO,KAAOA,GAAQ,kBACrB9L,EAAM2P,UAAY,CAAC,IAAI5F,EAAS,CAAC,IAAInH,EAAQ,KAAMkJ,GAAM,EAAO9L,EAAM3B,OAAQ2B,EAAM1B,cACpF0B,EAAMqgB,OAASA,EACfrgB,EAAMkK,UAAYA,EAClBlK,EAAMsgB,SAAWA,EACjBtgB,EAAMugB,MAAQF,EAAO1zB,OACrBqT,EAAM4P,MAAQA,EACd5P,EAAM6P,SAAW,GACjB,IAAI2Q,EAAqB,GAezB,OAdAxgB,EAAMygB,SAAWJ,EAAOvO,QAAO,SAAU8F,EAAO7mB,GAC9C,OAAKA,EAAE+a,MAAQ/a,EAAE+a,OAAS/a,EAAEP,MACnBonB,EAAQ,GAEf4I,EAAmBl3B,KAAKyH,EAAE+a,MACnB8L,KAER,GACH5X,EAAMwgB,mBAAqBA,EAC3BxgB,EAAM2O,OAASA,EAEf3O,EAAMiD,mBAAmBD,GAEzBhD,EAAM0L,WAAY,EACX1L,EA2NT,OA1PA5P,EAAU+vB,EAAYC,GAkCtBnwB,EAAakwB,EAAY,CAAC,CACxBnwB,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAK6iB,QAAU7iB,KAAK6iB,OAAO1zB,SAC7B6Q,KAAK6iB,OAASrhB,EAAQsL,WAAW9M,KAAK6iB,SAGxC7iB,KAAKoS,MAAQ5Q,EAAQsL,WAAW9M,KAAKoS,OAEjCpS,KAAK0M,YACP1M,KAAK0M,UAAYlL,EAAQC,MAAMzB,KAAK0M,cAGvC,CACDla,IAAK,aACLQ,MAAO,SAAoB+N,EAASmiB,EAAUhvB,EAAMivB,GAElD,IACIC,EACAC,EAEApxB,EACA2gB,EACAgM,EACAtQ,EACAgV,EACAC,EATArG,EAAQ,IAAIhL,GAAQ,KAAM,MAG1B2Q,EAAS5Y,EAAUjK,KAAK6iB,QAOxBW,EAAa,EAQjB,GANIN,EAAS/R,QAAU+R,EAAS/R,OAAO,IAAM+R,EAAS/R,OAAO,GAAGU,mBAC9DqL,EAAMrL,iBAAmBqR,EAAS/R,OAAO,GAAGU,iBAAiBb,WAG/DkS,EAAW,IAAIrT,GAASoB,KAAKiS,EAAU,CAAChG,GAAO5uB,OAAO40B,EAAS/R,SAE3Djd,EAIF,IAFAsvB,GADAtvB,EAAO+V,EAAU/V,IACC/E,OAEb8C,EAAI,EAAGA,EAAIuxB,EAAYvxB,IAG1B,GAAIqc,GAFJ+U,EAAMnvB,EAAKjC,KAEOoxB,EAAI/U,KAAM,CAG1B,IAFAgV,GAAe,EAEV1Q,EAAI,EAAGA,EAAIiQ,EAAO1zB,OAAQyjB,IAC7B,IAAKuQ,EAAevQ,IAAMtE,IAASuU,EAAOjQ,GAAGtE,KAAM,CACjD6U,EAAevQ,GAAKyQ,EAAIrwB,MAAM2R,KAAK5D,GACnCmc,EAAMuG,YAAY,IAAIpV,EAAYC,EAAM+U,EAAIrwB,MAAM2R,KAAK5D,KACvDuiB,GAAe,EACf,MAIJ,GAAIA,EAAc,CAChBpvB,EAAK4f,OAAO7hB,EAAG,GACfA,IACA,SAEA,KAAM,CACJiQ,KAAM,UACNoJ,QAAS,sBAAsBhd,OAAO0R,KAAKsO,KAAM,KAAKhgB,OAAO4F,EAAKjC,GAAGqc,KAAM,eASrF,IAFAiV,EAAW,EAENtxB,EAAI,EAAGA,EAAI4wB,EAAO1zB,OAAQ8C,IAC7B,IAAIkxB,EAAelxB,GAAnB,CAMA,GAFAoxB,EAAMnvB,GAAQA,EAAKqvB,GAEfjV,EAAOuU,EAAO5wB,GAAGqc,KACnB,GAAIuU,EAAO5wB,GAAG6wB,SAAU,CAGtB,IAFAM,EAAU,GAELxQ,EAAI2Q,EAAU3Q,EAAI4Q,EAAY5Q,IACjCwQ,EAAQt3B,KAAKoI,EAAK0e,GAAG5f,MAAM2R,KAAK5D,IAGlCmc,EAAMuG,YAAY,IAAIpV,EAAYC,EAAM,IAAIuN,GAAWuH,GAASze,KAAK5D,SAChE,CAGL,GAFA6d,EAAMyE,GAAOA,EAAIrwB,MAKb4rB,EADE1pB,MAAMC,QAAQypB,GACV,IAAIxF,GAAgB,IAAIlH,GAAQ,GAAI0M,IAEpCA,EAAIja,KAAK5D,OAEZ,CAAA,IAAI8hB,EAAO5wB,GAAGe,MAInB,KAAM,CACJkP,KAAM,UACNoJ,QAAS,iCAAiChd,OAAO0R,KAAKsO,KAAM,MAAMhgB,OAAOk1B,EAAY,SAASl1B,OAAO0R,KAAK+iB,MAAO,MALnHnE,EAAMiE,EAAO5wB,GAAGe,MAAM2R,KAAKue,GAC3BhG,EAAMnJ,aAQRmJ,EAAMuG,YAAY,IAAIpV,EAAYC,EAAMsQ,IACxCuE,EAAelxB,GAAK2sB,EAIxB,GAAIiE,EAAO5wB,GAAG6wB,UAAY5uB,EACxB,IAAK0e,EAAI2Q,EAAU3Q,EAAI4Q,EAAY5Q,IACjCuQ,EAAevQ,GAAK1e,EAAK0e,GAAG5f,MAAM2R,KAAK5D,GAI3CwiB,IAGF,OAAOrG,IAER,CACD1qB,IAAK,gBACLQ,MAAO,WACL,IAAIof,EAASpS,KAAKoS,MAAqBpS,KAAKoS,MAAM1P,KAAI,SAAUK,GAC9D,OAAIA,EAAEoR,cACGpR,EAAEoR,eAAc,GAEhBpR,KAJe/C,KAAKoS,MAQ/B,OADa,IAAIuQ,EAAW3iB,KAAKsO,KAAMtO,KAAK6iB,OAAQzQ,EAAOpS,KAAK0M,UAAW1M,KAAK8iB,SAAU9iB,KAAKmR,UAGhG,CACD3e,IAAK,OACLQ,MAAO,SAAe+N,GACpB,OAAO,IAAI4hB,EAAW3iB,KAAKsO,KAAMtO,KAAK6iB,OAAQ7iB,KAAKoS,MAAOpS,KAAK0M,UAAW1M,KAAK8iB,SAAU9iB,KAAKmR,QAAUlH,EAAUlJ,EAAQoQ,WAE3H,CACD3e,IAAK,WACLQ,MAAO,SAAkB+N,EAAS7M,EAAMqa,GACtC,IAGI6D,EACAY,EAJA0Q,EAAa,GACbC,EAAc3jB,KAAKmR,OAASnR,KAAKmR,OAAO7iB,OAAOyS,EAAQoQ,QAAUpQ,EAAQoQ,OACzE+L,EAAQld,KAAK4jB,WAAW7iB,EAAS,IAAI8O,GAASoB,KAAKlQ,EAAS4iB,GAAczvB,EAAMwvB,GAapF,OAVAxG,EAAMuG,YAAY,IAAIpV,EAAY,aAAc,IAAIwN,GAAW6H,GAAY/e,KAAK5D,KAChFqR,EAAQnI,EAAUjK,KAAKoS,QACvBY,EAAU,IAAId,GAAQ,KAAME,IACpBa,gBAAkBjT,KAC1BgT,EAAUA,EAAQrO,KAAK,IAAIkL,GAASoB,KAAKlQ,EAAS,CAACf,KAAMkd,GAAO5uB,OAAOq1B,KAEnEpV,IACFyE,EAAUA,EAAQmB,iBAGbnB,IAER,CACDxgB,IAAK,iBACLQ,MAAO,SAAwBkB,EAAM6M,GACnC,QAAIf,KAAK0M,YAAc1M,KAAK0M,UAAU/H,KAAK,IAAIkL,GAASoB,KAAKlQ,EAAS,CAACf,KAAK4jB,WAAW7iB,EAEvF,IAAI8O,GAASoB,KAAKlQ,EAASf,KAAKmR,OAASnR,KAAKmR,OAAO7iB,OAAOyS,EAAQoQ,QAAUpQ,EAAQoQ,QAASjd,EAAM,KAAK5F,OAAO0R,KAAKmR,QAAU,IAC/H7iB,OAAOyS,EAAQoQ,aAOjB,CACD3e,IAAK,YACLQ,MAAO,SAAmBkB,EAAM6M,GAC9B,IACIuM,EADAuW,EAAa3vB,GAAQA,EAAK/E,QAAU,EAEpC6zB,EAAqBhjB,KAAKgjB,mBAC1Bc,EAAmB5vB,EAAWA,EAAKogB,QAAO,SAAU8F,EAAO7mB,GAC7D,OAAIyvB,EAAmB1f,QAAQ/P,EAAE+a,MAAQ,EAChC8L,EAAQ,EAERA,IAER,GAN2B,EAQ9B,GAAKpa,KAAK8iB,UASR,GAAIgB,EAAkB9jB,KAAKijB,SAAW,EACpC,OAAO,MAVS,CAClB,GAAIa,EAAkB9jB,KAAKijB,SACzB,OAAO,EAGT,GAAIY,EAAa7jB,KAAK6iB,OAAO1zB,OAC3B,OAAO,EASXme,EAAM7N,KAAKyE,IAAI4f,EAAiB9jB,KAAK+iB,OAErC,IAAK,IAAI9wB,EAAI,EAAGA,EAAIqb,EAAKrb,IACvB,IAAK+N,KAAK6iB,OAAO5wB,GAAGqc,OAAStO,KAAK6iB,OAAO5wB,GAAG6wB,UACtC5uB,EAAKjC,GAAGe,MAAM2R,KAAK5D,GAASmC,SAAWlD,KAAK6iB,OAAO5wB,GAAGe,MAAM2R,KAAK5D,GAASmC,QAC5E,OAAO,EAKb,OAAO,MAIJyf,EA3PT,CA4PEzQ,IAEFyQ,GAAWlxB,UAAUyQ,KAAO,kBAC5BygB,GAAWlxB,UAAUiiB,WAAY,EAEjC,IAAIqQ,GAEJ,SAAU1hB,GAGR,SAAS0hB,EAAUvX,EAAUtY,EAAMkN,EAAOmE,EAAiBgJ,GACzD,IAAI/L,EAcJ,OAZA9Q,EAAgBsO,KAAM+jB,IAEtBvhB,EAAQ5N,EAA2BoL,KAAM9M,EAAgB6wB,GAAWhwB,KAAKiM,QACnEyS,SAAW,IAAIlG,EAASC,GAC9BhK,EAAMhO,UAAYN,GAAQ,GAC1BsO,EAAM3B,OAASO,EACfoB,EAAM1B,UAAYyE,EAClB/C,EAAM+L,UAAYA,EAClB/L,EAAM0L,WAAY,EAElB1L,EAAMkD,UAAUlD,EAAMiQ,SAAUhe,EAAuB+N,IAEhDA,EAoPT,OArQA5P,EAAUmxB,EAAW1hB,GAoBrB5P,EAAasxB,EAAW,CAAC,CACvBvxB,IAAK,SACLQ,MAAO,SAAgBwO,GACjBxB,KAAKyS,WACPzS,KAAKyS,SAAWjR,EAAQC,MAAMzB,KAAKyS,WAGjCzS,KAAKxL,UAAUrF,SACjB6Q,KAAKxL,UAAYgN,EAAQsL,WAAW9M,KAAKxL,cAG5C,CACDhC,IAAK,OACLQ,MAAO,SAAe+N,GACpB,IAAIijB,EACAC,EACAC,EAEAb,EACAc,EAGAlyB,EACA4M,EACAulB,EACAC,EACAC,EAEAC,EAEAC,EAKApK,EACAnH,EACAwR,EApBAvwB,EAAO,GAGPke,EAAQ,GACR3P,GAAQ,EAMRiiB,EAAa,GAEbC,EAAkB,GAElBC,GAAsB,EACtBC,EAAU,EACVC,EAAU,EACVC,EAAW,EAMf,SAASC,EAAaf,EAAOC,GAC3B,IAAIE,EACA7wB,EACA0xB,EAEJ,IAAKb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAItB,IAHAO,EAAgBP,IAAK,EACrBtS,GAAY9e,MAAMoxB,GAEb7wB,EAAI,EAAGA,EAAI2wB,EAAU/0B,QAAUw1B,EAAgBP,GAAI7wB,KACtD0xB,EAAYf,EAAU3wB,IAER2xB,iBACZP,EAAgBP,GAAKO,EAAgBP,IAAMa,EAAUC,eAAe,KAAMnkB,IAI1EkjB,EAAMiB,iBACRP,EAAgBP,GAAKO,EAAgBP,IAAMH,EAAMiB,eAAehxB,EAAM6M,IAI1E,OAAI4jB,EAAgB,IAAMA,EAAgB,GACpCA,EAAgB,IAAMA,EAAgB,GACjCA,EAAgB,GAAKG,EAAUC,EAGjCF,EAGFD,EAGT,IAnCA5kB,KAAKyS,SAAWzS,KAAKyS,SAAS9N,KAAK5D,GAmC9B9O,EAAI,EAAGA,EAAI+N,KAAKxL,UAAUrF,OAAQ8C,IAIrC,GAFAkyB,GADAd,EAAMrjB,KAAKxL,UAAUvC,IACNe,MAAM2R,KAAK5D,GAEtBsiB,EAAI8B,QAAUjwB,MAAMC,QAAQgvB,EAASnxB,OAGvC,IAFAmxB,EAAWA,EAASnxB,MAEf6L,EAAI,EAAGA,EAAIslB,EAASh1B,OAAQ0P,IAC/B3K,EAAKpI,KAAK,CACRkH,MAAOmxB,EAAStlB,UAIpB3K,EAAKpI,KAAK,CACRwiB,KAAM+U,EAAI/U,KACVtb,MAAOmxB,IASb,IAJAM,EAAoB,SAA2B3R,GAC7C,OAAOA,EAAKsS,UAAU,KAAMrkB,IAGzB9O,EAAI,EAAGA,EAAI8O,EAAQoQ,OAAOhiB,OAAQ8C,IACrC,IAAK+xB,EAASjjB,EAAQoQ,OAAOlf,GAAGijB,KAAKlV,KAAKyS,SAAU,KAAMgS,IAAoBt1B,OAAS,EAAG,CAMxF,IALAm1B,GAAa,EAKRzlB,EAAI,EAAGA,EAAImlB,EAAO70B,OAAQ0P,IAAK,CAKlC,IAJAolB,EAAQD,EAAOnlB,GAAGiU,KAClBoR,EAAYF,EAAOnlB,GAAGyR,KACtB+T,GAAc,EAETD,EAAI,EAAGA,EAAIrjB,EAAQoQ,OAAOhiB,OAAQi1B,IACrC,KAAMH,aAAiBtB,KAAesB,KAAWljB,EAAQoQ,OAAOiT,GAAGnR,iBAAmBlS,EAAQoQ,OAAOiT,IAAK,CACxGC,GAAc,EACd,MAIAA,GAIAJ,EAAMmB,UAAUlxB,EAAM6M,MACxBwjB,EAAY,CACVN,MAAOA,EACPlK,MAAOiL,EAAaf,EAAOC,KAGfnK,QAAU6K,GACtBF,EAAW54B,KAAKy4B,GAGlB9hB,GAAQ,GAOZ,IAHAqP,GAAYG,QACZmI,EAAQ,CAAC,EAAG,EAAG,GAEVvb,EAAI,EAAGA,EAAI6lB,EAAWv1B,OAAQ0P,IACjCub,EAAMsK,EAAW7lB,GAAGkb,SAGtB,GAAIK,EAAMyK,GAAW,EACnBL,EAAgBO,OAIhB,GAFAP,EAAgBM,EAEZ1K,EAAM0K,GAAW1K,EAAM2K,GAAY,EACrC,KAAM,CACJ7iB,KAAM,UACNoJ,QAAS,yDAAyDhd,OAAO0R,KAAKqlB,OAAOnxB,GAAO,KAC5FkN,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,UAKhC,IAAKxM,EAAI,EAAGA,EAAI6lB,EAAWv1B,OAAQ0P,IAGjC,IAFA0lB,EAAYG,EAAW7lB,GAAGkb,SAER8K,GAAWN,IAAcC,EACzC,KACEP,EAAQS,EAAW7lB,GAAGolB,iBAECtB,KACrB1P,EAAkBgR,EAAMhR,iBAAmBgR,GAC3CA,EAAQ,IAAItB,GAAW,GAAI,GAAIsB,EAAM7R,MAAO,MAAM,EAAO,KAAMa,EAAgBzN,mBACzEyN,gBAAkBA,GAG1B,IAAIqS,EAAWrB,EAAMsB,SAASxkB,EAAS7M,EAAM8L,KAAKuO,WAAW6D,MAE7DpS,KAAKwlB,4BAA4BF,GAEjCpwB,MAAMzD,UAAU3F,KAAKuI,MAAM+d,EAAOkT,GAClC,MAAOx1B,GACP,KAAM,CACJwb,QAASxb,EAAEwb,QACXlK,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,SAC1BE,MAAOzb,EAAEyb,OAMjB,GAAI9I,EACF,OAAO2P,EAKb,MAAIkS,EACI,CACJpiB,KAAM,UACNoJ,QAAS,yCAAyChd,OAAO0R,KAAKqlB,OAAOnxB,GAAO,KAC5EkN,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,UAGtB,CACJnJ,KAAM,OACNoJ,QAAS,GAAGhd,OAAO0R,KAAKyS,SAASvP,QAAQgC,OAAQ,iBACjD9D,MAAOpB,KAAKQ,WACZ6K,SAAUrL,KAAKO,WAAW8K,YAI/B,CACD7Y,IAAK,8BACLQ,MAAO,SAAqCyyB,GAC1C,IAAIxzB,EAGJ,GAAI+N,KAAKkgB,mBACP,IAAKjuB,EAAI,EAAGA,EAAIwzB,EAAYt2B,OAAQ8C,IAC3BwzB,EAAYxzB,GACdkuB,uBAIV,CACD3tB,IAAK,SACLQ,MAAO,SAAgBkB,GACrB,MAAO,GAAG5F,OAAO0R,KAAKyS,SAASvP,QAAQgC,OAAQ,KAAK5W,OAAO4F,EAAOA,EAAKwO,KAAI,SAAUtO,GACnF,IAAI+vB,EAAW,GAYf,OAVI/vB,EAAEka,OACJ6V,GAAY,GAAG71B,OAAO8F,EAAEka,KAAM,MAG5Bla,EAAEpB,MAAMkQ,MACVihB,GAAY/vB,EAAEpB,MAAMkQ,QAEpBihB,GAAY,MAGPA,KACN7iB,KAAK,MAAQ,GAAI,SAIjByiB,EAtQT,CAuQEhkB,GAEFgkB,GAAUtyB,UAAUyQ,KAAO,YAE3B,IAAIwjB,GAAO,CACT3lB,KAAMA,EACNqC,MAAOA,EACPsW,OAAQA,GACRU,gBAAiBA,GACjBkC,UAAWA,GACXjB,UAAWA,GACXhB,KAAMA,GACNzL,QAASA,EACToP,SAAUA,GACVI,SAAUA,GACVlL,QAASA,GACT9M,QAASA,EACTyY,UAAWA,GACX7Y,WAAYA,EACZuH,SAAUA,EACVuR,OAAQA,GACRjC,WAAYA,GACZxN,YAAaA,EACbmO,KAAMA,GACNmC,IAAKA,GACLe,OAAQA,GACRhQ,QAASA,GACT3B,UAAWA,EACXJ,MAAOA,EACP8S,WAAYA,GACZS,WAAYA,GACZC,UAAWA,GACXzc,MAAOA,EACPua,MAAOA,GACPsC,kBAAmBA,GACnBC,SAAUA,GACVC,OAAQA,GACRU,aAAcA,GACdG,eAAgBA,GAChB2B,MAAO,CACLzH,KAAMuH,GACNpB,WAAYA,KAIZgD,GAAS,CACXzZ,MAAO,SAAe0Z,GACpB5lB,KAAK6lB,WAAW,QAASD,IAE3BE,KAAM,SAAcF,GAClB5lB,KAAK6lB,WAAW,OAAQD,IAE1B5jB,KAAM,SAAc4jB,GAClB5lB,KAAK6lB,WAAW,OAAQD,IAE1BG,MAAO,SAAeH,GACpB5lB,KAAK6lB,WAAW,QAASD,IAE3BI,YAAa,SAAqBC,GAChCjmB,KAAKkmB,WAAWp6B,KAAKm6B,IAEvBE,eAAgB,SAAwBF,GACtC,IAAK,IAAIh0B,EAAI,EAAGA,EAAI+N,KAAKkmB,WAAW/2B,OAAQ8C,IAC1C,GAAI+N,KAAKkmB,WAAWj0B,KAAOg0B,EAGzB,YAFAjmB,KAAKkmB,WAAWpS,OAAO7hB,EAAG,IAMhC4zB,WAAY,SAAoB3jB,EAAM0jB,GACpC,IAAK,IAAI3zB,EAAI,EAAGA,EAAI+N,KAAKkmB,WAAW/2B,OAAQ8C,IAAK,CAC/C,IAAIm0B,EAAcpmB,KAAKkmB,WAAWj0B,GAAGiQ,GAEjCkkB,GACFA,EAAYR,KAIlBM,WAAY,IAGVG,GAEJ,WACE,SAASA,EAAYC,EAAqBC,GACxC70B,EAAgBsO,KAAMqmB,GAEtBrmB,KAAKumB,aAAeA,GAAgB,GACpCD,EAAsBA,GAAuB,GAK7C,IAJA,IAAIE,EAAoB,CAAC,eAAgB,aAAc,gBAAiB,yBACpEC,EAAoB,GACpB5V,EAAY4V,EAAkBn4B,OAAOk4B,GAEhCv0B,EAAI,EAAGA,EAAI4e,EAAU1hB,OAAQ8C,IAAK,CACzC,IAAIy0B,EAAW7V,EAAU5e,GACrB00B,EAAkBL,EAAoBI,GAEtCC,EACF3mB,KAAK0mB,GAAYC,EAAgBpyB,KAAK+xB,GAC7Br0B,EAAIw0B,EAAkBt3B,QAC/B6Q,KAAK8lB,KAAK,8CAA8Cx3B,OAAOo4B,KA4CrE,OAvCAj0B,EAAa4zB,EAAa,CAAC,CACzB7zB,IAAK,iBACLQ,MAAO,SAAwBqY,EAAUub,EAAkBp5B,EAAS64B,EAAaQ,GAC1Exb,GACHsa,GAAOG,KAAK,kFAGU,MAApBc,GACFjB,GAAOG,KAAK,qFAGd,IAAIS,EAAevmB,KAAKumB,aAEpB/4B,EAAQ+vB,gBACVgJ,EAAe,GAAGj4B,OAAOi4B,GAAcj4B,OAAOd,EAAQ+vB,cAAcuJ,oBAGtE,IAAK,IAAI70B,EAAIs0B,EAAap3B,OAAS,EAAG8C,GAAK,EAAGA,IAAK,CACjD,IAAI80B,EAAcR,EAAat0B,GAE/B,GAAI80B,EAAYF,EAAS,eAAiB,YAAYxb,EAAUub,EAAkBp5B,EAAS64B,GACzF,OAAOU,EAIX,OAAO,OAER,CACDv0B,IAAK,iBACLQ,MAAO,SAAwB+zB,GAC7B/mB,KAAKumB,aAAaz6B,KAAKi7B,KAExB,CACDv0B,IAAK,oBACLQ,MAAO,WACLgN,KAAKumB,aAAe,OAIjBF,EA7DT,GAgEIW,GAEJ,WACE,SAASA,IACPt1B,EAAgBsO,KAAMgnB,GA2JxB,OAxJAv0B,EAAau0B,EAAqB,CAAC,CACjCx0B,IAAK,UACLQ,MAAO,SAAiBqY,GACtB,IAAIuH,EAAIvH,EAAS4b,YAAY,KAY7B,OAVIrU,EAAI,IACNvH,EAAWA,EAAS5G,MAAM,EAAGmO,KAG/BA,EAAIvH,EAAS4b,YAAY,MAEjB,IACNrU,EAAIvH,EAAS4b,YAAY,OAGvBrU,EAAI,EACC,GAGFvH,EAAS5G,MAAM,EAAGmO,EAAI,KAE9B,CACDpgB,IAAK,qBACLQ,MAAO,SAA4Bsd,EAAM4W,GACvC,MAAO,yBAAyB72B,KAAKigB,GAAQA,EAAOA,EAAO4W,IAE5D,CACD10B,IAAK,yBACLQ,MAAO,SAAgCsd,GACrC,OAAOtQ,KAAKmnB,mBAAmB7W,EAAM,WAEtC,CACD9d,IAAK,eACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,0BACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,iBACLQ,MAAO,SAAwBqY,GAC7B,MAAO,yBAAyBhb,KAAKgb,KAGtC,CACD7Y,IAAK,OACLQ,MAAO,SAAco0B,EAAUC,GAC7B,OAAKD,EAIEA,EAAWC,EAHTA,IAKV,CACD70B,IAAK,WACLQ,MAAO,SAAkBs0B,EAAKC,GAE5B,IAEIt1B,EACAgS,EACAujB,EACAC,EALAC,EAAW1nB,KAAK2nB,gBAAgBL,GAChCM,EAAe5nB,KAAK2nB,gBAAgBJ,GAKpCM,EAAO,GAEX,GAAIH,EAASI,WAAaF,EAAaE,SACrC,MAAO,GAKT,IAFA7jB,EAAMxE,KAAKwE,IAAI2jB,EAAaG,YAAY54B,OAAQu4B,EAASK,YAAY54B,QAEhE8C,EAAI,EAAGA,EAAIgS,GACV2jB,EAAaG,YAAY91B,KAAOy1B,EAASK,YAAY91B,GADtCA,KASrB,IAHAw1B,EAAqBG,EAAaG,YAAYtjB,MAAMxS,GACpDu1B,EAAiBE,EAASK,YAAYtjB,MAAMxS,GAEvCA,EAAI,EAAGA,EAAIw1B,EAAmBt4B,OAAS,EAAG8C,IAC7C41B,GAAQ,MAGV,IAAK51B,EAAI,EAAGA,EAAIu1B,EAAer4B,OAAS,EAAG8C,IACzC41B,GAAQ,GAAGv5B,OAAOk5B,EAAev1B,GAAI,KAGvC,OAAO41B,IAER,CACDr1B,IAAK,kBAELQ,MAAO,SAAyBs0B,EAAKC,GAMnC,IAKIt1B,EACA21B,EANAI,EAAgB,kGAChBN,EAAWJ,EAAI7kB,MAAMulB,GACrBC,EAAW,GACXC,EAAiB,GACjBH,EAAc,GAIlB,IAAKL,EACH,MAAM,IAAI33B,MAAM,iCAAiCzB,OAAOg5B,EAAK,MAI/D,GAAIC,KAAaG,EAAS,IAAMA,EAAS,IAAK,CAG5C,KAFAE,EAAeL,EAAQ9kB,MAAMulB,IAG3B,MAAM,IAAIj4B,MAAM,+BAA+BzB,OAAOi5B,EAAS,MAGjEG,EAAS,GAAKA,EAAS,IAAME,EAAa,IAAM,GAE3CF,EAAS,KACZA,EAAS,GAAKE,EAAa,GAAKF,EAAS,IAI7C,GAAIA,EAAS,GAGX,IAFAQ,EAAiBR,EAAS,GAAGp6B,QAAQ,MAAO,KAAKwV,MAAM,KAElD7Q,EAAI,EAAGA,EAAIi2B,EAAe/4B,OAAQ8C,IACX,OAAtBi2B,EAAej2B,GACjB81B,EAAY9Y,MACmB,MAAtBiZ,EAAej2B,IACxB81B,EAAYj8B,KAAKo8B,EAAej2B,IAYtC,OAPAg2B,EAASH,SAAWJ,EAAS,GAC7BO,EAASF,YAAcA,EACvBE,EAASE,SAAWT,EAAS,IAAM,IAAMQ,EAAe5mB,KAAK,KAC7D2mB,EAAS3X,MAAQoX,EAAS,IAAM,IAAMK,EAAYzmB,KAAK,KACvD2mB,EAAS5c,SAAWqc,EAAS,GAC7BO,EAASG,QAAUH,EAAS3X,MAAQoX,EAAS,IAAM,IACnDO,EAASX,IAAMW,EAASG,SAAWV,EAAS,IAAM,IAC3CO,MAIJjB,EA7JT,GAgKIqB,GAEJ,WACE,SAASA,IACP32B,EAAgBsO,KAAMqoB,GAGtBroB,KAAKsoB,QAAU,WACb,OAAO,MAkMX,OA9LA71B,EAAa41B,EAAsB,CAAC,CAClC71B,IAAK,aACLQ,MAAO,SAAoByY,EAAU1K,EAASoM,EAASob,EAAehoB,GACpE,IACI6f,EACAoI,EACAC,EACAlL,EACAlS,EACAN,EACJwS,EAAgBxc,EAAQwc,cAEpBhd,IAEA8K,EADsB,kBAAb9K,EACEA,EAEAA,EAAS8K,UAIxB,IAAIqd,GAAY,IAAI1oB,KAAKwd,KAAKmL,aAAchB,gBAAgBtc,GAAUA,SAEtE,GAAIA,IACFmd,EAAYjL,EAAcjd,IAAI+K,IAEf,CAGb,GAFAN,EAAS/K,KAAK4oB,cAAcJ,EAAWnd,EAAUqd,EAAWH,GAG1D,OAAOxd,EAGT,IACMyd,EAAUK,KACZL,EAAUK,IAAI90B,KAAKiM,KAAKe,QAASynB,GAEnC,MAAO14B,GAEP,OADAA,EAAEwb,QAAUxb,EAAEwb,SAAW,4BAClB,IAAIJ,EAAUpb,EAAGqd,EAAS9B,GAGnC,OAAOmd,EAIXC,EAAc,CACZx8B,QAAS,GACTsxB,cAAeA,EACfhd,SAAUA,GAEZ6f,EAAWvO,GAAiB9e,SAE5B,IAAI+1B,EAAiB,SAAwBz3B,GAC3Cm3B,EAAYn3B,GAGd,IACW,IAAIiD,SAAS,SAAU,UAAW,iBAAkB,YAAa,OAAQ,OAAQ,WAAYmX,EACtGsd,CAAON,EAAazoB,KAAKsoB,QAAQjd,GAAWyd,EAAgB1I,EAAUpgB,KAAKwd,KAAKkI,KAAM1lB,KAAKwd,KAAMjd,GACjG,MAAOzQ,GACP,OAAO,IAAIob,EAAUpb,EAAGqd,EAAS9B,GASnC,GANKmd,IACHA,EAAYC,EAAYx8B,UAG1Bu8B,EAAYxoB,KAAKgpB,eAAeR,EAAWnd,EAAUqd,cAE5Bxd,EACvB,OAAOsd,EAGT,IAAIA,EAgCF,OAAO,IAAItd,EAAU,CACnBI,QAAS,sBACR6B,EAAS9B,GA9BZ,GAHAmd,EAAUrb,QAAUA,EACpBqb,EAAUnd,SAAWA,IAEhBmd,EAAUS,YAAcjpB,KAAKkpB,eAAe,QAASV,EAAUS,YAAc,KAChFle,EAAS/K,KAAK4oB,cAAcJ,EAAWnd,EAAUqd,EAAWH,IAG1D,OAAOxd,EAUX,GALAwS,EAAc4L,UAAUX,EAAWjoB,EAAS8K,SAAU+U,GACtDoI,EAAU3X,UAAYuP,EAASrP,oBAE/BhG,EAAS/K,KAAK4oB,cAAcJ,EAAWnd,EAAUqd,EAAWH,GAG1D,OAAOxd,EAIT,IACMyd,EAAUK,KACZL,EAAUK,IAAI90B,KAAKiM,KAAKe,QAASynB,GAEnC,MAAO14B,GAEP,OADAA,EAAEwb,QAAUxb,EAAEwb,SAAW,4BAClB,IAAIJ,EAAUpb,EAAGqd,EAAS9B,GAQrC,OAAOmd,IAER,CACDh2B,IAAK,gBACLQ,MAAO,SAAuBo2B,EAAQ/d,EAAUiD,EAAM9gB,GACpD,GAAIA,IAAY47B,EAAOC,WACrB,OAAO,IAAIne,EAAU,CACnBI,QAAS,6CAA6Chd,OAAOggB,EAAM,oCAIvE,IACE8a,EAAOC,YAAcD,EAAOC,WAAW77B,GACvC,MAAOsC,GACP,OAAO,IAAIob,EAAUpb,MAGxB,CACD0C,IAAK,iBACLQ,MAAO,SAAwBo2B,EAAQ/d,EAAUiD,GAC/C,OAAI8a,GAGoB,oBAAXA,IACTA,EAAS,IAAIA,GAGXA,EAAOH,YACLjpB,KAAKkpB,eAAeE,EAAOH,WAAYjpB,KAAKwd,KAAK8L,SAAW,EACvD,IAAIpe,EAAU,CACnBI,QAAS,UAAUhd,OAAOggB,EAAM,sBAAsBhgB,OAAO0R,KAAKupB,gBAAgBH,EAAOH,eAKxFG,GAGF,OAER,CACD52B,IAAK,iBACLQ,MAAO,SAAwBw2B,EAAUC,GACf,kBAAbD,IACTA,EAAWA,EAAS/mB,MAAM,6BACjB+K,QAGX,IAAK,IAAIvb,EAAI,EAAGA,EAAIu3B,EAASr6B,OAAQ8C,IACnC,GAAIu3B,EAASv3B,KAAOw3B,EAASx3B,GAC3B,OAAO2Q,SAAS4mB,EAASv3B,IAAM2Q,SAAS6mB,EAASx3B,KAAO,EAAI,EAIhE,OAAO,IAER,CACDO,IAAK,kBACLQ,MAAO,SAAyBs2B,GAG9B,IAFA,IAAII,EAAgB,GAEXz3B,EAAI,EAAGA,EAAIq3B,EAAQn6B,OAAQ8C,IAClCy3B,IAAkBA,EAAgB,IAAM,IAAMJ,EAAQr3B,GAGxD,OAAOy3B,IAER,CACDl3B,IAAK,aACLQ,MAAO,SAAoB22B,GACzB,IAAK,IAAI13B,EAAI,EAAGA,EAAI03B,EAAQx6B,OAAQ8C,IAAK,CACvC,IAAIm3B,EAASO,EAAQ13B,GAEjBm3B,EAAOQ,YACTR,EAAOQ,kBAMRvB,EAxMT,GA2MIwB,GAAa,CACfC,aAAa,GAEXC,IAAc,EAElB,SAASC,GAAMrpB,GACb,OAAOA,EAGT,SAASspB,GAAehqB,EAAQiqB,GAE9B,IAAI13B,EACAgV,EAEJ,IAAKhV,KAAOyN,EAIV,OAAQ7O,EAFRoW,EAAQvH,EAAOzN,KAGb,IAAK,WAGCgV,EAAM/V,WAAa+V,EAAM/V,UAAUyQ,OACrCsF,EAAM/V,UAAU04B,UAAYD,KAG9B,MAEF,IAAK,SACHA,EAASD,GAAeziB,EAAO0iB,GAKrC,OAAOA,EAGT,IAAIE,GAEJ,WACE,SAASA,EAAQC,GACf34B,EAAgBsO,KAAMoqB,GAEtBpqB,KAAKsqB,gBAAkBD,EACvBrqB,KAAKuqB,cAAgB,GACrBvqB,KAAKwqB,eAAiB,GAEjBT,KACHE,GAAevE,GAAM,GACrBqE,IAAc,GAyIlB,OArIAt3B,EAAa23B,EAAS,CAAC,CACrB53B,IAAK,QACLQ,MAAO,SAAe2N,GACpB,IAAKA,EACH,OAAOA,EAGT,IAAI8pB,EAAgB9pB,EAAKwpB,UAEzB,IAAKM,EAMH,OAJI9pB,EAAK3N,OAAS2N,EAAK3N,MAAMm3B,WAC3BnqB,KAAKyB,MAAMd,EAAK3N,OAGX2N,EAGT,IAII+pB,EAJAC,EAAO3qB,KAAKsqB,gBACZ3Z,EAAO3Q,KAAKuqB,cAAcE,GAC1BG,EAAU5qB,KAAKwqB,eAAeC,GAC9BI,EAAYhB,GAYhB,GAVAgB,EAAUf,aAAc,EAEnBnZ,IAEHA,EAAOga,EADPD,EAAS,QAAQp8B,OAAOqS,EAAKuB,QACN8nB,GACvBY,EAAUD,EAAK,GAAGr8B,OAAOo8B,EAAQ,SAAWV,GAC5ChqB,KAAKuqB,cAAcE,GAAiB9Z,EACpC3Q,KAAKwqB,eAAeC,GAAiBG,GAGnCja,IAASqZ,GAAO,CAClB,IAAIc,EAAUna,EAAK5c,KAAK42B,EAAMhqB,EAAMkqB,GAEhClqB,GAAQgqB,EAAKI,cACfpqB,EAAOmqB,GAYX,OARID,EAAUf,aAAenpB,GAAQA,EAAKqqB,QACxCrqB,EAAKqqB,OAAOhrB,MAGV4qB,GAAWZ,IACbY,EAAQ72B,KAAK42B,EAAMhqB,GAGdA,IAER,CACDnO,IAAK,aACLQ,MAAO,SAAoByN,EAAOwqB,GAChC,IAAKxqB,EACH,OAAOA,EAGT,IACIxO,EADAi5B,EAAMzqB,EAAMtR,OAGhB,GAAI87B,IAAiBjrB,KAAKsqB,gBAAgBS,YAAa,CACrD,IAAK94B,EAAI,EAAGA,EAAIi5B,EAAKj5B,IACnB+N,KAAKyB,MAAMhB,EAAMxO,IAGnB,OAAOwO,EAIT,IAAI0qB,EAAM,GAEV,IAAKl5B,EAAI,EAAGA,EAAIi5B,EAAKj5B,IAAK,CACxB,IAAIm5B,EAAQprB,KAAKyB,MAAMhB,EAAMxO,SAEf9B,IAAVi7B,IAICA,EAAMtX,OAEAsX,EAAMj8B,QACf6Q,KAAKqrB,QAAQD,EAAOD,GAFpBA,EAAIr/B,KAAKs/B,IAMb,OAAOD,IAER,CACD34B,IAAK,UACLQ,MAAO,SAAiB8B,EAAKq2B,GAK3B,IAAID,EACAj5B,EACAqqB,EACAgP,EACA1Y,EACA2Y,EAEJ,IAXKJ,IACHA,EAAM,IAUHl5B,EAAI,EAAGi5B,EAAMp2B,EAAI3F,OAAQ8C,EAAIi5B,EAAKj5B,IAGrC,QAAa9B,KAFbmsB,EAAOxnB,EAAI7C,IAMX,GAAKqqB,EAAKxI,OAKV,IAAKlB,EAAI,EAAG0Y,EAAYhP,EAAKntB,OAAQyjB,EAAI0Y,EAAW1Y,SAG/BziB,KAFnBo7B,EAAajP,EAAK1J,MAMb2Y,EAAWzX,OAELyX,EAAWp8B,QACpB6Q,KAAKqrB,QAAQE,EAAYJ,GAFzBA,EAAIr/B,KAAKy/B,SAZXJ,EAAIr/B,KAAKwwB,GAmBb,OAAO6O,MAIJf,EAnJT,GAsJIoB,GAEJ,WACE,SAASA,EAAgBC,GACvB/5B,EAAgBsO,KAAMwrB,GAEtBxrB,KAAKmN,QAAU,GACfnN,KAAK0rB,gBAAkB,GACvB1rB,KAAK2rB,kBAAoBF,EACzBzrB,KAAK4rB,cAAgB,EAgEvB,OA7DAn5B,EAAa+4B,EAAiB,CAAC,CAC7Bh5B,IAAK,YACLQ,MAAO,SAAmB8mB,GACxB,IAAI+R,EAAkB7rB,KAClB8rB,EAAa,CACfhS,SAAUA,EACV5lB,KAAM,KACN63B,SAAS,GAGX,OADA/rB,KAAKmN,QAAQrhB,KAAKggC,GACX,WACL,IAAK,IAAI7S,EAAOzkB,UAAUrF,OAAQ+E,EAAO,IAAIgB,MAAM+jB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EhlB,EAAKglB,GAAQ1kB,UAAU0kB,GAGzB4S,EAAW53B,KAAOgB,MAAMzD,UAAUgT,MAAM1Q,KAAKG,EAAM,GACnD43B,EAAWC,SAAU,EACrBF,EAAgBG,YAGnB,CACDx5B,IAAK,oBACLQ,MAAO,SAA2B8mB,GAChC9Z,KAAK0rB,gBAAgB5/B,KAAKguB,KAE3B,CACDtnB,IAAK,SACLQ,MAAO,WACLgN,KAAK4rB,gBAEL,IACE,OAAa,CACX,KAAO5rB,KAAKmN,QAAQhe,OAAS,GAAG,CAC9B,IAAI28B,EAAa9rB,KAAKmN,QAAQ,GAE9B,IAAK2e,EAAWC,QACd,OAGF/rB,KAAKmN,QAAUnN,KAAKmN,QAAQ1I,MAAM,GAClCqnB,EAAWhS,SAASzlB,MAAM,KAAMy3B,EAAW53B,MAG7C,GAAoC,IAAhC8L,KAAK0rB,gBAAgBv8B,OACvB,MAGF,IAAI88B,EAAiBjsB,KAAK0rB,gBAAgB,GAC1C1rB,KAAK0rB,gBAAkB1rB,KAAK0rB,gBAAgBjnB,MAAM,GAClDwnB,KAEF,QACAjsB,KAAK4rB,gBAGoB,IAAvB5rB,KAAK4rB,eAAuB5rB,KAAK2rB,mBACnC3rB,KAAK2rB,wBAKJH,EAvET,GA0EIU,GAAgB,SAAuBC,EAAUC,GACnDpsB,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAC5BA,KAAKssB,UAAYH,EACjBnsB,KAAKusB,QAAUH,EACfpsB,KAAKe,QAAU,IAAI8O,GAASoB,KAC5BjR,KAAKwsB,YAAc,EACnBxsB,KAAKysB,qBAAuB,GAC5BzsB,KAAK0sB,kBAAoB,GACzB1sB,KAAK2sB,WAAa,IAAInB,GAAgBxrB,KAAK2rB,kBAAkBp3B,KAAKyL,QAGpEksB,GAAcz6B,UAAY,CACxBs5B,aAAa,EACb6B,IAAK,SAAa1Z,GAChB,IAEElT,KAAKqsB,SAAS5qB,MAAMyR,GACpB,MAAOpjB,GACPkQ,KAAKkM,MAAQpc,EAGfkQ,KAAK6sB,YAAa,EAElB7sB,KAAK2sB,WAAWX,UAElBL,kBAAmB,WACZ3rB,KAAK6sB,YAIV7sB,KAAKusB,QAAQvsB,KAAKkM,QAEpB4gB,YAAa,SAAqBC,EAAYlC,GAC5C,IAAImC,EAAYD,EAAWv/B,QAAQghB,OAEnC,IAAKue,EAAWpN,KAAOqN,EAAW,CAChC,IAAIjsB,EAAU,IAAI8O,GAASoB,KAAKjR,KAAKe,QAASkJ,EAAUjK,KAAKe,QAAQoQ,SACjE8b,EAAelsB,EAAQoQ,OAAO,GAClCnR,KAAKwsB,cAEDO,EAAWG,mBACbltB,KAAK2sB,WAAWQ,kBAAkBntB,KAAKotB,kBAAkB74B,KAAKyL,KAAM+sB,EAAYhsB,EAASksB,IAEzFjtB,KAAKotB,kBAAkBL,EAAYhsB,EAASksB,GAIhDpC,EAAUf,aAAc,GAE1BsD,kBAAmB,SAA2BL,EAAYhsB,EAASksB,GACjE,IAAII,EACAL,EAAYD,EAAWv/B,QAAQghB,OAEnC,IACE6e,EAAkBN,EAAWO,cAAcvsB,GAC3C,MAAOjR,GACFA,EAAEub,WACLvb,EAAEsR,MAAQ2rB,EAAWvsB,WACrB1Q,EAAEub,SAAW0hB,EAAWxsB,WAAW8K,UAIrC0hB,EAAWpN,KAAM,EAEjBoN,EAAW7gB,MAAQpc,EAGrB,IAAIu9B,GAAqBA,EAAgB1N,MAAOqN,EAqB9ChtB,KAAKwsB,cAEDxsB,KAAK6sB,YACP7sB,KAAK2sB,WAAWX,aAxBwC,CACtDqB,EAAgB7/B,QAAQ+/B,WAC1BxsB,EAAQysB,gBAAiB,GAM3B,IAFA,IAAIC,OAAiDt9B,IAAxBk9B,EAAgB1N,IAEpC1tB,EAAI,EAAGA,EAAIg7B,EAAa7a,MAAMjjB,OAAQ8C,IAC7C,GAAIg7B,EAAa7a,MAAMngB,KAAO86B,EAAY,CACxCE,EAAa7a,MAAMngB,GAAKo7B,EACxB,MAIJ,IAAIK,EAAa1tB,KAAK0tB,WAAWn5B,KAAKyL,KAAMqtB,EAAiBtsB,GAEzD4sB,EAAsB3tB,KAAK2sB,WAAWiB,UAAUF,GAEpD1tB,KAAKssB,UAAUxgC,KAAKuhC,EAAgBxN,UAAW4N,EAAwBJ,EAAgB9sB,WAAY8sB,EAAgB7/B,QAASmgC,KAShID,WAAY,SAAoBX,EAAYhsB,EAASjR,EAAGojB,EAAM2a,EAAgBC,GACxEh+B,IACGA,EAAEub,WACLvb,EAAEsR,MAAQ2rB,EAAWvsB,WACrB1Q,EAAEub,SAAW0hB,EAAWxsB,WAAW8K,UAGrCrL,KAAKkM,MAAQpc,GAGf,IAAIi+B,EAAgB/tB,KAChBgtB,EAAYD,EAAWv/B,QAAQghB,OAC/BsR,EAAWiN,EAAWv/B,QAAQsyB,SAC9BkO,EAAajB,EAAWv/B,QAAQygC,SAChCC,EAAkBL,GAAkBC,KAAYC,EAAcrB,kBAqBlE,GAnBK3rB,EAAQysB,iBAETT,EAAW1M,OADT6N,GAGgB,WAChB,OAAIJ,KAAYC,EAActB,uBAI9BsB,EAActB,qBAAqBqB,IAAY,GACxC,MAKRA,GAAYE,IACfjB,EAAW1M,MAAO,GAGhBnN,IACF6Z,EAAW7Z,KAAOA,EAClB6Z,EAAWzM,iBAAmBwN,GAEzBd,IAAclN,IAAa/e,EAAQysB,iBAAmBU,IAAkB,CAC3EH,EAAcrB,kBAAkBoB,IAAY,EAC5C,IAAIK,EAAanuB,KAAKe,QACtBf,KAAKe,QAAUA,EAEf,IACEf,KAAKqsB,SAAS5qB,MAAMyR,GACpB,MAAOpjB,GACPkQ,KAAKkM,MAAQpc,EAGfkQ,KAAKe,QAAUotB,EAInBJ,EAAcvB,cAEVuB,EAAclB,YAChBkB,EAAcpB,WAAWX,UAG7BoC,iBAAkB,SAA0BC,EAAUxD,GACxB,oBAAxBwD,EAASr7B,MAAMkP,KACjBlC,KAAKe,QAAQoQ,OAAOmC,QAAQ+a,GAE5BxD,EAAUf,aAAc,GAG5BwE,oBAAqB,SAA6BD,GACpB,oBAAxBA,EAASr7B,MAAMkP,MACjBlC,KAAKe,QAAQoQ,OAAO3D,SAGxB+gB,YAAa,SAAqBC,EAAY3D,GAC5C7qB,KAAKe,QAAQoQ,OAAOmC,QAAQkb,IAE9BC,eAAgB,SAAwBD,GACtCxuB,KAAKe,QAAQoQ,OAAO3D,SAEtBkhB,qBAAsB,SAA8BC,EAAqB9D,GACvE7qB,KAAKe,QAAQoQ,OAAOmC,QAAQqb,IAE9BC,wBAAyB,SAAiCD,GACxD3uB,KAAKe,QAAQoQ,OAAO3D,SAEtBqhB,aAAc,SAAsBC,EAAajE,GAC/C7qB,KAAKe,QAAQoQ,OAAOmC,QAAQwb,IAE9BC,gBAAiB,SAAyBD,GACxC9uB,KAAKe,QAAQoQ,OAAO3D,SAEtBwhB,WAAY,SAAoBC,EAAWpE,GACzC7qB,KAAKe,QAAQoQ,OAAOmC,QAAQ2b,EAAU7c,MAAM,KAE9C8c,cAAe,SAAuBD,GACpCjvB,KAAKe,QAAQoQ,OAAO3D,UAIxB,IAAI2hB,GAEJ,WACE,SAASA,EAAyBC,GAChC19B,EAAgBsO,KAAMmvB,GAEtBnvB,KAAKovB,QAAUA,EAkDjB,OA/CA38B,EAAa08B,EAA0B,CAAC,CACtC38B,IAAK,MACLQ,MAAO,SAAakgB,GAClBlT,KAAKyB,MAAMyR,KAEZ,CACD1gB,IAAK,aACLQ,MAAO,SAAoByN,GACzB,IAAKA,EACH,OAAOA,EAGT,IACIxO,EADAi5B,EAAMzqB,EAAMtR,OAGhB,IAAK8C,EAAI,EAAGA,EAAIi5B,EAAKj5B,IACnB+N,KAAKyB,MAAMhB,EAAMxO,IAGnB,OAAOwO,IAER,CACDjO,IAAK,QACLQ,MAAO,SAAe2N,GACpB,OAAKA,EAIDA,EAAKnP,cAAgB0D,MAChB8K,KAAK8M,WAAWnM,KAGpBA,EAAKuf,kBAAoBvf,EAAKuf,qBAI/BlgB,KAAKovB,QACPzuB,EAAK0uB,mBAEL1uB,EAAK2uB,qBAGP3uB,EAAKqqB,OAAOhrB,OATHW,GARAA,MAsBNwuB,EAtDT,GA2DII,GAEJ,WACE,SAASA,IACP79B,EAAgBsO,KAAMuvB,GAEtBvvB,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAC5BA,KAAK6P,SAAW,GAChB7P,KAAKwvB,gBAAkB,CAAC,IA0G1B,OAvGA/8B,EAAa88B,EAAqB,CAAC,CACjC/8B,IAAK,MACLQ,MAAO,SAAakgB,GAGlB,OAFAA,EAAOlT,KAAKqsB,SAAS5qB,MAAMyR,IACtBuc,WAAazvB,KAAKwvB,gBAAgB,GAChCtc,IAER,CACD1gB,IAAK,mBACLQ,MAAO,SAA0Bq7B,EAAUxD,GACzCA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,uBACLQ,MAAO,SAA8B27B,EAAqB9D,GACxDA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,eACLQ,MAAO,SAAsB87B,EAAajE,GACxC,IAAIiE,EAAY5b,KAAhB,CAIA,IAAIjhB,EACA2gB,EACAnF,EAEAhB,EADAijB,EAAyB,GAGzBtd,EAAQ0c,EAAY1c,MACpB+G,EAAU/G,EAAQA,EAAMjjB,OAAS,EAErC,IAAK8C,EAAI,EAAGA,EAAIknB,EAASlnB,IACnB68B,EAAY1c,MAAMngB,aAAcyzB,GAAKjE,SACvCiO,EAAuB5jC,KAAKsmB,EAAMngB,IAClC68B,EAAYa,mBAAoB,GAMpC,IAAIljC,EAAQqiC,EAAYriC,MAExB,IAAKwF,EAAI,EAAGA,EAAIxF,EAAM0C,OAAQ8C,IAAK,CACjC,IAAI29B,EAAenjC,EAAMwF,GAErB49B,EADWD,EAAaA,EAAazgC,OAAS,GACrBsd,WAS7B,KARAA,EAAaojB,EAAgB5lB,EAAU4lB,GAAevhC,OAAOohC,GAA0BA,KAGrFjjB,EAAaA,EAAW/J,KAAI,SAAUotB,GACpC,OAAOA,EAAmBrpB,YAIzBmM,EAAI,EAAGA,EAAInG,EAAWtd,OAAQyjB,IACjC5S,KAAK+vB,cAAe,GACpBtiB,EAAShB,EAAWmG,IACbod,kBAAkBJ,GACzBniB,EAAOuF,QAAU8b,EAEP,IAANlc,IACFnF,EAAOwiB,+BAAgC,GAGzCjwB,KAAKwvB,gBAAgBxvB,KAAKwvB,gBAAgBrgC,OAAS,GAAGrD,KAAK2hB,GAI/DzN,KAAK6P,SAAS/jB,KAAKgjC,EAAY3c,cAEhC,CACD3f,IAAK,kBACLQ,MAAO,SAAyB87B,GACzBA,EAAY5b,OACflT,KAAK6P,SAAS1gB,OAAS6Q,KAAK6P,SAAS1gB,OAAS,KAGjD,CACDqD,IAAK,aACLQ,MAAO,SAAoBi8B,EAAWpE,GACpCoE,EAAUQ,WAAa,GACvBzvB,KAAKwvB,gBAAgB1jC,KAAKmjC,EAAUQ,cAErC,CACDj9B,IAAK,gBACLQ,MAAO,SAAuBi8B,GAC5BjvB,KAAKwvB,gBAAgBrgC,OAAS6Q,KAAKwvB,gBAAgBrgC,OAAS,IAE7D,CACDqD,IAAK,cACLQ,MAAO,SAAqBw7B,EAAY3D,GACtC2D,EAAWiB,WAAa,GACxBzvB,KAAKwvB,gBAAgB1jC,KAAK0iC,EAAWiB,cAEtC,CACDj9B,IAAK,iBACLQ,MAAO,SAAwBw7B,GAC7BxuB,KAAKwvB,gBAAgBrgC,OAAS6Q,KAAKwvB,gBAAgBrgC,OAAS,MAIzDogC,EAhHT,GAmHIW,GAEJ,WACE,SAASA,IACPx+B,EAAgBsO,KAAMkwB,GAEtBlwB,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAka9B,OA/ZAvN,EAAay9B,EAAuB,CAAC,CACnC19B,IAAK,MACLQ,MAAO,SAAakgB,GAClB,IAAIid,EAAe,IAAIZ,GAIvB,GAHAvvB,KAAKowB,cAAgB,GACrBD,EAAavD,IAAI1Z,IAEZid,EAAaJ,aAChB,OAAO7c,EAGTA,EAAKuc,WAAavc,EAAKuc,WAAWnhC,OAAO0R,KAAKqwB,iBAAiBnd,EAAKuc,WAAYvc,EAAKuc,aACrFzvB,KAAKwvB,gBAAkB,CAACtc,EAAKuc,YAE7B,IAAIa,EAAUtwB,KAAKqsB,SAAS5qB,MAAMyR,GAGlC,OADAlT,KAAKuwB,0BAA0Brd,EAAKuc,YAC7Ba,IAER,CACD99B,IAAK,4BACLQ,MAAO,SAAmCyZ,GACxC,IAAI+jB,EAAUxwB,KAAKowB,cACnB3jB,EAAWoH,QAAO,SAAUpG,GAC1B,OAAQA,EAAOgjB,iBAA+C,GAA5BhjB,EAAOoU,WAAW1yB,UACnDyR,SAAQ,SAAU6M,GACnB,IAAIgF,EAAW,YAEf,IACEA,EAAWhF,EAAOgF,SAASvP,MAAM,IACjC,MAAOnV,IAEJyiC,EAAQ,GAAGliC,OAAOmf,EAAOrM,MAAO,KAAK9S,OAAOmkB,MAC/C+d,EAAQ,GAAGliC,OAAOmf,EAAOrM,MAAO,KAAK9S,OAAOmkB,KAAa,EACzDkT,GAAOG,KAAK,WAAWx3B,OAAOmkB,EAAU,2BAI7C,CACDjgB,IAAK,mBACLQ,MAAO,SAA0B09B,EAAaC,EAAmBC,GAS/D,IAAIC,EACAC,EACAC,EAEAhkB,EAEA6iB,EACAniB,EACAujB,EACAC,EANAC,EAAe,GAEfC,EAAgBnxB,KAYpB,IAPA4wB,EAAiBA,GAAkB,EAO9BC,EAAc,EAAGA,EAAcH,EAAYvhC,OAAQ0hC,IACtD,IAAKC,EAAoB,EAAGA,EAAoBH,EAAkBxhC,OAAQ2hC,IACxErjB,EAASijB,EAAYG,GACrBG,EAAeL,EAAkBG,GAE7BrjB,EAAOoU,WAAWve,QAAQ0tB,EAAarP,YAAc,IAKzDiO,EAAe,CAACoB,EAAa9O,cAAc,KAC3C6O,EAAUI,EAAcC,UAAU3jB,EAAQmiB,IAE9BzgC,SACVse,EAAOgjB,iBAAkB,EAEzBhjB,EAAOyU,cAActhB,SAAQ,SAAUywB,GACrC,IAAIrvB,EAAOgvB,EAAaxrB,iBAExBuH,EAAcokB,EAAcG,eAAeP,EAASnB,EAAcyB,EAAc5jB,EAAOwI,cAEvFgb,EAAY,IAAIvL,GAAKjE,OAAOuP,EAAave,SAAUue,EAAatP,OAAQ,EAAGsP,EAAazwB,WAAYyB,IAC1FkgB,cAAgBnV,EAE1BA,EAAYA,EAAY5d,OAAS,GAAGsd,WAAa,CAACwkB,GAElDC,EAAaplC,KAAKmlC,GAClBA,EAAUje,QAAUge,EAAahe,QAEjCie,EAAUpP,WAAaoP,EAAUpP,WAAWvzB,OAAO0iC,EAAanP,WAAYpU,EAAOoU,YAI/EmP,EAAaf,gCACfgB,EAAUhB,+BAAgC,EAC1Ce,EAAahe,QAAQvmB,MAAMX,KAAKihB,SAO1C,GAAImkB,EAAa/hC,OAAQ,CAKvB,GAFA6Q,KAAKuxB,mBAEDX,EAAiB,IAAK,CACxB,IAAIY,EAAc,wBACdC,EAAc,wBAElB,IACED,EAAcN,EAAa,GAAGhP,cAAc,GAAGhf,QAC/CuuB,EAAcP,EAAa,GAAGze,SAASvP,QACvC,MAAOpT,IAET,KAAM,CACJwb,QAAS,gFAAgFhd,OAAOkjC,EAAa,YAAYljC,OAAOmjC,EAAa,MAMjJ,OAAOP,EAAa5iC,OAAO6iC,EAAcd,iBAAiBa,EAAcP,EAAmBC,EAAiB,IAE5G,OAAOM,IAGV,CACD1+B,IAAK,mBACLQ,MAAO,SAA0B0+B,EAAU7G,GACzCA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,uBACLQ,MAAO,SAA8B27B,EAAqB9D,GACxDA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,gBACLQ,MAAO,SAAuB2+B,EAAc9G,GAC1CA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,eACLQ,MAAO,SAAsB87B,EAAajE,GACxC,IAAIiE,EAAY5b,KAAhB,CAIA,IAAI6d,EACAa,EACAf,EAIAjB,EAHAH,EAAazvB,KAAKwvB,gBAAgBxvB,KAAKwvB,gBAAgBrgC,OAAS,GAChE0iC,EAAiB,GACjBV,EAAgBnxB,KAGpB,IAAK6wB,EAAc,EAAGA,EAAcpB,EAAWtgC,OAAQ0hC,IACrD,IAAKe,EAAY,EAAGA,EAAY9C,EAAYriC,MAAM0C,OAAQyiC,IAGxD,GAFAhC,EAAed,EAAYriC,MAAMmlC,IAE7B9C,EAAYa,kBAAhB,CAIA,IAAIljB,EAAamjB,EAAaA,EAAazgC,OAAS,GAAGsd,WAEnDA,GAAcA,EAAWtd,SAI7B4hC,EAAU/wB,KAAKoxB,UAAU3B,EAAWoB,GAAcjB,IAEtCzgC,SACVsgC,EAAWoB,GAAaJ,iBAAkB,EAC1ChB,EAAWoB,GAAa3O,cAActhB,SAAQ,SAAUywB,GACtD,IAAIS,EACJA,EAAoBX,EAAcG,eAAeP,EAASnB,EAAcyB,EAAc5B,EAAWoB,GAAa5a,aAC9G4b,EAAe/lC,KAAKgmC,OAM5BhD,EAAYriC,MAAQqiC,EAAYriC,MAAM6B,OAAOujC,MAE9C,CACDr/B,IAAK,YACLQ,MAAO,SAAmBya,EAAQskB,GAKhC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAngC,EAIAogC,EAHAlB,EAAgBnxB,KAChBsyB,EAAiB7kB,EAAOgF,SAASjG,SACjC+lB,EAAmB,GAEnBxB,EAAU,GAEd,IAAKiB,EAAwB,EAAGA,EAAwBD,EAAqB5iC,OAAQ6iC,IAGnF,IAFAC,EAAoBF,EAAqBC,GAEpCE,EAAwB,EAAGA,EAAwBD,EAAkBzlB,SAASrd,OAAQ+iC,IAYzF,IAXAC,EAAkBF,EAAkBzlB,SAAS0lB,IAEzCzkB,EAAOqU,aAAyC,IAA1BkQ,GAAyD,IAA1BE,IACvDK,EAAiBzmC,KAAK,CACpB8lC,UAAWI,EACX5wB,MAAO8wB,EACPM,QAAS,EACTC,kBAAmBN,EAAgB9sB,aAIlCpT,EAAI,EAAGA,EAAIsgC,EAAiBpjC,OAAQ8C,IACvCogC,EAAiBE,EAAiBtgC,GAMT,MAFzBmgC,EAAmBD,EAAgB9sB,WAAWrS,QAEW,IAA1Bk/B,IAC7BE,EAAmB,MAIhBjB,EAAcuB,qBAAqBJ,EAAeD,EAAeG,SAASx/B,MAAOm/B,EAAgBn/B,QAAUq/B,EAAeG,QAAU,GAAKF,EAAeD,EAAeG,SAASntB,WAAWrS,QAAUo/B,EACxMC,EAAiB,KAEjBA,EAAeG,UAIbH,IACFA,EAAeM,SAAWN,EAAeG,UAAYF,EAAenjC,OAEhEkjC,EAAeM,WAAallB,EAAOsU,aAAemQ,EAAwB,EAAID,EAAkBzlB,SAASrd,QAAU6iC,EAAwB,EAAID,EAAqB5iC,UACtKkjC,EAAiB,OAKjBA,EACEA,EAAeM,WACjBN,EAAeljC,OAASmjC,EAAenjC,OACvCkjC,EAAeO,aAAeZ,EAC9BK,EAAeQ,oBAAsBX,EAAwB,EAE7DK,EAAiBpjC,OAAS,EAE1B4hC,EAAQjlC,KAAKumC,KAGfE,EAAiBze,OAAO7hB,EAAG,GAC3BA,KAMR,OAAO8+B,IAER,CACDv+B,IAAK,uBACLQ,MAAO,SAA8B8/B,EAAeC,GAClD,GAA6B,kBAAlBD,GAAuD,kBAAlBC,EAC9C,OAAOD,IAAkBC,EAG3B,GAAID,aAAyBpN,GAAK7H,UAChC,OAAIiV,EAAcpxB,KAAOqxB,EAAcrxB,IAAMoxB,EAActgC,MAAQugC,EAAcvgC,MAI5EsgC,EAAc9/B,OAAU+/B,EAAc//B,OAQ3C8/B,EAAgBA,EAAc9/B,MAAMA,OAAS8/B,EAAc9/B,UAC3D+/B,EAAgBA,EAAc//B,MAAMA,OAAS+/B,EAAc//B,QARrD8/B,EAAc9/B,QAAS+/B,EAAc//B,OAe7C,GAHA8/B,EAAgBA,EAAc9/B,MAC9B+/B,EAAgBA,EAAc//B,MAE1B8/B,aAAyBpN,GAAKnZ,SAAU,CAC1C,KAAMwmB,aAAyBrN,GAAKnZ,WAAaumB,EAActmB,SAASrd,SAAW4jC,EAAcvmB,SAASrd,OACxG,OAAO,EAGT,IAAK,IAAI8C,EAAI,EAAGA,EAAI6gC,EAActmB,SAASrd,OAAQ8C,IAAK,CACtD,GAAI6gC,EAActmB,SAASva,GAAGoT,WAAWrS,QAAU+/B,EAAcvmB,SAASva,GAAGoT,WAAWrS,QAC5E,IAANf,IAAY6gC,EAActmB,SAASva,GAAGoT,WAAWrS,OAAS,QAAU+/B,EAAcvmB,SAASva,GAAGoT,WAAWrS,OAAS,MACpH,OAAO,EAIX,IAAKgN,KAAK0yB,qBAAqBI,EAActmB,SAASva,GAAGe,MAAO+/B,EAAcvmB,SAASva,GAAGe,OACxF,OAAO,EAIX,OAAO,EAGT,OAAO,IAER,CACDR,IAAK,iBACLQ,MAAO,SAAwB+9B,EAASnB,EAAcoD,EAAqB/c,GAEzE,IAGIgd,EACAxgB,EACAygB,EACAzwB,EACA0wB,EAPAC,EAA2B,EAC3BC,EAAkC,EAClC/iB,EAAO,GAOX,IAAK2iB,EAAa,EAAGA,EAAalC,EAAQ5hC,OAAQ8jC,IAEhDxgB,EAAWmd,GADXntB,EAAQsuB,EAAQkC,IACcrB,WAC9BsB,EAAe,IAAIxN,GAAKtgB,QAAQ3C,EAAMgwB,kBAAmBO,EAAoBxmB,SAAS,GAAGxZ,MAAOggC,EAAoBxmB,SAAS,GAAGlH,WAAY0tB,EAAoBxmB,SAAS,GAAGhM,WAAYwyB,EAAoBxmB,SAAS,GAAGjM,YAEpNkC,EAAMmvB,UAAYwB,GAA4BC,EAAkC,IAClF/iB,EAAKA,EAAKnhB,OAAS,GAAGqd,SAAW8D,EAAKA,EAAKnhB,OAAS,GAAGqd,SAASle,OAAOshC,EAAawD,GAA0B5mB,SAAS/H,MAAM4uB,IAC7HA,EAAkC,EAClCD,KAGFD,EAAc1gB,EAASjG,SAAS/H,MAAM4uB,EAAiC5wB,EAAMrB,OAAO9S,OAAO,CAAC4kC,IAAe5kC,OAAO0kC,EAAoBxmB,SAAS/H,MAAM,IAEjJ2uB,IAA6B3wB,EAAMmvB,WAAaqB,EAAa,EAC/D3iB,EAAKA,EAAKnhB,OAAS,GAAGqd,SAAW8D,EAAKA,EAAKnhB,OAAS,GAAGqd,SAASle,OAAO6kC,IAEvE7iB,EAAOA,EAAKhiB,OAAOshC,EAAanrB,MAAM2uB,EAA0B3wB,EAAMmvB,aACjE9lC,KAAK,IAAI45B,GAAKnZ,SAAS4mB,IAG9BC,EAA2B3wB,EAAMmwB,cACjCS,EAAkC5wB,EAAMowB,sBAEDjD,EAAawD,GAA0B5mB,SAASrd,SACrFkkC,EAAkC,EAClCD,KAsBJ,OAlBIA,EAA2BxD,EAAazgC,QAAUkkC,EAAkC,IACtF/iB,EAAKA,EAAKnhB,OAAS,GAAGqd,SAAW8D,EAAKA,EAAKnhB,OAAS,GAAGqd,SAASle,OAAOshC,EAAawD,GAA0B5mB,SAAS/H,MAAM4uB,IAC7HD,KAIF9iB,GADAA,EAAOA,EAAKhiB,OAAOshC,EAAanrB,MAAM2uB,EAA0BxD,EAAazgC,UACjEuT,KAAI,SAAU4wB,GAExB,IAAIC,EAAUD,EAAa5lB,cAAc4lB,EAAa9mB,UAQtD,OANIyJ,EACFsd,EAAQlE,mBAERkE,EAAQjE,qBAGHiE,OAIV,CACD/gC,IAAK,aACLQ,MAAO,SAAoBi8B,EAAWpE,GACpC,IAAI2I,EAAgBvE,EAAUQ,WAAWnhC,OAAO0R,KAAKwvB,gBAAgBxvB,KAAKwvB,gBAAgBrgC,OAAS,IACnGqkC,EAAgBA,EAAcllC,OAAO0R,KAAKqwB,iBAAiBmD,EAAevE,EAAUQ,aACpFzvB,KAAKwvB,gBAAgB1jC,KAAK0nC,KAE3B,CACDhhC,IAAK,gBACLQ,MAAO,SAAuBi8B,GAC5B,IAAI9mB,EAAYnI,KAAKwvB,gBAAgBrgC,OAAS,EAC9C6Q,KAAKwvB,gBAAgBrgC,OAASgZ,IAE/B,CACD3V,IAAK,cACLQ,MAAO,SAAqBw7B,EAAY3D,GACtC,IAAI2I,EAAgBhF,EAAWiB,WAAWnhC,OAAO0R,KAAKwvB,gBAAgBxvB,KAAKwvB,gBAAgBrgC,OAAS,IACpGqkC,EAAgBA,EAAcllC,OAAO0R,KAAKqwB,iBAAiBmD,EAAehF,EAAWiB,aACrFzvB,KAAKwvB,gBAAgB1jC,KAAK0nC,KAE3B,CACDhhC,IAAK,iBACLQ,MAAO,SAAwBw7B,GAC7B,IAAIrmB,EAAYnI,KAAKwvB,gBAAgBrgC,OAAS,EAC9C6Q,KAAKwvB,gBAAgBrgC,OAASgZ,MAI3B+nB,EAtaT,GAyaIuD,GAEJ,WACE,SAASA,IACP/hC,EAAgBsO,KAAMyzB,GAEtBzzB,KAAK6P,SAAW,CAAC,IACjB7P,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAqE9B,OAlEAvN,EAAaghC,EAAqB,CAAC,CACjCjhC,IAAK,MACLQ,MAAO,SAAakgB,GAClB,OAAOlT,KAAKqsB,SAAS5qB,MAAMyR,KAE5B,CACD1gB,IAAK,mBACLQ,MAAO,SAA0Bq7B,EAAUxD,GACzCA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,uBACLQ,MAAO,SAA8B27B,EAAqB9D,GACxDA,EAAUf,aAAc,IAEzB,CACDt3B,IAAK,eACLQ,MAAO,SAAsB87B,EAAajE,GACxC,IAEI1Y,EAFApR,EAAUf,KAAK6P,SAAS7P,KAAK6P,SAAS1gB,OAAS,GAC/C1C,EAAQ,GAEZuT,KAAK6P,SAAS/jB,KAAKW,GAEdqiC,EAAY5b,QACff,EAAY2c,EAAY3c,aAGtBA,EAAYA,EAAU0B,QAAO,SAAUpB,GACrC,OAAOA,EAASihB,iBAElB5E,EAAY3c,UAAYA,EAAUhjB,OAASgjB,EAAYA,EAAY,KAE/DA,GACF2c,EAAY6E,cAAclnC,EAAOsU,EAASoR,IAIzCA,IACH2c,EAAY1c,MAAQ,MAGtB0c,EAAYriC,MAAQA,KAGvB,CACD+F,IAAK,kBACLQ,MAAO,SAAyB87B,GAC9B9uB,KAAK6P,SAAS1gB,OAAS6Q,KAAK6P,SAAS1gB,OAAS,IAE/C,CACDqD,IAAK,aACLQ,MAAO,SAAoBi8B,EAAWpE,GACpC,IAAI9pB,EAAUf,KAAK6P,SAAS7P,KAAK6P,SAAS1gB,OAAS,GACnD8/B,EAAU7c,MAAM,GAAGc,KAA0B,IAAnBnS,EAAQ5R,QAAgB4R,EAAQ,GAAGue,aAE9D,CACD9sB,IAAK,cACLQ,MAAO,SAAqBw7B,EAAY3D,GACtC,IAAI9pB,EAAUf,KAAK6P,SAAS7P,KAAK6P,SAAS1gB,OAAS,GAE/Cq/B,EAAWpc,OAASoc,EAAWpc,MAAMjjB,SACvCq/B,EAAWpc,MAAM,GAAGc,KAAOsb,EAAW7V,UAA+B,IAAnB5X,EAAQ5R,QAAgB,UAKzEskC,EA1ET,GA6EIG,GAEJ,WACE,SAASA,EAAgB7yB,GACvBrP,EAAgBsO,KAAM4zB,GAEtB5zB,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAC5BA,KAAK6zB,SAAW9yB,EAoFlB,OAjFAtO,EAAamhC,EAAiB,CAAC,CAC7BphC,IAAK,gCACLQ,MAAO,SAAuC8gC,GAC5C,IAAIhhB,EAEJ,IAAKghB,EACH,OAAO,EAGT,IAAK,IAAI/wB,EAAI,EAAGA,EAAI+wB,EAAU3kC,OAAQ4T,IAGpC,IAFA+P,EAAOghB,EAAU/wB,IAERgxB,UAAYjhB,EAAKihB,SAAS/zB,KAAK6zB,YAAc/gB,EAAKoN,mBAGzD,OAAO,EAIX,OAAO,IAER,CACD1tB,IAAK,wBACLQ,MAAO,SAA+BghC,GAChCA,GAASA,EAAM5hB,QACjB4hB,EAAM5hB,MAAQ4hB,EAAM5hB,MAAMyB,QAAO,SAAUogB,GACzC,OAAOA,EAAMhe,kBAIlB,CACDzjB,IAAK,UACLQ,MAAO,SAAiBghC,GACtB,OAAOA,IAASA,EAAM5hB,OAA+B,IAAvB4hB,EAAM5hB,MAAMjjB,SAE3C,CACDqD,IAAK,qBACLQ,MAAO,SAA4B87B,GACjC,SAAOA,IAAeA,EAAYriC,QAAQqiC,EAAYriC,MAAM0C,OAAS,IAEtE,CACDqD,IAAK,oBACLQ,MAAO,SAA2B2N,EAAMuzB,GACtC,IAAKvzB,EAAKuf,mBAAoB,CAC5B,GAAIlgB,KAAKqB,QAAQV,KAAUX,KAAKm0B,8BAA8BD,GAC5D,OAGF,OAAOvzB,EAGT,IAAIyzB,EAAoBzzB,EAAKyR,MAAM,GAGnC,GAFApS,KAAKq0B,sBAAsBD,IAEvBp0B,KAAKqB,QAAQ+yB,GAMjB,OAFAzzB,EAAK0uB,mBACL1uB,EAAK2zB,wBACE3zB,IAER,CACDnO,IAAK,mBACLQ,MAAO,SAA0B87B,GAC/B,QAAIA,EAAY3b,YAIZnT,KAAKqB,QAAQytB,OAIZA,EAAY5b,OAASlT,KAAKu0B,mBAAmBzF,QAQ/C8E,EAzFT,GA4FIlW,GAAe,SAAsB3c,GACvCf,KAAKqsB,SAAW,IAAIjC,GAAQpqB,MAC5BA,KAAK6zB,SAAW9yB,EAChBf,KAAKgL,MAAQ,IAAI4oB,GAAgB7yB,IAGnC2c,GAAajsB,UAAY,CACvBs5B,aAAa,EACb6B,IAAK,SAAa1Z,GAChB,OAAOlT,KAAKqsB,SAAS5qB,MAAMyR,IAE7Bkb,iBAAkB,SAA0BC,EAAUxD,GACpD,IAAIwD,EAASnO,qBAAsBmO,EAAS5f,SAI5C,OAAO4f,GAETK,qBAAsB,SAA8B8F,EAAW3J,GAG7D2J,EAAUrjB,OAAS,IAErBsjB,YAAa,SAAqBC,EAAY7J,KAC9C8J,aAAc,SAAsBC,EAAa/J,GAC/C,IAAI+J,EAAY1U,qBAAsB0U,EAAYb,SAAS/zB,KAAK6zB,UAIhE,OAAOe,GAET5F,WAAY,SAAoBC,EAAWpE,GACzC,IAAIqJ,EAAgBjF,EAAU7c,MAAM,GAAGA,MAGvC,OAFA6c,EAAUjE,OAAOhrB,KAAKqsB,UACtBxB,EAAUf,aAAc,EACjB9pB,KAAKgL,MAAM6pB,kBAAkB5F,EAAWiF,IAEjDpH,YAAa,SAAqBC,EAAYlC,GAC5C,IAAIkC,EAAW7M,mBAIf,OAAO6M,GAETwB,YAAa,SAAqBC,EAAY3D,GAC5C,OAAI2D,EAAWpc,OAASoc,EAAWpc,MAAMjjB,OAChC6Q,KAAK80B,oBAAoBtG,EAAY3D,GAErC7qB,KAAK+0B,uBAAuBvG,EAAY3D,IAGnDmK,eAAgB,SAAwBC,EAAepK,GACrD,IAAKoK,EAAc/U,mBAEjB,OADA+U,EAAcjK,OAAOhrB,KAAKqsB,UACnB4I,GAGXH,oBAAqB,SAA6BtG,EAAY3D,GAG5D,SAASqK,EAAe1G,GACtB,IAAIsF,EAAYtF,EAAWpc,MAC3B,OAA4B,IAArB0hB,EAAU3kC,UAAkB2kC,EAAU,GAAGrnC,OAAuC,IAA9BqnC,EAAU,GAAGrnC,MAAM0C,QAG9E,SAASgmC,EAAa3G,GACpB,IAAI4G,EAAY5G,EAAWpc,MAE3B,OAAI8iB,EAAe1G,GACV4G,EAAU,GAAGhjB,MAGfgjB,EAMT,IAAIlB,EAAgBiB,EAAa3G,GAQjC,OAPAA,EAAWxD,OAAOhrB,KAAKqsB,UACvBxB,EAAUf,aAAc,EAEnB9pB,KAAKgL,MAAM3J,QAAQmtB,IACtBxuB,KAAK2d,YAAY6Q,EAAWpc,MAAM,GAAGA,OAGhCpS,KAAKgL,MAAM6pB,kBAAkBrG,EAAY0F,IAElDa,uBAAwB,SAAgCvG,EAAY3D,GAClE,IAAI2D,EAAWtO,mBAAf,CAIA,GAAwB,aAApBsO,EAAWlgB,KAAqB,CAIlC,GAAItO,KAAKq1B,QAAS,CAChB,GAAI7G,EAAWtf,UAAW,CACxB,IAAIomB,EAAU,IAAI5P,GAAKhW,QAAQ,MAAMphB,OAAOkgC,EAAWtrB,MAAMlD,KAAK6zB,UAAUvmC,QAAQ,MAAO,IAAK,UAEhG,OADAgoC,EAAQpmB,UAAYsf,EAAWtf,UACxBlP,KAAKqsB,SAAS5qB,MAAM6zB,GAG7B,OAGFt1B,KAAKq1B,SAAU,EAGjB,OAAO7G,IAET+G,gBAAiB,SAAyBnjB,EAAOojB,GAC/C,GAAKpjB,EAIL,IAAK,IAAIngB,EAAI,EAAGA,EAAImgB,EAAMjjB,OAAQ8C,IAAK,CACrC,IAAIy/B,EAAWtf,EAAMngB,GAErB,GAAIujC,GAAU9D,aAAoBhM,GAAKrX,cAAgBqjB,EAASjjB,SAC9D,KAAM,CACJnD,QAAS,wEACTlK,MAAOswB,EAASlxB,WAChB6K,SAAUqmB,EAASnxB,YAAcmxB,EAASnxB,WAAW8K,UAIzD,GAAIqmB,aAAoBhM,GAAKlJ,KAC3B,KAAM,CACJlR,QAAS,aAAahd,OAAOojC,EAASpjB,KAAM,kBAC5ClN,MAAOswB,EAASlxB,WAChB6K,SAAUqmB,EAASnxB,YAAcmxB,EAASnxB,WAAW8K,UAIzD,GAAIqmB,EAASxvB,OAASwvB,EAASxjB,UAC7B,KAAM,CACJ5C,QAAS,GAAGhd,OAAOojC,EAASxvB,KAAM,kDAClCd,MAAOswB,EAASlxB,WAChB6K,SAAUqmB,EAASnxB,YAAcmxB,EAASnxB,WAAW8K,YAK7DwjB,aAAc,SAAsBC,EAAajE,GAE/C,IAAI/X,EACAmC,EAAW,GAGf,GAFAjV,KAAKu1B,gBAAgBzG,EAAY1c,MAAO0c,EAAY3b,WAE/C2b,EAAY5b,KAkCf4b,EAAY9D,OAAOhrB,KAAKqsB,UACxBxB,EAAUf,aAAc,MAnCH,CAErB9pB,KAAKy1B,qBAAqB3G,GAM1B,IAHA,IAAIsG,EAAYtG,EAAY1c,MACxBsjB,EAAcN,EAAYA,EAAUjmC,OAAS,EAExC8C,EAAI,EAAGA,EAAIyjC,IAClB5iB,EAAOsiB,EAAUnjC,KAEL6gB,EAAKV,OAEf6C,EAASnpB,KAAKkU,KAAKqsB,SAAS5qB,MAAMqR,IAClCsiB,EAAUthB,OAAO7hB,EAAG,GACpByjC,KAIFzjC,IAMEyjC,EAAc,EAChB5G,EAAY9D,OAAOhrB,KAAKqsB,UAExByC,EAAY1c,MAAQ,KAGtByY,EAAUf,aAAc,EAmB1B,OAZIgF,EAAY1c,QACdpS,KAAK2d,YAAYmR,EAAY1c,OAE7BpS,KAAK21B,sBAAsB7G,EAAY1c,QAIrCpS,KAAKgL,MAAM4qB,iBAAiB9G,KAC9BA,EAAYO,mBACZpa,EAASnB,OAAO,EAAG,EAAGgb,IAGA,IAApB7Z,EAAS9lB,OACJ8lB,EAAS,GAGXA,GAETwgB,qBAAsB,SAA8B3G,GAC9CA,EAAYriC,QACdqiC,EAAYriC,MAAQqiC,EAAYriC,MAAMonB,QAAO,SAAUtgB,GACrD,IAAItB,EAMJ,IAJ0C,MAAtCsB,EAAE,GAAGiZ,SAAS,GAAGnH,WAAWrS,QAC9BO,EAAE,GAAGiZ,SAAS,GAAGnH,WAAa,IAAIqgB,GAAK1gB,WAAW,KAG/C/S,EAAI,EAAGA,EAAIsB,EAAEpE,OAAQ8C,IACxB,GAAIsB,EAAEtB,GAAGgkB,aAAe1iB,EAAEtB,GAAGyhC,cAC3B,OAAO,EAIX,OAAO,OAIbiC,sBAAuB,SAA+BvjB,GACpD,GAAKA,EAAL,CAKA,IACIyjB,EACA/iB,EACA7gB,EAHA6jC,EAAY,GAKhB,IAAK7jC,EAAImgB,EAAMjjB,OAAS,EAAG8C,GAAK,EAAGA,IAGjC,IAFA6gB,EAAOV,EAAMngB,cAEOyzB,GAAKrX,YACvB,GAAKynB,EAAUhjB,EAAKxE,MAEb,EACLunB,EAAWC,EAAUhjB,EAAKxE,iBAEFoX,GAAKrX,cAC3BwnB,EAAWC,EAAUhjB,EAAKxE,MAAQ,CAACwnB,EAAUhjB,EAAKxE,MAAMpL,MAAMlD,KAAK6zB,YAGrE,IAAIkC,EAAUjjB,EAAK5P,MAAMlD,KAAK6zB,WAEK,IAA/BgC,EAASvyB,QAAQyyB,GACnB3jB,EAAM0B,OAAO7hB,EAAG,GAEhB4jC,EAAS/pC,KAAKiqC,QAbhBD,EAAUhjB,EAAKxE,MAAQwE,IAmB/B6K,YAAa,SAAqBvL,GAChC,GAAKA,EAAL,CAOA,IAHA,IAAI4jB,EAAS,GACTC,EAAY,GAEPhkC,EAAI,EAAGA,EAAImgB,EAAMjjB,OAAQ8C,IAAK,CACrC,IAAI6gB,EAAOV,EAAMngB,GAEjB,GAAI6gB,EAAKjI,MAAO,CACd,IAAIrY,EAAMsgB,EAAKxE,KACf0nB,EAAOxjC,GAAO4f,EAAM0B,OAAO7hB,IAAK,GAAKgkC,EAAUnqC,KAAKkqC,EAAOxjC,GAAO,IAClEwjC,EAAOxjC,GAAK1G,KAAKgnB,IAIrBmjB,EAAUr1B,SAAQ,SAAUmZ,GAC1B,GAAIA,EAAM5qB,OAAS,EAAG,CACpB,IAAI4b,EAASgP,EAAM,GACfmc,EAAQ,GACRC,EAAQ,CAAC,IAAIzQ,GAAK7J,WAAWqa,IACjCnc,EAAMnZ,SAAQ,SAAUkS,GACH,MAAfA,EAAKjI,OAAiBqrB,EAAM/mC,OAAS,GACvCgnC,EAAMrqC,KAAK,IAAI45B,GAAK7J,WAAWqa,EAAQ,KAGzCA,EAAMpqC,KAAKgnB,EAAK9f,OAChB+X,EAAOwD,UAAYxD,EAAOwD,WAAauE,EAAKvE,aAE9CxD,EAAO/X,MAAQ,IAAI0yB,GAAK/X,MAAMwoB,UAMtC,IAAI1Y,GAAW,CACb2M,QAASA,GACT8B,cAAeA,GACfkK,4BAA6BjH,GAC7BkH,cAAenG,GACfuD,oBAAqBA,GACrB/V,aAAcA,IAIZ4Y,GAAU,SAAW9qB,EAAO+qB,GAC9B,IAGIC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAvE,EAbAllB,EAAM9B,EAAMrc,OACZ6nC,EAAQ,EACRC,EAAa,EAKbC,EAAS,GACTC,EAAW,EAOf,SAASC,EAAUC,GACjB,IAAI/pB,EAAMspB,EAAsBO,EAE5B7pB,EAAM,MAAQ+pB,IAAU/pB,IAI5B4pB,EAAOprC,KAAK0f,EAAM/G,MAAM0yB,EAAUP,EAAsB,IACxDO,EAAWP,EAAsB,GAGnC,IAAKA,EAAsB,EAAGA,EAAsBtpB,EAAKspB,IAGvD,MAFAE,EAAKtrB,EAAM8rB,WAAWV,KAEZ,IAAME,GAAM,KAAOA,EAAK,IAKlC,OAAQA,GACN,KAAK,GAEHG,IACAR,EAAmBG,EACnB,SAEF,KAAK,GAEH,KAAMK,EAAa,EACjB,OAAOV,EAAK,sBAAuBK,GAGrC,SAEF,KAAK,GAEEK,GACHG,IAGF,SAEF,KAAK,IAEHJ,IACAR,EAAcI,EACd,SAEF,KAAK,IAEH,KAAMI,EAAQ,EACZ,OAAOT,EAAK,sBAAuBK,GAGhCI,GAAUC,GACbG,IAGF,SAEF,KAAK,GAEH,GAAIR,EAAsBtpB,EAAM,EAAG,CACjCspB,IACA,SAGF,OAAOL,EAAK,iBAAkBK,GAEhC,KAAK,GACL,KAAK,GACL,KAAK,GAKH,IAHApE,EAAU,EACVqE,EAAyBD,EAEpBA,GAA4C,EAAGA,EAAsBtpB,EAAKspB,IAG7E,MAFAG,EAAMvrB,EAAM8rB,WAAWV,IAEb,IAAV,CAIA,GAAIG,GAAOD,EAAI,CACbtE,EAAU,EACV,MAGF,GAAW,IAAPuE,EAAW,CAEb,GAAIH,GAAuBtpB,EAAM,EAC/B,OAAOipB,EAAK,iBAAkBK,GAGhCA,KAIJ,GAAIpE,EACF,SAGF,OAAO+D,EAAK,cAAcjoC,OAAOqsB,OAAO4c,aAAaT,GAAK,KAAMD,GAElE,KAAK,GAEH,GAAII,GAAcL,GAAuBtpB,EAAM,EAC7C,SAKF,GAAW,KAFXypB,EAAMvrB,EAAM8rB,WAAWV,EAAsB,IAI3C,IAAKA,GAA4C,EAAGA,EAAsBtpB,OACxEypB,EAAMvrB,EAAM8rB,WAAWV,KAEZ,KAAc,IAAPG,GAAoB,IAAPA,GAH8CH,UAO1E,GAAW,IAAPG,EAAW,CAIpB,IAFAL,EAAmBG,EAAyBD,EAEvCA,GAA4C,EAAGA,EAAsBtpB,EAAM,IAGnE,MAFXypB,EAAMvrB,EAAM8rB,WAAWV,MAGrBD,EAA2BC,GAGlB,IAAPG,GAI6C,IAA7CvrB,EAAM8rB,WAAWV,EAAsB,IAXsCA,KAgBnF,GAAIA,GAAuBtpB,EAAM,EAC/B,OAAOipB,EAAK,uBAAwBM,GAGtCD,IAGF,SAEF,KAAK,GAEH,GAAIA,EAAsBtpB,EAAM,GAAkD,IAA7C9B,EAAM8rB,WAAWV,EAAsB,GAC1E,OAAOL,EAAK,iBAAkBK,GAGhC,SAIN,OAAc,IAAVI,EAEOT,EADLG,EAAmBF,GAAeG,EAA2BD,EACnD,8BAEA,sBAF+BF,GAIrB,IAAfS,EACFV,EAAK,sBAAuBE,IAGrCW,GAAU,GACHF,IAGLM,GAAiB,WACnB,IACAhsB,EAEAoH,EAIA6kB,EAEAC,EAEAR,EAEAS,EAEAC,EAVAC,EAAY,GAWRC,EAAc,GACdC,EAAiB,GACjBC,EAAe,EACfC,EAAc,GACdC,EAAc,GACdC,EAAgB,GAChBC,EAAiB,GACjBC,EAAyB,GACzBC,EAAa,GAEjB,SAASC,EAAeppC,GAWtB,IAVA,IAMIwT,EACA61B,EACAlD,EARAmD,EAAOX,EAAY7lC,EACnBymC,EAAO9lB,EACP+lB,EAAOb,EAAY7lC,EAAI2lC,EACvBgB,EAAWd,EAAY7lC,EAAI0lC,EAAQxoC,OAASwpC,EAC5CE,EAAMf,EAAY7lC,GAAK9C,EACvB2pC,EAAMttB,EAKHssB,EAAY7lC,EAAI2mC,EAAUd,EAAY7lC,IAAK,CAGhD,GAFA0Q,EAAIm2B,EAAIxB,WAAWQ,EAAY7lC,GAE3B6lC,EAAYiB,mBAAqBp2B,IAAM01B,EAAwB,CAGjE,GAAiB,OAFjBG,EAAWM,EAAIlzB,OAAOkyB,EAAY7lC,EAAI,IAEhB,CACpBqjC,EAAU,CACRl0B,MAAO02B,EAAY7lC,EACnB0d,eAAe,GAEjB,IAAIqpB,EAAcF,EAAIx1B,QAAQ,KAAMw0B,EAAY7lC,EAAI,GAEhD+mC,EAAc,IAChBA,EAAcJ,GAGhBd,EAAY7lC,EAAI+mC,EAChB1D,EAAQ2D,KAAOH,EAAIxsB,OAAOgpB,EAAQl0B,MAAO02B,EAAY7lC,EAAIqjC,EAAQl0B,OACjE02B,EAAYoB,aAAaptC,KAAKwpC,GAC9B,SACK,GAAiB,MAAbkD,EAAkB,CAC3B,IAAIW,EAAgBL,EAAIx1B,QAAQ,KAAMw0B,EAAY7lC,EAAI,GAEtD,GAAIknC,GAAiB,EAAG,CACtB7D,EAAU,CACRl0B,MAAO02B,EAAY7lC,EACnBgnC,KAAMH,EAAIxsB,OAAOwrB,EAAY7lC,EAAGknC,EAAgB,EAAIrB,EAAY7lC,GAChE0d,eAAe,GAEjBmoB,EAAY7lC,GAAKqjC,EAAQ2D,KAAK9pC,OAAS,EACvC2oC,EAAYoB,aAAaptC,KAAKwpC,GAC9B,UAIJ,MAGF,GAAI3yB,IAAMo1B,GAAkBp1B,IAAMs1B,GAAet1B,IAAMq1B,GAAgBr1B,IAAMu1B,EAC3E,MAOJ,GAHAP,EAAUA,EAAQlzB,MAAMtV,EAAS2oC,EAAY7lC,EAAI4mC,EAAMF,GACvDf,EAAaE,EAAY7lC,GAEpB0lC,EAAQxoC,OAAQ,CACnB,GAAIyjB,EAAIskB,EAAO/nC,OAAS,EAItB,OAHAwoC,EAAUT,IAAStkB,GACnB2lB,EAAe,IAER,EAGTT,EAAYnF,UAAW,EAGzB,OAAO8F,IAASX,EAAY7lC,GAAKymC,IAAS9lB,EA8U5C,OA3UAklB,EAAYsB,KAAO,WACjBxB,EAAaE,EAAY7lC,EACzB4lC,EAAU/rC,KAAK,CACb6rC,QAASA,EACT1lC,EAAG6lC,EAAY7lC,EACf2gB,EAAGA,KAIPklB,EAAYuB,QAAU,SAAUC,IAC1BxB,EAAY7lC,EAAIwlC,GAAYK,EAAY7lC,IAAMwlC,GAAY6B,IAAyB5B,KACrFD,EAAWK,EAAY7lC,EACvBylC,EAA+B4B,GAGjC,IAAIC,EAAQ1B,EAAU5oB,MACtB0oB,EAAU4B,EAAM5B,QAChBC,EAAaE,EAAY7lC,EAAIsnC,EAAMtnC,EACnC2gB,EAAI2mB,EAAM3mB,GAGZklB,EAAY0B,OAAS,WACnB3B,EAAU5oB,OAGZ6oB,EAAY2B,aAAe,SAAUC,GACnC,IAAIC,EAAM7B,EAAY7lC,GAAKynC,GAAU,GACjCE,EAAOpuB,EAAM8rB,WAAWqC,GAC5B,OAAOC,IAAS7B,GAAkB6B,IAAS1B,GAAe0B,IAAS5B,GAAgB4B,IAAS3B,GAI9FH,EAAY+B,IAAM,SAAUC,GACtBhC,EAAY7lC,EAAI2lC,IAClBD,EAAUA,EAAQlzB,MAAMqzB,EAAY7lC,EAAI2lC,GACxCA,EAAaE,EAAY7lC,GAG3B,IAAI4M,EAAIi7B,EAAI/oC,KAAK4mC,GAEjB,OAAK94B,GAIL05B,EAAe15B,EAAE,GAAG1P,QAEH,kBAAN0P,EACFA,EAGW,IAAbA,EAAE1P,OAAe0P,EAAE,GAAKA,GATtB,MAYXi5B,EAAYiC,MAAQ,SAAUD,GAC5B,OAAItuB,EAAM5F,OAAOkyB,EAAY7lC,KAAO6nC,EAC3B,MAGTvB,EAAe,GACRuB,IAGThC,EAAYkC,KAAO,SAAUF,GAG3B,IAFA,IAAIG,EAAYH,EAAI3qC,OAEX8C,EAAI,EAAGA,EAAIgoC,EAAWhoC,IAC7B,GAAIuZ,EAAM5F,OAAOkyB,EAAY7lC,EAAIA,KAAO6nC,EAAIl0B,OAAO3T,GACjD,OAAO,KAKX,OADAsmC,EAAe0B,GACRH,GAGThC,EAAYoC,QAAU,SAAUxuB,GAC9B,IAAIiuB,EAAMjuB,GAAOosB,EAAY7lC,EACzBkoC,EAAY3uB,EAAM5F,OAAO+zB,GAE7B,GAAkB,MAAdQ,GAAoC,MAAdA,EAA1B,CAOA,IAHA,IAAIhrC,EAASqc,EAAMrc,OACfirC,EAAkBT,EAEb1nC,EAAI,EAAGA,EAAImoC,EAAkBjrC,EAAQ8C,IAG5C,OAFeuZ,EAAM5F,OAAO3T,EAAImoC,IAG9B,IAAK,KACHnoC,IACA,SAEF,IAAK,KACL,IAAK,KACH,MAEF,KAAKkoC,EACH,IAAI/tB,EAAMZ,EAAMc,OAAO8tB,EAAiBnoC,EAAI,GAE5C,OAAKyZ,GAAe,IAARA,EAKL,CAACyuB,EAAW/tB,IAJjBmsB,EAAetmC,EAAI,GACZma,GASf,OAAO,OAQT0rB,EAAYuC,YAAc,SAAUP,GAClC,IAWIQ,EAXArc,EAAQ,GACRsc,EAAY,KACZC,GAAY,EACZC,EAAa,EACbC,EAAa,GACbC,EAAc,GACdxrC,EAASqc,EAAMrc,OACfyrC,EAAW9C,EAAY7lC,EACvB4oC,EAAU/C,EAAY7lC,EACtBA,EAAI6lC,EAAY7lC,EAChB6oC,GAAO,EAITR,EADiB,kBAARR,EACE,SAAkBiB,GAC3B,OAAOA,IAASjB,GAGP,SAAkBiB,GAC3B,OAAOjB,EAAIzpC,KAAK0qC,IAIpB,EAAG,CACD,IAAIvC,EAAWhtB,EAAM5F,OAAO3T,GAE5B,GAAmB,IAAfwoC,GAAoBH,EAAS9B,IAC/B+B,EAAY/uB,EAAMc,OAAOuuB,EAAS5oC,EAAI4oC,IAGpCF,EAAY7uC,KAAKyuC,GAEjBI,EAAY7uC,KAAK,KAGnByuC,EAAYI,EACZpC,EAAetmC,EAAI2oC,GACnBE,GAAO,MACF,CACL,GAAIN,EAAW,CACI,MAAbhC,GAA4C,MAAxBhtB,EAAM5F,OAAO3T,EAAI,KACvCA,IACAwoC,IACAD,GAAY,GAGdvoC,IACA,SAGF,OAAQumC,GACN,IAAK,KACHvmC,IACAumC,EAAWhtB,EAAM5F,OAAO3T,GACxB0oC,EAAY7uC,KAAK0f,EAAMc,OAAOuuB,EAAS5oC,EAAI4oC,EAAU,IACrDA,EAAU5oC,EAAI,EACd,MAEF,IAAK,IACyB,MAAxBuZ,EAAM5F,OAAO3T,EAAI,KACnBA,IACAuoC,GAAY,EACZC,KAGF,MAEF,IAAK,IACL,IAAK,KACHxc,EAAQ6Z,EAAYoC,QAAQjoC,KAG1B0oC,EAAY7uC,KAAK0f,EAAMc,OAAOuuB,EAAS5oC,EAAI4oC,GAAU5c,GAErD4c,GADA5oC,GAAKgsB,EAAM,GAAG9uB,OAAS,GACT,IAEdopC,EAAetmC,EAAI2oC,GACnBL,EAAY/B,EACZsC,GAAO,GAGT,MAEF,IAAK,IACHJ,EAAW5uC,KAAK,KAChB2uC,IACA,MAEF,IAAK,IACHC,EAAW5uC,KAAK,KAChB2uC,IACA,MAEF,IAAK,IACHC,EAAW5uC,KAAK,KAChB2uC,IACA,MAEF,IAAK,IACL,IAAK,IACL,IAAK,IACH,IAAIO,EAAWN,EAAWzrB,MAEtBupB,IAAawC,EACfP,KAGAlC,EAAetmC,EAAI2oC,GACnBL,EAAYS,EACZF,GAAO,KAKb7oC,EAEQ9C,IACN2rC,GAAO,UAGJA,GAET,OAAOP,GAAwB,MAGjCzC,EAAYiB,mBAAoB,EAChCjB,EAAYoB,aAAe,GAC3BpB,EAAYnF,UAAW,EAGvBmF,EAAYmD,KAAO,SAAUnB,GAC3B,GAAmB,kBAARA,EAAkB,CAE3B,IAAK,IAAI7nC,EAAI,EAAGA,EAAI6nC,EAAI3qC,OAAQ8C,IAC9B,GAAIuZ,EAAM5F,OAAOkyB,EAAY7lC,EAAIA,KAAO6nC,EAAIl0B,OAAO3T,GACjD,OAAO,EAIX,OAAO,EAEP,OAAO6nC,EAAIzpC,KAAKsnC,IAMpBG,EAAYoD,SAAW,SAAUpB,GAC/B,OAAOtuB,EAAM5F,OAAOkyB,EAAY7lC,KAAO6nC,GAGzChC,EAAYqD,YAAc,WACxB,OAAO3vB,EAAM5F,OAAOkyB,EAAY7lC,IAGlC6lC,EAAYsD,SAAW,WACrB,OAAO5vB,EAAM5F,OAAOkyB,EAAY7lC,EAAI,IAGtC6lC,EAAYuD,SAAW,WACrB,OAAO7vB,GAGTssB,EAAYwD,eAAiB,WAC3B,IAAI34B,EAAI6I,EAAM8rB,WAAWQ,EAAY7lC,GAErC,OAAO0Q,EAAI21B,GAAc31B,EAAIw1B,GAAiBx1B,IAAM01B,GAA0B11B,IAAMy1B,GAGtFN,EAAYyD,MAAQ,SAAUnvB,EAAKovB,EAAYC,GAC7CjwB,EAAQY,EACR0rB,EAAY7lC,EAAI2gB,EAAIglB,EAAaH,EAAW,EAY1CP,EADEsE,EACOlF,GAAQlqB,EAAKqvB,GAEb,CAACrvB,GAGZurB,EAAUT,EAAO,GACjBqB,EAAe,IAGjBT,EAAY4D,IAAM,WAChB,IAAIpwB,EACAuhB,EAAaiL,EAAY7lC,GAAKuZ,EAAMrc,OAOxC,OALI2oC,EAAY7lC,EAAIwlC,IAClBnsB,EAAUosB,EACVI,EAAY7lC,EAAIwlC,GAGX,CACL5K,WAAYA,EACZ4K,SAAUK,EAAY7lC,EACtBylC,6BAA8BpsB,EAC9BqwB,mBAAoB7D,EAAY7lC,GAAKuZ,EAAMrc,OAAS,EACpDysC,aAAcpwB,EAAMssB,EAAY7lC,KAI7B6lC,GAmCL+D,GAAS,SAASA,EAAO96B,EAASoM,EAAS5M,GAC7C,IAAIu7B,EACAhE,EAAcN,KAElB,SAAStrB,EAAM0Z,EAAK1jB,GAClB,MAAM,IAAIgJ,EAAU,CAClB9J,MAAO02B,EAAY7lC,EACnBoZ,SAAU9K,EAAS8K,SACnBnJ,KAAMA,GAAQ,SACdoJ,QAASsa,GACRzY,GAGL,SAAS4uB,EAAO1Y,EAAKuC,GAEnB,IAAI7a,EAASsY,aAAe/uB,SAAW+uB,EAAItvB,KAAK+nC,GAAWhE,EAAY+B,IAAIxW,GAE3E,GAAItY,EACF,OAAOA,EAGTmB,EAAM0Z,IAAuB,kBAARvC,EAAmB,aAAa/0B,OAAO+0B,EAAK,WAAW/0B,OAAOwpC,EAAYqD,cAAe,KAAO,qBAIvH,SAASa,EAAW3Y,EAAKuC,GACvB,GAAIkS,EAAYiC,MAAM1W,GACpB,OAAOA,EAGTnX,EAAM0Z,GAAO,aAAat3B,OAAO+0B,EAAK,WAAW/0B,OAAOwpC,EAAYqD,cAAe,MAGrF,SAASc,EAAa76B,GACpB,IAAIiK,EAAW9K,EAAS8K,SACxB,MAAO,CACLkE,WAAY3F,EAAYxI,EAAO02B,EAAYuD,YAAYtxB,KAAO,EAC9DyF,SAAUnE,GAad,SAAS6B,EAAUd,EAAK8vB,EAAWC,EAAc57B,EAAUuZ,GACzD,IAAI/O,EACAqxB,EAAc,GACdC,EAASvE,EAEb,IACEuE,EAAOd,MAAMnvB,GAAK,GAAO,SAAcwZ,EAAKxkB,GAC1C0Y,EAAS,CACPxO,QAASsa,EACTxkB,MAAOA,EAAQ+6B,OAInB,IAAK,IAAW5oC,EAAGtB,EAAVoS,EAAI,EAAS9Q,EAAI2oC,EAAU73B,GAAIA,IAItC,GAHApS,EAAIoqC,EAAOpqC,EACX8Y,EAAS+wB,EAAQvoC,KAEL,CACV,IACEwX,EAAOlK,OAAS5O,EAAIkqC,EACpBpxB,EAAOjK,UAAYP,EACnB,MAAOzQ,IAETssC,EAAYtwC,KAAKif,QAEjBqxB,EAAYtwC,KAAK,MAIPuwC,EAAOX,MAET7O,WACV/S,EAAS,KAAMsiB,GAEftiB,GAAS,EAAM,MAEjB,MAAOhqB,GACP,MAAM,IAAIob,EAAU,CAClB9J,MAAOtR,EAAEsR,MAAQ+6B,EACjB7wB,QAASxb,EAAEwb,SACV6B,EAAS5M,EAAS8K,WAOzB,MAAO,CACLysB,YAAaA,EACb3qB,QAASA,EACT5M,SAAUA,EACV2M,UAAWA,EAOXpf,MAAO,SAAese,EAAK0N,EAAUwiB,GACnC,IAAIppB,EAEAjmB,EACAC,EACAqvC,EAHArwB,EAAQ,KAIRswB,EAAU,GAId,GAHAvvC,EAAaqvC,GAAkBA,EAAervC,WAAa,GAAGqB,OAAOutC,EAAOY,cAAcH,EAAervC,YAAa,MAAQ,GAC9HC,EAAaovC,GAAkBA,EAAepvC,WAAa,KAAKoB,OAAOutC,EAAOY,cAAcH,EAAepvC,aAAe,GAEtH6T,EAAQwc,cAGV,IAFA,IAAImf,EAAgB37B,EAAQwc,cAAcof,mBAEjC1qC,EAAI,EAAGA,EAAIyqC,EAAcvtC,OAAQ8C,IACxCma,EAAMswB,EAAczqC,GAAG2qC,QAAQxwB,EAAK,CAClCrL,QAASA,EACToM,QAASA,EACT5M,SAAUA,KAKZtT,GAAcqvC,GAAkBA,EAAeO,UACjDL,GAAWF,GAAkBA,EAAeO,OAASP,EAAeO,OAAS,IAAM5vC,GACnFsvC,EAAUpvB,EAAQ2vB,sBACVv8B,EAAS8K,UAAYkxB,EAAQh8B,EAAS8K,WAAa,EAC3DkxB,EAAQh8B,EAAS8K,WAAamxB,EAAQrtC,QAKxCid,EAAMowB,GAFNpwB,EAAMA,EAAI9e,QAAQ,SAAU,OAERA,QAAQ,UAAW,IAAMJ,EAC7CigB,EAAQ1B,SAASlL,EAAS8K,UAAYe,EAKtC,IACE0rB,EAAYyD,MAAMnvB,EAAKrL,EAAQy6B,YAAY,SAAc5V,EAAKxkB,GAC5D,MAAM,IAAI8J,EAAU,CAClB9J,MAAOA,EACPc,KAAM,QACNoJ,QAASsa,EACTva,SAAU9K,EAAS8K,UAClB8B,MAELuY,GAAK3lB,KAAKtO,UAAU3D,MAAQkS,KAC5BkT,EAAO,IAAIwS,GAAKxT,QAAQ,KAAMlS,KAAK87B,QAAQiB,WAC3CrX,GAAK3lB,KAAKtO,UAAU2O,SAAW8S,EAC/BA,EAAKA,MAAO,EACZA,EAAKC,WAAY,EACjBD,EAAKrB,iBAAmBA,GAAiBb,UACzC,MAAOlhB,GACP,OAAOgqB,EAAS,IAAI5O,EAAUpb,EAAGqd,EAAS5M,EAAS8K,WAWrD,IAAI2xB,EAAUlF,EAAY4D,MAE1B,IAAKsB,EAAQnQ,WAAY,CACvB,IAAIvhB,EAAU0xB,EAAQtF,6BAEjBpsB,IACHA,EAAU,qBAEmB,MAAzB0xB,EAAQpB,aACVtwB,GAAW,iCACuB,MAAzB0xB,EAAQpB,aACjBtwB,GAAW,iCACF0xB,EAAQrB,qBACjBrwB,GAAW,iCAIfY,EAAQ,IAAIhB,EAAU,CACpBhJ,KAAM,QACNoJ,QAASA,EACTlK,MAAO47B,EAAQvF,SACfpsB,SAAU9K,EAAS8K,UAClB8B,GAGL,IAAIif,EAAS,SAAgBt8B,GAG3B,OAFAA,EAAIoc,GAASpc,GAAKqd,EAAQjB,QAGlBpc,aAAaob,IACjBpb,EAAI,IAAIob,EAAUpb,EAAGqd,EAAS5M,EAAS8K,WAGlCyO,EAAShqB,IAETgqB,EAAS,KAAM5G,IAI1B,IAA+B,IAA3BnS,EAAQk8B,eAGV,OAAO7Q,IAFP,IAAI3O,GAASyO,cAAc/e,EAASif,GAAQQ,IAAI1Z,IAkCpD4oB,QAASA,EAAU,CAgBjBiB,QAAS,WAKP,IAJA,IAEIp8B,EAFAsjB,EAAQjkB,KAAKikB,MACb/Q,EAAO,KAGE,CACX,KACEvS,EAAOX,KAAKs1B,WAMZpiB,EAAKpnB,KAAK6U,GAIZ,GAAIm3B,EAAYnF,SACd,MAGF,GAAImF,EAAYmD,KAAK,KACnB,MAKF,GAFAt6B,EAAOX,KAAKk9B,aAGVhqB,EAAOA,EAAK5kB,OAAOqS,QAMrB,GAFAA,EAAOsjB,EAAMkZ,cAAgBn9B,KAAKo9B,eAAiBp9B,KAAKgT,WAAaiR,EAAMlwB,MAAK,GAAO,IAAUiM,KAAKq9B,gBAAkBr9B,KAAKs9B,SAASvpC,QAAUiM,KAAKu9B,SAGnJrqB,EAAKpnB,KAAK6U,OACL,CAGL,IAFA,IAAI68B,GAAiB,EAEd1F,EAAYiC,MAAM,MACvByD,GAAiB,EAGnB,IAAKA,EACH,OAKN,OAAOtqB,GAIToiB,QAAS,WACP,GAAIwC,EAAYoB,aAAa/pC,OAAQ,CACnC,IAAImmC,EAAUwC,EAAYoB,aAAa1rB,QACvC,OAAO,IAAIkY,GAAKhW,QAAQ4lB,EAAQ2D,KAAM3D,EAAQ3lB,cAAe2lB,EAAQl0B,MAAOb,KAMhF+8B,SAAU,CACRG,YAAa,WACX,OAAO3B,EAAQ7X,MAAMlwB,MAAK,GAAM,IAOlC2pC,OAAQ,SAAgBC,GACtB,IAAIvxB,EACAhL,EAAQ02B,EAAY7lC,EACpB2rC,GAAY,EAGhB,GAFA9F,EAAYsB,OAERtB,EAAYiC,MAAM,KACpB6D,GAAY,OACP,GAAID,EAET,YADA7F,EAAYuB,UAMd,GAFAjtB,EAAM0rB,EAAYoC,UAQlB,OADApC,EAAY0B,SACL,IAAI9T,GAAK5H,OAAO1R,EAAIxG,OAAO,GAAIwG,EAAIE,OAAO,EAAGF,EAAIjd,OAAS,GAAIyuC,EAAWx8B,EAAOb,GALrFu3B,EAAYuB,WAYhB90B,QAAS,WACP,IAAImT,EAAIogB,EAAYiC,MAAM,MAAQjC,EAAY+B,IAAI,2DAElD,GAAIniB,EACF,OAAOgO,GAAKtjB,MAAMkC,YAAYoT,IAAM,IAAIgO,GAAK9X,QAAQ8J,IAUzD3jB,KAAM,WACJ,IAAIua,EACApa,EACAyc,EACAvP,EAAQ02B,EAAY7lC,EAExB,IAAI6lC,EAAYmD,KAAK,WAOrB,GAHAnD,EAAYsB,OACZ9qB,EAAOwpB,EAAY+B,IAAI,gCAEvB,CAQA,GAHAvrB,EAAOA,EAAK,IACZqC,EAAO3Q,KAAK69B,eAAevvB,MAGzBpa,EAAOyc,EAAK7iB,UAEA6iB,EAAKmtB,KAEf,OADAhG,EAAY0B,SACLtlC,EAMX,GAFAA,EAAO8L,KAAKxL,UAAUN,GAEjB4jC,EAAYiC,MAAM,KAMvB,OADAjC,EAAY0B,SACL,IAAI9T,GAAKlJ,KAAKlO,EAAMpa,EAAMkN,EAAOb,GALtCu3B,EAAYuB,QAAQ,sDAnBpBvB,EAAY0B,UAkChBqE,eAAgB,SAAwBvvB,GAItC,MAAO,CACLzL,MAAOuhB,EAAE0X,EAAQiC,SAAS,GAC1BC,QAAS5Z,EAAE1X,GACXuxB,GAAM7Z,EAAE1X,IACR4B,EAAK9J,eAEP,SAAS4f,EAAEt2B,EAAOgwC,GAChB,MAAO,CACLhwC,MAAOA,EAEPgwC,KAAMA,GAMV,SAASpxB,IACP,MAAO,CAACqvB,EAAOD,EAAQpvB,UAAW,yBAGtClY,UAAW,SAAoB0pC,GAC7B,IAEIC,EACAnrC,EAHAorC,EAAYF,GAAY,GACxBG,EAAgB,GAKpB,IAFAvG,EAAYsB,SAEC,CACX,GAAI8E,EACFA,GAAW,MACN,CAGL,KAFAlrC,EAAQ8oC,EAAQ1Z,mBAAqBpiB,KAAKs+B,cAAgBxC,EAAQlb,cAGhE,MAGE5tB,EAAMA,OAA+B,GAAtBA,EAAMA,MAAM7D,SAC7B6D,EAAQA,EAAMA,MAAM,IAGtBorC,EAAUtyC,KAAKkH,GAGb8kC,EAAYiC,MAAM,OAIlBjC,EAAYiC,MAAM,MAAQoE,KAC5BA,GAAuB,EACvBnrC,EAAQorC,EAAUjvC,OAAS,EAAIivC,EAAU,GAAK,IAAI1Y,GAAK/X,MAAMywB,GAC7DC,EAAcvyC,KAAKkH,GACnBorC,EAAY,IAKhB,OADAtG,EAAY0B,SACL2E,EAAuBE,EAAgBD,GAEhDG,QAAS,WACP,OAAOv+B,KAAKw+B,aAAex+B,KAAKtT,SAAWsT,KAAK09B,UAAY19B,KAAKy+B,qBAOnEH,WAAY,WACV,IAAI9rC,EACAQ,EAIJ,GAHA8kC,EAAYsB,OACZ5mC,EAAMslC,EAAY+B,IAAI,iBAOtB,GAAK/B,EAAYiC,MAAM,KAAvB,CAOA,GAFA/mC,EAAQ8oC,EAAQ4C,SAId,OADA5G,EAAY0B,SACL,IAAI9T,GAAKxE,WAAW1uB,EAAKQ,GAEhC8kC,EAAYuB,eAVZvB,EAAYuB,eALZvB,EAAYuB,WAyBhB/R,IAAK,WACH,IAAIt0B,EACAoO,EAAQ02B,EAAY7lC,EAGxB,GAFA6lC,EAAYiB,mBAAoB,EAE3BjB,EAAYkC,KAAK,QAQtB,OAHAhnC,EAAQgN,KAAK09B,UAAY19B,KAAKyO,YAAczO,KAAKqd,YAAcya,EAAY+B,IAAI,mCAAqC,GACpH/B,EAAYiB,mBAAoB,EAChCiD,EAAW,KACJ,IAAItW,GAAK/G,IAAmB,MAAf3rB,EAAMA,OAAiBA,aAAiB0yB,GAAK1I,UAAYhqB,aAAiB0yB,GAAKtI,SAAWpqB,EAAQ,IAAI0yB,GAAK3X,UAAU/a,EAAOoO,GAAQA,EAAOb,GAP7Ju3B,EAAYiB,mBAAoB,GAiBpCtqB,SAAU,WACR,IAAIkwB,EACArwB,EACAlN,EAAQ02B,EAAY7lC,EAGxB,GAFA6lC,EAAYsB,OAEsB,MAA9BtB,EAAYqD,gBAA0B7sB,EAAOwpB,EAAY+B,IAAI,eAAgB,CAG/E,GAAW,OAFX8E,EAAK7G,EAAYqD,gBAEQ,MAAPwD,IAAe7G,EAAYsD,WAAW34B,MAAM,OAAQ,CAEpE,IAAIsI,EAAS+wB,EAAQuB,aAAa/uB,GAElC,GAAIvD,EAEF,OADA+sB,EAAY0B,SACLzuB,EAKX,OADA+sB,EAAY0B,SACL,IAAI9T,GAAK1I,SAAS1O,EAAMlN,EAAOb,GAGxCu3B,EAAYuB,WAGduF,cAAe,WACb,IAAIC,EACAz9B,EAAQ02B,EAAY7lC,EAExB,GAAkC,MAA9B6lC,EAAYqD,gBAA0B0D,EAAQ/G,EAAY+B,IAAI,mBAChE,OAAO,IAAInU,GAAK1I,SAAS,IAAI1uB,OAAOuwC,EAAM,IAAKz9B,EAAOb,IAQ1D8c,SAAU,WACR,IAAI/O,EACAlN,EAAQ02B,EAAY7lC,EAExB,GAAkC,MAA9B6lC,EAAYqD,gBAA0B7sB,EAAOwpB,EAAY+B,IAAI,cAC/D,OAAO,IAAInU,GAAKtI,SAAS9O,EAAMlN,EAAOb,IAI1Cu+B,cAAe,WACb,IAAID,EACAz9B,EAAQ02B,EAAY7lC,EAExB,GAAkC,MAA9B6lC,EAAYqD,gBAA0B0D,EAAQ/G,EAAY+B,IAAI,oBAChE,OAAO,IAAInU,GAAKtI,SAAS,IAAI9uB,OAAOuwC,EAAM,IAAKz9B,EAAOb,IAU1D7T,MAAO,WACL,IAAI4V,EAGJ,GAFAw1B,EAAYsB,OAEsB,MAA9BtB,EAAYqD,gBAA0B74B,EAAMw1B,EAAY+B,IAAI,oEACzDv3B,EAAI,GAEP,OADAw1B,EAAY0B,SACL,IAAI9T,GAAKtjB,MAAME,EAAI,QAAInS,EAAWmS,EAAI,IAIjDw1B,EAAYuB,WAEd0F,aAAc,WACZjH,EAAYsB,OACZ,IAAIL,EAAoBjB,EAAYiB,kBACpCjB,EAAYiB,mBAAoB,EAChC,IAAIrhB,EAAIogB,EAAY+B,IAAI,6BAGxB,GAFA/B,EAAYiB,kBAAoBA,EAE3BrhB,EAAL,CAKAogB,EAAYuB,UACZ,IAAI3sC,EAAQg5B,GAAKtjB,MAAMkC,YAAYoT,GAEnC,OAAIhrB,GACForC,EAAYkC,KAAKtiB,GACVhrB,QAFT,EAPEorC,EAAY0B,UAiBhBgF,UAAW,WACT,IAAI1G,EAAYwD,iBAAhB,CAIA,IAAItoC,EAAQ8kC,EAAY+B,IAAI,kCAE5B,OAAI7mC,EACK,IAAI0yB,GAAKrL,UAAUrnB,EAAM,GAAIA,EAAM,SAD5C,IASFyrC,kBAAmB,WACjB,IAAIO,EAGJ,GAFAA,EAAKlH,EAAY+B,IAAI,uCAGnB,OAAO,IAAInU,GAAKnE,kBAAkByd,EAAG,KAQzCC,WAAY,WACV,IAAIC,EACA99B,EAAQ02B,EAAY7lC,EACxB6lC,EAAYsB,OACZ,IAAI+F,EAASrH,EAAYiC,MAAM,KAG/B,GAFcjC,EAAYiC,MAAM,KAEhC,CAOA,GAFAmF,EAAKpH,EAAY+B,IAAI,WAInB,OADA/B,EAAY0B,SACL,IAAI9T,GAAKjF,WAAWye,EAAG5yB,OAAO,EAAG4yB,EAAG/vC,OAAS,GAAIgf,QAAQgxB,GAAS/9B,EAAOb,GAGlFu3B,EAAYuB,QAAQ,sCAXlBvB,EAAYuB,YAmBlB5qB,SAAU,WACR,IAAIH,EAEJ,GAAkC,MAA9BwpB,EAAYqD,gBAA0B7sB,EAAOwpB,EAAY+B,IAAI,mBAC/D,OAAOvrB,EAAK,IAWhB+uB,aAAc,SAAsB+B,GAClC,IAAI5c,EACAjU,EACAtc,EAAI6lC,EAAY7lC,EAChBotC,IAAYD,EACZ9wB,EAAO8wB,EAGX,GAFAtH,EAAYsB,OAER9qB,GAAsC,MAA9BwpB,EAAYqD,gBAA0B7sB,EAAOwpB,EAAY+B,IAAI,yBAA0B,CAGjG,KAFArX,EAAUxiB,KAAKikB,MAAMqb,iBAEJD,GAAsC,OAA3BvH,EAAYkC,KAAK,OAA8B,OAAZ1rB,EAAK,IAElE,YADAwpB,EAAYuB,QAAQ,2CAIjBgG,IACH/wB,EAAOA,EAAK,IAGVkU,GAAWsZ,EAAQvtB,cACrBA,GAAY,GAGd,IAAIxa,EAAO,IAAI2xB,GAAKvD,aAAa7T,EAAMrc,EAAGsO,GAE1C,OAAK8+B,GAAWvD,EAAQJ,OACtB5D,EAAY0B,SACLzlC,IAEP+jC,EAAY0B,SACL,IAAI9T,GAAKpD,eAAevuB,EAAMyuB,EAASjU,EAAWtc,EAAGsO,IAIhEu3B,EAAYuB,WAKd5rB,OAAQ,SAAgB8xB,GACtB,IAAI/yB,EACA1c,EAEA4xB,EACAjV,EACAgB,EAHArM,EAAQ02B,EAAY7lC,EAKxB,GAAK6lC,EAAYkC,KAAKuF,EAAS,YAAc,YAA7C,CAIA,EAAG,CAID,IAHA7d,EAAS,KACTlV,EAAW,OAEFkV,EAASoW,EAAY+B,IAAI,0BAChC/pC,EAAIkQ,KAAK0W,YAMLlK,EACFA,EAAS1gB,KAAKgE,GAEd0c,EAAW,CAAC1c,GAIhB4xB,EAASA,GAAUA,EAAO,GAErBlV,GACHN,EAAM,0CAGRuB,EAAS,IAAIiY,GAAKjE,OAAO,IAAIiE,GAAKnZ,SAASC,GAAWkV,EAAQtgB,EAAOb,GAEjEkM,EACFA,EAAW3gB,KAAK2hB,GAEhBhB,EAAa,CAACgB,SAETqqB,EAAYiC,MAAM,MAQ3B,OANAgC,EAAO,OAEHwD,GACFxD,EAAO,MAGFtvB,IAKTywB,WAAY,WACV,OAAOl9B,KAAKyN,QAAO,IAKrBwW,MAAO,CAiBLlwB,KAAM,SAAcsrC,EAASG,GAC3B,IAEIhd,EAEAhW,EACAtY,EACAurC,EANApgC,EAAIy4B,EAAYqD,cAChB5sB,GAAY,EAEZnN,EAAQ02B,EAAY7lC,EAKxB,GAAU,MAANoN,GAAmB,MAANA,EAAjB,CAQA,GAJAy4B,EAAYsB,OAEZ5sB,EAAWxM,KAAKwM,WAEF,CAWZ,GAVIsrB,EAAYiC,MAAM,OACpB7lC,EAAO8L,KAAK9L,MAAK,GAAMA,KACvB8nC,EAAW,KACXyD,GAAY,IAGI,IAAdD,IACFhd,EAAUxiB,KAAKs/B,gBAGC,IAAdE,IAAuBhd,EAEzB,YADAsV,EAAYuB,UAId,GAAIgG,IAAY7c,IAAYid,EAG1B,YADA3H,EAAYuB,UAQd,IAJKgG,GAAWvD,EAAQvtB,cACtBA,GAAY,GAGV8wB,GAAWvD,EAAQJ,MAAO,CAC5B5D,EAAY0B,SACZ,IAAIvV,EAAQ,IAAIyB,GAAKzB,MAAMzH,KAAKhQ,EAAUtY,EAAMkN,EAAOb,GAAWiiB,GAAWjU,GAE7E,OAAIiU,EACK,IAAIkD,GAAKpD,eAAe2B,EAAOzB,EAASjU,GAExC0V,GAKb6T,EAAYuB,YAOd7sB,SAAU,WAQR,IAPA,IAAIA,EACA1c,EACA6S,EACA+8B,EACAC,EACAr2B,EAAK,wDAGPq2B,EAAY7H,EAAY7lC,EACxBnC,EAAIgoC,EAAY+B,IAAIvwB,IAMpBo2B,EAAO,IAAIha,GAAKtgB,QAAQzC,EAAG7S,GAAG,EAAO6vC,EAAWp/B,GAE5CiM,EACFA,EAAS1gB,KAAK4zC,GAEdlzB,EAAW,CAACkzB,GAGd/8B,EAAIm1B,EAAYiC,MAAM,KAGxB,OAAOvtB,GAETtY,KAAM,SAAc0rC,GAClB,IAQIzB,EACA0B,EACAvxB,EACAwxB,EACA9sC,EACAqwB,EACA8B,EAdAmY,EAAWxB,EAAQwB,SACnBrV,EAAW,CACb/zB,KAAM,KACN4uB,UAAU,GAERid,EAAc,GACd1B,EAAgB,GAChBD,EAAY,GAQZ4B,GAAS,EAGb,IAFAlI,EAAYsB,SAEC,CACX,GAAIwG,EACFvc,EAAMyY,EAAQ1Z,mBAAqB0Z,EAAQlb,iBACtC,CAGL,GAFAkX,EAAYoB,aAAa/pC,OAAS,EAE9B2oC,EAAYkC,KAAK,OAAQ,CAC3B/R,EAASnF,UAAW,EAEhBgV,EAAYiC,MAAM,OAASoE,IAC7BA,GAAuB,IAGxBA,EAAuBE,EAAgBD,GAAWtyC,KAAK,CACtDg3B,UAAU,IAEZ,MAGFO,EAAMia,EAAS7uB,YAAc6uB,EAASjgB,YAAcigB,EAASiB,WAAajB,EAAS/4B,WAAavE,KAAKjM,MAAK,GAG5G,IAAKsvB,IAAQ2c,EACX,MAGFF,EAAW,KAEPzc,EAAI4c,mBACN5c,EAAI4c,oBAGNjtC,EAAQqwB,EACR,IAAIzE,EAAM,KAWV,GATIghB,EAEEvc,EAAIrwB,OAA6B,GAApBqwB,EAAIrwB,MAAM7D,SACzByvB,EAAMyE,EAAIrwB,MAAM,IAGlB4rB,EAAMyE,EAGJzE,IAAQA,aAAe8G,GAAK1I,UAAY4B,aAAe8G,GAAKtI,UAC9D,GAAI0a,EAAYiC,MAAM,KAAM,CAW1B,GAVIgG,EAAY5wC,OAAS,IACnBgvC,GACFjyB,EAAM,yCAGR2zB,GAA0B,KAG5B7sC,EAAQ8oC,EAAQ1Z,mBAAqB0Z,EAAQlb,cAEjC,CACV,IAAIgf,EAKF,OAFA9H,EAAYuB,UACZpR,EAAS/zB,KAAO,GACT+zB,EAJP/b,EAAM,iDAQV4zB,EAAWxxB,EAAOsQ,EAAItQ,UACjB,GAAIwpB,EAAYkC,KAAK,OAAQ,CAClC,IAAK4F,EAAQ,CACX3X,EAASnF,UAAW,EAEhBgV,EAAYiC,MAAM,OAASoE,IAC7BA,GAAuB,IAGxBA,EAAuBE,EAAgBD,GAAWtyC,KAAK,CACtDwiB,KAAM+U,EAAI/U,KACVwU,UAAU,IAEZ,MAEAqC,GAAS,OAEDya,IACVtxB,EAAOwxB,EAAWlhB,EAAItQ,KACtBtb,EAAQ,MAIRA,GACF+sC,EAAYj0C,KAAKkH,GAGnBorC,EAAUtyC,KAAK,CACbwiB,KAAMwxB,EACN9sC,MAAOA,EACPmyB,OAAQA,IAGN2S,EAAYiC,MAAM,KACpBiG,GAAS,IAIXA,EAAoC,MAA3BlI,EAAYiC,MAAM,OAEboE,KACR0B,GACF3zB,EAAM,yCAGRiyB,GAAuB,EAEnB4B,EAAY5wC,OAAS,IACvB6D,EAAQ,IAAI0yB,GAAK/X,MAAMoyB,IAGzB1B,EAAcvyC,KAAK,CACjBwiB,KAAMA,EACNtb,MAAOA,EACPmyB,OAAQA,IAEV7W,EAAO,KACPyxB,EAAc,GACdF,GAA0B,GAM9B,OAFA/H,EAAY0B,SACZvR,EAAS/zB,KAAOiqC,EAAuBE,EAAgBD,EAChDnW,GAqBTkV,WAAY,WACV,IAAI7uB,EAEA7L,EACAuQ,EACAktB,EAHArd,EAAS,GAITC,GAAW,EAEf,KAAkC,MAA9BgV,EAAYqD,eAAuD,MAA9BrD,EAAYqD,eAAyBrD,EAAYmD,KAAK,aAO/F,GAHAnD,EAAYsB,OACZ32B,EAAQq1B,EAAY+B,IAAI,gEAEb,CACTvrB,EAAO7L,EAAM,GACb,IAAI09B,EAAUngC,KAAK9L,MAAK,GAQxB,GAPA2uB,EAASsd,EAAQjsC,KACjB4uB,EAAWqd,EAAQrd,UAMdgV,EAAYiC,MAAM,KAErB,YADAjC,EAAYuB,QAAQ,uBAatB,GATAvB,EAAYoB,aAAa/pC,OAAS,EAE9B2oC,EAAYkC,KAAK,UAEnBkG,EAAOnE,EAAOD,EAAQsE,WAAY,uBAGpCptB,EAAU8oB,EAAQuE,QAIhB,OADAvI,EAAY0B,SACL,IAAI9T,GAAKzB,MAAMtB,WAAWrU,EAAMuU,EAAQ7P,EAASktB,EAAMpd,GAE9DgV,EAAYuB,eAGdvB,EAAY0B,UAGhB8F,YAAa,WACX,IAAIxsB,EACA0P,EAAU,GAEd,GAAkC,MAA9BsV,EAAYqD,cAAhB,CAIA,OAAa,CAIX,GAHArD,EAAYsB,SACZtmB,EAAO9S,KAAKsgC,gBAEU,KAATxtB,EAAa,CACxBglB,EAAYuB,UACZ,MAGF7W,EAAQ12B,KAAKgnB,GACbglB,EAAY0B,SAGd,OAAIhX,EAAQrzB,OAAS,EACZqzB,OADT,IAIF8d,YAAa,WAGX,GAFAxI,EAAYsB,OAEPtB,EAAYiC,MAAM,KAAvB,CAKA,IAAIzrB,EAAOwpB,EAAY+B,IAAI,gCAE3B,GAAK/B,EAAYiC,MAAM,KAKvB,OAAIzrB,GAAiB,KAATA,GACVwpB,EAAY0B,SACLlrB,QAGTwpB,EAAYuB,UATVvB,EAAYuB,eAPZvB,EAAYuB,YAuBlBqF,OAAQ,WACN,IAAIpB,EAAWt9B,KAAKs9B,SACpB,OAAOt9B,KAAKs1B,WAAagI,EAASiB,WAAajB,EAAS7uB,YAAc6uB,EAAShW,OAASgW,EAASjgB,YAAcigB,EAASvpC,QAAUupC,EAAS/4B,WAAavE,KAAKikB,MAAMlwB,MAAK,IAASupC,EAAS2B,cAO5LvD,IAAK,WACH,OAAO5D,EAAYiC,MAAM,MAAQjC,EAAYmD,KAAK,MAOpD8C,QAAS,WACP,IAAI/qC,EAEJ,GAAK8kC,EAAY+B,IAAI,cAYrB,OARA7mC,EAAQ8kC,EAAY+B,IAAI,WAGtB7mC,EAAQ+oC,EAAOD,EAAQwB,SAAS7uB,SAAU,yBAC1Czb,EAAQ,KAAK1E,OAAO0E,EAAMsb,KAAK7J,MAAM,GAAI,MAG3Cu3B,EAAW,KACJ,IAAItW,GAAK5H,OAAO,GAAI,iBAAiBxvB,OAAO0E,EAAO,OAc5D0jB,QAAS,WACP,IAAI5mB,EACA6S,EACAyB,EACAhD,EAAQ02B,EAAY7lC,EAmBxB,GAlBA0Q,EAAI3C,KAAKqF,cACTvV,EAAIgoC,EAAY+B,IAAI,uBAAyB/B,EAAY+B,IAAI,+EAAiF/B,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,MAAQ/5B,KAAKugC,aAAezI,EAAY+B,IAAI,kBAAoB/B,EAAY+B,IAAI,iBAAmB75B,KAAKs9B,SAASsB,mBAGzS9G,EAAYsB,OAERtB,EAAYiC,MAAM,MACf31B,EAAIpE,KAAKyS,UAAS,KAAWqlB,EAAYiC,MAAM,MAClDjqC,EAAI,IAAI41B,GAAKhhB,MAAMN,GACnB0zB,EAAY0B,UAEZ1B,EAAYuB,QAAQ,uBAGtBvB,EAAY0B,UAIZ1pC,EACF,OAAO,IAAI41B,GAAKtgB,QAAQzC,EAAG7S,EAAGA,aAAa41B,GAAK1I,SAAU5b,EAAOb,IAYrE8E,WAAY,WACV,IAAI1C,EAAIm1B,EAAYqD,cAEpB,GAAU,MAANx4B,EAAW,CACbm1B,EAAYsB,OACZ,IAAIoH,EAAoB1I,EAAY+B,IAAI,gBAExC,GAAI2G,EAEF,OADA1I,EAAY0B,SACL,IAAI9T,GAAK1gB,WAAWw7B,GAG7B1I,EAAYuB,UAGd,GAAU,MAAN12B,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,EAAW,CAQjE,IAPAm1B,EAAY7lC,IAEF,MAAN0Q,GAA2C,MAA9Bm1B,EAAYqD,gBAC3Bx4B,EAAI,KACJm1B,EAAY7lC,KAGP6lC,EAAY2B,gBACjB3B,EAAY7lC,IAGd,OAAO,IAAIyzB,GAAK1gB,WAAWrC,GACtB,OAAIm1B,EAAY2B,cAAc,GAC5B,IAAI/T,GAAK1gB,WAAW,KAEpB,IAAI0gB,GAAK1gB,WAAW,OAY/ByN,SAAU,SAAkBguB,GAC1B,IACIj0B,EACAC,EACA9J,EACA7S,EACA2/B,EACAiR,EACAh0B,EAPAtL,EAAQ02B,EAAY7lC,EAUxB,IAFAwuC,GAAoB,IAAXA,GAEFA,IAAWh0B,EAAazM,KAAKyN,WAAagzB,IAAWC,EAAO5I,EAAYkC,KAAK,WAAalqC,EAAIkQ,KAAK0W,cACpGgqB,EACFh0B,EAAYqvB,EAAO/7B,KAAKogC,WAAY,sBAC3B1zB,EACTR,EAAM,qDACGO,EAEPgjB,EADEA,EACWA,EAAWnhC,OAAOme,GAElBA,GAGXgjB,GACFvjB,EAAM,kDAGRvJ,EAAIm1B,EAAYqD,cAEZ3uB,EACFA,EAAS1gB,KAAKgE,GAEd0c,EAAW,CAAC1c,GAGdA,EAAI,MAGI,MAAN6S,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,KAK1D,GAAI6J,EACF,OAAO,IAAIkZ,GAAKnZ,SAASC,EAAUijB,EAAY/iB,EAAWtL,EAAOb,GAG/DkvB,GACFvjB,EAAM,2EAGViG,UAAW,WAIT,IAHA,IAAI9S,EACA8S,GAGF9S,EAAIW,KAAKyS,cAMLN,EACFA,EAAUrmB,KAAKuT,GAEf8S,EAAY,CAAC9S,GAGfy4B,EAAYoB,aAAa/pC,OAAS,EAE9BkQ,EAAEqN,WAAayF,EAAUhjB,OAAS,GACpC+c,EAAM,2DAGH4rB,EAAYiC,MAAM,OAInB16B,EAAEqN,WACJR,EAAM,2DAGR4rB,EAAYoB,aAAa/pC,OAAS,EAGpC,OAAOgjB,GAETouB,UAAW,WACT,GAAKzI,EAAYiC,MAAM,KAAvB,CAIA,IACIvnC,EACAosB,EACAld,EAHA47B,EAAWt9B,KAAKs9B,SAgBpB,OAXM9qC,EAAM8qC,EAASsB,mBACnBpsC,EAAMupC,EAAO,oDAGfr6B,EAAKo2B,EAAY+B,IAAI,iBAGnBjb,EAAM0e,EAASI,UAAY5F,EAAY+B,IAAI,aAAe/B,EAAY+B,IAAI,YAAcyD,EAASsB,iBAGnG5C,EAAW,KACJ,IAAItW,GAAK7H,UAAUrrB,EAAKkP,EAAIkd,KAMrCyhB,MAAO,WACL,IAAItiB,EAEJ,GAAI+Z,EAAYiC,MAAM,OAAShc,EAAU/d,KAAK+8B,YAAcjF,EAAYiC,MAAM,KAC5E,OAAOhc,GAGX4iB,aAAc,WACZ,IAAIN,EAAQrgC,KAAKqgC,QAMjB,OAJIA,IACFA,EAAQ,IAAI3a,GAAKxT,QAAQ,KAAMmuB,IAG1BA,GAETje,gBAAiB,WACf,IAAI+d,EACAtd,EACAC,EAGJ,GAFAgV,EAAYsB,QAERtB,EAAY+B,IAAI,aAQlBhX,GADAsd,EAAUngC,KAAKikB,MAAM/vB,MAAK,IACTA,KACjB4uB,EAAWqd,EAAQrd,SAEdgV,EAAYiC,MAAM,MAXzB,CAiBA,IAAI4G,EAAe3gC,KAAK2gC,eAExB,GAAIA,EAGF,OAFA7I,EAAY0B,SAER3W,EACK,IAAI6C,GAAKzB,MAAMtB,WAAW,KAAME,EAAQ8d,EAAc,KAAM7d,GAG9D,IAAI4C,GAAKtM,gBAAgBunB,GAGlC7I,EAAYuB,eAjBRvB,EAAYuB,WAsBlBrmB,QAAS,WACP,IAAIb,EACAC,EACAlD,EASJ,GARA4oB,EAAYsB,OAERr4B,EAAQjQ,kBACVoe,EAAY+sB,EAAanE,EAAY7lC,KAGvCkgB,EAAYnS,KAAKmS,eAECC,EAAQpS,KAAKqgC,SAAU,CACvCvI,EAAY0B,SACZ,IAAIxmB,EAAU,IAAI0S,GAAKxT,QAAQC,EAAWC,EAAOrR,EAAQpU,eAMzD,OAJIoU,EAAQjQ,kBACVkiB,EAAQ9D,UAAYA,GAGf8D,EAEP8kB,EAAYuB,WAGhB+D,YAAa,WACX,IAAI9uB,EACAtb,EAEA4tC,EAEAryB,EACA1D,EACAvF,EALAlE,EAAQ02B,EAAY7lC,EAEpB0Q,EAAIm1B,EAAYqD,cAKpB,GAAU,MAANx4B,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,EAO3C,GAHAm1B,EAAYsB,OACZ9qB,EAAOtO,KAAKyO,YAAczO,KAAK6gC,eAErB,CAaR,IAZAv7B,EAA6B,kBAATgJ,KAGlBtb,EAAQgN,KAAKoiB,qBAGXwe,GAAQ,GAIZ9I,EAAYoB,aAAa/pC,OAAS,GAE7B6D,EAAO,CAcV,GAVA6X,GAASvF,GAAcgJ,EAAKnf,OAAS,GAAKmf,EAAKW,MAAMjc,MAGnDA,EADEsb,EAAK,GAAGtb,OAAuC,OAA9Bsb,EAAK,GAAGtb,MAAMyR,MAAM,EAAG,GAClCzE,KAAK8gC,kBAIH9gC,KAAK+gC,iBAMf,OAFAjJ,EAAY0B,SAEL,IAAI9T,GAAKrX,YAAYC,EAAMtb,GAAO,EAAO6X,EAAOzJ,EAAOb,GAG3DvN,IACHA,EAAQgN,KAAKhN,SAGXA,EACFub,EAAYvO,KAAKuO,YACRjJ,IAETtS,EAAQgN,KAAK8gC,mBAIjB,GAAI9tC,IAAUgN,KAAK07B,OAASkF,GAE1B,OADA9I,EAAY0B,SACL,IAAI9T,GAAKrX,YAAYC,EAAMtb,EAAOub,EAAW1D,EAAOzJ,EAAOb,GAElEu3B,EAAYuB,eAGdvB,EAAYuB,WAGhB0H,eAAgB,WACd,IAAI3/B,EAAQ02B,EAAY7lC,EACpBwQ,EAAQq1B,EAAY+B,IAAI,6BAE5B,GAAIp3B,EACF,OAAO,IAAIijB,GAAK3X,UAAUtL,EAAM,GAAIrB,IAaxC0/B,gBAAiB,SAAyBE,GACxC,IAAI/uC,EACAnC,EACAmxC,EACAjuC,EACA8mC,EAAMkH,GAAe,IACrB5/B,EAAQ02B,EAAY7lC,EACpB8Y,EAAS,GAEb,SAASm2B,IACP,IAAInG,EAAOjD,EAAYqD,cAEvB,MAAmB,kBAARrB,EACFiB,IAASjB,EAETA,EAAIzpC,KAAK0qC,GAIpB,IAAImG,IAAJ,CAIAluC,EAAQ,GAER,KACElD,EAAIkQ,KAAKs1B,aAOTxlC,EAAIkQ,KAAK0+B,YAJP1rC,EAAMlH,KAAKgE,SASNA,GAIT,GAFAmxC,EAAOC,IAEHluC,EAAM7D,OAAS,EAAG,CAGpB,GAFA6D,EAAQ,IAAI0yB,GAAK7J,WAAW7oB,GAExBiuC,EACF,OAAOjuC,EAEP+X,EAAOjf,KAAKkH,GAIiB,MAA3B8kC,EAAYsD,YACdrwB,EAAOjf,KAAK,IAAI45B,GAAK3X,UAAU,IAAK3M,IAOxC,GAHA02B,EAAYsB,OACZpmC,EAAQ8kC,EAAYuC,YAAYP,GAErB,CAKT,GAJqB,kBAAV9mC,GACTkZ,EAAM,aAAa5d,OAAO0E,EAAO,KAAM,SAGpB,IAAjBA,EAAM7D,QAA6B,MAAb6D,EAAM,GAE9B,OADA8kC,EAAY0B,SACL,IAAI9T,GAAK3X,UAAU,GAAI3M,GAGhC,IAAIkb,EAEJ,IAAKrqB,EAAI,EAAGA,EAAIe,EAAM7D,OAAQ8C,IAG5B,GAFAqqB,EAAOtpB,EAAMf,GAETiD,MAAMC,QAAQmnB,GAEhBvR,EAAOjf,KAAK,IAAI45B,GAAK5H,OAAOxB,EAAK,GAAIA,EAAK,IAAI,EAAMlb,EAAOb,QACtD,CACDtO,IAAMe,EAAM7D,OAAS,IACvBmtB,EAAOA,EAAKpX,QAId,IAAI+Y,EAAQ,IAAIyH,GAAK5H,OAAO,IAAMxB,GAAM,EAAMlb,EAAOb,GACrD0d,EAAMC,cAAgB,aACtBD,EAAME,UAAY,cAClBpT,EAAOjf,KAAKmyB,GAKhB,OADA6Z,EAAY0B,SACL,IAAI9T,GAAK7J,WAAW9Q,GAAQ,GAGrC+sB,EAAYuB,YAYd8H,OAAU,WACR,IAAI7wB,EACA6O,EACA/d,EAAQ02B,EAAY7lC,EACpBmvC,EAAMtJ,EAAY+B,IAAI,gBAE1B,GAAIuH,EAAK,CACP,IAAI5zC,GAAW4zC,EAAMphC,KAAKqhC,gBAAkB,OAAS,GAErD,GAAI/wB,EAAOtQ,KAAKs9B,SAASI,UAAY19B,KAAKs9B,SAAShW,MASjD,OARAnI,EAAWnf,KAAKshC,gBAEXxJ,EAAYiC,MAAM,OACrBjC,EAAY7lC,EAAImP,EAChB8K,EAAM,gEAGRiT,EAAWA,GAAY,IAAIuG,GAAK/X,MAAMwR,GAC/B,IAAIuG,GAAKhG,OAAOpP,EAAM6O,EAAU3xB,EAAS4T,EAAOb,GAEvDu3B,EAAY7lC,EAAImP,EAChB8K,EAAM,gCAIZm1B,cAAe,WACb,IAAIluC,EAEAouC,EACAvuC,EAFAxF,EAAU,GAId,IAAKsqC,EAAYiC,MAAM,KACrB,OAAO,KAGT,GAGE,GAFA5mC,EAAI6M,KAAKwhC,eAEF,CAIL,OAFAxuC,GAAQ,EADRuuC,EAAapuC,GAIX,IAAK,MACHouC,EAAa,OACbvuC,GAAQ,EACR,MAEF,IAAK,OACHuuC,EAAa,WACbvuC,GAAQ,EAMZ,GAFAxF,EAAQ+zC,GAAcvuC,GAEjB8kC,EAAYiC,MAAM,KACrB,aAGG5mC,GAGT,OADA6oC,EAAW,KACJxuC,GAETg0C,aAAc,WACZ,IAAI9zC,EAAMoqC,EAAY+B,IAAI,uDAE1B,GAAInsC,EACF,OAAOA,EAAI,IAGf+zC,aAAc,WACZ,IAEI3xC,EACAyD,EAHA+pC,EAAWt9B,KAAKs9B,SAChB78B,EAAQ,GAGZq3B,EAAYsB,OAEZ,IACEtpC,EAAIwtC,EAAS/4B,WAAa+4B,EAAS7uB,YAAc6uB,EAASG,eAGxDh9B,EAAM3U,KAAKgE,GACFgoC,EAAYiC,MAAM,OAC3BxmC,EAAIyM,KAAKqd,WACTvtB,EAAIkQ,KAAKhN,QAEL8kC,EAAYiC,MAAM,KAChBxmC,GAAKzD,EACP2Q,EAAM3U,KAAK,IAAI45B,GAAKhhB,MAAM,IAAIghB,GAAKrX,YAAY9a,EAAGzD,EAAG,KAAM,KAAMgoC,EAAY7lC,EAAGsO,GAAU,KACjFzQ,EACT2Q,EAAM3U,KAAK,IAAI45B,GAAKhhB,MAAM5U,IAE1Boc,EAAM,yCAGRA,EAAM,sBAAyB,gBAG5Bpc,GAIT,GAFAgoC,EAAY0B,SAER/4B,EAAMtR,OAAS,EACjB,OAAO,IAAIu2B,GAAK7J,WAAWpb,IAG/B6gC,cAAe,WACb,IAEIxxC,EAFAwtC,EAAWt9B,KAAKs9B,SAChBne,EAAW,GAGf,GAGE,GAFArvB,EAAIkQ,KAAKyhC,gBAKP,GAFAtiB,EAASrzB,KAAKgE,IAETgoC,EAAYiC,MAAM,KACrB,WAKF,IAFAjqC,EAAIwtC,EAAS7uB,YAAc6uB,EAASG,iBAGlCte,EAASrzB,KAAKgE,IAETgoC,EAAYiC,MAAM,MACrB,YAICjqC,GAET,OAAOqvB,EAAShwB,OAAS,EAAIgwB,EAAW,MAE1CrwB,MAAO,WACL,IAAIqwB,EACA/M,EACAtjB,EACAogB,EACA9N,EAAQ02B,EAAY7lC,EAQxB,GANI8O,EAAQjQ,kBACVoe,EAAY+sB,EAAa76B,IAG3B02B,EAAYsB,OAERtB,EAAYkC,KAAK,UAenB,OAdA7a,EAAWnf,KAAKshC,iBAChBlvB,EAAQpS,KAAKqgC,UAGXn0B,EAAM,iEAGR4rB,EAAY0B,SACZ1qC,EAAQ,IAAI42B,GAAKzG,MAAM7M,EAAO+M,EAAU/d,EAAOb,GAE3CQ,EAAQjQ,kBACVhC,EAAMogB,UAAYA,GAGbpgB,EAGTgpC,EAAYuB,WAOdjQ,OAAQ,WACN,IAAI9Y,EACApc,EACA1G,EACA4T,EAAQ02B,EAAY7lC,EAGxB,GAFU6lC,EAAY+B,IAAI,gBAEjB,CAcP,GAVErsC,GAHF0G,EAAO8L,KAAK0hC,cAGA,CACRA,WAAYxtC,EACZ4rB,UAAU,GAGF,CACRA,UAAU,GAIVxP,EAAOtQ,KAAKs9B,SAASI,UAAY19B,KAAKs9B,SAAShW,MAMjD,OALKwQ,EAAYiC,MAAM,OACrBjC,EAAY7lC,EAAImP,EAChB8K,EAAM,kCAGD,IAAIwZ,GAAKhG,OAAOpP,EAAM,KAAM9iB,EAAS4T,EAAOb,GAEnDu3B,EAAY7lC,EAAImP,EAChB8K,EAAM,iCAIZw1B,WAAY,WAIV,GAFA5J,EAAYsB,QAEPtB,EAAYiC,MAAM,KAErB,OADAjC,EAAYuB,UACL,KAGT,IAAInlC,EAAO4jC,EAAY+B,IAAI,sBAE3B,OAAI3lC,EAAK,IACP4jC,EAAY0B,SACLtlC,EAAK,GAAGgR,SAEf4yB,EAAYuB,UACL,OAQXkE,OAAQ,WACN,IACIjvB,EACAtb,EACAof,EACAuvB,EACAC,EACAC,EACAC,EAPA1gC,EAAQ02B,EAAY7lC,EAQpB8vC,GAAW,EACXppB,GAAW,EAEf,GAAkC,MAA9Bmf,EAAYqD,cAAhB,CAMA,GAFAnoC,EAAQgN,KAAa,UAAOA,KAAKopB,UAAYppB,KAAKlR,QAGhD,OAAOkE,EAMT,GAHA8kC,EAAYsB,OACZ9qB,EAAOwpB,EAAY+B,IAAI,aAEvB,CAUA,OANA8H,EAAwBrzB,EAEF,KAAlBA,EAAK1I,OAAO,IAAa0I,EAAKhL,QAAQ,IAAK,GAAK,IAClDq+B,EAAwB,IAAIrzC,OAAOggB,EAAK7J,MAAM6J,EAAKhL,QAAQ,IAAK,GAAK,KAG/Dq+B,GACN,IAAK,WACHC,GAAgB,EAChBG,GAAW,EACX,MAEF,IAAK,aACHF,GAAgB,EAChBE,GAAW,EACX,MAEF,IAAK,aACL,IAAK,iBACHH,GAAgB,EAChB,MAEF,IAAK,YACL,IAAK,YACHE,GAAa,EACbnpB,GAAW,EACX,MAEF,QACEmpB,GAAa,EAmCjB,GA/BAhK,EAAYoB,aAAa/pC,OAAS,EAE9ByyC,GACF5uC,EAAQgN,KAAK0+B,WAGXxyB,EAAM,YAAY5d,OAAOggB,EAAM,gBAExBuzB,GACT7uC,EAAQgN,KAAK4gB,eAGX1U,EAAM,YAAY5d,OAAOggB,EAAM,gBAExBwzB,IACT9uC,EAAQgN,KAAK8gC,gBAAgB,SAC7BiB,EAAyC,MAA9BjK,EAAYqD,cAElBnoC,EAIOA,EAAMA,QAChBA,EAAQ,MAJH+uC,GAA0C,MAA9BjK,EAAYqD,eAC3BjvB,EAAM,GAAG5d,OAAOggB,EAAM,iDAOxByzB,IACF3vB,EAAQpS,KAAK2gC,gBAGXvuB,IAAU2vB,GAAY/uC,GAAS8kC,EAAYiC,MAAM,KAEnD,OADAjC,EAAY0B,SACL,IAAI9T,GAAKhN,OAAOpK,EAAMtb,EAAOof,EAAOhR,EAAOb,EAAUQ,EAAQjQ,gBAAkBmrC,EAAa76B,GAAS,KAAMuX,GAGpHmf,EAAYuB,QAAQ,qCAUtBrmC,MAAO,WACL,IAAIlD,EACAiwC,EAAc,GACd3+B,EAAQ02B,EAAY7lC,EAExB,GAGE,IAFAnC,EAAIkQ,KAAK4gB,gBAGPmf,EAAYj0C,KAAKgE,IAEZgoC,EAAYiC,MAAM,MACrB,YAGGjqC,GAET,GAAIiwC,EAAY5wC,OAAS,EACvB,OAAO,IAAIu2B,GAAK/X,MAAMoyB,EAAa3+B,IAGvCmN,UAAW,WACT,GAAkC,MAA9BupB,EAAYqD,cACd,OAAOrD,EAAY+B,IAAI,kBAG3BmI,IAAK,WACH,IAAI5tC,EACAtE,EAGJ,GAFAgoC,EAAYsB,OAERtB,EAAYiC,MAAM,KAGpB,OAFA3lC,EAAI4L,KAAKiiC,aAEAnK,EAAYiC,MAAM,MACzBjC,EAAY0B,UACZ1pC,EAAI,IAAI41B,GAAK7J,WAAW,CAACznB,KACvB6nB,QAAS,EACJnsB,QAGTgoC,EAAYuB,QAAQ,gBAItBvB,EAAYuB,WAEd6I,eAAgB,WACd,IAAIrjC,EACAzK,EACAsN,EACAygC,EACA3mB,EAGJ,GAFA3c,EAAImB,KAAKoiC,UAEF,CAGL,IAFA5mB,EAAWsc,EAAY2B,cAAc,IAG/B3B,EAAYmD,KAAK,aADV,CAQX,GAHAnD,EAAYsB,SACZ13B,EAAKo2B,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,MAAQjC,EAAYkC,KAAK,OAEjE,CACPlC,EAAY0B,SACZ,MAKF,KAFAplC,EAAI4L,KAAKoiC,WAED,CACNtK,EAAYuB,UACZ,MAGFvB,EAAY0B,SACZ36B,EAAEqd,YAAa,EACf9nB,EAAE8nB,YAAa,EACfimB,EAAY,IAAIzc,GAAKpK,UAAU5Z,EAAI,CAACygC,GAAatjC,EAAGzK,GAAIonB,GACxDA,EAAWsc,EAAY2B,cAAc,GAGvC,OAAO0I,GAAatjC,IAGxBojC,SAAU,WACR,IAAIpjC,EACAzK,EACAsN,EACAygC,EACA3mB,EAGJ,GAFA3c,EAAImB,KAAKkiC,iBAEF,CAGL,IAFA1mB,EAAWsc,EAAY2B,cAAc,IAGnC/3B,EAAKo2B,EAAY+B,IAAI,cAAgBre,IAAasc,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,SAM9F3lC,EAAI4L,KAAKkiC,mBAMTrjC,EAAEqd,YAAa,EACf9nB,EAAE8nB,YAAa,EACfimB,EAAY,IAAIzc,GAAKpK,UAAU5Z,EAAI,CAACygC,GAAatjC,EAAGzK,GAAIonB,GACxDA,EAAWsc,EAAY2B,cAAc,GAGvC,OAAO0I,GAAatjC,IAGxBuhC,WAAY,WACV,IAAIhsC,EACAuN,EAEA+K,EADAtL,EAAQ02B,EAAY7lC,EAIxB,GAFAmC,EAAI4L,KAAK0M,WAAU,GAEZ,CACL,KACOorB,EAAYmD,KAAK,qBAAwBnD,EAAYiC,MAAM,OAIhEp4B,EAAI3B,KAAK0M,WAAU,KAMnBA,EAAY,IAAIgZ,GAAKvE,UAAU,KAAMzU,GAAatY,EAAGuN,EAAGP,GAG1D,OAAOsL,GAAatY,IAGxBsY,UAAW,SAAmB21B,GAC5B,IAAIt3B,EACAu3B,EACAC,EAEJ,SAASC,IACP,OAAO1K,EAAYkC,KAAK,MAK1B,GAFAjvB,EAAS/K,KAAKyiC,aAAaJ,GAE3B,CAMA,GAFAC,EAAUE,IAEG,CAGX,KAFAD,EAAOviC,KAAK0M,UAAU21B,IAKpB,OAFAt3B,EAAS,IAAI2a,GAAKvE,UAAUmhB,EAASv3B,EAAQw3B,GAMjD,OAAOx3B,IAET03B,aAAc,SAAsBJ,GAClC,IAAIt3B,EACAu3B,EACAC,EACA7tC,EAAOsL,KAEX,SAAS0iC,IACP,IAAIxC,EAAOxrC,EAAKiuC,iBAAiBN,IAAgB3tC,EAAKkuC,qBAAqBP,GAE3E,OAAKnC,GAASmC,EAIPnC,EAHExrC,EAAKmuC,gBAAgBR,GAMhC,SAASS,IACP,OAAOhL,EAAYkC,KAAK,OAK1B,GAFAjvB,EAAS23B,IAET,CAMA,GAFAJ,EAAUQ,IAEG,CAGX,KAFAP,EAAOviC,KAAKyiC,aAAaJ,IAKvB,OAFAt3B,EAAS,IAAI2a,GAAKvE,UAAUmhB,EAASv3B,EAAQw3B,GAMjD,OAAOx3B,IAET43B,iBAAkB,SAA0BN,GAC1C,GAAIvK,EAAYkC,KAAK,OAAQ,CAC3B,IAAIjvB,EAAS/K,KAAK4iC,qBAAqBP,GAMvC,OAJIt3B,IACFA,EAAOqW,QAAUrW,EAAOqW,QAGnBrW,IAGX63B,qBAAsB,SAA8BP,GAClD,SAASU,EAAkCC,GACzC,IAAIC,EAIJ,GAHAnL,EAAYsB,OACZ6J,EAAOD,EAAGt2B,UAAU21B,GAEpB,CAKA,GAAKvK,EAAYiC,MAAM,KAMvB,OADAjC,EAAY0B,SACLyJ,EALLnL,EAAYuB,eALZvB,EAAYuB,UAahB,IAAI4J,EAGJ,GAFAnL,EAAYsB,OAEPtB,EAAYkC,KAAK,KAAtB,CAOA,GAFAiJ,EAAOF,EAAkC/iC,MAIvC,OADA83B,EAAY0B,SACLyJ,EAKT,GAFAA,EAAOjjC,KAAK6iC,gBAAgBR,GAE5B,CAKA,GAAKvK,EAAYiC,MAAM,KAMvB,OADAjC,EAAY0B,SACLyJ,EALLnL,EAAYuB,QAAQ,qBAAqB/qC,OAAOwpC,EAAYqD,cAAe,WAL3ErD,EAAYuB,eAdZvB,EAAYuB,WA0BhBwJ,gBAAiB,SAAyBR,GACxC,IAEIjuC,EACAuN,EACAgB,EACAjB,EALA47B,EAAWt9B,KAAKs9B,SAChBl8B,EAAQ02B,EAAY7lC,EAMxB,SAASiuC,IACP,OAAOlgC,KAAKiiC,YAAc3E,EAAS/4B,WAAa+4B,EAASI,UAAYJ,EAASG,cAMhF,GAFArpC,GADA8rC,EAAOA,EAAK3rC,KAAKyL,SAsCf,OAlCI83B,EAAYiC,MAAM,KAElBr4B,EADEo2B,EAAYiC,MAAM,KACf,KAEA,IAEEjC,EAAYiC,MAAM,KAEzBr4B,EADEo2B,EAAYiC,MAAM,KACf,KAEA,IAEEjC,EAAYiC,MAAM,OAEzBr4B,EADEo2B,EAAYiC,MAAM,KACf,KACIjC,EAAYiC,MAAM,KACtB,KAEA,KAILr4B,GACFC,EAAIu+B,KAGFv9B,EAAI,IAAI+iB,GAAKvE,UAAUzf,EAAItN,EAAGuN,EAAGP,GAAO,GAExC8K,EAAM,uBAGRvJ,EAAI,IAAI+iB,GAAKvE,UAAU,IAAK/sB,EAAG,IAAIsxB,GAAK9X,QAAQ,QAASxM,GAAO,GAG3DuB,GAOXy/B,QAAS,WACP,IACIhhB,EADAkc,EAAWt9B,KAAKs9B,SAGhBxF,EAAYmD,KAAK,eACnB7Z,EAAS0W,EAAYiC,MAAM,MAG7B,IAAI5mC,EAAI6M,KAAKgiC,OAAS1E,EAASkB,aAAelB,EAAS5wC,SAAW4wC,EAAS7uB,YAAc6uB,EAASjgB,YAAcigB,EAASvpC,QAAUupC,EAASI,QAAO,IAASJ,EAASyB,gBAAkBzB,EAASG,cAOhM,OALIrc,IACFjuB,EAAE+oB,YAAa,EACf/oB,EAAI,IAAIuyB,GAAKlE,SAASruB,IAGjBA,GASTytB,WAAY,WACV,IACI9wB,EACAozC,EAFA5F,EAAW,GAGXl8B,EAAQ02B,EAAY7lC,EAExB,IACEnC,EAAIkQ,KAAKs1B,WAGPgI,EAASxxC,KAAKgE,IAIhBA,EAAIkQ,KAAKiiC,YAAcjiC,KAAK0+B,YAG1BpB,EAASxxC,KAAKgE,GAETgoC,EAAYmD,KAAK,cACpBiI,EAAQpL,EAAYiC,MAAM,OAGxBuD,EAASxxC,KAAK,IAAI45B,GAAK3X,UAAUm1B,EAAO9hC,WAIvCtR,GAET,GAAIwtC,EAASnuC,OAAS,EACpB,OAAO,IAAIu2B,GAAK7J,WAAWyhB,IAG/BjgB,SAAU,WACR,IAAI/O,EAAOwpB,EAAY+B,IAAI,8BAE3B,GAAIvrB,EACF,OAAOA,EAAK,IAGhBuyB,aAAc,WACZ,IAEIxhC,EACAqY,EAHApJ,EAAO,GACPlN,EAAQ,GAGZ02B,EAAYsB,OACZ,IAAI+J,EAAiBrL,EAAY+B,IAAI,yBAErC,GAAIsJ,EAGF,OAFA70B,EAAO,CAAC,IAAIoX,GAAK9X,QAAQu1B,EAAe,KACxCrL,EAAY0B,SACLlrB,EAGT,SAAS7L,EAAM6G,GACb,IAAIrX,EAAI6lC,EAAY7lC,EAChBkP,EAAQ22B,EAAY+B,IAAIvwB,GAE5B,GAAInI,EAEF,OADAC,EAAMtV,KAAKmG,GACJqc,EAAKxiB,KAAKqV,EAAM,IAM3B,IAFAsB,EAAM,UAGCA,EAAM,uCAKb,GAAI6L,EAAKnf,OAAS,GAAKsT,EAAM,sBAAuB,CASlD,IARAq1B,EAAY0B,SAGI,KAAZlrB,EAAK,KACPA,EAAKd,QACLpM,EAAMoM,SAGHkK,EAAI,EAAGA,EAAIpJ,EAAKnf,OAAQuoB,IAC3BrY,EAAIiP,EAAKoJ,GACTpJ,EAAKoJ,GAAqB,MAAhBrY,EAAEuG,OAAO,IAA8B,MAAhBvG,EAAEuG,OAAO,GAAa,IAAI8f,GAAK9X,QAAQvO,GAAqB,MAAhBA,EAAEuG,OAAO,GAAa,IAAI8f,GAAK1I,SAAS,IAAI1uB,OAAO+Q,EAAEoF,MAAM,GAAI,IAAKrD,EAAMsW,GAAInX,GAAY,IAAImlB,GAAKtI,SAAS,IAAI9uB,OAAO+Q,EAAEoF,MAAM,GAAI,IAAKrD,EAAMsW,GAAInX,GAGjO,OAAO+N,EAGTwpB,EAAYuB,cAmBpB,SAAS2E,GAAQtxB,GACf,OAAOA,EAAYkB,EAAQC,KAAOD,EAAQE,MAG5C,SAASs1B,GAAG12B,EAAW22B,EAAWC,GAChC,OAAO52B,EAAY22B,EAAYC,GAAc,IAAIv1B,EAlBnD8tB,GAAOY,cAAgB,SAAUjoB,GAC/B,IAAInV,EAAI,GAER,IAAK,IAAIiP,KAAQkG,EACf,GAAIliB,OAAO1E,eAAemG,KAAKygB,EAAMlG,GAAO,CAC1C,IAAItb,EAAQwhB,EAAKlG,GACjBjP,GAAK,GAAG/Q,QAAoB,MAAZggB,EAAK,GAAa,GAAK,KAAOA,EAAM,MAAMhgB,OAAO0E,GAAO1E,OAAmC,MAA5BqsB,OAAO3nB,GAAOyR,OAAO,GAAa,GAAK,KAI1H,OAAOpF,GAWT,IAKIkkC,GALAC,GAAY,CACdxF,QAASA,GACTC,GAAMmF,IAKR,SAASK,GAAQ7kB,GACf,OAAOnf,KAAKyE,IAAI,EAAGzE,KAAKwE,IAAI,EAAG2a,IAGjC,SAAS8kB,GAAKC,EAAWC,GACvB,IAAIl3C,EAAQ62C,GAAeG,KAAKE,EAAIlgC,EAAGkgC,EAAIvkC,EAAGukC,EAAIjgC,EAAGigC,EAAIxvC,GAEzD,GAAI1H,EAOF,OANIi3C,EAAU3wC,OAAS,aAAa3C,KAAKszC,EAAU3wC,OACjDtG,EAAMsG,MAAQ2wC,EAAU3wC,MAExBtG,EAAMsG,MAAQ,MAGTtG,EAIX,SAAS+W,GAAM/W,GACb,GAAIA,EAAM+W,MACR,OAAO/W,EAAM+W,QAEb,MAAM,IAAI1T,MAAM,2CAIpB,SAAS8zC,GAAMn3C,GACb,GAAIA,EAAMm3C,MACR,OAAOn3C,EAAMm3C,QAEb,MAAM,IAAI9zC,MAAM,2CAIpB,SAAS+zC,GAAOh6B,GACd,GAAIA,aAAauQ,GACf,OAAOE,WAAWzQ,EAAEwQ,KAAKX,GAAG,KAAO7P,EAAE9W,MAAQ,IAAM8W,EAAE9W,OAChD,GAAiB,kBAAN8W,EAChB,OAAOA,EAEP,KAAM,CACJ5H,KAAM,WACNoJ,QAAS,8CAKf,SAASy4B,GAAOj6B,EAAGk6B,GACjB,OAAIl6B,aAAauQ,IAAavQ,EAAEwQ,KAAKX,GAAG,KAC/BY,WAAWzQ,EAAE9W,MAAQgxC,EAAO,KAE5BF,GAAOh6B,GAqVlB,IAAIpd,GAjVJ62C,GAAiB,CACfjhC,IAAK,SAAaS,EAAGC,EAAGrB,GACtB,IAAIjV,EAAQ62C,GAAeU,KAAKlhC,EAAGC,EAAGrB,EAAG,GAEzC,GAAIjV,EAEF,OADAA,EAAMsG,MAAQ,MACPtG,GAGXu3C,KAAM,SAAclhC,EAAGC,EAAGrB,EAAGvN,GAC3B,IACE,GAAI2O,aAAaX,EAOf,OALEhO,EADE4O,EACE8gC,GAAO9gC,GAEPD,EAAEF,MAGD,IAAIT,EAAMW,EAAET,IAAKlO,EAAG,QAG7B,IAAIkO,EAAM,CAACS,EAAGC,EAAGrB,GAAGe,KAAI,SAAUC,GAChC,OAAOohC,GAAOphC,EAAG,QAGnB,OADAvO,EAAI0vC,GAAO1vC,GACJ,IAAIgO,EAAME,EAAKlO,EAAG,QACzB,MAAOtE,MAEX8zC,IAAK,SAAalgC,EAAGrE,EAAGsE,GACtB,IAAIjX,EAAQ62C,GAAeG,KAAKhgC,EAAGrE,EAAGsE,EAAG,GAEzC,GAAIjX,EAEF,OADAA,EAAMsG,MAAQ,MACPtG,GAGXg3C,KAAM,SAAchgC,EAAGrE,EAAGsE,EAAGvP,GAC3B,IACE,IAwBI8vC,EACAC,EAzBAC,EAAM,SAAa1gC,GAGrB,OAAQ,GAFRA,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAI,EAAIA,EAAI,EAAIA,GAExB,EACHwgC,GAAMC,EAAKD,GAAMxgC,EAAI,EACf,EAAJA,EAAQ,EACVygC,EACM,EAAJzgC,EAAQ,EACVwgC,GAAMC,EAAKD,IAAO,EAAI,EAAIxgC,GAAK,EAE/BwgC,GAIX,GAAIxgC,aAAatB,EAOf,OALEhO,EADEiL,EACEykC,GAAOzkC,GAEPqE,EAAEb,MAGD,IAAIT,EAAMsB,EAAEpB,IAAKlO,EAAG,QAK7BsP,EAAIogC,GAAOpgC,GAAK,IAAM,IACtBrE,EAAIokC,GAAQK,GAAOzkC,IACnBsE,EAAI8/B,GAAQK,GAAOngC,IACnBvP,EAAIqvC,GAAQK,GAAO1vC,IAEnB8vC,EAAS,EAAJvgC,GADLwgC,EAAKxgC,GAAK,GAAMA,GAAKtE,EAAI,GAAKsE,EAAItE,EAAIsE,EAAItE,GAE1C,IAAIiD,EAAM,CAAkB,IAAjB8hC,EAAI1gC,EAAI,EAAI,GAAmB,IAAT0gC,EAAI1gC,GAA2B,IAAjB0gC,EAAI1gC,EAAI,EAAI,IAE3D,OADAtP,EAAI0vC,GAAO1vC,GACJ,IAAIgO,EAAME,EAAKlO,EAAG,QACzB,MAAOtE,MAEXu0C,IAAK,SAAa3gC,EAAGrE,EAAG+E,GACtB,OAAOm/B,GAAee,KAAK5gC,EAAGrE,EAAG+E,EAAG,IAEtCkgC,KAAM,SAAc5gC,EAAGrE,EAAG+E,EAAGhQ,GAK3B,IAAInC,EACAmyB,EALJ1gB,EAAIogC,GAAOpgC,GAAK,IAAM,IAAM,IAC5BrE,EAAIykC,GAAOzkC,GACX+E,EAAI0/B,GAAO1/B,GACXhQ,EAAI0vC,GAAO1vC,GAKX,IAAImwC,EAAK,CAACngC,EAAGA,GAAK,EAAI/E,GAAI+E,GAAK,GAD/BggB,EAAI1gB,EAAI,IADRzR,EAAIwN,KAAK+kC,MAAM9gC,EAAI,GAAK,KAEerE,GAAI+E,GAAK,GAAK,EAAIggB,GAAK/kB,IAC1DolC,EAAO,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAC1E,OAAOlB,GAAeU,KAAsB,IAAjBM,EAAGE,EAAKxyC,GAAG,IAA4B,IAAjBsyC,EAAGE,EAAKxyC,GAAG,IAA4B,IAAjBsyC,EAAGE,EAAKxyC,GAAG,IAAWmC,IAE/FgwC,IAAK,SAAa13C,GAChB,OAAO,IAAI2tB,GAAU5W,GAAM/W,GAAOgX,IAEpCghC,WAAY,SAAoBh4C,GAC9B,OAAO,IAAI2tB,GAA2B,IAAjB5W,GAAM/W,GAAO2S,EAAS,MAE7CslC,UAAW,SAAmBj4C,GAC5B,OAAO,IAAI2tB,GAA2B,IAAjB5W,GAAM/W,GAAOiX,EAAS,MAE7CihC,OAAQ,SAAgBl4C,GACtB,OAAO,IAAI2tB,GAAUwpB,GAAMn3C,GAAOgX,IAEpCmhC,cAAe,SAAuBn4C,GACpC,OAAO,IAAI2tB,GAA2B,IAAjBwpB,GAAMn3C,GAAO2S,EAAS,MAE7CylC,SAAU,SAAkBp4C,GAC1B,OAAO,IAAI2tB,GAA2B,IAAjBwpB,GAAMn3C,GAAO0X,EAAS,MAE7CpH,IAAK,SAAatQ,GAChB,OAAO,IAAI2tB,GAAU3tB,EAAM4V,IAAI,KAEjCvJ,MAAO,SAAerM,GACpB,OAAO,IAAI2tB,GAAU3tB,EAAM4V,IAAI,KAEjCrM,KAAM,SAAcvJ,GAClB,OAAO,IAAI2tB,GAAU3tB,EAAM4V,IAAI,KAEjCO,MAAO,SAAenW,GACpB,OAAO,IAAI2tB,GAAU5W,GAAM/W,GAAO0H,IAEpC2wC,KAAM,SAAcr4C,GAClB,OAAO,IAAI2tB,GAAU3tB,EAAMq4C,OAASr4C,EAAMmW,MAAQ,IAAK,MAEzDmiC,UAAW,SAAmBt4C,GAC5B,IAAIs4C,EAAY,MAASt4C,EAAM4V,IAAI,GAAK,IAAM,MAAS5V,EAAM4V,IAAI,GAAK,IAAM,MAAS5V,EAAM4V,IAAI,GAAK,IACpG,OAAO,IAAI+X,GAAU2qB,EAAYt4C,EAAMmW,MAAQ,IAAK,MAEtDoiC,SAAU,SAAkBv4C,EAAOw4C,EAAQC,GAGzC,IAAKz4C,EAAM4V,IACT,OAAO,KAGT,IAAIshC,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIvkC,GAAKukC,EAAIvkC,EAAI6lC,EAAOlyC,MAAQ,IAEhC4wC,EAAIvkC,GAAK6lC,EAAOlyC,MAAQ,IAG1B4wC,EAAIvkC,EAAIokC,GAAQG,EAAIvkC,GACbqkC,GAAKh3C,EAAOk3C,IAErBwB,WAAY,SAAoB14C,EAAOw4C,EAAQC,GAC7C,IAAIvB,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIvkC,GAAKukC,EAAIvkC,EAAI6lC,EAAOlyC,MAAQ,IAEhC4wC,EAAIvkC,GAAK6lC,EAAOlyC,MAAQ,IAG1B4wC,EAAIvkC,EAAIokC,GAAQG,EAAIvkC,GACbqkC,GAAKh3C,EAAOk3C,IAErByB,QAAS,SAAiB34C,EAAOw4C,EAAQC,GACvC,IAAIvB,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIjgC,GAAKigC,EAAIjgC,EAAIuhC,EAAOlyC,MAAQ,IAEhC4wC,EAAIjgC,GAAKuhC,EAAOlyC,MAAQ,IAG1B4wC,EAAIjgC,EAAI8/B,GAAQG,EAAIjgC,GACb+/B,GAAKh3C,EAAOk3C,IAErB0B,OAAQ,SAAgB54C,EAAOw4C,EAAQC,GACrC,IAAIvB,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIjgC,GAAKigC,EAAIjgC,EAAIuhC,EAAOlyC,MAAQ,IAEhC4wC,EAAIjgC,GAAKuhC,EAAOlyC,MAAQ,IAG1B4wC,EAAIjgC,EAAI8/B,GAAQG,EAAIjgC,GACb+/B,GAAKh3C,EAAOk3C,IAErB2B,OAAQ,SAAgB74C,EAAOw4C,EAAQC,GACrC,IAAIvB,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIxvC,GAAKwvC,EAAIxvC,EAAI8wC,EAAOlyC,MAAQ,IAEhC4wC,EAAIxvC,GAAK8wC,EAAOlyC,MAAQ,IAG1B4wC,EAAIxvC,EAAIqvC,GAAQG,EAAIxvC,GACbsvC,GAAKh3C,EAAOk3C,IAErB4B,QAAS,SAAiB94C,EAAOw4C,EAAQC,GACvC,IAAIvB,EAAMngC,GAAM/W,GAShB,MAPsB,qBAAXy4C,GAA2C,aAAjBA,EAAOnyC,MAC1C4wC,EAAIxvC,GAAKwvC,EAAIxvC,EAAI8wC,EAAOlyC,MAAQ,IAEhC4wC,EAAIxvC,GAAK8wC,EAAOlyC,MAAQ,IAG1B4wC,EAAIxvC,EAAIqvC,GAAQG,EAAIxvC,GACbsvC,GAAKh3C,EAAOk3C,IAErB6B,KAAM,SAAc/4C,EAAOw4C,GACzB,IAAItB,EAAMngC,GAAM/W,GAGhB,OAFAk3C,EAAIxvC,EAAI8wC,EAAOlyC,MAAQ,IACvB4wC,EAAIxvC,EAAIqvC,GAAQG,EAAIxvC,GACbsvC,GAAKh3C,EAAOk3C,IAErB8B,KAAM,SAAch5C,EAAOw4C,GACzB,IAAItB,EAAMngC,GAAM/W,GACZ03C,GAAOR,EAAIlgC,EAAIwhC,EAAOlyC,OAAS,IAEnC,OADA4wC,EAAIlgC,EAAI0gC,EAAM,EAAI,IAAMA,EAAMA,EACvBV,GAAKh3C,EAAOk3C,IAMrB+B,IAAK,SAAaC,EAAQC,EAAQC,GAC3BA,IACHA,EAAS,IAAIzrB,GAAU,KAGzB,IAAI9mB,EAAIuyC,EAAO9yC,MAAQ,IACnB+yC,EAAQ,EAAJxyC,EAAQ,EACZa,EAAIqP,GAAMmiC,GAAQxxC,EAAIqP,GAAMoiC,GAAQzxC,EACpC4xC,IAAOD,EAAI3xC,IAAM,EAAI2xC,GAAKA,EAAI3xC,IAAM,EAAI2xC,EAAI3xC,IAAM,GAAK,EACvD6xC,EAAK,EAAID,EACT1jC,EAAM,CAACsjC,EAAOtjC,IAAI,GAAK0jC,EAAKH,EAAOvjC,IAAI,GAAK2jC,EAAIL,EAAOtjC,IAAI,GAAK0jC,EAAKH,EAAOvjC,IAAI,GAAK2jC,EAAIL,EAAOtjC,IAAI,GAAK0jC,EAAKH,EAAOvjC,IAAI,GAAK2jC,GAC9HpjC,EAAQ+iC,EAAO/iC,MAAQtP,EAAIsyC,EAAOhjC,OAAS,EAAItP,GACnD,OAAO,IAAI6O,EAAME,EAAKO,IAExBqjC,UAAW,SAAmBx5C,GAC5B,OAAO62C,GAAe6B,WAAW14C,EAAO,IAAI2tB,GAAU,OAExD8rB,SAAU,SAAkBz5C,EAAO05C,EAAMC,EAAOC,GAG9C,IAAK55C,EAAM4V,IACT,OAAO,KAYT,GATqB,qBAAV+jC,IACTA,EAAQ9C,GAAeU,KAAK,IAAK,IAAK,IAAK,IAGzB,qBAATmC,IACTA,EAAO7C,GAAeU,KAAK,EAAG,EAAG,EAAG,IAIlCmC,EAAKrB,OAASsB,EAAMtB,OAAQ,CAC9B,IAAIwB,EAAIF,EACRA,EAAQD,EACRA,EAAOG,EAST,OALED,EADuB,qBAAdA,EACG,IAEAxC,GAAOwC,GAGjB55C,EAAMq4C,OAASuB,EACVD,EAEAD,GAyCXI,KAAM,SAAc95C,GAClB,OAAO,IAAIqhB,EAAUrhB,EAAM+5C,WAE7B/5C,MAAO,SAAeiW,GACpB,GAAIA,aAAamb,IAAU,uDAAuDztB,KAAKsS,EAAE3P,OAAQ,CAC/F,IAAI4rB,EAAMjc,EAAE3P,MAAMyR,MAAM,GACxB,OAAO,IAAIrC,EAAMwc,OAAKzuB,EAAW,IAAI7B,OAAOswB,IAG9C,GAAIjc,aAAaP,IAAUO,EAAIP,EAAMkC,YAAY3B,EAAE3P,QAEjD,OADA2P,EAAE3P,WAAQ7C,EACHwS,EAGT,KAAM,CACJT,KAAM,WACNoJ,QAAS,oEAGbo7B,KAAM,SAAch6C,EAAOw4C,GACzB,OAAO3B,GAAeoC,IAAIpC,GAAejhC,IAAI,IAAK,IAAK,KAAM5V,EAAOw4C,IAEtEyB,MAAO,SAAej6C,EAAOw4C,GAC3B,OAAO3B,GAAeoC,IAAIpC,GAAejhC,IAAI,EAAG,EAAG,GAAI5V,EAAOw4C,KAOlE,SAAS0B,GAAWC,EAAMjB,EAAQC,GAChC,IAGAiB,EAGAC,EACIC,EACAC,EARAC,EAAKtB,EAAO/iC,MAIZskC,EAAKtB,EAAOhjC,MAKZE,EAAI,GACRikC,EAAKG,EAAKD,GAAM,EAAIC,GAEpB,IAAK,IAAIl1C,EAAI,EAAGA,EAAI,EAAGA,IAGrBg1C,EAAKJ,EAFLC,EAAKlB,EAAOtjC,IAAIrQ,GAAK,IACrB80C,EAAKlB,EAAOvjC,IAAIrQ,GAAK,KAGjB+0C,IACFC,GAAME,EAAKJ,EAAKG,GAAMJ,EAAKK,GAAML,EAAKC,EAAKE,KAAQD,GAGrDjkC,EAAE9Q,GAAU,IAALg1C,EAGT,OAAO,IAAI7kC,EAAMW,EAAGikC,GAGtB,IAAII,GAA0B,CAC5BC,SAAU,SAAkBP,EAAIC,GAC9B,OAAOD,EAAKC,GAEdO,OAAQ,SAAgBR,EAAIC,GAC1B,OAAOD,EAAKC,EAAKD,EAAKC,GAExBQ,QAAS,SAAiBT,EAAIC,GAE5B,OADAD,GAAM,IACO,EAAIM,GAAwBC,SAASP,EAAIC,GAAMK,GAAwBE,OAAOR,EAAK,EAAGC,IAErGS,UAAW,SAAmBV,EAAIC,GAChC,IAAI5iC,EAAI,EACJrU,EAAIg3C,EAOR,OALIC,EAAK,KACPj3C,EAAI,EACJqU,EAAI2iC,EAAK,IAAOrnC,KAAKgoC,KAAKX,KAAQ,GAAKA,EAAK,IAAMA,EAAK,GAAKA,GAGvDA,GAAM,EAAI,EAAIC,GAAMj3C,GAAKqU,EAAI2iC,IAEtCY,UAAW,SAAmBZ,EAAIC,GAChC,OAAOK,GAAwBG,QAAQR,EAAID,IAE7Ca,WAAY,SAAoBb,EAAIC,GAClC,OAAOtnC,KAAKmoC,IAAId,EAAKC,IAEvBc,UAAW,SAAmBf,EAAIC,GAChC,OAAOD,EAAKC,EAAK,EAAID,EAAKC,GAG5Be,QAAS,SAAiBhB,EAAIC,GAC5B,OAAQD,EAAKC,GAAM,GAErBgB,SAAU,SAAkBjB,EAAIC,GAC9B,OAAO,EAAItnC,KAAKmoC,IAAId,EAAKC,EAAK,KAIlC,IAAK,IAAI3iB,MAAKgjB,GACRA,GAAwBx5C,eAAew2B,MACzCwiB,GAAWxiB,IAAKwiB,GAAWryC,KAAK,KAAM6yC,GAAwBhjB,MAIlE,IAAI4jB,GAAU,SAAW3hB,GACvB,IAAI4hB,EAAW,SAAkBC,EAAcvnC,GAC7C,OAAO,IAAIge,GAAIhe,EAAMunC,EAAa9mC,MAAO8mC,EAAa3iC,iBAAiBZ,KAAKujC,EAAannC,UAG3F,MAAO,CACLonC,WAAY,SAAiBC,EAAcC,GACpCA,IACHA,EAAeD,EACfA,EAAe,MAGjB,IAAIE,EAAWF,GAAgBA,EAAap1C,MACxCu1C,EAAWF,EAAar1C,MACxBuS,EAAkBvF,KAAKuF,gBACvBqhB,EAAmBrhB,EAAgBzY,YAAcyY,EAAgBqhB,iBAAmBrhB,EAAgBijC,UACpGC,EAAgBF,EAASjlC,QAAQ,KACjCkc,EAAW,IAEQ,IAAnBipB,IACFjpB,EAAW+oB,EAAS9jC,MAAMgkC,GAC1BF,EAAWA,EAAS9jC,MAAM,EAAGgkC,IAG/B,IAAI1nC,EAAU0F,EAAMzG,KAAKe,SACzBA,EAAQ2nC,WAAY,EACpB,IAAI3hB,EAAcV,EAAYsiB,eAAeJ,EAAU3hB,EAAkB7lB,EAASslB,GAAa,GAE/F,IAAKU,EACH,OAAOkhB,EAASjoC,KAAMqoC,GAGxB,IAAIO,GAAY,EAEhB,GAAKR,EAeHQ,EAAY,WAAWv4C,KAAKi4C,OAfX,CAGjB,GAAiB,mBAFjBA,EAAWjiB,EAAYwiB,WAAWN,IAGhCK,GAAY,MACP,CAEL,IAAIvT,EAAUhP,EAAYyiB,cAAcR,GACxCM,EAAY,CAAC,WAAY,SAAStlC,QAAQ+xB,GAAW,EAGnDuT,IACFN,GAAY,WAMhB,IAAIS,EAAWhiB,EAAYiiB,aAAaT,EAAU3hB,EAAkB7lB,EAASslB,GAE7E,IAAK0iB,EAASt9B,SAEZ,OADAka,GAAOG,KAAK,iCAAiCx3B,OAAOi6C,EAAU,4BACvDN,EAASjoC,KAAMqoC,GAAgBD,GAGxC,IAAIa,EAAMF,EAASt9B,SAEnB,GAAIm9B,IAAcviB,EAAY6iB,aAC5B,OAAOjB,EAASjoC,KAAMqoC,GAGxBY,EAAML,EAAYviB,EAAY6iB,aAAaD,GAAOE,mBAAmBF,GACrE,IAAIG,EAAM,QAAQ96C,OAAOg6C,EAAU,KAAKh6C,OAAO26C,GAAK36C,OAAOkxB,GAC3D,OAAO,IAAIb,GAAI,IAAIb,GAAO,IAAKxvB,OAAO86C,EAAK,KAAOA,GAAK,EAAOppC,KAAKoB,MAAOpB,KAAKuF,iBAAkBvF,KAAKoB,MAAOpB,KAAKuF,oBAKpH8jC,GAAmB,SAA0B1oC,GAI/C,OADYzL,MAAMC,QAAQwL,EAAK3N,OAAS2N,EAAK3N,MAAQkC,MAAMyL,IAIzD2oC,GAAO,CACTC,MAAO,SAAez/B,GACpB,OAAOA,GAETkC,QAAS,SAAiBw9B,EAAQpoC,GAGhC,OADAA,EAAQA,EAAMpO,MAAQ,EACfq2C,GAAiBG,GAAQpoC,IAElCjS,OAAQ,SAAgBq6C,GACtB,OAAO,IAAInvB,GAAUgvB,GAAiBG,GAAQr6C,SAWhDs6C,MAAO,SAAelO,EAAOG,EAAKgO,GAChC,IAAIp0C,EACAq0C,EACAC,EAAY,EACZN,EAAO,GAEP5N,GACFiO,EAAKjO,EACLpmC,EAAOimC,EAAMvoC,MAET02C,IACFE,EAAYF,EAAK12C,SAGnBsC,EAAO,EACPq0C,EAAKpO,GAGP,IAAK,IAAItpC,EAAIqD,EAAMrD,GAAK03C,EAAG32C,MAAOf,GAAK23C,EACrCN,EAAKx9C,KAAK,IAAIuuB,GAAUpoB,EAAG03C,EAAGrvB,OAGhC,OAAO,IAAIuB,GAAWytB,IAExBO,KAAM,SAAcP,EAAMQ,GACxB,IACIxkB,EACA/zB,EAFA6gB,EAAQ,GAWV7gB,GAPE+3C,EAAKt2C,OAAWs2C,aAAgBxrB,GAMzBwrB,EAAKt2B,QACHs2B,EAAKt2B,QAAQZ,MACfk3B,EAAKl3B,MACHk3B,EAAKl3B,MACPld,MAAMC,QAAQm0C,GACZA,EAEA,CAACA,GAZRp0C,MAAMC,QAAQm0C,EAAKt2C,OACVs2C,EAAKt2C,MAEL,CAACs2C,EAAKt2C,OAYrB,IAAI+2C,EAAY,SACZC,EAAU,OACVC,EAAY,SAEZH,EAAGjnB,QACLknB,EAAYD,EAAGjnB,OAAO,IAAMinB,EAAGjnB,OAAO,GAAGvU,KACzC07B,EAAUF,EAAGjnB,OAAO,IAAMinB,EAAGjnB,OAAO,GAAGvU,KACvC27B,EAAYH,EAAGjnB,OAAO,IAAMinB,EAAGjnB,OAAO,GAAGvU,KACzCw7B,EAAKA,EAAG13B,OAER03B,EAAKA,EAAG92B,QAGV,IAAK,IAAI/gB,EAAI,EAAGA,EAAIV,EAASpC,OAAQ8C,IAAK,CACxC,IAAIO,OAAM,EACNQ,OAAQ,EACRspB,EAAO/qB,EAASU,GAEhBqqB,aAAgBjO,GAClB7b,EAA2B,kBAAd8pB,EAAKhO,KAAoBgO,EAAKhO,KAAOgO,EAAKhO,KAAK,GAAGtb,MAC/DA,EAAQspB,EAAKtpB,QAEbR,EAAM,IAAI6nB,GAAUpoB,EAAI,GACxBe,EAAQspB,GAGNA,aAAgB5M,KAIpB4V,EAAWwkB,EAAG13B,MAAM3N,MAAM,GAEtBslC,GACFzkB,EAASx5B,KAAK,IAAIuiB,EAAY07B,EAAW/2C,GAAO,GAAO,EAAOgN,KAAKoB,MAAOpB,KAAKuF,kBAG7E0kC,GACF3kB,EAASx5B,KAAK,IAAIuiB,EAAY47B,EAAW,IAAI5vB,GAAUpoB,EAAI,IAAI,GAAO,EAAO+N,KAAKoB,MAAOpB,KAAKuF,kBAG5FykC,GACF1kB,EAASx5B,KAAK,IAAIuiB,EAAY27B,EAASx3C,GAAK,GAAO,EAAOwN,KAAKoB,MAAOpB,KAAKuF,kBAG7E6M,EAAMtmB,KAAK,IAAIomB,GAAQ,CAAC,IAAI3F,EAAS,CAAC,IAAInH,EAAQ,GAAI,QAASkgB,EAAUwkB,EAAGn9C,cAAem9C,EAAGtkC,oBAGhG,OAAO,IAAI0M,GAAQ,CAAC,IAAI3F,EAAS,CAAC,IAAInH,EAAQ,GAAI,QAASgN,EAAO03B,EAAGn9C,cAAem9C,EAAGtkC,kBAAkBb,KAAK3E,KAAKe,WAInHmpC,GAAa,SAAoB3jC,EAAI+T,EAAMxQ,GAC7C,KAAMA,aAAauQ,IACjB,KAAM,CACJnY,KAAM,WACNoJ,QAAS,6BAUb,OANY,MAARgP,EACFA,EAAOxQ,EAAEwQ,KAETxQ,EAAIA,EAAEkR,QAGD,IAAIX,GAAU9T,EAAGgU,WAAWzQ,EAAE9W,QAASsnB,IAG5C6vB,GAAgB,CAElBC,KAAM,KACN5F,MAAO,KACPiD,KAAM,KACNG,IAAK,KACL3pC,IAAK,GACLosC,IAAK,GACLC,IAAK,GACLC,KAAM,MACNC,KAAM,MACNC,KAAM,OAGR,IAAK,IAAIC,MAAOP,GACVA,GAAcv8C,eAAe88C,MAC/BP,GAAcO,IAAOR,GAAW31C,KAAK,KAAMkL,KAAKirC,IAAMP,GAAcO,MAIxEP,GAAc3mC,MAAQ,SAAUsG,EAAGsa,GACjC,IAAIumB,EAAwB,qBAANvmB,EAAoB,EAAIA,EAAEpxB,MAChD,OAAOk3C,IAAW,SAAUU,GAC1B,OAAOA,EAAI7oC,QAAQ4oC,KAClB,KAAM7gC,IAGX,IAmtCI+gC,GAntCAC,GAAS,SAAgBC,EAAO72C,GAGlC,QAFAA,EAAOgB,MAAMzD,UAAUgT,MAAM1Q,KAAKG,IAErB/E,QACX,KAAK,EACH,KAAM,CACJ+S,KAAM,WACNoJ,QAAS,kCAIf,IAAIrZ,EAEA2gB,EACA+kB,EACAqT,EACAC,EACA3wB,EACA4wB,EACAC,EAEJC,EAAQ,GACJ5B,EAAS,GAEb,IAAKv3C,EAAI,EAAGA,EAAIiC,EAAK/E,OAAQ8C,IAG3B,IAFA0lC,EAAUzjC,EAAKjC,cAEUooB,GAczB,GAJA6wB,EAAsB,MADtB5wB,EAA0C,MAD1C0wB,EAA6C,KAA5BrT,EAAQrd,KAAKxmB,iBAAmC3D,IAAdg7C,EAA0B,IAAI9wB,GAAUsd,EAAQ3kC,MAAOm4C,GAAWnwB,QAAU2c,EAAQ3c,SACjHV,KAAKxmB,iBAAoC3D,IAAf+6C,EAA2BA,EAAaF,EAAe1wB,KAAKxmB,kBACjE3D,IAAf+6C,GAAqC,KAAT5wB,GAAoD,KAArC8wB,EAAM,GAAGpwB,QAAQV,KAAKxmB,WAAoBwmB,EAAO4wB,EACxHC,EAAqB,KAAT7wB,QAA6BnqB,IAAdg7C,EAA0BxT,EAAQrd,KAAKxmB,WAAaq3C,OAGrEh7C,KAFVyiB,OAAmBziB,IAAfq5C,EAAO,KAA8B,KAATlvB,GAAeA,IAAS4wB,EAAa1B,EAAO,IAAMA,EAAOlvB,IAezF2wB,EAAgD,KAA7BG,EAAMx4B,GAAG0H,KAAKxmB,iBAAmC3D,IAAdg7C,EAA0B,IAAI9wB,GAAU+wB,EAAMx4B,GAAG5f,MAAOm4C,GAAWnwB,QAAUowB,EAAMx4B,GAAGoI,SAExI+vB,GAASC,EAAeh4C,MAAQi4C,EAAiBj4C,QAAU+3C,GAASC,EAAeh4C,MAAQi4C,EAAiBj4C,SAC9Go4C,EAAMx4B,GAAK+kB,OAhBb,CACE,QAAmBxnC,IAAf+6C,GAA4B5wB,IAAS4wB,EACvC,KAAM,CACJhpC,KAAM,WACNoJ,QAAS,sBAIbk+B,EAAOlvB,GAAQ8wB,EAAMj8C,OACrBi8C,EAAMt/C,KAAK6rC,QAtBPziC,MAAMC,QAAQjB,EAAKjC,GAAGe,QACxBkC,MAAMzD,UAAU3F,KAAKuI,MAAMH,EAAMgB,MAAMzD,UAAUgT,MAAM1Q,KAAKG,EAAKjC,GAAGe,QAgC1E,OAAoB,GAAhBo4C,EAAMj8C,OACDi8C,EAAM,IAGfl3C,EAAOk3C,EAAM1oC,KAAI,SAAUtO,GACzB,OAAOA,EAAE8O,MAAMlD,KAAKe,YACnBO,KAAKtB,KAAKe,QAAQxU,SAAW,IAAM,MAC/B,IAAIwhB,EAAU,GAAGzf,OAAOy8C,EAAQ,MAAQ,MAAO,KAAKz8C,OAAO4F,EAAM,QAGtEm3C,GAAW,CACbnnC,IAAK,WACH,IAAK,IAAI+U,EAAOzkB,UAAUrF,OAAQ+E,EAAO,IAAIgB,MAAM+jB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EhlB,EAAKglB,GAAQ1kB,UAAU0kB,GAGzB,OAAO4xB,IAAO,EAAM52C,IAEtB+P,IAAK,WACH,IAAK,IAAIqnC,EAAQ92C,UAAUrF,OAAQ+E,EAAO,IAAIgB,MAAMo2C,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFr3C,EAAKq3C,GAAS/2C,UAAU+2C,GAG1B,OAAOT,IAAO,EAAO52C,IAEvBs3C,QAAS,SAAiB5sB,EAAKtE,GAC7B,OAAOsE,EAAI/D,UAAUP,EAAKtnB,QAE5By4C,GAAI,WACF,OAAO,IAAIpxB,GAAU5a,KAAKC,KAE5BgsC,IAAK,SAAat3C,EAAGuN,GACnB,OAAO,IAAI0Y,GAAUjmB,EAAEpB,MAAQ2O,EAAE3O,MAAOoB,EAAEkmB,OAE5CrX,IAAK,SAAaoB,EAAGsnC,GACnB,GAAiB,kBAANtnC,GAA+B,kBAANsnC,EAClCtnC,EAAI,IAAIgW,GAAUhW,GAClBsnC,EAAI,IAAItxB,GAAUsxB,QACb,KAAMtnC,aAAagW,OAAgBsxB,aAAatxB,IACrD,KAAM,CACJnY,KAAM,WACNoJ,QAAS,6BAIb,OAAO,IAAI+O,GAAU5a,KAAKwD,IAAIoB,EAAErR,MAAO24C,EAAE34C,OAAQqR,EAAEiW,OAErDsxB,WAAY,SAAoB9hC,GAI9B,OAHaogC,IAAW,SAAUU,GAChC,OAAa,IAANA,IACN,IAAK9gC,KAKR6W,GAAS,CACX7wB,EAAG,SAAWsc,GACZ,OAAO,IAAI0R,GAAO,IAAK1R,aAAeqU,GAAarU,EAAIy/B,UAAYz/B,EAAIpZ,OAAO,IAEhFmsC,OAAQ,SAAgB/yB,GACtB,OAAO,IAAI2B,EAAU+9B,UAAU1/B,EAAIpZ,OAAO1F,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,SAErKA,QAAS,SAAiBqzB,EAAQorB,EAAStmB,EAAalc,GACtD,IAAIwB,EAAS4V,EAAO3tB,MAGpB,OAFAyyB,EAAmC,WAArBA,EAAYvjB,KAAoBujB,EAAYzyB,MAAQyyB,EAAYviB,QAC9E6H,EAASA,EAAOzd,QAAQ,IAAI0a,OAAO+jC,EAAQ/4C,MAAOuW,EAAQA,EAAMvW,MAAQ,IAAKyyB,GACtE,IAAI3H,GAAO6C,EAAO1C,OAAS,GAAIlT,EAAQ4V,EAAO3C,UAEvDguB,IAAK,SAAWrrB,GAcd,IAXA,IAAIzsB,EAAOgB,MAAMzD,UAAUgT,MAAM1Q,KAAKS,UAAW,GAC7CuW,EAAS4V,EAAO3tB,MAEhBi5C,EAAQ,SAAeh6C,GAEzB8Y,EAASA,EAAOzd,QAAQ,WAAW,SAAU4+C,GAC3C,IAAIl5C,EAAyB,WAAjBkB,EAAKjC,GAAGiQ,MAAqBgqC,EAAMzpC,MAAM,MAAQvO,EAAKjC,GAAGe,MAAQkB,EAAKjC,GAAGiR,QACrF,OAAOgpC,EAAMzpC,MAAM,UAAY0mC,mBAAmBn2C,GAASA,MAItDf,EAAI,EAAGA,EAAIiC,EAAK/E,OAAQ8C,IAC/Bg6C,EAAMh6C,GAIR,OADA8Y,EAASA,EAAOzd,QAAQ,MAAO,KACxB,IAAIwwB,GAAO6C,EAAO1C,OAAS,GAAIlT,EAAQ4V,EAAO3C,WAIrDmuB,GAAM,SAAW9lB,GACnB,MAAO,CACL+lB,eAAgB,SAAqBC,GACnC,IAAIC,EACAC,EAMAtkB,EAEAh2B,EACAvF,EACA8/C,EACAC,EACA5pC,EAXA6pC,EAAe,SACfC,EAAqB,mCACrBC,EAAY,CACdrgD,UAAU,GAGRsgD,EAAiBR,EAAUnpC,MAAM0pC,GAOrC,SAASE,IACP,KAAM,CACJ5qC,KAAM,WACNoJ,QAAS,yIAgBb,OAZwB,GAApB9W,UAAUrF,QACRqF,UAAU,GAAGxB,MAAM7D,OAAS,GAC9B29C,IAGFR,EAAQ93C,UAAU,GAAGxB,OACZwB,UAAUrF,OAAS,EAC5B29C,IAEAR,EAAQp3C,MAAMzD,UAAUgT,MAAM1Q,KAAKS,UAAW,GAGxCq4C,GACN,IAAK,YACHN,EAAuB,oCACvB,MAEF,IAAK,WACHA,EAAuB,oCACvB,MAEF,IAAK,kBACHA,EAAuB,sCACvB,MAEF,IAAK,eACHA,EAAuB,sCACvB,MAEF,IAAK,UACL,IAAK,oBACHG,EAAe,SACfH,EAAuB,4BACvBI,EAAqB,2CACrB,MAEF,QACE,KAAM,CACJzqC,KAAM,WACNoJ,QAAS,oHAMf,IAFA2c,EAAW,8DAAkE35B,OAAOo+C,EAAc,oBAAsBp+C,OAAOi+C,EAAsB,KAEhJt6C,EAAI,EAAGA,EAAIq6C,EAAMn9C,OAAQ8C,GAAK,EAC7Bq6C,EAAMr6C,aAAc4pB,IACtBnvB,EAAQ4/C,EAAMr6C,GAAGe,MAAM,GACvBw5C,EAAWF,EAAMr6C,GAAGe,MAAM,KAE1BtG,EAAQ4/C,EAAMr6C,GACdu6C,OAAWr8C,GAGPzD,aAAiB0V,KAAmB,IAANnQ,GAAWA,EAAI,IAAMq6C,EAAMn9C,cAAwBgB,IAAbq8C,GAA6BA,aAAoBnyB,KACzHyyB,IAGFL,EAAgBD,EAAWA,EAAStpC,MAAM0pC,GAAmB,IAAN36C,EAAU,KAAO,OACxE4Q,EAAQnW,EAAMmW,MACdolB,GAAY,iBAAkB35B,OAAOm+C,EAAe,kBAAoBn+C,OAAO5B,EAAMkX,QAAS,KAAMtV,OAAOuU,EAAQ,EAAI,kBAAmBvU,OAAOuU,EAAO,KAAQ,GAAI,MAMtK,OAHAolB,GAAY,KAAK35B,OAAOo+C,EAAc,mBAAmBp+C,OAAOq+C,EAAoB,4BACpF1kB,EAAWkhB,mBAAmBlhB,GAC9BA,EAAW,sBAAsB35B,OAAO25B,GACjC,IAAItJ,GAAI,IAAIb,GAAO,IAAIxvB,OAAO25B,EAAU,KAAMA,GAAU,EAAOjoB,KAAKoB,MAAOpB,KAAKuF,iBAAkBvF,KAAKoB,MAAOpB,KAAKuF,oBAK5HwnC,GAAM,SAAajjC,EAAGkjC,GACxB,OAAOljC,aAAakjC,EAAOp/B,EAAQC,KAAOD,EAAQE,OAGhDm/B,GAAS,SAAgBnjC,EAAGwQ,GAC9B,QAAanqB,IAATmqB,EACF,KAAM,CACJpY,KAAM,WACNoJ,QAAS,mDAMb,GAAoB,kBAFpBgP,EAA6B,kBAAfA,EAAKtnB,MAAqBsnB,EAAKtnB,MAAQsnB,GAGnD,KAAM,CACJpY,KAAM,WACNoJ,QAAS,2DAIb,OAAOxB,aAAauQ,IAAavQ,EAAEwQ,KAAKX,GAAGW,GAAQ1M,EAAQC,KAAOD,EAAQE,OAGxEo/B,GAAQ,CACVC,UAAW,SAAmBrjC,GAC5B,OAAOijC,GAAIjjC,EAAGsP,KAEhBg0B,QAAS,SAAiBtjC,GACxB,OAAOijC,GAAIjjC,EAAG1H,IAEhBirC,SAAU,SAAkBvjC,GAC1B,OAAOijC,GAAIjjC,EAAGuQ,KAEhBizB,SAAU,SAAkBxjC,GAC1B,OAAOijC,GAAIjjC,EAAGgU,KAEhByvB,UAAW,SAAmBzjC,GAC5B,OAAOijC,GAAIjjC,EAAG8D,IAEhB4/B,MAAO,SAAe1jC,GACpB,OAAOijC,GAAIjjC,EAAG6U,KAEhB8uB,QAAS,SAAiB3jC,GACxB,OAAOmjC,GAAOnjC,EAAG,OAEnB4jC,aAAc,SAAsB5jC,GAClC,OAAOmjC,GAAOnjC,EAAG,MAEnB6jC,KAAM,SAAc7jC,GAClB,OAAOmjC,GAAOnjC,EAAG,OAEnBmjC,OAAQA,GACR3yB,KAAM,SAAcsE,EAAKgvB,GACvB,KAAMhvB,aAAevE,IACnB,KAAM,CACJnY,KAAM,WACNoJ,QAAS,8CAA8Chd,OAAOswB,aAAetD,GAAY,oCAAsC,KAcnI,OARIsyB,EAFAA,EACEA,aAAiBhgC,EACXggC,EAAM56C,MAEN46C,EAAM1qC,QAGR,GAGH,IAAImX,GAAUuE,EAAI5rB,MAAO46C,IAElCC,WAAY,SAAiB/jC,GAC3B,OAAO,IAAIiE,EAAUjE,EAAEwQ,QAIvBwzB,GAAY,SAAWznB,GACzB,IAAIxV,EAAY,CACdgB,iBAAkBA,GAClBwK,eAAgBA,IAclB,OAXAxK,GAAiBjB,YAAY4yB,IAC7B3xB,GAAiB3Q,IAAI,UAAW4Q,GAAYnN,KAAKpQ,KAAKud,KACtDD,GAAiBjB,YAAYlkB,IAC7BmlB,GAAiBjB,YAAYg2B,IAC7B/0B,GAAiBjB,YAAYo3B,GAAQ3hB,IACrCxU,GAAiBjB,YAAY04B,IAC7Bz3B,GAAiBjB,YAAYu5B,IAC7Bt4B,GAAiBjB,YAAYy6B,IAC7Bx5B,GAAiBjB,YAAY+P,IAC7B9O,GAAiBjB,YAAYu7B,MAC7Bt6B,GAAiBjB,YAAYs8B,IACtBr8B,GAGLk9B,GAAkB,SAAW1nB,GA8L/B,OA3LA,WACE,SAAS2nB,EAAgBxgD,GACvBkE,EAAgBsO,KAAMguC,GAEtBhuC,KAAKiuC,KAAO,GACZjuC,KAAKkuC,UAAY1gD,EAAQ4S,SACzBJ,KAAKmuC,aAAe3gD,EAAQ4gD,YAC5BpuC,KAAKquC,yBAA2B7gD,EAAQ8gD,wBAEpC9gD,EAAQ+gD,oBACVvuC,KAAKwuC,mBAAqBhhD,EAAQ+gD,kBAAkBjhD,QAAQ,MAAO,MAGrE0S,KAAKyuC,gBAAkBjhD,EAAQkhD,eAC/B1uC,KAAK2uC,aAAenhD,EAAQmhD,aAExBnhD,EAAQohD,oBACV5uC,KAAK6uC,mBAAqBrhD,EAAQohD,kBAAkBthD,QAAQ,MAAO,MAGjEE,EAAQshD,mBACV9uC,KAAK+uC,mBAAqBvhD,EAAQshD,kBAAkBxhD,QAAQ,MAAO,KAEQ,MAAvE0S,KAAK+uC,mBAAmBnpC,OAAO5F,KAAK+uC,mBAAmB5/C,OAAS,KAClE6Q,KAAK+uC,oBAAsB,MAG7B/uC,KAAK+uC,mBAAqB,GAG5B/uC,KAAKgvC,mBAAqBxhD,EAAQyhD,kBAClCjvC,KAAKkvC,+BAAiC7oB,EAAY8oB,wBAClDnvC,KAAKovC,YAAc,EACnBpvC,KAAKqvC,QAAU,EAuJjB,OApJA58C,EAAau7C,EAAiB,CAAC,CAC7Bx7C,IAAK,iBACLQ,MAAO,SAAwBsd,GAS7B,OARItQ,KAAK6uC,oBAAgE,IAA1Cv+B,EAAKhN,QAAQtD,KAAK6uC,sBAGxB,QAFvBv+B,EAAOA,EAAKoS,UAAU1iB,KAAK6uC,mBAAmB1/C,SAErCyW,OAAO,IAAkC,MAAnB0K,EAAK1K,OAAO,KACzC0K,EAAOA,EAAKoS,UAAU,KAInBpS,IAER,CACD9d,IAAK,oBACLQ,MAAO,SAA2BqY,GAGhC,OAFAA,EAAWA,EAAS/d,QAAQ,MAAO,KACnC+d,EAAWrL,KAAKsvC,eAAejkC,IACvBrL,KAAK+uC,oBAAsB,IAAM1jC,IAE1C,CACD7Y,IAAK,MACLQ,MAAO,SAAamO,EAAOZ,EAAUa,EAAO4M,GAE1C,GAAK7M,EAAL,CAIA,IAAI0K,EACA0jC,EACAC,EACAC,EACAx9C,EAEJ,GAAIsO,GAAYA,EAAS8K,SAAU,CACjC,IAAIqkC,EAAc1vC,KAAKmuC,aAAa5tC,EAAS8K,UAe7C,GAbIrL,KAAKquC,yBAAyB9tC,EAAS8K,aAEzCjK,GAASpB,KAAKquC,yBAAyB9tC,EAAS8K,WAEpC,IACVjK,EAAQ,GAIVsuC,EAAcA,EAAYjrC,MAAMzE,KAAKquC,yBAAyB9tC,EAAS8K,iBAIrDlb,IAAhBu/C,EACF,OAKFD,GADAF,GADAG,EAAcA,EAAYhtB,UAAU,EAAGthB,IACb0B,MAAM,OACJysC,EAAYpgD,OAAS,GAMnD,GAFAqgD,GADA3jC,EAAQ1K,EAAM2B,MAAM,OACJ+I,EAAM1c,OAAS,GAE3BoR,GAAYA,EAAS8K,SACvB,GAAK2C,EAaH,IAAK/b,EAAI,EAAGA,EAAI4Z,EAAM1c,OAAQ8C,IAC5B+N,KAAK2vC,oBAAoBC,WAAW,CAClCC,UAAW,CACT9lC,KAAM/J,KAAKovC,YAAcn9C,EAAI,EAC7B+X,OAAc,IAAN/X,EAAU+N,KAAKqvC,QAAU,GAEnCt/B,SAAU,CACRhG,KAAMwlC,EAAYpgD,OAAS8C,EAC3B+X,OAAc,IAAN/X,EAAUw9C,EAActgD,OAAS,GAE3C8Y,OAAQjI,KAAK8vC,kBAAkBvvC,EAAS8K,iBAtB5CrL,KAAK2vC,oBAAoBC,WAAW,CAClCC,UAAW,CACT9lC,KAAM/J,KAAKovC,YAAc,EACzBplC,OAAQhK,KAAKqvC,SAEft/B,SAAU,CACRhG,KAAMwlC,EAAYpgD,OAClB6a,OAAQylC,EAActgD,QAExB8Y,OAAQjI,KAAK8vC,kBAAkBvvC,EAAS8K,YAmBzB,IAAjBQ,EAAM1c,OACR6Q,KAAKqvC,SAAWG,EAAQrgD,QAExB6Q,KAAKovC,aAAevjC,EAAM1c,OAAS,EACnC6Q,KAAKqvC,QAAUG,EAAQrgD,QAGzB6Q,KAAKiuC,KAAKniD,KAAKqV,MAEhB,CACD3O,IAAK,UACLQ,MAAO,WACL,OAA4B,IAArBgN,KAAKiuC,KAAK9+C,SAElB,CACDqD,IAAK,QACLQ,MAAO,SAAe+N,GAMpB,GALAf,KAAK2vC,oBAAsB,IAAI3vC,KAAKkvC,+BAA+B,CACjEa,KAAM/vC,KAAKyuC,gBACXuB,WAAY,OAGVhwC,KAAKgvC,mBACP,IAAK,IAAI3jC,KAAYrL,KAAKmuC,aACxB,GAAInuC,KAAKmuC,aAAavgD,eAAeyd,GAAW,CAC9C,IAAIpD,EAASjI,KAAKmuC,aAAa9iC,GAE3BrL,KAAKquC,yBAAyBhjC,KAChCpD,EAASA,EAAOxD,MAAMzE,KAAKquC,yBAAyBhjC,KAGtDrL,KAAK2vC,oBAAoBM,iBAAiBjwC,KAAK8vC,kBAAkBzkC,GAAWpD,GAOlF,GAFAjI,KAAKkuC,UAAUjtC,OAAOF,EAASf,MAE3BA,KAAKiuC,KAAK9+C,OAAS,EAAG,CACxB,IAAIw/C,EACAuB,EAAmBriD,KAAKsiD,UAAUnwC,KAAK2vC,oBAAoBS,UAE3DpwC,KAAK2uC,aACPA,EAAe3uC,KAAK2uC,aACX3uC,KAAKwuC,qBACdG,EAAe3uC,KAAKwuC,oBAGtBxuC,KAAK2uC,aAAeA,EACpB3uC,KAAKqwC,UAAYH,EAGnB,OAAOlwC,KAAKiuC,KAAK3sC,KAAK,QAInB0sC,EAxLT,IA8LEsC,GAAmB,SAAWtC,EAAiB3nB,GA8FjD,OA3FA,WACE,SAASkqB,EAAiB/iD,GACxBkE,EAAgBsO,KAAMuwC,GAEtBvwC,KAAKxS,QAAUA,EAoFjB,OAjFAiF,EAAa89C,EAAkB,CAAC,CAC9B/9C,IAAK,QACLQ,MAAO,SAAeoN,EAAU5S,EAAS2f,GACvC,IAAI4gC,EAAkB,IAAIC,EAAgB,CACxCM,wBAAyBnhC,EAAQ2vB,qBACjC18B,SAAUA,EACVguC,YAAajhC,EAAQ1B,SACrB8iC,kBAAmBvuC,KAAKxS,QAAQ+gD,kBAChCI,aAAc3uC,KAAKxS,QAAQmhD,aAC3BD,eAAgB1uC,KAAKxS,QAAQgjD,wBAC7B5B,kBAAmB5uC,KAAKxS,QAAQohD,kBAChCE,kBAAmB9uC,KAAKxS,QAAQshD,kBAChCG,kBAAmBjvC,KAAKxS,QAAQyhD,kBAChCwB,mBAAoBzwC,KAAKxS,QAAQijD,mBACjCC,oBAAqB1wC,KAAKxS,QAAQkjD,sBAEhC/wB,EAAMouB,EAAgB7qC,MAAM1V,GAYhC,OAXAwS,KAAKqwC,UAAYtC,EAAgBsC,UACjCrwC,KAAK2uC,aAAeZ,EAAgBY,aAEhC3uC,KAAKxS,QAAQmjD,yBACf3wC,KAAK2wC,uBAAyB5C,EAAgB+B,kBAAkB9vC,KAAKxS,QAAQmjD,8BAGxCxgD,IAAnC6P,KAAKxS,QAAQohD,wBAAyDz+C,IAAtB6P,KAAK2uC,eACvD3uC,KAAK2uC,aAAeZ,EAAgBuB,eAAetvC,KAAK2uC,eAGnDhvB,EAAM3f,KAAK4wC,oBAEnB,CACDp+C,IAAK,kBACLQ,MAAO,WACL,IAAI27C,EAAe3uC,KAAK2uC,aAExB,GAAI3uC,KAAKxS,QAAQkjD,oBAAqB,CACpC,QAAuBvgD,IAAnB6P,KAAKqwC,UACP,MAAO,GAGT1B,EAAe,gCAAgCrgD,OAAO+3B,EAAY6iB,aAAalpC,KAAKqwC,YAGtF,OAAI1B,EACK,wBAAwBrgD,OAAOqgD,EAAc,OAG/C,KAER,CACDn8C,IAAK,uBACLQ,MAAO,WACL,OAAOgN,KAAKqwC,YAEb,CACD79C,IAAK,uBACLQ,MAAO,SAA8Bq9C,GACnCrwC,KAAKqwC,UAAYA,IAElB,CACD79C,IAAK,WACLQ,MAAO,WACL,OAAOgN,KAAKxS,QAAQkjD,sBAErB,CACDl+C,IAAK,kBACLQ,MAAO,WACL,OAAOgN,KAAK2uC,eAEb,CACDn8C,IAAK,oBACLQ,MAAO,WACL,OAAOgN,KAAKxS,QAAQgjD,0BAErB,CACDh+C,IAAK,mBACLQ,MAAO,WACL,OAAOgN,KAAK2wC,2BAITJ,EAxFT,IA8FEM,GAAgB,SAAW39B,GAC7B,IACI49B,EADAtjD,EAAUgH,UAAUrF,OAAS,QAAsBgB,IAAjBqE,UAAU,GAAmBA,UAAU,GAAK,GAE9E+f,EAAY/mB,EAAQ+mB,UACpBw8B,EAAU,IAAIlhC,GAASoB,KAAKzjB,GAcL,WAAvB4D,EAAQmjB,IAA4Brf,MAAMC,QAAQof,KACpDA,EAAYjiB,OAAOwe,KAAKyD,GAAW7R,KAAI,SAAUgV,GAC/C,IAAI1kB,EAAQuhB,EAAUmD,GAUtB,OARM1kB,aAAiB0yB,GAAK/X,QACpB3a,aAAiB0yB,GAAK7J,aAC1B7oB,EAAQ,IAAI0yB,GAAK7J,WAAW,CAAC7oB,KAG/BA,EAAQ,IAAI0yB,GAAK/X,MAAM,CAAC3a,KAGnB,IAAI0yB,GAAKrX,YAAY,IAAI/f,OAAOopB,GAAI1kB,GAAO,EAAO,KAAM,MAEjE+9C,EAAQ5/B,OAAS,CAAC,IAAIuU,GAAKxT,QAAQ,KAAMqC,KAG3C,IAIInQ,EACA4sC,EALAC,EAAa,CAAC,IAAIxzB,GAASgW,oBAAuB,IAAIhW,GAAS2Y,6BAA4B,GAAO,IAAI3Y,GAAS4Y,cAAiB,IAAI5Y,GAASC,aAAa,CAC5JnxB,SAAU4hB,QAAQ3gB,EAAQjB,aAExB2kD,EAAkB,GAStB,GAAI1jD,EAAQ+vB,cAAe,CACzByzB,EAAkBxjD,EAAQ+vB,cAAc/b,UAExC,IAAK,IAAIvP,EAAI,EAAGA,EAAI,EAAGA,IAGrB,IAFA++C,EAAgBG,QAET/sC,EAAI4sC,EAAgB1wC,OACrB8D,EAAEgtC,iBACM,IAANn/C,IAA2C,IAAhCi/C,EAAgB5tC,QAAQc,KACrC8sC,EAAgBplD,KAAKsY,GACrBA,EAAEwoB,IAAI1Z,IAGE,IAANjhB,IAAsC,IAA3Bg/C,EAAW3tC,QAAQc,KAC5BA,EAAEitC,aACJJ,EAAW39B,QAAQlP,GAEnB6sC,EAAWnlD,KAAKsY,IAU5B,IAFA0sC,EAAY59B,EAAKvO,KAAKosC,GAEb9+C,EAAI,EAAGA,EAAIg/C,EAAW9hD,OAAQ8C,IACrCg/C,EAAWh/C,GAAG26B,IAAIkkB,GAIpB,GAAItjD,EAAQ+vB,cAGV,IAFAyzB,EAAgBG,QAET/sC,EAAI4sC,EAAgB1wC,QACM,IAA3B2wC,EAAW3tC,QAAQc,KAA6C,IAAhC8sC,EAAgB5tC,QAAQc,IAC1DA,EAAEwoB,IAAIkkB,GAKZ,OAAOA,GAGLQ,GAAY,SAAWf,GA+EzB,OA5EA,WACE,SAASgB,EAAUr+B,EAAM/F,GACvBzb,EAAgBsO,KAAMuxC,GAEtBvxC,KAAKkT,KAAOA,EACZlT,KAAKmN,QAAUA,EAoEjB,OAjEA1a,EAAa8+C,EAAW,CAAC,CACvB/+C,IAAK,QACLQ,MAAO,SAAexF,GACpB,IAAIsjD,EAEAR,EADAvlC,EAAS,GAGb,IACE+lC,EAAYD,GAAc7wC,KAAKkT,KAAM1lB,GACrC,MAAOsC,GACP,MAAM,IAAIob,EAAUpb,EAAGkQ,KAAKmN,SAG9B,IACE,IAAI5gB,EAAW4hB,QAAQ3gB,EAAQjB,UAE3BA,GACFo5B,GAAOG,KAAK,mIAGd,IAAI0rB,EAAe,CACjBjlD,SAAUA,EACVuE,gBAAiBtD,EAAQsD,gBACzB9D,YAAamhB,QAAQ3gB,EAAQR,aAC7B6U,aAAc,GAGZrU,EAAQ6iD,WACVC,EAAmB,IAAIC,EAAiB/iD,EAAQ6iD,WAChDtlC,EAAO4U,IAAM2wB,EAAiBptC,MAAM4tC,EAAWU,EAAcxxC,KAAKmN,UAElEpC,EAAO4U,IAAMmxB,EAAU5tC,MAAMsuC,GAE/B,MAAO1hD,GACP,MAAM,IAAIob,EAAUpb,EAAGkQ,KAAKmN,SAG9B,GAAI3f,EAAQ+vB,cAGV,IAFA,IAAIk0B,EAAiBjkD,EAAQ+vB,cAAcm0B,oBAElCz/C,EAAI,EAAGA,EAAIw/C,EAAetiD,OAAQ8C,IACzC8Y,EAAO4U,IAAM8xB,EAAex/C,GAAG2qC,QAAQ7xB,EAAO4U,IAAK,CACjD0wB,UAAWC,EACX9iD,QAASA,EACT2f,QAASnN,KAAKmN,UAWpB,IAAK,IAAI4iC,KANLviD,EAAQ6iD,YACVtlC,EAAOrI,IAAM4tC,EAAiBqB,wBAGhC5mC,EAAOoC,QAAU,GAEAnN,KAAKmN,QAAQykC,MACxB5xC,KAAKmN,QAAQykC,MAAMhkD,eAAemiD,IAASA,IAAS/vC,KAAKmN,QAAQ0kC,cACnE9mC,EAAOoC,QAAQrhB,KAAKikD,GAIxB,OAAOhlC,MAIJwmC,EAzET,IA+EEO,GAAgB,SAAWzrB,GA+K7B,OApKA,WACE,SAAS0rB,EAAcv0B,EAAMzc,EAASixC,GACpCtgD,EAAgBsO,KAAM+xC,GAEtB/xC,KAAKwd,KAAOA,EACZxd,KAAK6xC,aAAeG,EAAa3mC,SACjCrL,KAAKvT,MAAQsU,EAAQtU,OAAS,GAE9BuT,KAAKyL,SAAW,GAEhBzL,KAAK88B,qBAAuB,GAE5B98B,KAAKiyC,KAAOlxC,EAAQkxC,KACpBjyC,KAAKkM,MAAQ,KACblM,KAAKe,QAAUA,EAEff,KAAKkyC,MAAQ,GAEblyC,KAAK4xC,MAAQ,GA+If,OAnIAn/C,EAAas/C,EAAe,CAAC,CAC3Bv/C,IAAK,OACLQ,MAAO,SAAcsd,EAAM6W,EAAoB5hB,EAAiB87B,EAAevnB,GAC7E,IAAIg4B,EAAgB9xC,KAChBmyC,EAAenyC,KAAKe,QAAQwc,cAAc60B,OAC9CpyC,KAAKkyC,MAAMpmD,KAAKwkB,GAEhB,IAAI+hC,EAAiB,SAAwBviD,EAAGojB,EAAM4a,GACpDgkB,EAAcI,MAAMp+B,OAAOg+B,EAAcI,MAAM5uC,QAAQgN,GAAO,GAE9D,IAAIgiC,EAAqBxkB,IAAagkB,EAAcD,aAEhDxQ,EAAcpT,UAAYn+B,GAC5BgqB,EAAS,KAAM,CACb1H,MAAO,KACN,EAAO,MACVuT,GAAO3jB,KAAK,YAAY1T,OAAOw/B,EAAU,gFAKpCgkB,EAAcF,MAAM9jB,IAAcuT,EAAc7yB,SACnDsjC,EAAcF,MAAM9jB,GAAY,CAC9B5a,KAAMA,EACN1lB,QAAS6zC,IAITvxC,IAAMgiD,EAAc5lC,QACtB4lC,EAAc5lC,MAAQpc,GAGxBgqB,EAAShqB,EAAGojB,EAAMo/B,EAAoBxkB,KAItCykB,EAAc,CAChBzlD,YAAakT,KAAKe,QAAQjU,YAC1B07C,UAAWjjC,EAAgBijC,UAC3B37C,SAAU0Y,EAAgB1Y,SAC1BglD,aAActsC,EAAgBssC,cAE5B9qB,EAAcV,EAAYsiB,eAAer4B,EAAM/K,EAAgBqhB,iBAAkB5mB,KAAKe,QAASslB,GAEnG,GAAKU,EAAL,CAOA,IAsDIyrB,EAtDAC,EAAmB,SAA0BC,GAC/C,IAAItpB,EACAupB,EAAmBD,EAAWrnC,SAC9BI,EAAWinC,EAAWjnC,SAASne,QAAQ,UAAW,IAStDilD,EAAY3rB,iBAAmBG,EAAYlH,QAAQ8yB,GAE/CJ,EAAYzlD,cACdylD,EAAY1lD,SAAWk6B,EAAYzlB,KAAKwwC,EAAc/wC,QAAQlU,UAAY,GAAIk6B,EAAY6rB,SAASL,EAAY3rB,iBAAkB2rB,EAAY/J,aAExIzhB,EAAY8rB,eAAeN,EAAY1lD,WAAak6B,EAAY+rB,4BACnEP,EAAY1lD,SAAWk6B,EAAYzlB,KAAKixC,EAAY/J,UAAW+J,EAAY1lD,YAI/E0lD,EAAYlnC,SAAWsnC,EACvB,IAAII,EAAS,IAAIljC,GAASM,MAAM2hC,EAAc/wC,SAC9CgyC,EAAO9V,gBAAiB,EACxB6U,EAAcrmC,SAASknC,GAAoBlnC,GAEvClG,EAAgBwa,WAAashB,EAActhB,aAC7CwyB,EAAYxyB,WAAY,GAGtBshB,EAAcvhB,UAChBsJ,EAAS+oB,EAAaa,WAAWvnC,EAAUsnC,EAAQjB,EAAezQ,EAAcK,WAAY6Q,cAEtErnC,EACpBmnC,EAAejpB,EAAQ,KAAMupB,GAE7BN,EAAe,KAAMjpB,EAAQupB,GAEtBtR,EAAc7yB,OACvB6jC,EAAe,KAAM5mC,EAAUknC,IAI3Bb,EAAcF,MAAMe,IAAsBb,EAAcF,MAAMe,GAAkBnlD,QAAQ+/B,UAAa8T,EAAc9T,SAGrH,IAAIsO,GAAOkX,EAAQjB,EAAeS,GAAazkD,MAAM2d,GAAU,SAAU3b,EAAGojB,GAC1Em/B,EAAeviD,EAAGojB,EAAMy/B,MAH1BN,EAAe,KAAMP,EAAcF,MAAMe,GAAkBz/B,KAAMy/B,IAUnE5xC,EAAU0F,EAAMzG,KAAKe,SAErBomB,IACFpmB,EAAQmmB,IAAMma,EAAcvhB,SAAW,MAAQ,SAG7CuhB,EAAcvhB,UAChB/e,EAAQkxC,KAAO,yBACfO,EAAUL,EAAac,WAAW3iC,EAAM/K,EAAgBqhB,iBAAkB7lB,EAASslB,EAAaU,IAEhGyrB,EAAUzrB,EAAYmsB,SAAS5iC,EAAM/K,EAAgBqhB,iBAAkB7lB,EAASslB,GAAa,SAAUxe,EAAK6qC,GACtG7qC,EACFwqC,EAAexqC,GAEf4qC,EAAiBC,MAKnBF,GACFA,EAAQ5qC,KAAK6qC,EAAkBJ,QAjF/BA,EAAe,CACb/mC,QAAS,qCAAqChd,OAAOgiB,SAqFtDyhC,EAjKT,IAuKEoB,GAAS,SAAW9sB,EAAakrB,EAAWQ,GAwC9C,OAvCa,SAASqB,EAAO5nC,EAAOhe,EAASssB,GAQ3C,GAPuB,oBAAZtsB,GACTssB,EAAWtsB,EACXA,EAAUkd,EAAY1K,KAAKxS,QAAS,KAEpCA,EAAUkd,EAAY1K,KAAKxS,QAASA,GAAW,KAG5CssB,EAAU,CACb,IAAIplB,EAAOsL,KACX,OAAO,IAAIgH,SAAQ,SAAUU,EAASC,GACpCyrC,EAAOr/C,KAAKW,EAAM8W,EAAOhe,GAAS,SAAUqa,EAAKtG,GAC3CsG,EACFF,EAAOE,GAEPH,EAAQnG,SAKdvB,KAAKlS,MAAM0d,EAAOhe,GAAS,SAAUqa,EAAKqL,EAAM/F,EAAS3f,GACvD,GAAIqa,EACF,OAAOiS,EAASjS,GAGlB,IAAIkD,EAEJ,IAEEA,EADgB,IAAIwmC,EAAUr+B,EAAM/F,GACjBjK,MAAM1V,GACzB,MAAOqa,GACP,OAAOiS,EAASjS,GAGlBiS,EAAS,KAAM/O,QAWnBsoC,GAEJ,WACE,SAASA,EAAc71B,GACrB9rB,EAAgBsO,KAAMqzC,GAEtBrzC,KAAKwd,KAAOA,EACZxd,KAAKyd,SAAW,GAChBzd,KAAK08B,cAAgB,GACrB18B,KAAKyxC,eAAiB,GACtBzxC,KAAKszC,iBAAmB,GACxBtzC,KAAKumB,aAAe,GACpBvmB,KAAKzO,UAAY,EACjByO,KAAKuzC,YAAc,GACnBvzC,KAAKoyC,OAAS,IAAI50B,EAAKg2B,aAAah2B,GAwLtC,OAhLA/qB,EAAa4gD,EAAe,CAAC,CAC3B7gD,IAAK,aACLQ,MAAO,SAAoB22B,GACzB,GAAIA,EACF,IAAK,IAAI13B,EAAI,EAAGA,EAAI03B,EAAQx6B,OAAQ8C,IAClC+N,KAAKmpB,UAAUQ,EAAQ13B,MAU5B,CACDO,IAAK,YACLQ,MAAO,SAAmBo2B,EAAQ/d,EAAUwG,GAC1C7R,KAAKszC,iBAAiBxnD,KAAKs9B,GAEvB/d,IACFrL,KAAKuzC,YAAYloC,GAAY+d,GAG3BA,EAAOqqB,SACTrqB,EAAOqqB,QAAQzzC,KAAKwd,KAAMxd,KAAM6R,GAAoB7R,KAAKwd,KAAK3M,UAAUgB,oBAQ3E,CACDrf,IAAK,MACLQ,MAAO,SAAaqY,GAClB,OAAOrL,KAAKuzC,YAAYloC,KAQzB,CACD7Y,IAAK,aACLQ,MAAO,SAAoBwO,GACzBxB,KAAKyd,SAAS3xB,KAAK0V,KAQpB,CACDhP,IAAK,kBACLQ,MAAO,SAAyB0gD,EAAcC,GAC5C,IAAIC,EAEJ,IAAKA,EAAkB,EAAGA,EAAkB5zC,KAAK08B,cAAcvtC,UACzD6Q,KAAK08B,cAAckX,GAAiBD,UAAYA,GADiBC,KAMvE5zC,KAAK08B,cAAc5oB,OAAO8/B,EAAiB,EAAG,CAC5CF,aAAcA,EACdC,SAAUA,MASb,CACDnhD,IAAK,mBACLQ,MAAO,SAA0B6gD,EAAeF,GAC9C,IAAIC,EAEJ,IAAKA,EAAkB,EAAGA,EAAkB5zC,KAAKyxC,eAAetiD,UAC1D6Q,KAAKyxC,eAAemC,GAAiBD,UAAYA,GADiBC,KAMxE5zC,KAAKyxC,eAAe39B,OAAO8/B,EAAiB,EAAG,CAC7CC,cAAeA,EACfF,SAAUA,MAQb,CACDnhD,IAAK,iBACLQ,MAAO,SAAwB8gD,GAC7B9zC,KAAKumB,aAAaz6B,KAAKgoD,KAQxB,CACDthD,IAAK,mBACLQ,MAAO,WAGL,IAFA,IAAI0pC,EAAgB,GAEXzqC,EAAI,EAAGA,EAAI+N,KAAK08B,cAAcvtC,OAAQ8C,IAC7CyqC,EAAc5wC,KAAKkU,KAAK08B,cAAczqC,GAAGyhD,cAG3C,OAAOhX,IAQR,CACDlqC,IAAK,oBACLQ,MAAO,WAGL,IAFA,IAAIy+C,EAAiB,GAEZx/C,EAAI,EAAGA,EAAI+N,KAAKyxC,eAAetiD,OAAQ8C,IAC9Cw/C,EAAe3lD,KAAKkU,KAAKyxC,eAAex/C,GAAG4hD,eAG7C,OAAOpC,IAQR,CACDj/C,IAAK,cACLQ,MAAO,WACL,OAAOgN,KAAKyd,WAEb,CACDjrB,IAAK,UACLQ,MAAO,WACL,IAAI0B,EAAOsL,KACX,MAAO,CACLmxC,MAAO,WAEL,OADAz8C,EAAKnD,UAAY,EACVmD,EAAK+oB,SAAS/oB,EAAKnD,WAE5B+O,IAAK,WAEH,OADA5L,EAAKnD,UAAY,EACVmD,EAAK+oB,SAAS/oB,EAAKnD,cAU/B,CACDiB,IAAK,kBACLQ,MAAO,WACL,OAAOgN,KAAKumB,iBAIT8sB,EApMT,GAyMA,SAASU,GAAqBv2B,EAAMw2B,GAKlC,OAJIA,GAAenJ,KACjBA,GAAK,IAAIwI,GAAc71B,IAGlBqtB,GAGT,IA+JIr9C,GACAymD,GAhKA9jC,GAAQ,SAAWkW,EAAakrB,EAAWQ,GA8E7C,OA7EY,SAASjkD,EAAM0d,EAAOhe,EAASssB,GAQzC,GAPuB,oBAAZtsB,GACTssB,EAAWtsB,EACXA,EAAUkd,EAAY1K,KAAKxS,QAAS,KAEpCA,EAAUkd,EAAY1K,KAAKxS,QAASA,GAAW,KAG5CssB,EAAU,CACb,IAAIplB,EAAOsL,KACX,OAAO,IAAIgH,SAAQ,SAAUU,EAASC,GACpC7Z,EAAMiG,KAAKW,EAAM8W,EAAOhe,GAAS,SAAUqa,EAAKtG,GAC1CsG,EACFF,EAAOE,GAEPH,EAAQnG,SAKd,IAAIR,EACAixC,EACAz0B,EAAgB,IAAIw2B,GAAqB/zC,MAAOxS,EAAQ0mD,oBAI5D,GAHA1mD,EAAQ+vB,cAAgBA,EACxBxc,EAAU,IAAI8O,GAASM,MAAM3iB,GAEzBA,EAAQwkD,aACVA,EAAexkD,EAAQwkD,iBAClB,CACL,IAAI3mC,EAAW7d,EAAQ6d,UAAY,QAC/Bm9B,EAAYn9B,EAAS/d,QAAQ,YAAa,KAC9C0kD,EAAe,CACb3mC,SAAUA,EACVve,YAAaiU,EAAQjU,YACrBD,SAAUkU,EAAQlU,UAAY,GAC9B+5B,iBAAkB4hB,EAClBA,UAAWA,EACXqJ,aAAcxmC,IAGCxe,UAAgD,MAApCmlD,EAAanlD,SAAS4X,OAAO,KACxDutC,EAAanlD,UAAY,KAI7B,IAAIsgB,EAAU,IAAI4kC,EAAc/xC,KAAMe,EAASixC,GAC/ChyC,KAAK8xC,cAAgB3kC,EAGjB3f,EAAQm8B,SACVn8B,EAAQm8B,QAAQ/oB,SAAQ,SAAUwoB,GAChC,IAAI+qB,EACA1oC,EAEJ,GAAI2d,EAAOgrB,aAIT,GAHA3oC,EAAW2d,EAAOgrB,YAAY9mD,QAAQ,UAAW,KACjD6mD,EAAa52B,EAAc60B,OAAOY,WAAWvnC,EAAU1K,EAASoM,EAASic,EAAO57B,QAAS47B,EAAO/d,qBAEtEH,EACxB,OAAO4O,EAASq6B,QAGlB52B,EAAc4L,UAAUC,MAK9B,IAAIyS,GAAO96B,EAASoM,EAAS6kC,GAAclkD,MAAM0d,GAAO,SAAU1b,EAAGojB,GACnE,GAAIpjB,EACF,OAAOgqB,EAAShqB,GAGlBgqB,EAAS,KAAM5G,EAAM/F,EAAS3f,KAC7BA,KAOL6mD,GAAW,SAAWC,EAAe/tB,GAOvC+tB,EAAgB,IAAIjuB,GAAYiuB,EAAe/tB,GAC/C,IAgDIggB,EAhDAyH,EAAkBD,GAAgBuG,GAClC/D,EAAmBD,GAAiBtC,EAAiBsG,GACrD/C,EAAYD,GAAUf,GACtBwB,EAAgBD,GAAcwC,GAC9BlB,EAASD,GAAOmB,EAAe/C,GAC/BzjD,EAAQqiB,GAAMmkC,EAAe/C,EAAWQ,GACxClhC,EAAYi9B,GAAUwG,GAOtBC,EAAU,CACZjrB,QAAS,CAAC,EAAG,GAAI,GACjBxpB,KAAMA,EACN4lB,KAAMA,GACN8uB,YAAanuB,GACbW,oBAAqBA,GACrBqB,qBAAsBA,GACtBhC,YAAaiuB,EACb72B,SAAUA,GACVoe,OAAQA,GACRhrB,UAAWA,EACXhB,SAAUA,GACVm+B,gBAAiBA,EACjBuC,iBAAkBA,EAClBgB,UAAWA,EACXQ,cAAeA,EACfqB,OAAQA,EACRtlD,MAAOA,EACPod,UAAWA,EACX2lC,cAAeA,GACf7lC,MAAOA,EACPqoC,cAAeU,GACfpuB,OAAQA,IAGN8uB,EAAO,SAAclO,GACvB,OAAO,WACL,IAAK,IAAIttB,EAAOzkB,UAAUrF,OAAQ+E,EAAO,IAAIgB,MAAM+jB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EhlB,EAAKglB,GAAQ1kB,UAAU0kB,GAGzB,OAAOllB,EAAWuyC,EAAGryC,KAKrBwgD,EAAMpiD,OAAOS,OAAOwhD,GAExB,IAAK,IAAIzqC,KAAKyqC,EAAQ7uB,KAIpB,GAAiB,oBAFjB6gB,EAAIgO,EAAQ7uB,KAAK5b,IAGf4qC,EAAI5qC,EAAEtF,eAAiBiwC,EAAKlO,QAI5B,IAAK,IAAIpzC,KAFTuhD,EAAI5qC,GAAKxX,OAAOS,OAAO,MAETwzC,EAEZmO,EAAI5qC,GAAG3W,EAAEqR,eAAiBiwC,EAAKlO,EAAEpzC,IAKvC,OAAOuhD,GAKLC,GAAY,GAEZhsB,GAEJ,SAAUisB,GAGR,SAASjsB,IAGP,OAFAj3B,EAAgBsO,KAAM2oB,GAEf/zB,EAA2BoL,KAAM9M,EAAgBy1B,GAAat0B,MAAM2L,KAAMxL,YA2HnF,OAhIA5B,EAAU+1B,EAAaisB,GAQvBniD,EAAak2B,EAAa,CAAC,CACzBn2B,IAAK,0BACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,OACLQ,MAAO,SAAco0B,EAAUC,GAC7B,OAAKD,EAIEpnB,KAAK2nB,gBAAgBN,EAAWD,GAAU9W,KAHxC+W,IAKV,CACD70B,IAAK,QACLQ,MAAO,SAAes0B,EAAKplB,EAAM4X,EAAU+6B,GACzC,IAAIC,EAAM,IAAIC,eACVvkD,GAAQhD,GAAQ4C,gBAAiB5C,GAAQiD,UAW7C,SAASukD,EAAeF,EAAKh7B,EAAU+6B,GACjCC,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IACpCn7B,EAASg7B,EAAII,aAAcJ,EAAIK,kBAAkB,kBACrB,oBAAZN,GAChBA,EAAQC,EAAIG,OAAQ3tB,GAbY,oBAAzBwtB,EAAIM,kBACbN,EAAIM,iBAAiB,YAGvBnB,GAASluB,MAAM,iBAAiBz3B,OAAOg5B,EAAK,MAC5CwtB,EAAIO,KAAK,MAAO/tB,EAAK92B,GACrBskD,EAAIQ,iBAAiB,SAAUpzC,GAAQ,4CACvC4yC,EAAIS,KAAK,MAUL/nD,GAAQ4C,iBAAmB5C,GAAQiD,UAClB,IAAfqkD,EAAIG,QAAgBH,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IACxDn7B,EAASg7B,EAAII,cAEbL,EAAQC,EAAIG,OAAQ3tB,GAEb92B,EACTskD,EAAIU,mBAAqB,WACD,GAAlBV,EAAIW,YACNT,EAAeF,EAAKh7B,EAAU+6B,IAIlCG,EAAeF,EAAKh7B,EAAU+6B,KAGjC,CACDriD,IAAK,WACLQ,MAAO,WACL,OAAO,IAER,CACDR,IAAK,iBACLQ,MAAO,WACL2hD,GAAY,KAEb,CACDniD,IAAK,WACLQ,MAAO,SAAkBqY,EAAUub,EAAkBp5B,EAAS64B,GAGxDO,IAAqB5mB,KAAK6yC,eAAexnC,KAC3CA,EAAWub,EAAmBvb,GAGhCA,EAAW7d,EAAQ05B,IAAMlnB,KAAKmnB,mBAAmB9b,EAAU7d,EAAQ05B,KAAO7b,EAC1E7d,EAAUA,GAAW,GAGrB,IACIH,EADY2S,KAAK2nB,gBAAgBtc,EAAUxf,OAAOyE,SAASjD,MAC1Ci6B,IACjB5yB,EAAOsL,KACX,OAAO,IAAIgH,SAAQ,SAAUU,EAASC,GACpC,GAAIna,EAAQyD,cAAgB0jD,GAAUtnD,GACpC,IACE,IAAIqoD,EAAWf,GAAUtnD,GACzB,OAAOqa,EAAQ,CACb+D,SAAUiqC,EACVrqC,SAAUhe,EACVsoD,QAAS,CACPC,aAAc,IAAI/hD,QAGtB,MAAO/D,GACP,OAAO6X,EAAO,CACZ0D,SAAUhe,EACVie,QAAS,sBAAsBhd,OAAOjB,EAAM,eAAeiB,OAAOwB,EAAEwb,WAK1E5W,EAAKmhD,MAAMxoD,EAAMG,EAAQykD,MAAM,SAAuBnyC,EAAM81C,GAE1DjB,GAAUtnD,GAAQyS,EAElB4H,EAAQ,CACN+D,SAAU3L,EACVuL,SAAUhe,EACVsoD,QAAS,CACPC,aAAcA,QAGjB,SAAoBX,EAAQ3tB,GAC7B3f,EAAO,CACLzF,KAAM,OACNoJ,QAAS,IAAIhd,OAAOg5B,EAAK,oBAAoBh5B,OAAO2mD,EAAQ,KAC5D5nD,KAAMA,cAOTs7B,EAjIT,CAkIE3B,IAEE8uB,GAAK,SAAWnrC,EAAMorC,GAGxB,OAFAvoD,GAAUmd,EACVspC,GAAW8B,EACJptB,IAOL6qB,GAEJ,SAAUwC,GAGR,SAASxC,EAAah2B,GACpB,IAAIhb,EAOJ,OALA9Q,EAAgBsO,KAAMwzC,IAEtBhxC,EAAQ5N,EAA2BoL,KAAM9M,EAAgBsgD,GAAcz/C,KAAKiM,QACtEwd,KAAOA,EAENhb,EAYT,OAtBA5P,EAAU4gD,EAAcwC,GAaxBvjD,EAAa+gD,EAAc,CAAC,CAC1BhhD,IAAK,aACLQ,MAAO,SAAoBqY,EAAU+b,EAAUrmB,EAASslB,EAAaU,GACnE,OAAO,IAAI/f,SAAQ,SAAUivC,EAAStuC,GACpCof,EAAYmsB,SAAS7nC,EAAU+b,EAAUrmB,EAASslB,GAAaze,KAAKquC,GAASC,MAAMvuC,UAKlF6rC,EAvBT,CAwBEnrB,IAEE8tB,GAAc,SAAW34B,EAAMhwB,GACjC,IAAI4oD,EAAiB,EACjBC,EAAgB,EAChBC,EAAgB,EAChBC,EAAiB,EAOrB/oD,EAAQgpD,SAAuC,qBAArBhpD,EAAQgpD,SAA2BhpD,EAAQgpD,SAA2B,gBAAhBhpD,EAAQmD,IAAwB0lD,EAAgBE,EAE3H/oD,EAAQipD,UACXjpD,EAAQipD,QAAU,CAAC,CACjB1wB,MAAO,SAAeH,GAChBp4B,EAAQgpD,UAAYJ,GACtBM,QAAQX,IAAInwB,IAGhB5jB,KAAM,SAAc4jB,GACdp4B,EAAQgpD,UAAYH,GACtBK,QAAQX,IAAInwB,IAGhBE,KAAM,SAAcF,GACdp4B,EAAQgpD,UAAYF,GACtBI,QAAQ5wB,KAAKF,IAGjB1Z,MAAO,SAAe0Z,GAChBp4B,EAAQgpD,UAAYD,GACtBG,QAAQxqC,MAAM0Z,OAMtB,IAAK,IAAI3zB,EAAI,EAAGA,EAAIzE,EAAQipD,QAAQtnD,OAAQ8C,IAC1CurB,EAAKmI,OAAOK,YAAYx4B,EAAQipD,QAAQxkD,KAIxC0kD,GAAiB,SAAW9qD,EAAQ2xB,EAAMhwB,GAC5C,SAASopD,EAAU9mD,EAAG+mD,GACpB,IAGIC,EACA/4B,EAJA1vB,EAAK,sBAAsBC,OAAOlB,EAAUypD,GAAY,KACxDE,EAAW,qEACXrX,EAAO7zC,EAAOqC,SAASU,cAAc,OAGrCooD,EAAS,GACT3rC,EAAWvb,EAAEub,UAAYwrC,EACzBI,EAAiB5rC,EAAS5I,MAAM,oBAAoB,GACxDi9B,EAAKrxC,GAAKA,EACVqxC,EAAKwX,UAAY,qBACjBn5B,EAAU,OAAOzvB,OAAOwB,EAAEoS,MAAQ,SAAU,WAAW5T,OAAOwB,EAAEwb,SAAW,wCAA0C,uBAAwBhd,OAAO+c,EAAU,MAAO/c,OAAO2oD,EAAgB,SAE5L,IAAIE,EAAY,SAAmBrnD,EAAGmC,EAAGmlD,QAClBjnD,IAAjBL,EAAEkc,QAAQ/Z,IACZ+kD,EAAOlrD,KAAKirD,EAASzpD,QAAQ,YAAasV,SAAS9S,EAAEia,KAAM,KAAO,IAAM9X,EAAI,IAAI3E,QAAQ,YAAa8pD,GAAW9pD,QAAQ,cAAewC,EAAEkc,QAAQ/Z,MAIjJnC,EAAEia,OACJotC,EAAUrnD,EAAG,EAAG,IAChBqnD,EAAUrnD,EAAG,EAAG,QAChBqnD,EAAUrnD,EAAG,EAAG,IAChBiuB,GAAW,WAAWzvB,OAAOwB,EAAEia,KAAM,aAAazb,OAAOwB,EAAEka,OAAS,EAAG,aAAa1b,OAAO0oD,EAAO11C,KAAK,IAAK,UAG1GxR,EAAEyb,QAAUzb,EAAEkc,SAAWxe,EAAQgpD,UAAY,KAC/Cz4B,GAAW,0BAA0BzvB,OAAOwB,EAAEyb,MAAMzI,MAAM,MAAM2B,MAAM,GAAGnD,KAAK,WAGhFo+B,EAAK2X,UAAYt5B,EAEjB/vB,EAAQC,UAAUpC,EAAOqC,SAAU,CAAC,mDAAoD,yBAA0B,sBAAuB,kBAAmB,aAAc,IAAK,8BAA+B,mBAAoB,sBAAuB,kBAAmB,kBAAmB,IAAK,4BAA6B,kBAAmB,kBAAmB,aAAc,yBAA0B,IAAK,iCAAkC,kBAAmB,IAAK,2BAA4B,mBAAoB,qBAAsB,yBAA0B,aAAc,IAAK,0BAA2B,cAAe,IAAK,+BAAgC,cAAe,qBAAsB,uBAAwB,iCAAkC,KAAKoT,KAAK,MAAO,CAC9vB/S,MAAO,kBAETmxC,EAAK4X,MAAMznD,QAAU,CAAC,iCAAkC,yBAA0B,yBAA0B,qBAAsB,6BAA8B,0BAA2B,cAAe,gBAAiB,uBAAuByR,KAAK,KAEnO,gBAAhB9T,EAAQmD,MACVmmD,EAAQS,aAAY,WAClB,IAAIrpD,EAAWrC,EAAOqC,SAClB+0C,EAAO/0C,EAAS+0C,KAEhBA,IACE/0C,EAASO,eAAeJ,GAC1B40C,EAAKuU,aAAa9X,EAAMxxC,EAASO,eAAeJ,IAEhD40C,EAAKtzC,aAAa+vC,EAAMuD,EAAK7zC,YAG/BqoD,cAAcX,MAEf,KAIP,SAASY,EAAgBpnC,GACvB,IAAI3P,EAAO9U,EAAOqC,SAASO,eAAe,sBAAsBH,OAAOlB,EAAUkjB,KAE7E3P,GACFA,EAAKjR,WAAWE,YAAY+Q,GAIhC,SAASg3C,EAAYrnC,GACd9iB,EAAQoqD,gBAA6C,SAA3BpqD,EAAQoqD,eAED,YAA3BpqD,EAAQoqD,gBAA2E,oBAA3BpqD,EAAQoqD,gBACzEpqD,EAAQoqD,eAAe,SAAUtnC,GAFjConC,EAAgBpnC,GAMpB,SAASunC,EAAa/nD,EAAG+mD,GACvB,IAAIE,EAAW,mBACX1rC,EAAWvb,EAAEub,UAAYwrC,EACzBG,EAAS,GACTj5B,EAAU,GAAGzvB,OAAOwB,EAAEoS,MAAQ,SAAU,WAAW5T,OAAOwB,EAAEwb,SAAW,uCAAwC,QAAQhd,OAAO+c,GAE9H8rC,EAAY,SAAmBrnD,EAAGmC,EAAGmlD,QAClBjnD,IAAjBL,EAAEkc,QAAQ/Z,IACZ+kD,EAAOlrD,KAAKirD,EAASzpD,QAAQ,YAAasV,SAAS9S,EAAEia,KAAM,KAAO,IAAM9X,EAAI,IAAI3E,QAAQ,YAAa8pD,GAAW9pD,QAAQ,cAAewC,EAAEkc,QAAQ/Z,MAIjJnC,EAAEia,OACJotC,EAAUrnD,EAAG,EAAG,IAChBqnD,EAAUrnD,EAAG,EAAG,QAChBqnD,EAAUrnD,EAAG,EAAG,IAChBiuB,GAAW,YAAYzvB,OAAOwB,EAAEia,KAAM,aAAazb,OAAOwB,EAAEka,OAAS,EAAG,OAAO1b,OAAO0oD,EAAO11C,KAAK,QAGhGxR,EAAEyb,QAAUzb,EAAEkc,SAAWxe,EAAQgpD,UAAY,KAC/Cz4B,GAAW,kBAAkBzvB,OAAOwB,EAAEyb,QAGxCiS,EAAKmI,OAAOzZ,MAAM6R,GAGpB,SAAS7R,EAAMpc,EAAG+mD,GACXrpD,EAAQoqD,gBAA6C,SAA3BpqD,EAAQoqD,eAED,YAA3BpqD,EAAQoqD,eACjBC,EAAa/nD,EAAG+mD,GAC2B,oBAA3BrpD,EAAQoqD,gBACxBpqD,EAAQoqD,eAAe,MAAO9nD,EAAG+mD,GAJjCD,EAAU9mD,EAAG+mD,GAQjB,MAAO,CACL31C,IAAKgL,EACL4rC,OAAQH,IAKRI,GAAQ,SAAWlsD,EAAQ2B,EAASm4B,GACtC,IAAIqyB,EAAQ,KAEZ,GAAoB,gBAAhBxqD,EAAQmD,IACV,IACEqnD,EAAuC,qBAAxBnsD,EAAOosD,aAA+B,KAAOpsD,EAAOosD,aACnE,MAAOlqD,IAGX,MAAO,CACLmqD,OAAQ,SAAgB5nC,EAAMslC,EAAc1oD,EAAYiB,GACtD,GAAI6pD,EAAO,CACTryB,EAAO3jB,KAAK,UAAU1T,OAAOgiB,EAAM,eAEnC,IACE0nC,EAAMG,QAAQ7nC,EAAMniB,GACpB6pD,EAAMG,QAAQ,GAAG7pD,OAAOgiB,EAAM,cAAeslC,GAEzC1oD,GACF8qD,EAAMG,QAAQ,GAAG7pD,OAAOgiB,EAAM,SAAUziB,KAAKsiD,UAAUjjD,IAEzD,MAAO4C,GAEP61B,EAAOzZ,MAAM,mBAAoB5d,OAAOgiB,EAAM,uCAIpD8nC,OAAQ,SAAgB9nC,EAAMqlC,EAASzoD,GACrC,IAAIyyB,EAAMq4B,GAASA,EAAMK,QAAQ/nC,GAC7BgoC,EAAYN,GAASA,EAAMK,QAAQ,GAAG/pD,OAAOgiB,EAAM,eACnDkE,EAAOwjC,GAASA,EAAMK,QAAQ,GAAG/pD,OAAOgiB,EAAM,UAIlD,GAHApjB,EAAaA,GAAc,GAC3BsnB,EAAOA,GAAQ,KAEX8jC,GAAa3C,EAAQC,cAAgB,IAAI/hD,KAAK8hD,EAAQC,cAAc2C,YAAc,IAAI1kD,KAAKykD,GAAWC,WAAa1qD,KAAKsiD,UAAUjjD,KAAgBsnB,EAEpJ,OAAOmL,KAMX64B,GAAY,WACd,SAASC,IACP,KAAM,CACJv2C,KAAM,UACNoJ,QAAS,qEAIb,IAAIotC,EAAiB,CACnBC,aAAc,SAAmBtQ,GAG/B,OAFAoQ,KAEQ,GAEVG,cAAe,SAAoBvQ,GAGjC,OAFAoQ,KAEQ,GAEVI,eAAgB,SAAqBxQ,GAGnC,OAFAoQ,KAEQ,IAGZ5mC,GAAiBjB,YAAY8nC,IAI3BxlC,GAAO,SAAWrnB,EAAQ2B,GAC5B,IAAIU,EAAWrC,EAAOqC,SAClBsvB,EAAO62B,KACX72B,EAAKhwB,QAAUA,EACf,IAAI64B,EAAc7I,EAAK6I,YACnBsC,EAAcmtB,GAAGtoD,EAASgwB,EAAKmI,QAC/BoB,EAAc,IAAI4B,EACtBtC,EAAYyyB,eAAe/xB,GAC3BvJ,EAAKmL,YAAcA,EACnBnL,EAAKg2B,aAAeA,GACpB2C,GAAY34B,EAAMhwB,GAClB,IAAIwpD,EAASL,GAAe9qD,EAAQ2xB,EAAMhwB,GACtCwqD,EAAQx6B,EAAKw6B,MAAQxqD,EAAQwqD,OAASD,GAAMlsD,EAAQ2B,EAASgwB,EAAKmI,QACtE6yB,GAAUh7B,EAAK6I,aAEX74B,EAAQqjB,WACV2M,EAAK3M,UAAUgB,iBAAiBjB,YAAYpjB,EAAQqjB,WAGtD,IAAIkoC,EAAc,oBAElB,SAAStyC,EAAMpV,GACb,IAAI6Y,EAAS,GAEb,IAAK,IAAIC,KAAQ9Y,EACXA,EAAIzD,eAAeuc,KACrBD,EAAOC,GAAQ9Y,EAAI8Y,IAIvB,OAAOD,EAIT,SAAS3V,EAAKoc,EAAMqoC,GAClB,IAAIC,EAAY/jD,MAAMzD,UAAUgT,MAAM1Q,KAAKS,UAAW,GACtD,OAAO,WACL,IAAIN,EAAO+kD,EAAU3qD,OAAO4G,MAAMzD,UAAUgT,MAAM1Q,KAAKS,UAAW,IAClE,OAAOmc,EAAKtc,MAAM2kD,EAAS9kD,IAI/B,SAASglD,EAAWhsD,GAIlB,IAHA,IACIoqD,EADAnpD,EAASD,EAASqB,qBAAqB,SAGlC0C,EAAI,EAAGA,EAAI9D,EAAOgB,OAAQ8C,IAGjC,IAFAqlD,EAAQnpD,EAAO8D,IAELiQ,KAAKO,MAAMs2C,GAAc,CACjC,IAAII,EAAkB1yC,EAAMjZ,GAC5B2rD,EAAgBjsD,WAAaA,EAC7B,IAAIwoD,EAAW4B,EAAMD,WAAa,GAClC8B,EAAgB9tC,SAAWnd,EAASoC,SAASjD,KAAKC,QAAQ,OAAQ,IAIlEkwB,EAAK41B,OAAOsC,EAAUyD,EAAiB5kD,GAAK,SAAU+iD,EAAOxnD,EAAGib,GAC1Djb,EACFknD,EAAO91C,IAAIpR,EAAG,WAEdwnD,EAAMp1C,KAAO,WAETo1C,EAAMvoD,WACRuoD,EAAMvoD,WAAWc,QAAUkb,EAAO4U,IAElC23B,EAAMD,UAAYtsC,EAAO4U,OAG5B,KAAM23B,KAKf,SAAS8B,EAAehrD,EAAO0rB,EAAUu/B,EAAQC,EAAWpsD,GAC1D,IAAIisD,EAAkB1yC,EAAMjZ,GAQ5B,SAAS+rD,EAAwB7G,GAC/B,IAAI5yC,EAAO4yC,EAAWjnC,SAClB6E,EAAOoiC,EAAWrnC,SAClBsqC,EAAUjD,EAAWiD,QACrBpD,EAAc,CAChB3rB,iBAAkBG,EAAYlH,QAAQvP,GACtCjF,SAAUiF,EACVuhC,aAAcvhC,EACdxjB,YAAaqsD,EAAgBrsD,aAK/B,GAHAylD,EAAY/J,UAAY+J,EAAY3rB,iBACpC2rB,EAAY1lD,SAAWssD,EAAgBtsD,UAAY0lD,EAAY3rB,iBAE3D+uB,EAAS,CACXA,EAAQ2D,UAAYA,EACpB,IAAI35B,EAAMq4B,EAAMI,OAAO9nC,EAAMqlC,EAASwD,EAAgBjsD,YAEtD,IAAKmsD,GAAU15B,EAGb,OAFAg2B,EAAQ6D,OAAQ,OAChB1/B,EAAS,KAAM6F,EAAK7f,EAAM1R,EAAOunD,EAASrlC,GAM9C0mC,EAAOc,OAAOxnC,GACd6oC,EAAgBnH,aAAeO,EAC/B/0B,EAAK41B,OAAOtzC,EAAMq5C,GAAiB,SAAUrpD,EAAGib,GAC1Cjb,GACFA,EAAEzC,KAAOijB,EACTwJ,EAAShqB,KAETkoD,EAAME,OAAO9pD,EAAMf,KAAMsoD,EAAQC,aAAcuD,EAAgBjsD,WAAY6d,EAAO4U,KAClF7F,EAAS,KAAM/O,EAAO4U,IAAK7f,EAAM1R,EAAOunD,EAASrlC,OAxCvD/iB,EAAY4rD,EAAiB/qD,GAC7B+qD,EAAgBlH,KAAO7jD,EAAM8T,KAEzBhV,IACFisD,EAAgBjsD,WAAaA,GAyC/B65B,EAAYmsB,SAAS9kD,EAAMf,KAAM,KAAM8rD,EAAiB9yB,GAAaze,MAAK,SAAU8qC,GAClF6G,EAAwB7G,MACvBwD,OAAM,SAAUruC,GACjB6uC,QAAQX,IAAIluC,GACZiS,EAASjS,MAIb,SAAS4xC,EAAgB3/B,EAAUu/B,EAAQnsD,GACzC,IAAK,IAAI+E,EAAI,EAAGA,EAAIurB,EAAKk8B,OAAOvqD,OAAQ8C,IACtCmnD,EAAe57B,EAAKk8B,OAAOznD,GAAI6nB,EAAUu/B,EAAQ77B,EAAKk8B,OAAOvqD,QAAU8C,EAAI,GAAI/E,GAInF,SAASysD,IACU,gBAAbn8B,EAAK7sB,MACP6sB,EAAKo8B,WAAarC,aAAY,WACxB/5B,EAAKq8B,YACP9yB,EAAY+yB,iBACZL,GAAgB,SAAU3pD,EAAG6vB,EAAK5xB,EAAGK,EAAOunD,GACtC7lD,EACFknD,EAAO91C,IAAIpR,EAAGA,EAAEzC,MAAQe,EAAMf,MACrBsyB,GACT3xB,EAAQC,UAAUpC,EAAOqC,SAAUyxB,EAAKvxB,SAI7CZ,EAAQkD,OAyHf,OAlHA8sB,EAAKu8B,MAAQ,WAOX,OANKv8B,EAAKq8B,YACRr8B,EAAK7sB,IAAM,cACXgpD,KAGF35C,KAAK65C,WAAY,GACV,GAGTr8B,EAAKw8B,QAAU,WAGb,OAFAvC,cAAcj6B,EAAKo8B,YACnB55C,KAAK65C,WAAY,GACV,GAOTr8B,EAAKy8B,+BAAiC,WACpC,IAAIC,EAAQhsD,EAASqB,qBAAqB,QAC1CiuB,EAAKk8B,OAAS,GAEd,IAAK,IAAIznD,EAAI,EAAGA,EAAIioD,EAAM/qD,OAAQ8C,KACX,oBAAjBioD,EAAMjoD,GAAGkoD,KAA6BD,EAAMjoD,GAAGkoD,IAAI13C,MAAM,eAAiBy3C,EAAMjoD,GAAGiQ,KAAKO,MAAMs2C,KAChGv7B,EAAKk8B,OAAO5tD,KAAKouD,EAAMjoD,KAS7BurB,EAAK48B,oBAAsB,WACzB,OAAO,IAAIpzC,SAAQ,SAAUU,EAASC,GACpC6V,EAAKy8B,iCACLvyC,QAQJ8V,EAAKtwB,WAAa,SAAUmtD,GAC1B,OAAO78B,EAAK88B,SAAQ,EAAMD,GAAQ,IAGpC78B,EAAK88B,QAAU,SAAUjB,EAAQnsD,EAAY4sD,GAK3C,OAJKT,GAAUS,KAAsC,IAAnBA,GAChC/yB,EAAY+yB,iBAGP,IAAI9yC,SAAQ,SAAUU,EAASC,GACpC,IAAI4yC,EACAC,EACAC,EACAC,EACJH,EAAYC,EAAU,IAAI3mD,KAIF,KAFxB6mD,EAAkBl9B,EAAKk8B,OAAOvqD,SAG5BqrD,EAAU,IAAI3mD,KACd4mD,EAAoBD,EAAUD,EAC9B/8B,EAAKmI,OAAO3jB,KAAK,gDACjB0F,EAAQ,CACN6yC,UAAWA,EACXC,QAASA,EACTC,kBAAmBA,EACnBf,OAAQl8B,EAAKk8B,OAAOvqD,UAItBsqD,GAAgB,SAAU3pD,EAAG6vB,EAAK5xB,EAAGK,EAAOunD,GAC1C,GAAI7lD,EAGF,OAFAknD,EAAO91C,IAAIpR,EAAGA,EAAEzC,MAAQe,EAAMf,WAC9Bsa,EAAO7X,GAIL6lD,EAAQ6D,MACVh8B,EAAKmI,OAAO3jB,KAAK,WAAW1T,OAAOF,EAAMf,KAAM,iBAE/CmwB,EAAKmI,OAAO3jB,KAAK,YAAY1T,OAAOF,EAAMf,KAAM,mBAGlDW,EAAQC,UAAUpC,EAAOqC,SAAUyxB,EAAKvxB,GACxCovB,EAAKmI,OAAO3jB,KAAK,WAAW1T,OAAOF,EAAMf,KAAM,kBAAkBiB,OAAO,IAAIuF,KAAS2mD,EAAS,OAItE,MAFxBE,IAGED,EAAoB,IAAI5mD,KAAS0mD,EACjC/8B,EAAKmI,OAAO3jB,KAAK,uCAAuC1T,OAAOmsD,EAAmB,OAClF/yC,EAAQ,CACN6yC,UAAWA,EACXC,QAASA,EACTC,kBAAmBA,EACnBf,OAAQl8B,EAAKk8B,OAAOvqD,UAIxBqrD,EAAU,IAAI3mD,OACbwlD,EAAQnsD,GAGbgsD,EAAWhsD,OAIfswB,EAAKm9B,cAAgBzB,EACd17B,GAQLo9B,GAAYxuD,IAEhB,GAAIP,OAAO2xB,KACT,IAAK,IAAIhrB,MAAO3G,OAAO2xB,KACjB3xB,OAAO2xB,KAAK5vB,eAAe4E,MAC7BooD,GAAUpoD,IAAO3G,OAAO2xB,KAAKhrB,KAKnCtC,EAAkBrE,OAAQ+uD,IAC1BA,GAAUjxB,QAAUixB,GAAUjxB,SAAW,GAErC99B,OAAOgvD,eACTD,GAAUjxB,QAAUixB,GAAUjxB,QAAQr7B,OAAOzC,OAAOgvD,eAGtD,IAEIl7B,GACArwB,GACAgoD,GAJA95B,GAAOtK,GAAKrnB,OAAQ+uD,IAMxB,SAASE,GAAgBh7C,GACnBA,EAAKuL,UACPqrC,QAAQ5wB,KAAKhmB,GAGV86C,GAAUpqD,OACblB,GAAKM,YAAY0nD,IA6BrB,OAxCAzrD,OAAO2xB,KAAOA,GAeVo9B,GAAU1pD,UACR,SAASb,KAAKxE,OAAOyE,SAASU,OAChCwsB,GAAKu8B,QAIFa,GAAUpqD,QACbmvB,GAAM,oCACNrwB,GAAOpB,SAASoB,MAAQpB,SAASqB,qBAAqB,QAAQ,IAC9D+nD,GAAQppD,SAASU,cAAc,UACzBsT,KAAO,WAETo1C,GAAMvoD,WACRuoD,GAAMvoD,WAAWc,QAAU8vB,GAE3B23B,GAAMtoD,YAAYd,SAASe,eAAe0wB,KAG5CrwB,GAAKN,YAAYsoD,KAGnB95B,GAAKy8B,iCACLz8B,GAAKu9B,iBAAmBv9B,GAAK88B,QAAqB,gBAAb98B,GAAK7sB,KAAuBiX,KAAKkzC,GAAiBA,KAGlFt9B,GA5+bkBw9B,KAg/bEjnD,KAAKiM,KAAM9T,EAAoB,QAAQC"},"name":"static/chunks/7b4c3b51.86b8b53e85aec47e6697.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[20],{\n\n/***/ \"H5Sr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {/**\n * Less - Leaner CSS v3.10.3\n * http://lesscss.org\n * \n * Copyright (c) 2009-2019, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n   true ? module.exports = factory() :\n  undefined;\n}(this, function () { 'use strict';\n\n  // Export a new default each time\n  var defaultOptions = (function () {\n    return {\n      /* Inline Javascript - @plugin still allowed */\n      javascriptEnabled: false,\n\n      /* Outputs a makefile import dependency list to stdout. */\n      depends: false,\n\n      /* (DEPRECATED) Compress using less built-in compression. \n      * This does an okay job but does not utilise all the tricks of \n      * dedicated css compression. */\n      compress: false,\n\n      /* Runs the less parser and just reports errors without any output. */\n      lint: false,\n\n      /* Sets available include paths.\n      * If the file in an @import rule does not exist at that exact location, \n      * less will look for it at the location(s) passed to this option. \n      * You might use this for instance to specify a path to a library which \n      * you want to be referenced simply and relatively in the less files. */\n      paths: [],\n\n      /* color output in the terminal */\n      color: true,\n\n      /* The strictImports controls whether the compiler will allow an @import inside of either \n      * @media blocks or (a later addition) other selector blocks.\n      * See: https://github.com/less/less.js/issues/656 */\n      strictImports: false,\n\n      /* Allow Imports from Insecure HTTPS Hosts */\n      insecure: false,\n\n      /* Allows you to add a path to every generated import and url in your css. \n      * This does not affect less import statements that are processed, just ones \n      * that are left in the output css. */\n      rootpath: '',\n\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory \n      * that references an image, exactly the same URL will be output in the css. \n      * This option allows you to re-write URL's in imported files so that the \n      * URL is always relative to the base imported file */\n      rewriteUrls: false,\n\n      /* How to process math \n      *   0 always           - eagerly try to solve all operations\n      *   1 parens-division  - require parens for division \"/\"\n      *   2 parens | strict  - require parens for all operations\n      *   3 strict-legacy    - legacy strict behavior (super-strict)\n      */\n      math: 0,\n\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\n      strictUnits: false,\n\n      /* Effectively the declaration is put at the top of your base Less file, \n      * meaning it can be used but it also can be overridden if this variable \n      * is defined in the file. */\n      globalVars: null,\n\n      /* As opposed to the global variable option, this puts the declaration at the\n      * end of your base file, meaning it will override anything defined in your Less file. */\n      modifyVars: null,\n\n      /* This option allows you to specify a argument to go on to every URL.  */\n      urlArgs: ''\n    };\n  });\n\n  function extractId(href) {\n    return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n    .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n    .replace(/^\\//, '') // Remove root /\n    .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n    .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n    .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n  }\n  function addDataAttr(options, tag) {\n    for (var opt in tag.dataset) {\n      if (tag.dataset.hasOwnProperty(opt)) {\n        if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n          options[opt] = tag.dataset[opt];\n        } else {\n          try {\n            options[opt] = JSON.parse(tag.dataset[opt]);\n          } catch (_) {}\n        }\n      }\n    }\n  }\n\n  var browser = {\n    createCSS: function createCSS(document, styles, sheet) {\n      // Strip the query-string\n      var href = sheet.href || ''; // If there is no title set, use the filename, minus the extension\n\n      var id = \"less:\".concat(sheet.title || extractId(href)); // If this has already been inserted into the DOM, we may need to replace it\n\n      var oldStyleNode = document.getElementById(id);\n      var keepOldStyleNode = false; // Create a new stylesheet node for insertion or (if necessary) replacement\n\n      var styleNode = document.createElement('style');\n      styleNode.setAttribute('type', 'text/css');\n\n      if (sheet.media) {\n        styleNode.setAttribute('media', sheet.media);\n      }\n\n      styleNode.id = id;\n\n      if (!styleNode.styleSheet) {\n        styleNode.appendChild(document.createTextNode(styles)); // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n\n        keepOldStyleNode = oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 && oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue;\n      }\n\n      var head = document.getElementsByTagName('head')[0]; // If there is no oldStyleNode, just append; otherwise, only append if we need\n      // to replace oldStyleNode with an updated stylesheet\n\n      if (oldStyleNode === null || keepOldStyleNode === false) {\n        var nextEl = sheet && sheet.nextSibling || null;\n\n        if (nextEl) {\n          nextEl.parentNode.insertBefore(styleNode, nextEl);\n        } else {\n          head.appendChild(styleNode);\n        }\n      }\n\n      if (oldStyleNode && keepOldStyleNode === false) {\n        oldStyleNode.parentNode.removeChild(oldStyleNode);\n      } // For IE.\n      // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n      // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n\n\n      if (styleNode.styleSheet) {\n        try {\n          styleNode.styleSheet.cssText = styles;\n        } catch (e) {\n          throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n        }\n      }\n    },\n    currentScript: function currentScript(window) {\n      var document = window.document;\n      return document.currentScript || function () {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      }();\n    }\n  };\n\n  var addDefaultOptions = (function (window, options) {\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n      options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    } // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n\n\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false; // Interval between watch polls\n\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n    options.env = options.env || (window.location.hostname == '127.0.0.1' || window.location.hostname == '0.0.0.0' || window.location.hostname == 'localhost' || window.location.port && window.location.port.length > 0 || options.isFileProtocol ? 'development' : 'production');\n    var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n\n    if (dumpLineNumbers) {\n      options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n      options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n      options.onReady = true;\n    }\n\n    if (options.relativeUrls) {\n      options.rewriteUrls = 'all';\n    }\n  });\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var colors = {\n    'aliceblue': '#f0f8ff',\n    'antiquewhite': '#faebd7',\n    'aqua': '#00ffff',\n    'aquamarine': '#7fffd4',\n    'azure': '#f0ffff',\n    'beige': '#f5f5dc',\n    'bisque': '#ffe4c4',\n    'black': '#000000',\n    'blanchedalmond': '#ffebcd',\n    'blue': '#0000ff',\n    'blueviolet': '#8a2be2',\n    'brown': '#a52a2a',\n    'burlywood': '#deb887',\n    'cadetblue': '#5f9ea0',\n    'chartreuse': '#7fff00',\n    'chocolate': '#d2691e',\n    'coral': '#ff7f50',\n    'cornflowerblue': '#6495ed',\n    'cornsilk': '#fff8dc',\n    'crimson': '#dc143c',\n    'cyan': '#00ffff',\n    'darkblue': '#00008b',\n    'darkcyan': '#008b8b',\n    'darkgoldenrod': '#b8860b',\n    'darkgray': '#a9a9a9',\n    'darkgrey': '#a9a9a9',\n    'darkgreen': '#006400',\n    'darkkhaki': '#bdb76b',\n    'darkmagenta': '#8b008b',\n    'darkolivegreen': '#556b2f',\n    'darkorange': '#ff8c00',\n    'darkorchid': '#9932cc',\n    'darkred': '#8b0000',\n    'darksalmon': '#e9967a',\n    'darkseagreen': '#8fbc8f',\n    'darkslateblue': '#483d8b',\n    'darkslategray': '#2f4f4f',\n    'darkslategrey': '#2f4f4f',\n    'darkturquoise': '#00ced1',\n    'darkviolet': '#9400d3',\n    'deeppink': '#ff1493',\n    'deepskyblue': '#00bfff',\n    'dimgray': '#696969',\n    'dimgrey': '#696969',\n    'dodgerblue': '#1e90ff',\n    'firebrick': '#b22222',\n    'floralwhite': '#fffaf0',\n    'forestgreen': '#228b22',\n    'fuchsia': '#ff00ff',\n    'gainsboro': '#dcdcdc',\n    'ghostwhite': '#f8f8ff',\n    'gold': '#ffd700',\n    'goldenrod': '#daa520',\n    'gray': '#808080',\n    'grey': '#808080',\n    'green': '#008000',\n    'greenyellow': '#adff2f',\n    'honeydew': '#f0fff0',\n    'hotpink': '#ff69b4',\n    'indianred': '#cd5c5c',\n    'indigo': '#4b0082',\n    'ivory': '#fffff0',\n    'khaki': '#f0e68c',\n    'lavender': '#e6e6fa',\n    'lavenderblush': '#fff0f5',\n    'lawngreen': '#7cfc00',\n    'lemonchiffon': '#fffacd',\n    'lightblue': '#add8e6',\n    'lightcoral': '#f08080',\n    'lightcyan': '#e0ffff',\n    'lightgoldenrodyellow': '#fafad2',\n    'lightgray': '#d3d3d3',\n    'lightgrey': '#d3d3d3',\n    'lightgreen': '#90ee90',\n    'lightpink': '#ffb6c1',\n    'lightsalmon': '#ffa07a',\n    'lightseagreen': '#20b2aa',\n    'lightskyblue': '#87cefa',\n    'lightslategray': '#778899',\n    'lightslategrey': '#778899',\n    'lightsteelblue': '#b0c4de',\n    'lightyellow': '#ffffe0',\n    'lime': '#00ff00',\n    'limegreen': '#32cd32',\n    'linen': '#faf0e6',\n    'magenta': '#ff00ff',\n    'maroon': '#800000',\n    'mediumaquamarine': '#66cdaa',\n    'mediumblue': '#0000cd',\n    'mediumorchid': '#ba55d3',\n    'mediumpurple': '#9370d8',\n    'mediumseagreen': '#3cb371',\n    'mediumslateblue': '#7b68ee',\n    'mediumspringgreen': '#00fa9a',\n    'mediumturquoise': '#48d1cc',\n    'mediumvioletred': '#c71585',\n    'midnightblue': '#191970',\n    'mintcream': '#f5fffa',\n    'mistyrose': '#ffe4e1',\n    'moccasin': '#ffe4b5',\n    'navajowhite': '#ffdead',\n    'navy': '#000080',\n    'oldlace': '#fdf5e6',\n    'olive': '#808000',\n    'olivedrab': '#6b8e23',\n    'orange': '#ffa500',\n    'orangered': '#ff4500',\n    'orchid': '#da70d6',\n    'palegoldenrod': '#eee8aa',\n    'palegreen': '#98fb98',\n    'paleturquoise': '#afeeee',\n    'palevioletred': '#d87093',\n    'papayawhip': '#ffefd5',\n    'peachpuff': '#ffdab9',\n    'peru': '#cd853f',\n    'pink': '#ffc0cb',\n    'plum': '#dda0dd',\n    'powderblue': '#b0e0e6',\n    'purple': '#800080',\n    'rebeccapurple': '#663399',\n    'red': '#ff0000',\n    'rosybrown': '#bc8f8f',\n    'royalblue': '#4169e1',\n    'saddlebrown': '#8b4513',\n    'salmon': '#fa8072',\n    'sandybrown': '#f4a460',\n    'seagreen': '#2e8b57',\n    'seashell': '#fff5ee',\n    'sienna': '#a0522d',\n    'silver': '#c0c0c0',\n    'skyblue': '#87ceeb',\n    'slateblue': '#6a5acd',\n    'slategray': '#708090',\n    'slategrey': '#708090',\n    'snow': '#fffafa',\n    'springgreen': '#00ff7f',\n    'steelblue': '#4682b4',\n    'tan': '#d2b48c',\n    'teal': '#008080',\n    'thistle': '#d8bfd8',\n    'tomato': '#ff6347',\n    'turquoise': '#40e0d0',\n    'violet': '#ee82ee',\n    'wheat': '#f5deb3',\n    'white': '#ffffff',\n    'whitesmoke': '#f5f5f5',\n    'yellow': '#ffff00',\n    'yellowgreen': '#9acd32'\n  };\n\n  var unitConversions = {\n    length: {\n      'm': 1,\n      'cm': 0.01,\n      'mm': 0.001,\n      'in': 0.0254,\n      'px': 0.0254 / 96,\n      'pt': 0.0254 / 72,\n      'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n      's': 1,\n      'ms': 0.001\n    },\n    angle: {\n      'rad': 1 / (2 * Math.PI),\n      'deg': 1 / 360,\n      'grad': 1 / 400,\n      'turn': 1\n    }\n  };\n\n  var data = {\n    colors: colors,\n    unitConversions: unitConversions\n  };\n\n  var Node =\n  /*#__PURE__*/\n  function () {\n    function Node() {\n      _classCallCheck(this, Node);\n\n      this.parent = null;\n      this.visibilityBlocks = undefined;\n      this.nodeVisible = undefined;\n      this.rootNode = null;\n      this.parsed = null;\n      var self = this;\n      Object.defineProperty(this, 'currentFileInfo', {\n        get: function get() {\n          return self.fileInfo();\n        }\n      });\n      Object.defineProperty(this, 'index', {\n        get: function get() {\n          return self.getIndex();\n        }\n      });\n    }\n\n    _createClass(Node, [{\n      key: \"setParent\",\n      value: function setParent(nodes, parent) {\n        function set(node) {\n          if (node && node instanceof Node) {\n            node.parent = parent;\n          }\n        }\n\n        if (Array.isArray(nodes)) {\n          nodes.forEach(set);\n        } else {\n          set(nodes);\n        }\n      }\n    }, {\n      key: \"getIndex\",\n      value: function getIndex() {\n        return this._index || this.parent && this.parent.getIndex() || 0;\n      }\n    }, {\n      key: \"fileInfo\",\n      value: function fileInfo() {\n        return this._fileInfo || this.parent && this.parent.fileInfo() || {};\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return false;\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context) {\n        var strs = [];\n        this.genCSS(context, {\n          add: function add(chunk, fileInfo, index) {\n            strs.push(chunk);\n          },\n          isEmpty: function isEmpty() {\n            return strs.length === 0;\n          }\n        });\n        return strs.join('');\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.value);\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval() {\n        return this;\n      }\n    }, {\n      key: \"_operate\",\n      value: function _operate(context, op, a, b) {\n        switch (op) {\n          case '+':\n            return a + b;\n\n          case '-':\n            return a - b;\n\n          case '*':\n            return a * b;\n\n          case '/':\n            return a / b;\n        }\n      }\n    }, {\n      key: \"fround\",\n      value: function fround(context, value) {\n        var precision = context && context.numPrecision; // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n\n        return precision ? Number((value + 2e-16).toFixed(precision)) : value;\n      } // Returns true if this node represents root of ast imported by reference\n\n    }, {\n      key: \"blocksVisibility\",\n      value: function blocksVisibility() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        return this.visibilityBlocks !== 0;\n      }\n    }, {\n      key: \"addVisibilityBlock\",\n      value: function addVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        this.visibilityBlocks = this.visibilityBlocks + 1;\n      }\n    }, {\n      key: \"removeVisibilityBlock\",\n      value: function removeVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        this.visibilityBlocks = this.visibilityBlocks - 1;\n      } // Turns on node visibility - if called node will be shown in output regardless\n      // of whether it comes from import by reference or not\n\n    }, {\n      key: \"ensureVisibility\",\n      value: function ensureVisibility() {\n        this.nodeVisible = true;\n      } // Turns off node visibility - if called node will NOT be shown in output regardless\n      // of whether it comes from import by reference or not\n\n    }, {\n      key: \"ensureInvisibility\",\n      value: function ensureInvisibility() {\n        this.nodeVisible = false;\n      } // return values:\n      // false - the node must not be visible\n      // true - the node must be visible\n      // undefined or null - the node has the same visibility as its parent\n\n    }, {\n      key: \"isVisible\",\n      value: function isVisible() {\n        return this.nodeVisible;\n      }\n    }, {\n      key: \"visibilityInfo\",\n      value: function visibilityInfo() {\n        return {\n          visibilityBlocks: this.visibilityBlocks,\n          nodeVisible: this.nodeVisible\n        };\n      }\n    }, {\n      key: \"copyVisibilityInfo\",\n      value: function copyVisibilityInfo(info) {\n        if (!info) {\n          return;\n        }\n\n        this.visibilityBlocks = info.visibilityBlocks;\n        this.nodeVisible = info.nodeVisible;\n      }\n    }]);\n\n    return Node;\n  }();\n\n  Node.compare = function (a, b) {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n    if (a.compare && // for \"symmetric results\" force toCSS-based comparison\n    // of Quoted or Anonymous if either value is one of those\n    !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n      return a.compare(b);\n    } else if (b.compare) {\n      return -b.compare(a);\n    } else if (a.type !== b.type) {\n      return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n\n    if (!Array.isArray(a)) {\n      return a === b ? 0 : undefined;\n    }\n\n    if (a.length !== b.length) {\n      return undefined;\n    }\n\n    for (var i = 0; i < a.length; i++) {\n      if (Node.compare(a[i], b[i]) !== 0) {\n        return undefined;\n      }\n    }\n\n    return 0;\n  };\n\n  Node.numericCompare = function (a, b) {\n    return a < b ? -1 : a === b ? 0 : a > b ? 1 : undefined;\n  };\n\n  // RGB Colors - #ff0014, #eee\n  //\n\n  var Color =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Color, _Node);\n\n    function Color(rgb, a, originalForm) {\n      var _this;\n\n      _classCallCheck(this, Color);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Color).call(this));\n\n      var self = _assertThisInitialized(_this); //\n      // The end goal here, is to parse the arguments\n      // into an integer triplet, such as `128, 255, 0`\n      //\n      // This facilitates operations and conversions.\n      //\n\n\n      if (Array.isArray(rgb)) {\n        _this.rgb = rgb;\n      } else if (rgb.length >= 6) {\n        _this.rgb = [];\n        rgb.match(/.{2}/g).map(function (c, i) {\n          if (i < 3) {\n            self.rgb.push(parseInt(c, 16));\n          } else {\n            self.alpha = parseInt(c, 16) / 255;\n          }\n        });\n      } else {\n        _this.rgb = [];\n        rgb.split('').map(function (c, i) {\n          if (i < 3) {\n            self.rgb.push(parseInt(c + c, 16));\n          } else {\n            self.alpha = parseInt(c + c, 16) / 255;\n          }\n        });\n      }\n\n      _this.alpha = _this.alpha || (typeof a === 'number' ? a : 1);\n\n      if (typeof originalForm !== 'undefined') {\n        _this.value = originalForm;\n      }\n\n      return _this;\n    }\n\n    _createClass(Color, [{\n      key: \"luma\",\n      value: function luma() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n        g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n        b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context));\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context, doNotCompress) {\n        var compress = context && context.compress && !doNotCompress;\n        var color;\n        var alpha;\n        var colorFunction;\n        var args = []; // `value` is set if this color was originally\n        // converted from a named color string so we need\n        // to respect this and try to output named color too.\n\n        alpha = this.fround(context, this.alpha);\n\n        if (this.value) {\n          if (this.value.indexOf('rgb') === 0) {\n            if (alpha < 1) {\n              colorFunction = 'rgba';\n            }\n          } else if (this.value.indexOf('hsl') === 0) {\n            if (alpha < 1) {\n              colorFunction = 'hsla';\n            } else {\n              colorFunction = 'hsl';\n            }\n          } else {\n            return this.value;\n          }\n        } else {\n          if (alpha < 1) {\n            colorFunction = 'rgba';\n          }\n        }\n\n        switch (colorFunction) {\n          case 'rgba':\n            args = this.rgb.map(function (c) {\n              return clamp(Math.round(c), 255);\n            }).concat(clamp(alpha, 1));\n            break;\n\n          case 'hsla':\n            args.push(clamp(alpha, 1));\n\n          case 'hsl':\n            color = this.toHSL();\n            args = [this.fround(context, color.h), \"\".concat(this.fround(context, color.s * 100), \"%\"), \"\".concat(this.fround(context, color.l * 100), \"%\")].concat(args);\n        }\n\n        if (colorFunction) {\n          // Values are capped between `0` and `255`, rounded and zero-padded.\n          return \"\".concat(colorFunction, \"(\").concat(args.join(\",\".concat(compress ? '' : ' ')), \")\");\n        }\n\n        color = this.toRGB();\n\n        if (compress) {\n          var splitcolor = color.split(''); // Convert color to short format\n\n          if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n            color = \"#\".concat(splitcolor[1]).concat(splitcolor[3]).concat(splitcolor[5]);\n          }\n        }\n\n        return color;\n      } //\n      // Operations have to be done per-channel, if not,\n      // channels will spill onto each other. Once we have\n      // our result, in the form of an integer triplet,\n      // we create a new Color node to hold the result.\n      //\n\n    }, {\n      key: \"operate\",\n      value: function operate(context, op, other) {\n        var rgb = new Array(3);\n        var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n\n        for (var c = 0; c < 3; c++) {\n          rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n        }\n\n        return new Color(rgb, alpha);\n      }\n    }, {\n      key: \"toRGB\",\n      value: function toRGB() {\n        return toHex(this.rgb);\n      }\n    }, {\n      key: \"toHSL\",\n      value: function toHSL() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var l = (max + min) / 2;\n        var d = max - min;\n\n        if (max === min) {\n          h = s = 0;\n        } else {\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n          switch (max) {\n            case r:\n              h = (g - b) / d + (g < b ? 6 : 0);\n              break;\n\n            case g:\n              h = (b - r) / d + 2;\n              break;\n\n            case b:\n              h = (r - g) / d + 4;\n              break;\n          }\n\n          h /= 6;\n        }\n\n        return {\n          h: h * 360,\n          s: s,\n          l: l,\n          a: a\n        };\n      } // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n\n    }, {\n      key: \"toHSV\",\n      value: function toHSV() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var v = max;\n        var d = max - min;\n\n        if (max === 0) {\n          s = 0;\n        } else {\n          s = d / max;\n        }\n\n        if (max === min) {\n          h = 0;\n        } else {\n          switch (max) {\n            case r:\n              h = (g - b) / d + (g < b ? 6 : 0);\n              break;\n\n            case g:\n              h = (b - r) / d + 2;\n              break;\n\n            case b:\n              h = (r - g) / d + 4;\n              break;\n          }\n\n          h /= 6;\n        }\n\n        return {\n          h: h * 360,\n          s: s,\n          v: v,\n          a: a\n        };\n      }\n    }, {\n      key: \"toARGB\",\n      value: function toARGB() {\n        return toHex([this.alpha * 255].concat(this.rgb));\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(x) {\n        return x.rgb && x.rgb[0] === this.rgb[0] && x.rgb[1] === this.rgb[1] && x.rgb[2] === this.rgb[2] && x.alpha === this.alpha ? 0 : undefined;\n      }\n    }]);\n\n    return Color;\n  }(Node);\n\n  Color.prototype.type = 'Color';\n\n  function clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n  }\n\n  function toHex(v) {\n    return \"#\".concat(v.map(function (c) {\n      c = clamp(Math.round(c), 255);\n      return (c < 16 ? '0' : '') + c.toString(16);\n    }).join(''));\n  }\n\n  Color.fromKeyword = function (keyword) {\n    var c;\n    var key = keyword.toLowerCase();\n\n    if (colors.hasOwnProperty(key)) {\n      c = new Color(colors[key].slice(1));\n    } else if (key === 'transparent') {\n      c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n      c.value = keyword;\n      return c;\n    }\n  };\n\n  var Paren =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Paren, _Node);\n\n    function Paren(node) {\n      var _this;\n\n      _classCallCheck(this, Paren);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Paren).call(this));\n      _this.value = node;\n      return _this;\n    }\n\n    _createClass(Paren, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('(');\n        this.value.genCSS(context, output);\n        output.add(')');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Paren(this.value.eval(context));\n      }\n    }]);\n\n    return Paren;\n  }(Node);\n\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n  };\n\n  var Combinator =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Combinator, _Node);\n\n    function Combinator(value) {\n      var _this;\n\n      _classCallCheck(this, Combinator);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Combinator).call(this));\n\n      if (value === ' ') {\n        _this.value = ' ';\n        _this.emptyOrWhitespace = true;\n      } else {\n        _this.value = value ? value.trim() : '';\n        _this.emptyOrWhitespace = _this.value === '';\n      }\n\n      return _this;\n    }\n\n    _createClass(Combinator, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var spaceOrEmpty = context.compress || _noSpaceCombinators[this.value] ? '' : ' ';\n        output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n      }\n    }]);\n\n    return Combinator;\n  }(Node);\n\n  Combinator.prototype.type = 'Combinator';\n\n  var Element =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Element, _Node);\n\n    function Element(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Element);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this));\n      _this.combinator = combinator instanceof Combinator ? combinator : new Combinator(combinator);\n\n      if (typeof value === 'string') {\n        _this.value = value.trim();\n      } else if (value) {\n        _this.value = value;\n      } else {\n        _this.value = '';\n      }\n\n      _this.isVariable = isVariable;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.combinator, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Element, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        var value = this.value;\n        this.combinator = visitor.visit(this.combinator);\n\n        if (_typeof(value) === 'object') {\n          this.value = visitor.visit(value);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS() {\n        var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var value = this.value;\n        var firstSelector = context.firstSelector;\n\n        if (value instanceof Paren) {\n          // selector in parens should not be affected by outer selector\n          // flags (breaks only interpolated selectors - see #1973)\n          context.firstSelector = true;\n        }\n\n        value = value.toCSS ? value.toCSS(context) : value;\n        context.firstSelector = firstSelector;\n\n        if (value === '' && this.combinator.value.charAt(0) === '&') {\n          return '';\n        } else {\n          return this.combinator.toCSS(context) + value;\n        }\n      }\n    }]);\n\n    return Element;\n  }(Node);\n\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\n    ALWAYS: 0,\n    PARENS_DIVISION: 1,\n    PARENS: 2,\n    STRICT_LEGACY: 3\n  };\n  var RewriteUrls = {\n    OFF: 0,\n    LOCAL: 1,\n    ALL: 2\n  };\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var clone_1 = createCommonjsModule(function (module) {\n  var clone = (function() {\n\n  function _instanceof(obj, type) {\n    return type != null && obj instanceof type;\n  }\n\n  var nativeMap;\n  try {\n    nativeMap = Map;\n  } catch(_) {\n    // maybe a reference error because no `Map`. Give it a dummy value that no\n    // value will ever be an instanceof.\n    nativeMap = function() {};\n  }\n\n  var nativeSet;\n  try {\n    nativeSet = Set;\n  } catch(_) {\n    nativeSet = function() {};\n  }\n\n  var nativePromise;\n  try {\n    nativePromise = Promise;\n  } catch(_) {\n    nativePromise = function() {};\n  }\n\n  /**\n   * Clones (copies) an Object using deep copying.\n   *\n   * This function supports circular references by default, but if you are certain\n   * there are no circular references in your object, you can save some CPU time\n   * by calling clone(obj, false).\n   *\n   * Caution: if `circular` is false and `parent` contains circular references,\n   * your program may enter an infinite loop and crash.\n   *\n   * @param `parent` - the object to be cloned\n   * @param `circular` - set to true if the object to be cloned may contain\n   *    circular references. (optional - true by default)\n   * @param `depth` - set to a number if the object is only to be cloned to\n   *    a particular depth. (optional - defaults to Infinity)\n   * @param `prototype` - sets the prototype to be used when cloning an object.\n   *    (optional - defaults to parent prototype).\n   * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n   *    should be cloned as well. Non-enumerable properties on the prototype\n   *    chain will be ignored. (optional - false by default)\n  */\n  function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n    if (typeof circular === 'object') {\n      depth = circular.depth;\n      prototype = circular.prototype;\n      includeNonEnumerable = circular.includeNonEnumerable;\n      circular = circular.circular;\n    }\n    // maintain two arrays for circular references, where corresponding parents\n    // and children have the same index\n    var allParents = [];\n    var allChildren = [];\n\n    var useBuffer = typeof Buffer != 'undefined';\n\n    if (typeof circular == 'undefined')\n      circular = true;\n\n    if (typeof depth == 'undefined')\n      depth = Infinity;\n\n    // recurse this function so we don't reset allParents and allChildren\n    function _clone(parent, depth) {\n      // cloning null always returns null\n      if (parent === null)\n        return null;\n\n      if (depth === 0)\n        return parent;\n\n      var child;\n      var proto;\n      if (typeof parent != 'object') {\n        return parent;\n      }\n\n      if (_instanceof(parent, nativeMap)) {\n        child = new nativeMap();\n      } else if (_instanceof(parent, nativeSet)) {\n        child = new nativeSet();\n      } else if (_instanceof(parent, nativePromise)) {\n        child = new nativePromise(function (resolve, reject) {\n          parent.then(function(value) {\n            resolve(_clone(value, depth - 1));\n          }, function(err) {\n            reject(_clone(err, depth - 1));\n          });\n        });\n      } else if (clone.__isArray(parent)) {\n        child = [];\n      } else if (clone.__isRegExp(parent)) {\n        child = new RegExp(parent.source, __getRegExpFlags(parent));\n        if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n      } else if (clone.__isDate(parent)) {\n        child = new Date(parent.getTime());\n      } else if (useBuffer && Buffer.isBuffer(parent)) {\n        if (Buffer.allocUnsafe) {\n          // Node.js >= 4.5.0\n          child = Buffer.allocUnsafe(parent.length);\n        } else {\n          // Older Node.js versions\n          child = new Buffer(parent.length);\n        }\n        parent.copy(child);\n        return child;\n      } else if (_instanceof(parent, Error)) {\n        child = Object.create(parent);\n      } else {\n        if (typeof prototype == 'undefined') {\n          proto = Object.getPrototypeOf(parent);\n          child = Object.create(proto);\n        }\n        else {\n          child = Object.create(prototype);\n          proto = prototype;\n        }\n      }\n\n      if (circular) {\n        var index = allParents.indexOf(parent);\n\n        if (index != -1) {\n          return allChildren[index];\n        }\n        allParents.push(parent);\n        allChildren.push(child);\n      }\n\n      if (_instanceof(parent, nativeMap)) {\n        parent.forEach(function(value, key) {\n          var keyChild = _clone(key, depth - 1);\n          var valueChild = _clone(value, depth - 1);\n          child.set(keyChild, valueChild);\n        });\n      }\n      if (_instanceof(parent, nativeSet)) {\n        parent.forEach(function(value) {\n          var entryChild = _clone(value, depth - 1);\n          child.add(entryChild);\n        });\n      }\n\n      for (var i in parent) {\n        var attrs;\n        if (proto) {\n          attrs = Object.getOwnPropertyDescriptor(proto, i);\n        }\n\n        if (attrs && attrs.set == null) {\n          continue;\n        }\n        child[i] = _clone(parent[i], depth - 1);\n      }\n\n      if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(parent);\n        for (var i = 0; i < symbols.length; i++) {\n          // Don't need to worry about cloning a symbol because it is a primitive,\n          // like a number or string.\n          var symbol = symbols[i];\n          var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n          if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n            continue;\n          }\n          child[symbol] = _clone(parent[symbol], depth - 1);\n          if (!descriptor.enumerable) {\n            Object.defineProperty(child, symbol, {\n              enumerable: false\n            });\n          }\n        }\n      }\n\n      if (includeNonEnumerable) {\n        var allPropertyNames = Object.getOwnPropertyNames(parent);\n        for (var i = 0; i < allPropertyNames.length; i++) {\n          var propertyName = allPropertyNames[i];\n          var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n          if (descriptor && descriptor.enumerable) {\n            continue;\n          }\n          child[propertyName] = _clone(parent[propertyName], depth - 1);\n          Object.defineProperty(child, propertyName, {\n            enumerable: false\n          });\n        }\n      }\n\n      return child;\n    }\n\n    return _clone(parent, depth);\n  }\n\n  /**\n   * Simple flat clone using prototype, accepts only objects, usefull for property\n   * override on FLAT configuration object (no nested props).\n   *\n   * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n   * works.\n   */\n  clone.clonePrototype = function clonePrototype(parent) {\n    if (parent === null)\n      return null;\n\n    var c = function () {};\n    c.prototype = parent;\n    return new c();\n  };\n\n  // private utility functions\n\n  function __objToStr(o) {\n    return Object.prototype.toString.call(o);\n  }\n  clone.__objToStr = __objToStr;\n\n  function __isDate(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Date]';\n  }\n  clone.__isDate = __isDate;\n\n  function __isArray(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Array]';\n  }\n  clone.__isArray = __isArray;\n\n  function __isRegExp(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n  }\n  clone.__isRegExp = __isRegExp;\n\n  function __getRegExpFlags(re) {\n    var flags = '';\n    if (re.global) flags += 'g';\n    if (re.ignoreCase) flags += 'i';\n    if (re.multiline) flags += 'm';\n    return flags;\n  }\n  clone.__getRegExpFlags = __getRegExpFlags;\n\n  return clone;\n  })();\n\n  if ( module.exports) {\n    module.exports = clone;\n  }\n  });\n\n  /* jshint proto: true */\n  function getLocation(index, inputStream) {\n    var n = index + 1;\n    var line = null;\n    var column = -1;\n\n    while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n      column++;\n    }\n\n    if (typeof index === 'number') {\n      line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n    }\n\n    return {\n      line: line,\n      column: column\n    };\n  }\n  function copyArray(arr) {\n    var i;\n    var length = arr.length;\n    var copy = new Array(length);\n\n    for (i = 0; i < length; i++) {\n      copy[i] = arr[i];\n    }\n\n    return copy;\n  }\n  function clone(obj) {\n    var cloned = {};\n\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        cloned[prop] = obj[prop];\n      }\n    }\n\n    return cloned;\n  }\n  function defaults(obj1, obj2) {\n    var newObj = obj2 || {};\n\n    if (!obj2._defaults) {\n      newObj = {};\n\n      var _defaults = clone_1(obj1);\n\n      newObj._defaults = _defaults;\n      var cloned = obj2 ? clone_1(obj2) : {};\n      Object.assign(newObj, _defaults, cloned);\n    }\n\n    return newObj;\n  }\n  function copyOptions(obj1, obj2) {\n    if (obj2 && obj2._defaults) {\n      return obj2;\n    }\n\n    var opts = defaults(obj1, obj2);\n\n    if (opts.strictMath) {\n      opts.math = Math$1.STRICT_LEGACY;\n    } // Back compat with changed relativeUrls option\n\n\n    if (opts.relativeUrls) {\n      opts.rewriteUrls = RewriteUrls.ALL;\n    }\n\n    if (typeof opts.math === 'string') {\n      switch (opts.math.toLowerCase()) {\n        case 'always':\n          opts.math = Math$1.ALWAYS;\n          break;\n\n        case 'parens-division':\n          opts.math = Math$1.PARENS_DIVISION;\n          break;\n\n        case 'strict':\n        case 'parens':\n          opts.math = Math$1.PARENS;\n          break;\n\n        case 'strict-legacy':\n          opts.math = Math$1.STRICT_LEGACY;\n      }\n    }\n\n    if (typeof opts.rewriteUrls === 'string') {\n      switch (opts.rewriteUrls.toLowerCase()) {\n        case 'off':\n          opts.rewriteUrls = RewriteUrls.OFF;\n          break;\n\n        case 'local':\n          opts.rewriteUrls = RewriteUrls.LOCAL;\n          break;\n\n        case 'all':\n          opts.rewriteUrls = RewriteUrls.ALL;\n          break;\n      }\n    }\n\n    return opts;\n  }\n  function merge(obj1, obj2) {\n    for (var prop in obj2) {\n      if (obj2.hasOwnProperty(prop)) {\n        obj1[prop] = obj2[prop];\n      }\n    }\n\n    return obj1;\n  }\n  function flattenArray(arr) {\n    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (var i = 0, length = arr.length; i < length; i++) {\n      var value = arr[i];\n\n      if (Array.isArray(value)) {\n        flattenArray(value, result);\n      } else {\n        if (value !== undefined) {\n          result.push(value);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  /**\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n   * Besides standard .message it keeps some additional data like a path to the file where the error\n   * occurred along with line and column numbers.\n   *\n   * @class\n   * @extends Error\n   * @type {module.LessError}\n   *\n   * @prop {string} type\n   * @prop {string} filename\n   * @prop {number} index\n   * @prop {number} line\n   * @prop {number} column\n   * @prop {number} callLine\n   * @prop {number} callExtract\n   * @prop {string[]} extract\n   *\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n   * @param {string} [currentFilename]\n   */\n\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n    var filename = e.filename || currentFilename;\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n      var input = fileContentMap.contents[filename];\n      var loc = getLocation(e.index, input);\n      var line = loc.line;\n      var col = loc.column;\n      var callLine = e.call && getLocation(e.call, input).line;\n      var lines = input ? input.split('\\n') : '';\n      this.type = e.type || 'Syntax';\n      this.filename = filename;\n      this.index = e.index;\n      this.line = typeof line === 'number' ? line + 1 : null;\n      this.column = col;\n\n      if (!this.line && this.stack) {\n        var found = this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);\n\n        if (found) {\n          if (found[2]) {\n            this.line = parseInt(found[2]) - 2;\n          }\n\n          if (found[3]) {\n            this.column = parseInt(found[3]);\n          }\n        }\n      }\n\n      this.callLine = callLine + 1;\n      this.callExtract = lines[callLine];\n      this.extract = [lines[this.line - 2], lines[this.line - 1], lines[this.line]];\n    }\n  };\n\n  if (typeof Object.create === 'undefined') {\n    var F = function F() {};\n\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n  } else {\n    LessError.prototype = Object.create(Error.prototype);\n  }\n\n  LessError.prototype.constructor = LessError;\n  /**\n   * An overridden version of the default Object.prototype.toString\n   * which uses additional information to create a helpful message.\n   *\n   * @param {Object} options\n   * @returns {string}\n   */\n\n  LessError.prototype.toString = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var message = '';\n    var extract = this.extract || [];\n    var error = [];\n\n    var stylize = function stylize(str) {\n      return str;\n    };\n\n    if (options.stylize) {\n      var type = _typeof(options.stylize);\n\n      if (type !== 'function') {\n        throw Error(\"options.stylize should be a function, got a \".concat(type, \"!\"));\n      }\n\n      stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n      if (typeof extract[0] === 'string') {\n        error.push(stylize(\"\".concat(this.line - 1, \" \").concat(extract[0]), 'grey'));\n      }\n\n      if (typeof extract[1] === 'string') {\n        var errorTxt = \"\".concat(this.line, \" \");\n\n        if (extract[1]) {\n          errorTxt += extract[1].slice(0, this.column) + stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') + extract[1].slice(this.column + 1), 'red'), 'inverse');\n        }\n\n        error.push(errorTxt);\n      }\n\n      if (typeof extract[2] === 'string') {\n        error.push(stylize(\"\".concat(this.line + 1, \" \").concat(extract[2]), 'grey'));\n      }\n\n      error = \"\".concat(error.join('\\n') + stylize('', 'reset'), \"\\n\");\n    }\n\n    message += stylize(\"\".concat(this.type, \"Error: \").concat(this.message), 'red');\n\n    if (this.filename) {\n      message += stylize(' in ', 'red') + this.filename;\n    }\n\n    if (this.line) {\n      message += stylize(\" on line \".concat(this.line, \", column \").concat(this.column + 1, \":\"), 'grey');\n    }\n\n    message += \"\\n\".concat(error);\n\n    if (this.callLine) {\n      message += \"\".concat(stylize('from ', 'red') + (this.filename || ''), \"/n\");\n      message += \"\".concat(stylize(this.callLine, 'grey'), \" \").concat(this.callExtract, \"/n\");\n    }\n\n    return message;\n  };\n\n  var Selector =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Selector, _Node);\n\n    function Selector(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Selector);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Selector).call(this));\n      _this.extendList = extendList;\n      _this.condition = condition;\n      _this.evaldCondition = !condition;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.elements = _this.getElements(elements);\n      _this.mixinElements_ = undefined;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.elements, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Selector, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.elements) {\n          this.elements = visitor.visitArray(this.elements);\n        }\n\n        if (this.extendList) {\n          this.extendList = visitor.visitArray(this.extendList);\n        }\n\n        if (this.condition) {\n          this.condition = visitor.visit(this.condition);\n        }\n      }\n    }, {\n      key: \"createDerived\",\n      value: function createDerived(elements, extendList, evaldCondition) {\n        elements = this.getElements(elements);\n        var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        newSelector.evaldCondition = evaldCondition != null ? evaldCondition : this.evaldCondition;\n        newSelector.mediaEmpty = this.mediaEmpty;\n        return newSelector;\n      }\n    }, {\n      key: \"getElements\",\n      value: function getElements(els) {\n        if (!els) {\n          return [new Element('', '&', false, this._index, this._fileInfo)];\n        }\n\n        if (typeof els === 'string') {\n          this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n            if (err) {\n              throw new LessError({\n                index: err.index,\n                message: err.message\n              }, this.parse.imports, this._fileInfo.filename);\n            }\n\n            els = result[0].elements;\n          });\n        }\n\n        return els;\n      }\n    }, {\n      key: \"createEmptySelectors\",\n      value: function createEmptySelectors() {\n        var el = new Element('', '&', false, this._index, this._fileInfo);\n        var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n        sels[0].mediaEmpty = true;\n        return sels;\n      }\n    }, {\n      key: \"match\",\n      value: function match(other) {\n        var elements = this.elements;\n        var len = elements.length;\n        var olen;\n        var i;\n        other = other.mixinElements();\n        olen = other.length;\n\n        if (olen === 0 || len < olen) {\n          return 0;\n        } else {\n          for (i = 0; i < olen; i++) {\n            if (elements[i].value !== other[i]) {\n              return 0;\n            }\n          }\n        }\n\n        return olen; // return number of matched elements\n      }\n    }, {\n      key: \"mixinElements\",\n      value: function mixinElements() {\n        if (this.mixinElements_) {\n          return this.mixinElements_;\n        }\n\n        var elements = this.elements.map(function (v) {\n          return v.combinator.value + (v.value.value || v.value);\n        }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n        if (elements) {\n          if (elements[0] === '&') {\n            elements.shift();\n          }\n        } else {\n          elements = [];\n        }\n\n        return this.mixinElements_ = elements;\n      }\n    }, {\n      key: \"isJustParentSelector\",\n      value: function isJustParentSelector() {\n        return !this.mediaEmpty && this.elements.length === 1 && this.elements[0].value === '&' && (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var evaldCondition = this.condition && this.condition.eval(context);\n        var elements = this.elements;\n        var extendList = this.extendList;\n        elements = elements && elements.map(function (e) {\n          return e.eval(context);\n        });\n        extendList = extendList && extendList.map(function (extend) {\n          return extend.eval(context);\n        });\n        return this.createDerived(elements, extendList, evaldCondition);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n        var element;\n\n        if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n          output.add(' ', this.fileInfo(), this.getIndex());\n        }\n\n        for (i = 0; i < this.elements.length; i++) {\n          element = this.elements[i];\n          element.genCSS(context, output);\n        }\n      }\n    }, {\n      key: \"getIsOutput\",\n      value: function getIsOutput() {\n        return this.evaldCondition;\n      }\n    }]);\n\n    return Selector;\n  }(Node);\n\n  Selector.prototype.type = 'Selector';\n\n  var Value =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Value, _Node);\n\n    function Value(value) {\n      var _this;\n\n      _classCallCheck(this, Value);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Value).call(this));\n\n      if (!value) {\n        throw new Error('Value requires an array argument');\n      }\n\n      if (!Array.isArray(value)) {\n        _this.value = [value];\n      } else {\n        _this.value = value;\n      }\n\n      return _this;\n    }\n\n    _createClass(Value, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.value) {\n          this.value = visitor.visitArray(this.value);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (this.value.length === 1) {\n          return this.value[0].eval(context);\n        } else {\n          return new Value(this.value.map(function (v) {\n            return v.eval(context);\n          }));\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n\n        for (i = 0; i < this.value.length; i++) {\n          this.value[i].genCSS(context, output);\n\n          if (i + 1 < this.value.length) {\n            output.add(context && context.compress ? ',' : ', ');\n          }\n        }\n      }\n    }]);\n\n    return Value;\n  }(Node);\n\n  Value.prototype.type = 'Value';\n\n  var Keyword =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Keyword, _Node);\n\n    function Keyword(value) {\n      var _this;\n\n      _classCallCheck(this, Keyword);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyword).call(this));\n      _this.value = value;\n      return _this;\n    }\n\n    _createClass(Keyword, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.value === '%') {\n          throw {\n            type: 'Syntax',\n            message: 'Invalid % without number'\n          };\n        }\n\n        output.add(this.value);\n      }\n    }]);\n\n    return Keyword;\n  }(Node);\n\n  Keyword.prototype.type = 'Keyword';\n  Keyword.True = new Keyword('true');\n  Keyword.False = new Keyword('false');\n\n  var Anonymous =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Anonymous, _Node);\n\n    function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Anonymous);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Anonymous).call(this));\n      _this.value = value;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.mapLines = mapLines;\n      _this.rulesetLike = typeof rulesetLike === 'undefined' ? false : rulesetLike;\n      _this.allowRoot = true;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      return _this;\n    }\n\n    _createClass(Anonymous, [{\n      key: \"eval\",\n      value: function _eval() {\n        return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return this.rulesetLike;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        this.nodeVisible = Boolean(this.value);\n\n        if (this.nodeVisible) {\n          output.add(this.value, this._fileInfo, this._index, this.mapLines);\n        }\n      }\n    }]);\n\n    return Anonymous;\n  }(Node);\n\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\n\n  var Declaration =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Declaration, _Node);\n\n    function Declaration(name, value, important, merge, index, currentFileInfo, inline, variable) {\n      var _this;\n\n      _classCallCheck(this, Declaration);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Declaration).call(this));\n      _this.name = name;\n      _this.value = value instanceof Node ? value : new Value([value ? new Anonymous(value) : null]);\n      _this.important = important ? \" \".concat(important.trim()) : '';\n      _this.merge = merge;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.inline = inline || false;\n      _this.variable = variable !== undefined ? variable : name.charAt && name.charAt(0) === '@';\n      _this.allowRoot = true;\n\n      _this.setParent(_this.value, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Declaration, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n\n        try {\n          this.value.genCSS(context, output);\n        } catch (e) {\n          e.index = this._index;\n          e.filename = this._fileInfo.filename;\n          throw e;\n        }\n\n        output.add(this.important + (this.inline || context.lastRule && context.compress ? '' : ';'), this._fileInfo, this._index);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mathBypass = false;\n        var prevMath;\n        var name = this.name;\n        var evaldValue;\n        var variable = this.variable;\n\n        if (typeof name !== 'string') {\n          // expand 'primitive' name directly to get\n          // things faster (~10% for benchmark.less):\n          name = name.length === 1 && name[0] instanceof Keyword ? name[0].value : evalName(context, name);\n          variable = false; // never treat expanded interpolation as new variable name\n        } // @todo remove when parens-division is default\n\n\n        if (name === 'font' && context.math === MATH.ALWAYS) {\n          mathBypass = true;\n          prevMath = context.math;\n          context.math = MATH.PARENS_DIVISION;\n        }\n\n        try {\n          context.importantScope.push({});\n          evaldValue = this.value.eval(context);\n\n          if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n            throw {\n              message: 'Rulesets cannot be evaluated on a property.',\n              index: this.getIndex(),\n              filename: this.fileInfo().filename\n            };\n          }\n\n          var important = this.important;\n          var importantResult = context.importantScope.pop();\n\n          if (!important && importantResult.important) {\n            important = importantResult.important;\n          }\n\n          return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n        } catch (e) {\n          if (typeof e.index !== 'number') {\n            e.index = this.getIndex();\n            e.filename = this.fileInfo().filename;\n          }\n\n          throw e;\n        } finally {\n          if (mathBypass) {\n            context.math = prevMath;\n          }\n        }\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n      }\n    }]);\n\n    return Declaration;\n  }(Node);\n\n  function evalName(context, name) {\n    var value = '';\n    var i;\n    var n = name.length;\n    var output = {\n      add: function add(s) {\n        value += s;\n      }\n    };\n\n    for (i = 0; i < n; i++) {\n      name[i].eval(context).genCSS(context, output);\n    }\n\n    return value;\n  }\n\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function debugInfo(context, ctx, lineSeparator) {\n    var result = '';\n\n    if (context.dumpLineNumbers && !context.compress) {\n      switch (context.dumpLineNumbers) {\n        case 'comments':\n          result = debugInfo.asComment(ctx);\n          break;\n\n        case 'mediaquery':\n          result = debugInfo.asMediaQuery(ctx);\n          break;\n\n        case 'all':\n          result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n          break;\n      }\n    }\n\n    return result;\n  };\n\n  debugInfo.asComment = function (ctx) {\n    return \"/* line \".concat(ctx.debugInfo.lineNumber, \", \").concat(ctx.debugInfo.fileName, \" */\\n\");\n  };\n\n  debugInfo.asMediaQuery = function (ctx) {\n    var filenameWithProtocol = ctx.debugInfo.fileName;\n\n    if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n      filenameWithProtocol = \"file://\".concat(filenameWithProtocol);\n    }\n\n    return \"@media -sass-debug-info{filename{font-family:\".concat(filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n      if (a == '\\\\') {\n        a = '\\/';\n      }\n\n      return \"\\\\\".concat(a);\n    }), \"}line{font-family:\\\\00003\").concat(ctx.debugInfo.lineNumber, \"}}\\n\");\n  };\n\n  var Comment =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Comment, _Node);\n\n    function Comment(value, isLineComment, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Comment);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this));\n      _this.value = value;\n      _this.isLineComment = isLineComment;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(Comment, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.debugInfo) {\n          output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n        }\n\n        output.add(this.value);\n      }\n    }, {\n      key: \"isSilent\",\n      value: function isSilent(context) {\n        var isCompressed = context.compress && this.value[2] !== '!';\n        return this.isLineComment || isCompressed;\n      }\n    }]);\n\n    return Comment;\n  }(Node);\n\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\n\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) {\n      return;\n    }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n      if (original.hasOwnProperty(propertiesToCopy[i])) {\n        destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n      }\n    }\n  };\n  /*\n   parse is used whilst parsing\n   */\n\n\n  var parseCopyProperties = [// options\n  'paths', // option - unmodified - paths to search for imports on\n  'rewriteUrls', // option - whether to adjust URL's to be relative\n  'rootpath', // option - rootpath to append to URL's\n  'strictImports', // option -\n  'insecure', // option - whether to allow imports from insecure ssl hosts\n  'dumpLineNumbers', // option - whether to dump line numbers\n  'compress', // option - whether to compress\n  'syncImport', // option - whether to import synchronously\n  'chunkInput', // option - whether to chunk input. more performant but causes parse issues.\n  'mime', // browser only - mime type for sheet import\n  'useFileCache', // browser only - whether to use the per file session cache\n  // context\n  'processImports', // option & context - whether to process imports. if false then imports will not be imported.\n  // Used by the import manager to stop multiple import visitors being created.\n  'pluginManager' // Used as the plugin manager for the session\n  ];\n\n  contexts.Parse = function (options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === 'string') {\n      this.paths = [this.paths];\n    }\n  };\n\n  var evalCopyProperties = ['paths', // additional include paths\n  'compress', // whether to compress\n  'math', // whether math has to be within parenthesis\n  'strictUnits', // whether units need to evaluate correctly\n  'sourceMap', // whether to output a source map\n  'importMultiple', // whether we are currently importing multiple copies\n  'urlArgs', // whether to add args into url tokens\n  'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n  'pluginManager', // Used as the plugin manager for the session\n  'importantScope', // used to bubble up !important statements\n  'rewriteUrls' // option - whether to adjust URL's to be relative\n  ];\n\n  function isPathRelative(path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n  }\n\n  function isPathLocalRelative(path) {\n    return path.charAt(0) === '.';\n  }\n\n  contexts.Eval =\n  /*#__PURE__*/\n  function () {\n    function _class(options, frames) {\n      _classCallCheck(this, _class);\n\n      copyFromOriginal(options, this, evalCopyProperties);\n\n      if (typeof this.paths === 'string') {\n        this.paths = [this.paths];\n      }\n\n      this.frames = frames || [];\n      this.importantScope = this.importantScope || [];\n      this.inCalc = false;\n      this.mathOn = true;\n    }\n\n    _createClass(_class, [{\n      key: \"enterCalc\",\n      value: function enterCalc() {\n        if (!this.calcStack) {\n          this.calcStack = [];\n        }\n\n        this.calcStack.push(true);\n        this.inCalc = true;\n      }\n    }, {\n      key: \"exitCalc\",\n      value: function exitCalc() {\n        this.calcStack.pop();\n\n        if (!this.calcStack) {\n          this.inCalc = false;\n        }\n      }\n    }, {\n      key: \"inParenthesis\",\n      value: function inParenthesis() {\n        if (!this.parensStack) {\n          this.parensStack = [];\n        }\n\n        this.parensStack.push(true);\n      }\n    }, {\n      key: \"outOfParenthesis\",\n      value: function outOfParenthesis() {\n        this.parensStack.pop();\n      }\n    }, {\n      key: \"isMathOn\",\n      value: function isMathOn(op) {\n        if (!this.mathOn) {\n          return false;\n        }\n\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n          return false;\n        }\n\n        if (this.math > Math$1.PARENS_DIVISION) {\n          return this.parensStack && this.parensStack.length;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"pathRequiresRewrite\",\n      value: function pathRequiresRewrite(path) {\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n        return isRelative(path);\n      }\n    }, {\n      key: \"rewritePath\",\n      value: function rewritePath(path, rootpath) {\n        var newPath;\n        rootpath = rootpath || '';\n        newPath = this.normalizePath(rootpath + path); // If a path was explicit relative and the rootpath was not an absolute path\n        // we must ensure that the new path is also explicit relative.\n\n        if (isPathLocalRelative(path) && isPathRelative(rootpath) && isPathLocalRelative(newPath) === false) {\n          newPath = \"./\".concat(newPath);\n        }\n\n        return newPath;\n      }\n    }, {\n      key: \"normalizePath\",\n      value: function normalizePath(path) {\n        var segments = path.split('/').reverse();\n        var segment;\n        path = [];\n\n        while (segments.length !== 0) {\n          segment = segments.pop();\n\n          switch (segment) {\n            case '.':\n              break;\n\n            case '..':\n              if (path.length === 0 || path[path.length - 1] === '..') {\n                path.push(segment);\n              } else {\n                path.pop();\n              }\n\n              break;\n\n            default:\n              path.push(segment);\n              break;\n          }\n        }\n\n        return path.join('/');\n      }\n    }]);\n\n    return _class;\n  }();\n\n  function makeRegistry(base) {\n    return {\n      _data: {},\n      add: function add(name, func) {\n        // precautionary case conversion, as later querying of\n        // the registry by function-caller uses lower case as well.\n        name = name.toLowerCase();\n\n        if (this._data.hasOwnProperty(name)) ;\n\n        this._data[name] = func;\n      },\n      addMultiple: function addMultiple(functions) {\n        var _this = this;\n\n        Object.keys(functions).forEach(function (name) {\n          _this.add(name, functions[name]);\n        });\n      },\n      get: function get(name) {\n        return this._data[name] || base && base.get(name);\n      },\n      getLocalFunctions: function getLocalFunctions() {\n        return this._data;\n      },\n      inherit: function inherit() {\n        return makeRegistry(this);\n      },\n      create: function create(base) {\n        return makeRegistry(base);\n      }\n    };\n  }\n\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\n    eval: function _eval() {\n      var v = this.value_;\n      var e = this.error_;\n\n      if (e) {\n        throw e;\n      }\n\n      if (v != null) {\n        return v ? Keyword.True : Keyword.False;\n      }\n    },\n    value: function value(v) {\n      this.value_ = v;\n    },\n    error: function error(e) {\n      this.error_ = e;\n    },\n    reset: function reset() {\n      this.value_ = this.error_ = null;\n    }\n  };\n\n  var Ruleset =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Ruleset, _Node);\n\n    function Ruleset(selectors, rules, strictImports, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Ruleset);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Ruleset).call(this));\n      _this.selectors = selectors;\n      _this.rules = rules;\n      _this._lookups = {};\n      _this._variables = null;\n      _this._properties = null;\n      _this.strictImports = strictImports;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      _this.setParent(_this.selectors, _assertThisInitialized(_this));\n\n      _this.setParent(_this.rules, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Ruleset, [{\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return true;\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.paths) {\n          this.paths = visitor.visitArray(this.paths, true);\n        } else if (this.selectors) {\n          this.selectors = visitor.visitArray(this.selectors);\n        }\n\n        if (this.rules && this.rules.length) {\n          this.rules = visitor.visitArray(this.rules);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var selectors;\n        var selCnt;\n        var selector;\n        var i;\n        var hasVariable;\n        var hasOnePassingSelector = false;\n\n        if (this.selectors && (selCnt = this.selectors.length)) {\n          selectors = new Array(selCnt);\n          defaultFunc.error({\n            type: 'Syntax',\n            message: 'it is currently only allowed in parametric mixin guards,'\n          });\n\n          for (i = 0; i < selCnt; i++) {\n            selector = this.selectors[i].eval(context);\n\n            for (var j = 0; j < selector.elements.length; j++) {\n              if (selector.elements[j].isVariable) {\n                hasVariable = true;\n                break;\n              }\n            }\n\n            selectors[i] = selector;\n\n            if (selector.evaldCondition) {\n              hasOnePassingSelector = true;\n            }\n          }\n\n          if (hasVariable) {\n            var toParseSelectors = new Array(selCnt);\n\n            for (i = 0; i < selCnt; i++) {\n              selector = selectors[i];\n              toParseSelectors[i] = selector.toCSS(context);\n            }\n\n            this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n              if (result) {\n                selectors = flattenArray(result);\n              }\n            });\n          }\n\n          defaultFunc.reset();\n        } else {\n          hasOnePassingSelector = true;\n        }\n\n        var rules = this.rules ? copyArray(this.rules) : null;\n        var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n        var rule;\n        var subRule;\n        ruleset.originalRuleset = this;\n        ruleset.root = this.root;\n        ruleset.firstRoot = this.firstRoot;\n        ruleset.allowImports = this.allowImports;\n\n        if (this.debugInfo) {\n          ruleset.debugInfo = this.debugInfo;\n        }\n\n        if (!hasOnePassingSelector) {\n          rules.length = 0;\n        } // inherit a function registry from the frames stack when possible;\n        // otherwise from the global registry\n\n\n        ruleset.functionRegistry = function (frames) {\n          var i = 0;\n          var n = frames.length;\n          var found;\n\n          for (; i !== n; ++i) {\n            found = frames[i].functionRegistry;\n\n            if (found) {\n              return found;\n            }\n          }\n\n          return functionRegistry;\n        }(context.frames).inherit(); // push the current ruleset to the frames stack\n\n\n        var ctxFrames = context.frames;\n        ctxFrames.unshift(ruleset); // currrent selectors\n\n        var ctxSelectors = context.selectors;\n\n        if (!ctxSelectors) {\n          context.selectors = ctxSelectors = [];\n        }\n\n        ctxSelectors.unshift(this.selectors); // Evaluate imports\n\n        if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n          ruleset.evalImports(context);\n        } // Store the frames around mixin definitions,\n        // so they can be evaluated like closures when the time comes.\n\n\n        var rsRules = ruleset.rules;\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (rule.evalFirst) {\n            rsRules[i] = rule.eval(context);\n          }\n        }\n\n        var mediaBlockCount = context.mediaBlocks && context.mediaBlocks.length || 0; // Evaluate mixin calls.\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (rule.type === 'MixinCall') {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).filter(function (r) {\n              if (r instanceof Declaration && r.variable) {\n                // do not pollute the scope if the variable is\n                // already there. consider returning false here\n                // but we need a way to \"return\" variable from mixins\n                return !ruleset.variable(r.name);\n              }\n\n              return true;\n            });\n            rsRules.splice.apply(rsRules, _toConsumableArray([i, 1].concat(rules)));\n            i += rules.length - 1;\n            ruleset.resetCache();\n          } else if (rule.type === 'VariableCall') {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).rules.filter(function (r) {\n              if (r instanceof Declaration && r.variable) {\n                // do not pollute the scope at all\n                return false;\n              }\n\n              return true;\n            });\n            rsRules.splice.apply(rsRules, _toConsumableArray([i, 1].concat(rules)));\n            i += rules.length - 1;\n            ruleset.resetCache();\n          }\n        } // Evaluate everything else\n\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (!rule.evalFirst) {\n            rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n          }\n        } // Evaluate everything else\n\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          // for rulesets, check if it is a css guard and can be removed\n          if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n            // check if it can be folded in (e.g. & where)\n            if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n              rsRules.splice(i--, 1);\n\n              for (var j = 0; subRule = rule.rules[j]; j++) {\n                if (subRule instanceof Node) {\n                  subRule.copyVisibilityInfo(rule.visibilityInfo());\n\n                  if (!(subRule instanceof Declaration) || !subRule.variable) {\n                    rsRules.splice(++i, 0, subRule);\n                  }\n                }\n              }\n            }\n          }\n        } // Pop the stack\n\n\n        ctxFrames.shift();\n        ctxSelectors.shift();\n\n        if (context.mediaBlocks) {\n          for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n            context.mediaBlocks[i].bubbleSelectors(selectors);\n          }\n        }\n\n        return ruleset;\n      }\n    }, {\n      key: \"evalImports\",\n      value: function evalImports(context) {\n        var rules = this.rules;\n        var i;\n        var importRules;\n\n        if (!rules) {\n          return;\n        }\n\n        for (i = 0; i < rules.length; i++) {\n          if (rules[i].type === 'Import') {\n            importRules = rules[i].eval(context);\n\n            if (importRules && (importRules.length || importRules.length === 0)) {\n              rules.splice.apply(rules, _toConsumableArray([i, 1].concat(importRules)));\n              i += importRules.length - 1;\n            } else {\n              rules.splice(i, 1, importRules);\n            }\n\n            this.resetCache();\n          }\n        }\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n          if (r.makeImportant) {\n            return r.makeImportant();\n          } else {\n            return r;\n          }\n        }), this.strictImports, this.visibilityInfo());\n        return result;\n      }\n    }, {\n      key: \"matchArgs\",\n      value: function matchArgs(args) {\n        return !args || args.length === 0;\n      } // lets you call a css selector with a guard\n\n    }, {\n      key: \"matchCondition\",\n      value: function matchCondition(args, context) {\n        var lastSelector = this.selectors[this.selectors.length - 1];\n\n        if (!lastSelector.evaldCondition) {\n          return false;\n        }\n\n        if (lastSelector.condition && !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"resetCache\",\n      value: function resetCache() {\n        this._rulesets = null;\n        this._variables = null;\n        this._properties = null;\n        this._lookups = {};\n      }\n    }, {\n      key: \"variables\",\n      value: function variables() {\n        if (!this._variables) {\n          this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable === true) {\n              hash[r.name] = r;\n            } // when evaluating variables in an import statement, imports have not been eval'd\n            // so we need to go inside import statements.\n            // guard against root being a string (in the case of inlined less)\n\n\n            if (r.type === 'Import' && r.root && r.root.variables) {\n              var vars = r.root.variables();\n\n              for (var name in vars) {\n                if (vars.hasOwnProperty(name)) {\n                  hash[name] = r.root.variable(name);\n                }\n              }\n            }\n\n            return hash;\n          }, {});\n        }\n\n        return this._variables;\n      }\n    }, {\n      key: \"properties\",\n      value: function properties() {\n        if (!this._properties) {\n          this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable !== true) {\n              var name = r.name.length === 1 && r.name[0] instanceof Keyword ? r.name[0].value : r.name; // Properties don't overwrite as they can merge\n\n              if (!hash[\"$\".concat(name)]) {\n                hash[\"$\".concat(name)] = [r];\n              } else {\n                hash[\"$\".concat(name)].push(r);\n              }\n            }\n\n            return hash;\n          }, {});\n        }\n\n        return this._properties;\n      }\n    }, {\n      key: \"variable\",\n      value: function variable(name) {\n        var decl = this.variables()[name];\n\n        if (decl) {\n          return this.parseValue(decl);\n        }\n      }\n    }, {\n      key: \"property\",\n      value: function property(name) {\n        var decl = this.properties()[name];\n\n        if (decl) {\n          return this.parseValue(decl);\n        }\n      }\n    }, {\n      key: \"lastDeclaration\",\n      value: function lastDeclaration() {\n        for (var i = this.rules.length; i > 0; i--) {\n          var decl = this.rules[i - 1];\n\n          if (decl instanceof Declaration) {\n            return this.parseValue(decl);\n          }\n        }\n      }\n    }, {\n      key: \"parseValue\",\n      value: function parseValue(toParse) {\n        var self = this;\n\n        function transformDeclaration(decl) {\n          if (decl.value instanceof Anonymous && !decl.parsed) {\n            if (typeof decl.value.value === 'string') {\n              this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n                if (err) {\n                  decl.parsed = true;\n                }\n\n                if (result) {\n                  decl.value = result[0];\n                  decl.important = result[1] || '';\n                  decl.parsed = true;\n                }\n              });\n            } else {\n              decl.parsed = true;\n            }\n\n            return decl;\n          } else {\n            return decl;\n          }\n        }\n\n        if (!Array.isArray(toParse)) {\n          return transformDeclaration.call(self, toParse);\n        } else {\n          var nodes = [];\n          toParse.forEach(function (n) {\n            nodes.push(transformDeclaration.call(self, n));\n          });\n          return nodes;\n        }\n      }\n    }, {\n      key: \"rulesets\",\n      value: function rulesets() {\n        if (!this.rules) {\n          return [];\n        }\n\n        var filtRules = [];\n        var rules = this.rules;\n        var i;\n        var rule;\n\n        for (i = 0; rule = rules[i]; i++) {\n          if (rule.isRuleset) {\n            filtRules.push(rule);\n          }\n        }\n\n        return filtRules;\n      }\n    }, {\n      key: \"prependRule\",\n      value: function prependRule(rule) {\n        var rules = this.rules;\n\n        if (rules) {\n          rules.unshift(rule);\n        } else {\n          this.rules = [rule];\n        }\n\n        this.setParent(rule, this);\n      }\n    }, {\n      key: \"find\",\n      value: function find(selector) {\n        var self = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n        var filter = arguments.length > 2 ? arguments[2] : undefined;\n        var rules = [];\n        var match;\n        var foundMixins;\n        var key = selector.toCSS();\n\n        if (key in this._lookups) {\n          return this._lookups[key];\n        }\n\n        this.rulesets().forEach(function (rule) {\n          if (rule !== self) {\n            for (var j = 0; j < rule.selectors.length; j++) {\n              match = selector.match(rule.selectors[j]);\n\n              if (match) {\n                if (selector.elements.length > match) {\n                  if (!filter || filter(rule)) {\n                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n\n                    for (var i = 0; i < foundMixins.length; ++i) {\n                      foundMixins[i].path.push(rule);\n                    }\n\n                    Array.prototype.push.apply(rules, foundMixins);\n                  }\n                } else {\n                  rules.push({\n                    rule: rule,\n                    path: []\n                  });\n                }\n\n                break;\n              }\n            }\n          }\n        });\n        this._lookups[key] = rules;\n        return rules;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n        var j;\n        var charsetRuleNodes = [];\n        var ruleNodes = [];\n        var // Line number debugging\n        debugInfo$1;\n        var rule;\n        var path;\n        context.tabLevel = context.tabLevel || 0;\n\n        if (!this.root) {\n          context.tabLevel++;\n        }\n\n        var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n        var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n        var sep;\n        var charsetNodeIndex = 0;\n        var importNodeIndex = 0;\n\n        for (i = 0; rule = this.rules[i]; i++) {\n          if (rule instanceof Comment) {\n            if (importNodeIndex === i) {\n              importNodeIndex++;\n            }\n\n            ruleNodes.push(rule);\n          } else if (rule.isCharset && rule.isCharset()) {\n            ruleNodes.splice(charsetNodeIndex, 0, rule);\n            charsetNodeIndex++;\n            importNodeIndex++;\n          } else if (rule.type === 'Import') {\n            ruleNodes.splice(importNodeIndex, 0, rule);\n            importNodeIndex++;\n          } else {\n            ruleNodes.push(rule);\n          }\n        }\n\n        ruleNodes = charsetRuleNodes.concat(ruleNodes); // If this is the root node, we don't render\n        // a selector, or {}.\n\n        if (!this.root) {\n          debugInfo$1 = debugInfo(context, this, tabSetStr);\n\n          if (debugInfo$1) {\n            output.add(debugInfo$1);\n            output.add(tabSetStr);\n          }\n\n          var paths = this.paths;\n          var pathCnt = paths.length;\n          var pathSubCnt;\n          sep = context.compress ? ',' : \",\\n\".concat(tabSetStr);\n\n          for (i = 0; i < pathCnt; i++) {\n            path = paths[i];\n\n            if (!(pathSubCnt = path.length)) {\n              continue;\n            }\n\n            if (i > 0) {\n              output.add(sep);\n            }\n\n            context.firstSelector = true;\n            path[0].genCSS(context, output);\n            context.firstSelector = false;\n\n            for (j = 1; j < pathSubCnt; j++) {\n              path[j].genCSS(context, output);\n            }\n          }\n\n          output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n        } // Compile rules and rulesets\n\n\n        for (i = 0; rule = ruleNodes[i]; i++) {\n          if (i + 1 === ruleNodes.length) {\n            context.lastRule = true;\n          }\n\n          var currentLastRule = context.lastRule;\n\n          if (rule.isRulesetLike(rule)) {\n            context.lastRule = false;\n          }\n\n          if (rule.genCSS) {\n            rule.genCSS(context, output);\n          } else if (rule.value) {\n            output.add(rule.value.toString());\n          }\n\n          context.lastRule = currentLastRule;\n\n          if (!context.lastRule && rule.isVisible()) {\n            output.add(context.compress ? '' : \"\\n\".concat(tabRuleStr));\n          } else {\n            context.lastRule = false;\n          }\n        }\n\n        if (!this.root) {\n          output.add(context.compress ? '}' : \"\\n\".concat(tabSetStr, \"}\"));\n          context.tabLevel--;\n        }\n\n        if (!output.isEmpty() && !context.compress && this.firstRoot) {\n          output.add('\\n');\n        }\n      }\n    }, {\n      key: \"joinSelectors\",\n      value: function joinSelectors(paths, context, selectors) {\n        for (var s = 0; s < selectors.length; s++) {\n          this.joinSelector(paths, context, selectors[s]);\n        }\n      }\n    }, {\n      key: \"joinSelector\",\n      value: function joinSelector(paths, context, selector) {\n        function createParenthesis(elementsToPak, originalElement) {\n          var replacementParen;\n          var j;\n\n          if (elementsToPak.length === 0) {\n            replacementParen = new Paren(elementsToPak[0]);\n          } else {\n            var insideParent = new Array(elementsToPak.length);\n\n            for (j = 0; j < elementsToPak.length; j++) {\n              insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n            }\n\n            replacementParen = new Paren(new Selector(insideParent));\n          }\n\n          return replacementParen;\n        }\n\n        function createSelector(containedElement, originalElement) {\n          var element;\n          var selector;\n          element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n          selector = new Selector([element]);\n          return selector;\n        } // joins selector path from `beginningPath` with selector path in `addPath`\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns concatenated path\n\n\n        function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n          var newSelectorPath;\n          var lastSelector;\n          var newJoinedSelector; // our new selector path\n\n          newSelectorPath = []; // construct the joined selector - if & is the first thing this will be empty,\n          // if not newJoinedSelector will be the last set of elements in the selector\n\n          if (beginningPath.length > 0) {\n            newSelectorPath = copyArray(beginningPath);\n            lastSelector = newSelectorPath.pop();\n            newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n          } else {\n            newJoinedSelector = originalSelector.createDerived([]);\n          }\n\n          if (addPath.length > 0) {\n            // /deep/ is a CSS4 selector - (removed, so should deprecate)\n            // that is valid without anything in front of it\n            // so if the & does not have a combinator that is \"\" or \" \" then\n            // and there is a combinator on the parent, then grab that.\n            // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n            var combinator = replacedElement.combinator;\n            var parentEl = addPath[0].elements[0];\n\n            if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n              combinator = parentEl.combinator;\n            } // join the elements so far with the first part of the parent\n\n\n            newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n            newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n          } // now add the joined selector - but only if it is not empty\n\n\n          if (newJoinedSelector.elements.length !== 0) {\n            newSelectorPath.push(newJoinedSelector);\n          } // put together the parent selectors after the join (e.g. the rest of the parent)\n\n\n          if (addPath.length > 1) {\n            var restOfPath = addPath.slice(1);\n            restOfPath = restOfPath.map(function (selector) {\n              return selector.createDerived(selector.elements, []);\n            });\n            newSelectorPath = newSelectorPath.concat(restOfPath);\n          }\n\n          return newSelectorPath;\n        } // joins selector path from `beginningPath` with every selector path in `addPaths` array\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns array with all concatenated paths\n\n\n        function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n          var j;\n\n          for (j = 0; j < beginningPath.length; j++) {\n            var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n            result.push(newSelectorPath);\n          }\n\n          return result;\n        }\n\n        function mergeElementsOnToSelectors(elements, selectors) {\n          var i;\n          var sel;\n\n          if (elements.length === 0) {\n            return;\n          }\n\n          if (selectors.length === 0) {\n            selectors.push([new Selector(elements)]);\n            return;\n          }\n\n          for (i = 0; sel = selectors[i]; i++) {\n            // if the previous thing in sel is a parent this needs to join on to it\n            if (sel.length > 0) {\n              sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n            } else {\n              sel.push(new Selector(elements));\n            }\n          }\n        } // replace all parent selectors inside `inSelector` by content of `context` array\n        // resulting selectors are returned inside `paths` array\n        // returns true if `inSelector` contained at least one parent selector\n\n\n        function replaceParentSelector(paths, context, inSelector) {\n          // The paths are [[Selector]]\n          // The first list is a list of comma separated selectors\n          // The inner list is a list of inheritance separated selectors\n          // e.g.\n          // .a, .b {\n          //   .c {\n          //   }\n          // }\n          // == [[.a] [.c]] [[.b] [.c]]\n          //\n          var i;\n          var j;\n          var k;\n          var currentElements;\n          var newSelectors;\n          var selectorsMultiplied;\n          var sel;\n          var el;\n          var hadParentSelector = false;\n          var length;\n          var lastSelector;\n\n          function findNestedSelector(element) {\n            var maybeSelector;\n\n            if (!(element.value instanceof Paren)) {\n              return null;\n            }\n\n            maybeSelector = element.value.value;\n\n            if (!(maybeSelector instanceof Selector)) {\n              return null;\n            }\n\n            return maybeSelector;\n          } // the elements from the current selector so far\n\n\n          currentElements = []; // the current list of new selectors to add to the path.\n          // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n          // by the parents\n\n          newSelectors = [[]];\n\n          for (i = 0; el = inSelector.elements[i]; i++) {\n            // non parent reference elements just get added\n            if (el.value !== '&') {\n              var nestedSelector = findNestedSelector(el);\n\n              if (nestedSelector != null) {\n                // merge the current list of non parent selector elements\n                // on to the current list of selectors to add\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n                var nestedPaths = [];\n                var replaced = void 0;\n                var replacedNewSelectors = [];\n                replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                hadParentSelector = hadParentSelector || replaced; // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n\n                for (k = 0; k < nestedPaths.length; k++) {\n                  var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                  addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                }\n\n                newSelectors = replacedNewSelectors;\n                currentElements = [];\n              } else {\n                currentElements.push(el);\n              }\n            } else {\n              hadParentSelector = true; // the new list of selectors to add\n\n              selectorsMultiplied = []; // merge the current list of non parent selector elements\n              // on to the current list of selectors to add\n\n              mergeElementsOnToSelectors(currentElements, newSelectors); // loop through our current selectors\n\n              for (j = 0; j < newSelectors.length; j++) {\n                sel = newSelectors[j]; // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                // whether there are parents or not\n\n                if (context.length === 0) {\n                  // the combinator used on el should now be applied to the next element instead so that\n                  // it is not lost\n                  if (sel.length > 0) {\n                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                  }\n\n                  selectorsMultiplied.push(sel);\n                } else {\n                  // and the parent selectors\n                  for (k = 0; k < context.length; k++) {\n                    // We need to put the current selectors\n                    // then join the last selector's elements on to the parents selectors\n                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector); // add that to our new set of selectors\n\n                    selectorsMultiplied.push(newSelectorPath);\n                  }\n                }\n              } // our new selectors has been multiplied, so reset the state\n\n\n              newSelectors = selectorsMultiplied;\n              currentElements = [];\n            }\n          } // if we have any elements left over (e.g. .a& .b == .b)\n          // add them on to all the current selectors\n\n\n          mergeElementsOnToSelectors(currentElements, newSelectors);\n\n          for (i = 0; i < newSelectors.length; i++) {\n            length = newSelectors[i].length;\n\n            if (length > 0) {\n              paths.push(newSelectors[i]);\n              lastSelector = newSelectors[i][length - 1];\n              newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n            }\n          }\n\n          return hadParentSelector;\n        }\n\n        function deriveSelector(visibilityInfo, deriveFrom) {\n          var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n          newSelector.copyVisibilityInfo(visibilityInfo);\n          return newSelector;\n        } // joinSelector code follows\n\n\n        var i;\n        var newPaths;\n        var hadParentSelector;\n        newPaths = [];\n        hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n        if (!hadParentSelector) {\n          if (context.length > 0) {\n            newPaths = [];\n\n            for (i = 0; i < context.length; i++) {\n              var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n              concatenated.push(selector);\n              newPaths.push(concatenated);\n            }\n          } else {\n            newPaths = [[selector]];\n          }\n        }\n\n        for (i = 0; i < newPaths.length; i++) {\n          paths.push(newPaths[i]);\n        }\n      }\n    }]);\n\n    return Ruleset;\n  }(Node);\n\n  Ruleset.prototype.type = 'Ruleset';\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(AtRule, _Node);\n\n    function AtRule(name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, AtRule);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AtRule).call(this));\n      var i;\n      _this.name = name;\n      _this.value = value instanceof Node ? value : value ? new Anonymous(value) : value;\n\n      if (rules) {\n        if (Array.isArray(rules)) {\n          _this.rules = rules;\n        } else {\n          _this.rules = [rules];\n          _this.rules[0].selectors = new Selector([], null, null, index, currentFileInfo).createEmptySelectors();\n        }\n\n        for (i = 0; i < _this.rules.length; i++) {\n          _this.rules[i].allowImports = true;\n        }\n\n        _this.setParent(_this.rules, _assertThisInitialized(_this));\n      }\n\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.debugInfo = debugInfo;\n      _this.isRooted = isRooted || false;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(AtRule, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        var value = this.value;\n        var rules = this.rules;\n\n        if (rules) {\n          this.rules = visitor.visitArray(rules);\n        }\n\n        if (value) {\n          this.value = visitor.visit(value);\n        }\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return this.rules || !this.isCharset();\n      }\n    }, {\n      key: \"isCharset\",\n      value: function isCharset() {\n        return '@charset' === this.name;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var value = this.value;\n        var rules = this.rules;\n        output.add(this.name, this.fileInfo(), this.getIndex());\n\n        if (value) {\n          output.add(' ');\n          value.genCSS(context, output);\n        }\n\n        if (rules) {\n          this.outputRuleset(context, output, rules);\n        } else {\n          output.add(';');\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mediaPathBackup;\n        var mediaBlocksBackup;\n        var value = this.value;\n        var rules = this.rules; // media stored inside other atrule should not bubble over it\n        // backpup media bubbling information\n\n        mediaPathBackup = context.mediaPath;\n        mediaBlocksBackup = context.mediaBlocks; // deleted media bubbling information\n\n        context.mediaPath = [];\n        context.mediaBlocks = [];\n\n        if (value) {\n          value = value.eval(context);\n        }\n\n        if (rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          rules = [rules[0].eval(context)];\n          rules[0].root = true;\n        } // restore media bubbling information\n\n\n        context.mediaPath = mediaPathBackup;\n        context.mediaBlocks = mediaBlocksBackup;\n        return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n      }\n    }, {\n      key: \"variable\",\n      value: function variable(name) {\n        if (this.rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.variable.call(this.rules[0], name);\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find() {\n        if (this.rules) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.find.apply(this.rules[0], args);\n        }\n      }\n    }, {\n      key: \"rulesets\",\n      value: function rulesets() {\n        if (this.rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.rulesets.apply(this.rules[0]);\n        }\n      }\n    }, {\n      key: \"outputRuleset\",\n      value: function outputRuleset(context, output, rules) {\n        var ruleCnt = rules.length;\n        var i;\n        context.tabLevel = (context.tabLevel | 0) + 1; // Compressed\n\n        if (context.compress) {\n          output.add('{');\n\n          for (i = 0; i < ruleCnt; i++) {\n            rules[i].genCSS(context, output);\n          }\n\n          output.add('}');\n          context.tabLevel--;\n          return;\n        } // Non-compressed\n\n\n        var tabSetStr = \"\\n\".concat(Array(context.tabLevel).join('  '));\n        var tabRuleStr = \"\".concat(tabSetStr, \"  \");\n\n        if (!ruleCnt) {\n          output.add(\" {\".concat(tabSetStr, \"}\"));\n        } else {\n          output.add(\" {\".concat(tabRuleStr));\n          rules[0].genCSS(context, output);\n\n          for (i = 1; i < ruleCnt; i++) {\n            output.add(tabRuleStr);\n            rules[i].genCSS(context, output);\n          }\n\n          output.add(\"\".concat(tabSetStr, \"}\"));\n        }\n\n        context.tabLevel--;\n      }\n    }]);\n\n    return AtRule;\n  }(Node);\n\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(DetachedRuleset, _Node);\n\n    function DetachedRuleset(ruleset, frames) {\n      var _this;\n\n      _classCallCheck(this, DetachedRuleset);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(DetachedRuleset).call(this));\n      _this.ruleset = ruleset;\n      _this.frames = frames;\n\n      _this.setParent(_this.ruleset, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(DetachedRuleset, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.ruleset = visitor.visit(this.ruleset);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var frames = this.frames || copyArray(context.frames);\n        return new DetachedRuleset(this.ruleset, frames);\n      }\n    }, {\n      key: \"callEval\",\n      value: function callEval(context) {\n        return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n      }\n    }]);\n\n    return DetachedRuleset;\n  }(Node);\n\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Unit, _Node);\n\n    function Unit(numerator, denominator, backupUnit) {\n      var _this;\n\n      _classCallCheck(this, Unit);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Unit).call(this));\n      _this.numerator = numerator ? copyArray(numerator).sort() : [];\n      _this.denominator = denominator ? copyArray(denominator).sort() : [];\n\n      if (backupUnit) {\n        _this.backupUnit = backupUnit;\n      } else if (numerator && numerator.length) {\n        _this.backupUnit = numerator[0];\n      }\n\n      return _this;\n    }\n\n    _createClass(Unit, [{\n      key: \"clone\",\n      value: function clone() {\n        return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        // Dimension checks the unit is singular and throws an error if in strict math mode.\n        var strictUnits = context && context.strictUnits;\n\n        if (this.numerator.length === 1) {\n          output.add(this.numerator[0]); // the ideal situation\n        } else if (!strictUnits && this.backupUnit) {\n          output.add(this.backupUnit);\n        } else if (!strictUnits && this.denominator.length) {\n          output.add(this.denominator[0]);\n        }\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var i;\n        var returnStr = this.numerator.join('*');\n\n        for (i = 0; i < this.denominator.length; i++) {\n          returnStr += \"/\".concat(this.denominator[i]);\n        }\n\n        return returnStr;\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        return this.is(other.toString()) ? 0 : undefined;\n      }\n    }, {\n      key: \"is\",\n      value: function is(unitString) {\n        return this.toString().toUpperCase() === unitString.toUpperCase();\n      }\n    }, {\n      key: \"isLength\",\n      value: function isLength() {\n        return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this.numerator.length === 0 && this.denominator.length === 0;\n      }\n    }, {\n      key: \"isSingular\",\n      value: function isSingular() {\n        return this.numerator.length <= 1 && this.denominator.length === 0;\n      }\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        var i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n          this.numerator[i] = callback(this.numerator[i], false);\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n          this.denominator[i] = callback(this.denominator[i], true);\n        }\n      }\n    }, {\n      key: \"usedUnits\",\n      value: function usedUnits() {\n        var group;\n        var result = {};\n        var mapUnit;\n        var groupName;\n\n        mapUnit = function mapUnit(atomicUnit) {\n          /* jshint loopfunc:true */\n          if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n            result[groupName] = atomicUnit;\n          }\n\n          return atomicUnit;\n        };\n\n        for (groupName in unitConversions) {\n          if (unitConversions.hasOwnProperty(groupName)) {\n            group = unitConversions[groupName];\n            this.map(mapUnit);\n          }\n        }\n\n        return result;\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        var counter = {};\n        var atomicUnit;\n        var i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n          atomicUnit = this.numerator[i];\n          counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n          atomicUnit = this.denominator[i];\n          counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n        }\n\n        this.numerator = [];\n        this.denominator = [];\n\n        for (atomicUnit in counter) {\n          if (counter.hasOwnProperty(atomicUnit)) {\n            var count = counter[atomicUnit];\n\n            if (count > 0) {\n              for (i = 0; i < count; i++) {\n                this.numerator.push(atomicUnit);\n              }\n            } else if (count < 0) {\n              for (i = 0; i < -count; i++) {\n                this.denominator.push(atomicUnit);\n              }\n            }\n          }\n        }\n\n        this.numerator.sort();\n        this.denominator.sort();\n      }\n    }]);\n\n    return Unit;\n  }(Node);\n\n  Unit.prototype.type = 'Unit';\n\n  // A number with a unit\n  //\n\n  var Dimension =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Dimension, _Node);\n\n    function Dimension(value, unit) {\n      var _this;\n\n      _classCallCheck(this, Dimension);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Dimension).call(this));\n      _this.value = parseFloat(value);\n\n      if (isNaN(_this.value)) {\n        throw new Error('Dimension is not a number.');\n      }\n\n      _this.unit = unit && unit instanceof Unit ? unit : new Unit(unit ? [unit] : undefined);\n\n      _this.setParent(_this.unit, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Dimension, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.unit = visitor.visit(this.unit);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return this;\n      }\n    }, {\n      key: \"toColor\",\n      value: function toColor() {\n        return new Color([this.value, this.value, this.value]);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (context && context.strictUnits && !this.unit.isSingular()) {\n          throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \".concat(this.unit.toString()));\n        }\n\n        var value = this.fround(context, this.value);\n        var strValue = String(value);\n\n        if (value !== 0 && value < 0.000001 && value > -0.000001) {\n          // would be output 1e-6 etc.\n          strValue = value.toFixed(20).replace(/0+$/, '');\n        }\n\n        if (context && context.compress) {\n          // Zero values doesn't need a unit\n          if (value === 0 && this.unit.isLength()) {\n            output.add(strValue);\n            return;\n          } // Float values doesn't need a leading zero\n\n\n          if (value > 0 && value < 1) {\n            strValue = strValue.substr(1);\n          }\n        }\n\n        output.add(strValue);\n        this.unit.genCSS(context, output);\n      } // In an operation between two Dimensions,\n      // we default to the first Dimension's unit,\n      // so `1px + 2` will yield `3px`.\n\n    }, {\n      key: \"operate\",\n      value: function operate(context, op, other) {\n        /* jshint noempty:false */\n        var value = this._operate(context, op, this.value, other.value);\n\n        var unit = this.unit.clone();\n\n        if (op === '+' || op === '-') {\n          if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n            unit = other.unit.clone();\n\n            if (this.unit.backupUnit) {\n              unit.backupUnit = this.unit.backupUnit;\n            }\n          } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ; else {\n            other = other.convertTo(this.unit.usedUnits());\n\n            if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n              throw new Error(\"Incompatible units. Change the units or use the unit function. \" + \"Bad units: '\".concat(unit.toString(), \"' and '\").concat(other.unit.toString(), \"'.\"));\n            }\n\n            value = this._operate(context, op, this.value, other.value);\n          }\n        } else if (op === '*') {\n          unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n          unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n          unit.cancel();\n        } else if (op === '/') {\n          unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n          unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n          unit.cancel();\n        }\n\n        return new Dimension(value, unit);\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        var a;\n        var b;\n\n        if (!(other instanceof Dimension)) {\n          return undefined;\n        }\n\n        if (this.unit.isEmpty() || other.unit.isEmpty()) {\n          a = this;\n          b = other;\n        } else {\n          a = this.unify();\n          b = other.unify();\n\n          if (a.unit.compare(b.unit) !== 0) {\n            return undefined;\n          }\n        }\n\n        return Node.numericCompare(a.value, b.value);\n      }\n    }, {\n      key: \"unify\",\n      value: function unify() {\n        return this.convertTo({\n          length: 'px',\n          duration: 's',\n          angle: 'rad'\n        });\n      }\n    }, {\n      key: \"convertTo\",\n      value: function convertTo(conversions) {\n        var value = this.value;\n        var unit = this.unit.clone();\n        var i;\n        var groupName;\n        var group;\n        var targetUnit;\n        var derivedConversions = {};\n        var applyUnit;\n\n        if (typeof conversions === 'string') {\n          for (i in unitConversions) {\n            if (unitConversions[i].hasOwnProperty(conversions)) {\n              derivedConversions = {};\n              derivedConversions[i] = conversions;\n            }\n          }\n\n          conversions = derivedConversions;\n        }\n\n        applyUnit = function applyUnit(atomicUnit, denominator) {\n          /* jshint loopfunc:true */\n          if (group.hasOwnProperty(atomicUnit)) {\n            if (denominator) {\n              value = value / (group[atomicUnit] / group[targetUnit]);\n            } else {\n              value = value * (group[atomicUnit] / group[targetUnit]);\n            }\n\n            return targetUnit;\n          }\n\n          return atomicUnit;\n        };\n\n        for (groupName in conversions) {\n          if (conversions.hasOwnProperty(groupName)) {\n            targetUnit = conversions[groupName];\n            group = unitConversions[groupName];\n            unit.map(applyUnit);\n          }\n        }\n\n        unit.cancel();\n        return new Dimension(value, unit);\n      }\n    }]);\n\n    return Dimension;\n  }(Node);\n\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\n\n  var Operation =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Operation, _Node);\n\n    function Operation(op, operands, isSpaced) {\n      var _this;\n\n      _classCallCheck(this, Operation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Operation).call(this));\n      _this.op = op.trim();\n      _this.operands = operands;\n      _this.isSpaced = isSpaced;\n      return _this;\n    }\n\n    _createClass(Operation, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.operands = visitor.visitArray(this.operands);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var a = this.operands[0].eval(context);\n        var b = this.operands[1].eval(context);\n        var op;\n\n        if (context.isMathOn(this.op)) {\n          op = this.op === './' ? '/' : this.op;\n\n          if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n          }\n\n          if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n          }\n\n          if (!a.operate) {\n            if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\n              return new Operation(this.op, [a, b], this.isSpaced);\n            }\n\n            throw {\n              type: 'Operation',\n              message: 'Operation on an invalid type'\n            };\n          }\n\n          return a.operate(context, op, b);\n        } else {\n          return new Operation(this.op, [a, b], this.isSpaced);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        this.operands[0].genCSS(context, output);\n\n        if (this.isSpaced) {\n          output.add(' ');\n        }\n\n        output.add(this.op);\n\n        if (this.isSpaced) {\n          output.add(' ');\n        }\n\n        this.operands[1].genCSS(context, output);\n      }\n    }]);\n\n    return Operation;\n  }(Node);\n\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\n\n  var Expression =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Expression, _Node);\n\n    function Expression(value, noSpacing) {\n      var _this;\n\n      _classCallCheck(this, Expression);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Expression).call(this));\n      _this.value = value;\n      _this.noSpacing = noSpacing;\n\n      if (!value) {\n        throw new Error('Expression requires an array parameter');\n      }\n\n      return _this;\n    }\n\n    _createClass(Expression, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visitArray(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var returnValue;\n        var mathOn = context.isMathOn();\n        var inParenthesis = this.parens && (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\n        var doubleParen = false;\n\n        if (inParenthesis) {\n          context.inParenthesis();\n        }\n\n        if (this.value.length > 1) {\n          returnValue = new Expression(this.value.map(function (e) {\n            if (!e.eval) {\n              return e;\n            }\n\n            return e.eval(context);\n          }), this.noSpacing);\n        } else if (this.value.length === 1) {\n          if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n            doubleParen = true;\n          }\n\n          returnValue = this.value[0].eval(context);\n        } else {\n          returnValue = this;\n        }\n\n        if (inParenthesis) {\n          context.outOfParenthesis();\n        }\n\n        if (this.parens && this.parensInOp && !mathOn && !doubleParen && !(returnValue instanceof Dimension)) {\n          returnValue = new Paren(returnValue);\n        }\n\n        return returnValue;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        for (var i = 0; i < this.value.length; i++) {\n          this.value[i].genCSS(context, output);\n\n          if (!this.noSpacing && i + 1 < this.value.length) {\n            output.add(' ');\n          }\n        }\n      }\n    }, {\n      key: \"throwAwayComments\",\n      value: function throwAwayComments() {\n        this.value = this.value.filter(function (v) {\n          return !(v instanceof Comment);\n        });\n      }\n    }]);\n\n    return Expression;\n  }(Node);\n\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller =\n  /*#__PURE__*/\n  function () {\n    function functionCaller(name, context, index, currentFileInfo) {\n      _classCallCheck(this, functionCaller);\n\n      this.name = name.toLowerCase();\n      this.index = index;\n      this.context = context;\n      this.currentFileInfo = currentFileInfo;\n      this.func = context.frames[0].functionRegistry.get(this.name);\n    }\n\n    _createClass(functionCaller, [{\n      key: \"isValid\",\n      value: function isValid() {\n        return Boolean(this.func);\n      }\n    }, {\n      key: \"call\",\n      value: function call(args) {\n        // This code is terrible and should be replaced as per this issue...\n        // https://github.com/less/less.js/issues/2477\n        if (Array.isArray(args)) {\n          args = args.filter(function (item) {\n            if (item.type === 'Comment') {\n              return false;\n            }\n\n            return true;\n          }).map(function (item) {\n            if (item.type === 'Expression') {\n              var subNodes = item.value.filter(function (item) {\n                if (item.type === 'Comment') {\n                  return false;\n                }\n\n                return true;\n              });\n\n              if (subNodes.length === 1) {\n                return subNodes[0];\n              } else {\n                return new Expression(subNodes);\n              }\n            }\n\n            return item;\n          });\n        }\n\n        return this.func.apply(this, _toConsumableArray(args));\n      }\n    }]);\n\n    return functionCaller;\n  }();\n\n  // A function call node.\n  //\n\n  var Call =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Call, _Node);\n\n    function Call(name, args, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Call);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Call).call(this));\n      _this.name = name;\n      _this.args = args;\n      _this.calc = name === 'calc';\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Call, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.args) {\n          this.args = visitor.visitArray(this.args);\n        }\n      } //\n      // When evaluating a function call,\n      // we either find the function in the functionRegistry,\n      // in which case we call it, passing the  evaluated arguments,\n      // if this returns null or we cannot find the function, we\n      // simply print it out as it appeared originally [2].\n      //\n      // The reason why we evaluate the arguments, is in the case where\n      // we try to pass a variable to a function, like: `saturate(@color)`.\n      // The function should receive the value, not the variable.\n      //\n\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        /**\n         * Turn off math for calc(), and switch back on for evaluating nested functions\n         */\n        var currentMathContext = context.mathOn;\n        context.mathOn = !this.calc;\n\n        if (this.calc || context.inCalc) {\n          context.enterCalc();\n        }\n\n        var args = this.args.map(function (a) {\n          return a.eval(context);\n        });\n\n        if (this.calc || context.inCalc) {\n          context.exitCalc();\n        }\n\n        context.mathOn = currentMathContext;\n        var result;\n        var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n\n        if (funcCaller.isValid()) {\n          try {\n            result = funcCaller.call(args);\n          } catch (e) {\n            throw {\n              type: e.type || 'Runtime',\n              message: \"error evaluating function `\".concat(this.name, \"`\").concat(e.message ? \": \".concat(e.message) : ''),\n              index: this.getIndex(),\n              filename: this.fileInfo().filename,\n              line: e.lineNumber,\n              column: e.columnNumber\n            };\n          }\n\n          if (result !== null && result !== undefined) {\n            // Results that that are not nodes are cast as Anonymous nodes\n            // Falsy values or booleans are returned as empty nodes\n            if (!(result instanceof Node)) {\n              if (!result || result === true) {\n                result = new Anonymous(null);\n              } else {\n                result = new Anonymous(result.toString());\n              }\n            }\n\n            result._index = this._index;\n            result._fileInfo = this._fileInfo;\n            return result;\n          }\n        }\n\n        return new Call(this.name, args, this.getIndex(), this.fileInfo());\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(\"\".concat(this.name, \"(\"), this.fileInfo(), this.getIndex());\n\n        for (var i = 0; i < this.args.length; i++) {\n          this.args[i].genCSS(context, output);\n\n          if (i + 1 < this.args.length) {\n            output.add(', ');\n          }\n        }\n\n        output.add(')');\n      }\n    }]);\n\n    return Call;\n  }(Node);\n\n  Call.prototype.type = 'Call';\n\n  var Variable =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Variable, _Node);\n\n    function Variable(name, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Variable);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Variable).call(this));\n      _this.name = name;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Variable, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var variable;\n        var name = this.name;\n\n        if (name.indexOf('@@') === 0) {\n          name = \"@\".concat(new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value);\n        }\n\n        if (this.evaluating) {\n          throw {\n            type: 'Name',\n            message: \"Recursive variable definition for \".concat(name),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        this.evaluating = true;\n        variable = this.find(context.frames, function (frame) {\n          var v = frame.variable(name);\n\n          if (v) {\n            if (v.important) {\n              var importantScope = context.importantScope[context.importantScope.length - 1];\n              importantScope.important = v.important;\n            } // If in calc, wrap vars in a function call to cascade evaluate args first\n\n\n            if (context.inCalc) {\n              return new Call('_SELF', [v.value]).eval(context);\n            } else {\n              return v.value.eval(context);\n            }\n          }\n        });\n\n        if (variable) {\n          this.evaluating = false;\n          return variable;\n        } else {\n          throw {\n            type: 'Name',\n            message: \"variable \".concat(name, \" is undefined\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find(obj, fun) {\n        for (var i = 0, r; i < obj.length; i++) {\n          r = fun.call(obj, obj[i]);\n\n          if (r) {\n            return r;\n          }\n        }\n\n        return null;\n      }\n    }]);\n\n    return Variable;\n  }(Node);\n\n  Variable.prototype.type = 'Variable';\n\n  var Property =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Property, _Node);\n\n    function Property(name, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Property);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Property).call(this));\n      _this.name = name;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Property, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var property;\n        var name = this.name; // TODO: shorten this reference\n\n        var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n        if (this.evaluating) {\n          throw {\n            type: 'Name',\n            message: \"Recursive property reference for \".concat(name),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        this.evaluating = true;\n        property = this.find(context.frames, function (frame) {\n          var v;\n          var vArr = frame.property(name);\n\n          if (vArr) {\n            for (var i = 0; i < vArr.length; i++) {\n              v = vArr[i];\n              vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n            }\n\n            mergeRules(vArr);\n            v = vArr[vArr.length - 1];\n\n            if (v.important) {\n              var importantScope = context.importantScope[context.importantScope.length - 1];\n              importantScope.important = v.important;\n            }\n\n            v = v.value.eval(context);\n            return v;\n          }\n        });\n\n        if (property) {\n          this.evaluating = false;\n          return property;\n        } else {\n          throw {\n            type: 'Name',\n            message: \"Property '\".concat(name, \"' is undefined\"),\n            filename: this.currentFileInfo.filename,\n            index: this.index\n          };\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find(obj, fun) {\n        for (var i = 0, r; i < obj.length; i++) {\n          r = fun.call(obj, obj[i]);\n\n          if (r) {\n            return r;\n          }\n        }\n\n        return null;\n      }\n    }]);\n\n    return Property;\n  }(Node);\n\n  Property.prototype.type = 'Property';\n\n  var Attribute =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Attribute, _Node);\n\n    function Attribute(key, op, value) {\n      var _this;\n\n      _classCallCheck(this, Attribute);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Attribute).call(this));\n      _this.key = key;\n      _this.op = op;\n      _this.value = value;\n      return _this;\n    }\n\n    _createClass(Attribute, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, this.value && this.value.eval ? this.value.eval(context) : this.value);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context));\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context) {\n        var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n        if (this.op) {\n          value += this.op;\n          value += this.value.toCSS ? this.value.toCSS(context) : this.value;\n        }\n\n        return \"[\".concat(value, \"]\");\n      }\n    }]);\n\n    return Attribute;\n  }(Node);\n\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Quoted, _Node);\n\n    function Quoted(str, content, escaped, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Quoted);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Quoted).call(this));\n      _this.escaped = escaped == null ? true : escaped;\n      _this.value = content || '';\n      _this.quote = str.charAt(0);\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.variableRegex = /@\\{([\\w-]+)\\}/g;\n      _this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n      _this.allowRoot = escaped;\n      return _this;\n    }\n\n    _createClass(Quoted, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (!this.escaped) {\n          output.add(this.quote, this.fileInfo(), this.getIndex());\n        }\n\n        output.add(this.value);\n\n        if (!this.escaped) {\n          output.add(this.quote);\n        }\n      }\n    }, {\n      key: \"containsVariables\",\n      value: function containsVariables() {\n        return this.value.match(this.variableRegex);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var that = this;\n        var value = this.value;\n\n        var variableReplacement = function variableReplacement(_, name) {\n          var v = new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\n          return v instanceof Quoted ? v.value : v.toCSS();\n        };\n\n        var propertyReplacement = function propertyReplacement(_, name) {\n          var v = new Property(\"$\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\n          return v instanceof Quoted ? v.value : v.toCSS();\n        };\n\n        function iterativeReplace(value, regexp, replacementFnc) {\n          var evaluatedValue = value;\n\n          do {\n            value = evaluatedValue.toString();\n            evaluatedValue = value.replace(regexp, replacementFnc);\n          } while (value !== evaluatedValue);\n\n          return evaluatedValue;\n        }\n\n        value = iterativeReplace(value, this.variableRegex, variableReplacement);\n        value = iterativeReplace(value, this.propRegex, propertyReplacement);\n        return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        // when comparing quoted strings allow the quote to differ\n        if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n          return Node.numericCompare(this.value, other.value);\n        } else {\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        }\n      }\n    }]);\n\n    return Quoted;\n  }(Node);\n\n  Quoted.prototype.type = 'Quoted';\n\n  var URL =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(URL, _Node);\n\n    function URL(val, index, currentFileInfo, isEvald) {\n      var _this;\n\n      _classCallCheck(this, URL);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(URL).call(this));\n      _this.value = val;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.isEvald = isEvald;\n      return _this;\n    }\n\n    _createClass(URL, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('url(');\n        this.value.genCSS(context, output);\n        output.add(')');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var val = this.value.eval(context);\n        var rootpath;\n\n        if (!this.isEvald) {\n          // Add the rootpath if the URL requires a rewrite\n          rootpath = this.fileInfo() && this.fileInfo().rootpath;\n\n          if (typeof rootpath === 'string' && typeof val.value === 'string' && context.pathRequiresRewrite(val.value)) {\n            if (!val.quote) {\n              rootpath = escapePath(rootpath);\n            }\n\n            val.value = context.rewritePath(val.value, rootpath);\n          } else {\n            val.value = context.normalizePath(val.value);\n          } // Add url args if enabled\n\n\n          if (context.urlArgs) {\n            if (!val.value.match(/^\\s*data:/)) {\n              var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n              var urlArgs = delimiter + context.urlArgs;\n\n              if (val.value.indexOf('#') !== -1) {\n                val.value = val.value.replace('#', \"\".concat(urlArgs, \"#\"));\n              } else {\n                val.value += urlArgs;\n              }\n            }\n          }\n        }\n\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\n      }\n    }]);\n\n    return URL;\n  }(Node);\n\n  URL.prototype.type = 'Url';\n\n  function escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, function (match) {\n      return \"\\\\\".concat(match);\n    });\n  }\n\n  var Media =\n  /*#__PURE__*/\n  function (_AtRule) {\n    _inherits(Media, _AtRule);\n\n    function Media(value, features, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Media);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Media).call(this));\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      var selectors = new Selector([], null, null, _this._index, _this._fileInfo).createEmptySelectors();\n      _this.features = new Value(features);\n      _this.rules = [new Ruleset(selectors, value)];\n      _this.rules[0].allowImports = true;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      _this.setParent(selectors, _assertThisInitialized(_this));\n\n      _this.setParent(_this.features, _assertThisInitialized(_this));\n\n      _this.setParent(_this.rules, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Media, [{\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return true;\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.features) {\n          this.features = visitor.visit(this.features);\n        }\n\n        if (this.rules) {\n          this.rules = visitor.visitArray(this.rules);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('@media ', this._fileInfo, this._index);\n        this.features.genCSS(context, output);\n        this.outputRuleset(context, output, this.rules);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (!context.mediaBlocks) {\n          context.mediaBlocks = [];\n          context.mediaPath = [];\n        }\n\n        var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n\n        if (this.debugInfo) {\n          this.rules[0].debugInfo = this.debugInfo;\n          media.debugInfo = this.debugInfo;\n        }\n\n        media.features = this.features.eval(context);\n        context.mediaPath.push(media);\n        context.mediaBlocks.push(media);\n        this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n        context.frames.unshift(this.rules[0]);\n        media.rules = [this.rules[0].eval(context)];\n        context.frames.shift();\n        context.mediaPath.pop();\n        return context.mediaPath.length === 0 ? media.evalTop(context) : media.evalNested(context);\n      }\n    }, {\n      key: \"evalTop\",\n      value: function evalTop(context) {\n        var result = this; // Render all dependent Media blocks.\n\n        if (context.mediaBlocks.length > 1) {\n          var selectors = new Selector([], null, null, this.getIndex(), this.fileInfo()).createEmptySelectors();\n          result = new Ruleset(selectors, context.mediaBlocks);\n          result.multiMedia = true;\n          result.copyVisibilityInfo(this.visibilityInfo());\n          this.setParent(result, this);\n        }\n\n        delete context.mediaBlocks;\n        delete context.mediaPath;\n        return result;\n      }\n    }, {\n      key: \"evalNested\",\n      value: function evalNested(context) {\n        var i;\n        var value;\n        var path = context.mediaPath.concat([this]); // Extract the media-query conditions separated with `,` (OR).\n\n        for (i = 0; i < path.length; i++) {\n          value = path[i].features instanceof Value ? path[i].features.value : path[i].features;\n          path[i] = Array.isArray(value) ? value : [value];\n        } // Trace all permutations to generate the resulting media-query.\n        //\n        // (a, b and c) with nested (d, e) ->\n        //    a and d\n        //    a and e\n        //    b and c and d\n        //    b and c and e\n\n\n        this.features = new Value(this.permute(path).map(function (path) {\n          path = path.map(function (fragment) {\n            return fragment.toCSS ? fragment : new Anonymous(fragment);\n          });\n\n          for (i = path.length - 1; i > 0; i--) {\n            path.splice(i, 0, new Anonymous('and'));\n          }\n\n          return new Expression(path);\n        }));\n        this.setParent(this.features, this); // Fake a tree-node that doesn't output anything.\n\n        return new Ruleset([], []);\n      }\n    }, {\n      key: \"permute\",\n      value: function permute(arr) {\n        if (arr.length === 0) {\n          return [];\n        } else if (arr.length === 1) {\n          return arr[0];\n        } else {\n          var result = [];\n          var rest = this.permute(arr.slice(1));\n\n          for (var i = 0; i < rest.length; i++) {\n            for (var j = 0; j < arr[0].length; j++) {\n              result.push([arr[0][j]].concat(rest[i]));\n            }\n          }\n\n          return result;\n        }\n      }\n    }, {\n      key: \"bubbleSelectors\",\n      value: function bubbleSelectors(selectors) {\n        if (!selectors) {\n          return;\n        }\n\n        this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n        this.setParent(this.rules, this);\n      }\n    }]);\n\n    return Media;\n  }(AtRule);\n\n  Media.prototype.type = 'Media';\n\n  // CSS @import node\n  //\n  // The general strategy here is that we don't want to wait\n  // for the parsing to be completed, before we start importing\n  // the file. That's because in the context of a browser,\n  // most of the time will be spent waiting for the server to respond.\n  //\n  // On creation, we push the import path to our import queue, though\n  // `import,push`, we also pass it a callback, which it'll call once\n  // the file has been fetched, and parsed.\n  //\n\n  var Import =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Import, _Node);\n\n    function Import(path, features, options, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Import);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Import).call(this));\n      _this.options = options;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.path = path;\n      _this.features = features;\n      _this.allowRoot = true;\n\n      if (_this.options.less !== undefined || _this.options.inline) {\n        _this.css = !_this.options.less || _this.options.inline;\n      } else {\n        var pathValue = _this.getPath();\n\n        if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n          _this.css = true;\n        }\n      }\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.features, _assertThisInitialized(_this));\n\n      _this.setParent(_this.path, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Import, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.features) {\n          this.features = visitor.visit(this.features);\n        }\n\n        this.path = visitor.visit(this.path);\n\n        if (!this.options.isPlugin && !this.options.inline && this.root) {\n          this.root = visitor.visit(this.root);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.css && this.path._fileInfo.reference === undefined) {\n          output.add('@import ', this._fileInfo, this._index);\n          this.path.genCSS(context, output);\n\n          if (this.features) {\n            output.add(' ');\n            this.features.genCSS(context, output);\n          }\n\n          output.add(';');\n        }\n      }\n    }, {\n      key: \"getPath\",\n      value: function getPath() {\n        return this.path instanceof URL ? this.path.value.value : this.path.value;\n      }\n    }, {\n      key: \"isVariableImport\",\n      value: function isVariableImport() {\n        var path = this.path;\n\n        if (path instanceof URL) {\n          path = path.value;\n        }\n\n        if (path instanceof Quoted) {\n          return path.containsVariables();\n        }\n\n        return true;\n      }\n    }, {\n      key: \"evalForImport\",\n      value: function evalForImport(context) {\n        var path = this.path;\n\n        if (path instanceof URL) {\n          path = path.value;\n        }\n\n        return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n      }\n    }, {\n      key: \"evalPath\",\n      value: function evalPath(context) {\n        var path = this.path.eval(context);\n        var fileInfo = this._fileInfo;\n\n        if (!(path instanceof URL)) {\n          // Add the rootpath if the URL requires a rewrite\n          var pathValue = path.value;\n\n          if (fileInfo && pathValue && context.pathRequiresRewrite(pathValue)) {\n            path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n          } else {\n            path.value = context.normalizePath(path.value);\n          }\n        }\n\n        return path;\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = this.doEval(context);\n\n        if (this.options.reference || this.blocksVisibility()) {\n          if (result.length || result.length === 0) {\n            result.forEach(function (node) {\n              node.addVisibilityBlock();\n            });\n          } else {\n            result.addVisibilityBlock();\n          }\n        }\n\n        return result;\n      }\n    }, {\n      key: \"doEval\",\n      value: function doEval(context) {\n        var ruleset;\n        var registry;\n        var features = this.features && this.features.eval(context);\n\n        if (this.options.isPlugin) {\n          if (this.root && this.root.eval) {\n            try {\n              this.root.eval(context);\n            } catch (e) {\n              e.message = 'Plugin error during evaluation';\n              throw new LessError(e, this.root.imports, this.root.filename);\n            }\n          }\n\n          registry = context.frames[0] && context.frames[0].functionRegistry;\n\n          if (registry && this.root && this.root.functions) {\n            registry.addMultiple(this.root.functions);\n          }\n\n          return [];\n        }\n\n        if (this.skip) {\n          if (typeof this.skip === 'function') {\n            this.skip = this.skip();\n          }\n\n          if (this.skip) {\n            return [];\n          }\n        }\n\n        if (this.options.inline) {\n          var contents = new Anonymous(this.root, 0, {\n            filename: this.importedFilename,\n            reference: this.path._fileInfo && this.path._fileInfo.reference\n          }, true, true);\n          return this.features ? new Media([contents], this.features.value) : [contents];\n        } else if (this.css) {\n          var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n\n          if (!newImport.css && this.error) {\n            throw this.error;\n          }\n\n          return newImport;\n        } else {\n          ruleset = new Ruleset(null, copyArray(this.root.rules));\n          ruleset.evalImports(context);\n          return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n        }\n      }\n    }]);\n\n    return Import;\n  }(Node);\n\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(JsEvalNode, _Node);\n\n    function JsEvalNode() {\n      _classCallCheck(this, JsEvalNode);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(JsEvalNode).apply(this, arguments));\n    }\n\n    _createClass(JsEvalNode, [{\n      key: \"evaluateJavaScript\",\n      value: function evaluateJavaScript(expression, context) {\n        var result;\n        var that = this;\n        var evalContext = {};\n\n        if (!context.javascriptEnabled) {\n          throw {\n            message: 'Inline JavaScript is not enabled. Is it set in your options?',\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n          return that.jsify(new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context));\n        });\n\n        try {\n          expression = new Function(\"return (\".concat(expression, \")\"));\n        } catch (e) {\n          throw {\n            message: \"JavaScript evaluation error: \".concat(e.message, \" from `\").concat(expression, \"`\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        var variables = context.frames[0].variables();\n\n        for (var k in variables) {\n          if (variables.hasOwnProperty(k)) {\n            /* jshint loopfunc:true */\n            evalContext[k.slice(1)] = {\n              value: variables[k].value,\n              toJS: function toJS() {\n                return this.value.eval(context).toCSS();\n              }\n            };\n          }\n        }\n\n        try {\n          result = expression.call(evalContext);\n        } catch (e) {\n          throw {\n            message: \"JavaScript evaluation error: '\".concat(e.name, \": \").concat(e.message.replace(/[\"]/g, '\\''), \"'\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        return result;\n      }\n    }, {\n      key: \"jsify\",\n      value: function jsify(obj) {\n        if (Array.isArray(obj.value) && obj.value.length > 1) {\n          return \"[\".concat(obj.value.map(function (v) {\n            return v.toCSS();\n          }).join(', '), \"]\");\n        } else {\n          return obj.toCSS();\n        }\n      }\n    }]);\n\n    return JsEvalNode;\n  }(Node);\n\n  var JavaScript =\n  /*#__PURE__*/\n  function (_JsEvalNode) {\n    _inherits(JavaScript, _JsEvalNode);\n\n    function JavaScript(string, escaped, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, JavaScript);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(JavaScript).call(this));\n      _this.escaped = escaped;\n      _this.expression = string;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(JavaScript, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = this.evaluateJavaScript(this.expression, context);\n\n        var type = _typeof(result);\n\n        if (type === 'number' && !isNaN(result)) {\n          return new Dimension(result);\n        } else if (type === 'string') {\n          return new Quoted(\"\\\"\".concat(result, \"\\\"\"), result, this.escaped, this._index);\n        } else if (Array.isArray(result)) {\n          return new Anonymous(result.join(', '));\n        } else {\n          return new Anonymous(result);\n        }\n      }\n    }]);\n\n    return JavaScript;\n  }(JsEvalNode);\n\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Assignment, _Node);\n\n    function Assignment(key, val) {\n      var _this;\n\n      _classCallCheck(this, Assignment);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Assignment).call(this));\n      _this.key = key;\n      _this.value = val;\n      return _this;\n    }\n\n    _createClass(Assignment, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (this.value.eval) {\n          return new Assignment(this.key, this.value.eval(context));\n        }\n\n        return this;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(\"\".concat(this.key, \"=\"));\n\n        if (this.value.genCSS) {\n          this.value.genCSS(context, output);\n        } else {\n          output.add(this.value);\n        }\n      }\n    }]);\n\n    return Assignment;\n  }(Node);\n\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Condition, _Node);\n\n    function Condition(op, l, r, i, negate) {\n      var _this;\n\n      _classCallCheck(this, Condition);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Condition).call(this));\n      _this.op = op.trim();\n      _this.lvalue = l;\n      _this.rvalue = r;\n      _this._index = i;\n      _this.negate = negate;\n      return _this;\n    }\n\n    _createClass(Condition, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.lvalue = visitor.visit(this.lvalue);\n        this.rvalue = visitor.visit(this.rvalue);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = function (op, a, b) {\n          switch (op) {\n            case 'and':\n              return a && b;\n\n            case 'or':\n              return a || b;\n\n            default:\n              switch (Node.compare(a, b)) {\n                case -1:\n                  return op === '<' || op === '=<' || op === '<=';\n\n                case 0:\n                  return op === '=' || op === '>=' || op === '=<' || op === '<=';\n\n                case 1:\n                  return op === '>' || op === '>=';\n\n                default:\n                  return false;\n              }\n\n          }\n        }(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n        return this.negate ? !result : result;\n      }\n    }]);\n\n    return Condition;\n  }(Node);\n\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(UnicodeDescriptor, _Node);\n\n    function UnicodeDescriptor(value) {\n      var _this;\n\n      _classCallCheck(this, UnicodeDescriptor);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(UnicodeDescriptor).call(this));\n      _this.value = value;\n      return _this;\n    }\n\n    return UnicodeDescriptor;\n  }(Node);\n\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Negative, _Node);\n\n    function Negative(node) {\n      var _this;\n\n      _classCallCheck(this, Negative);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Negative).call(this));\n      _this.value = node;\n      return _this;\n    }\n\n    _createClass(Negative, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('-');\n        this.value.genCSS(context, output);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (context.isMathOn()) {\n          return new Operation('*', [new Dimension(-1), this.value]).eval(context);\n        }\n\n        return new Negative(this.value.eval(context));\n      }\n    }]);\n\n    return Negative;\n  }(Node);\n\n  Negative.prototype.type = 'Negative';\n\n  var Extend =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Extend, _Node);\n\n    function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Extend);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Extend).call(this));\n      _this.selector = selector;\n      _this.option = option;\n      _this.object_id = Extend.next_id++;\n      _this.parent_ids = [_this.object_id];\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      switch (option) {\n        case 'all':\n          _this.allowBefore = true;\n          _this.allowAfter = true;\n          break;\n\n        default:\n          _this.allowBefore = false;\n          _this.allowAfter = false;\n          break;\n      }\n\n      _this.setParent(_this.selector, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Extend, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.selector = visitor.visit(this.selector);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(context) {\n        return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      } // it concatenates (joins) all selectors in selector array\n\n    }, {\n      key: \"findSelfSelectors\",\n      value: function findSelfSelectors(selectors) {\n        var selfElements = [];\n        var i;\n        var selectorElements;\n\n        for (i = 0; i < selectors.length; i++) {\n          selectorElements = selectors[i].elements; // duplicate the logic in genCSS function inside the selector node.\n          // future TODO - move both logics into the selector joiner visitor\n\n          if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n            selectorElements[0].combinator.value = ' ';\n          }\n\n          selfElements = selfElements.concat(selectors[i].elements);\n        }\n\n        this.selfSelectors = [new Selector(selfElements)];\n        this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n      }\n    }]);\n\n    return Extend;\n  }(Node);\n\n  Extend.next_id = 0;\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(VariableCall, _Node);\n\n    function VariableCall(variable, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, VariableCall);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(VariableCall).call(this));\n      _this.variable = variable;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(VariableCall, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var rules;\n        var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n        var error = new LessError({\n          message: \"Could not evaluate variable call \".concat(this.variable)\n        });\n\n        if (!detachedRuleset.ruleset) {\n          if (detachedRuleset.rules) {\n            rules = detachedRuleset;\n          } else if (Array.isArray(detachedRuleset)) {\n            rules = new Ruleset('', detachedRuleset);\n          } else if (Array.isArray(detachedRuleset.value)) {\n            rules = new Ruleset('', detachedRuleset.value);\n          } else {\n            throw error;\n          }\n\n          detachedRuleset = new DetachedRuleset(rules);\n        }\n\n        if (detachedRuleset.ruleset) {\n          return detachedRuleset.callEval(context);\n        }\n\n        throw error;\n      }\n    }]);\n\n    return VariableCall;\n  }(Node);\n\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(NamespaceValue, _Node);\n\n    function NamespaceValue(ruleCall, lookups, important, index, fileInfo) {\n      var _this;\n\n      _classCallCheck(this, NamespaceValue);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NamespaceValue).call(this));\n      _this.value = ruleCall;\n      _this.lookups = lookups;\n      _this.important = important;\n      _this._index = index;\n      _this._fileInfo = fileInfo;\n      return _this;\n    }\n\n    _createClass(NamespaceValue, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var i;\n        var name;\n        var rules = this.value.eval(context);\n\n        for (i = 0; i < this.lookups.length; i++) {\n          name = this.lookups[i];\n          /**\n           * Eval'd DRs return rulesets.\n           * Eval'd mixins return rules, so let's make a ruleset if we need it.\n           * We need to do this because of late parsing of values\n           */\n\n          if (Array.isArray(rules)) {\n            rules = new Ruleset([new Selector()], rules);\n          }\n\n          if (name === '') {\n            rules = rules.lastDeclaration();\n          } else if (name.charAt(0) === '@') {\n            if (name.charAt(1) === '@') {\n              name = \"@\".concat(new Variable(name.substr(1)).eval(context).value);\n            }\n\n            if (rules.variables) {\n              rules = rules.variable(name);\n            }\n\n            if (!rules) {\n              throw {\n                type: 'Name',\n                message: \"variable \".concat(name, \" not found\"),\n                filename: this.fileInfo().filename,\n                index: this.getIndex()\n              };\n            }\n          } else {\n            if (name.substring(0, 2) === '$@') {\n              name = \"$\".concat(new Variable(name.substr(1)).eval(context).value);\n            } else {\n              name = name.charAt(0) === '$' ? name : \"$\".concat(name);\n            }\n\n            if (rules.properties) {\n              rules = rules.property(name);\n            }\n\n            if (!rules) {\n              throw {\n                type: 'Name',\n                message: \"property \\\"\".concat(name.substr(1), \"\\\" not found\"),\n                filename: this.fileInfo().filename,\n                index: this.getIndex()\n              };\n            } // Properties are an array of values, since a ruleset can have multiple props.\n            // We pick the last one (the \"cascaded\" value)\n\n\n            rules = rules[rules.length - 1];\n          }\n\n          if (rules.value) {\n            rules = rules.eval(context).value;\n          }\n\n          if (rules.ruleset) {\n            rules = rules.ruleset.eval(context);\n          }\n        }\n\n        return rules;\n      }\n    }]);\n\n    return NamespaceValue;\n  }(Node);\n\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition =\n  /*#__PURE__*/\n  function (_Ruleset) {\n    _inherits(Definition, _Ruleset);\n\n    function Definition(name, params, rules, condition, variadic, frames, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Definition);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Definition).call(this));\n      _this.name = name || 'anonymous mixin';\n      _this.selectors = [new Selector([new Element(null, name, false, _this._index, _this._fileInfo)])];\n      _this.params = params;\n      _this.condition = condition;\n      _this.variadic = variadic;\n      _this.arity = params.length;\n      _this.rules = rules;\n      _this._lookups = {};\n      var optionalParameters = [];\n      _this.required = params.reduce(function (count, p) {\n        if (!p.name || p.name && !p.value) {\n          return count + 1;\n        } else {\n          optionalParameters.push(p.name);\n          return count;\n        }\n      }, 0);\n      _this.optionalParameters = optionalParameters;\n      _this.frames = frames;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(Definition, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.params && this.params.length) {\n          this.params = visitor.visitArray(this.params);\n        }\n\n        this.rules = visitor.visitArray(this.rules);\n\n        if (this.condition) {\n          this.condition = visitor.visit(this.condition);\n        }\n      }\n    }, {\n      key: \"evalParams\",\n      value: function evalParams(context, mixinEnv, args, evaldArguments) {\n        /* jshint boss:true */\n        var frame = new Ruleset(null, null);\n        var varargs;\n        var arg;\n        var params = copyArray(this.params);\n        var i;\n        var j;\n        var val;\n        var name;\n        var isNamedFound;\n        var argIndex;\n        var argsLength = 0;\n\n        if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n          frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n        }\n\n        mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n        if (args) {\n          args = copyArray(args);\n          argsLength = args.length;\n\n          for (i = 0; i < argsLength; i++) {\n            arg = args[i];\n\n            if (name = arg && arg.name) {\n              isNamedFound = false;\n\n              for (j = 0; j < params.length; j++) {\n                if (!evaldArguments[j] && name === params[j].name) {\n                  evaldArguments[j] = arg.value.eval(context);\n                  frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                  isNamedFound = true;\n                  break;\n                }\n              }\n\n              if (isNamedFound) {\n                args.splice(i, 1);\n                i--;\n                continue;\n              } else {\n                throw {\n                  type: 'Runtime',\n                  message: \"Named argument for \".concat(this.name, \" \").concat(args[i].name, \" not found\")\n                };\n              }\n            }\n          }\n        }\n\n        argIndex = 0;\n\n        for (i = 0; i < params.length; i++) {\n          if (evaldArguments[i]) {\n            continue;\n          }\n\n          arg = args && args[argIndex];\n\n          if (name = params[i].name) {\n            if (params[i].variadic) {\n              varargs = [];\n\n              for (j = argIndex; j < argsLength; j++) {\n                varargs.push(args[j].value.eval(context));\n              }\n\n              frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n            } else {\n              val = arg && arg.value;\n\n              if (val) {\n                // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                if (Array.isArray(val)) {\n                  val = new DetachedRuleset(new Ruleset('', val));\n                } else {\n                  val = val.eval(context);\n                }\n              } else if (params[i].value) {\n                val = params[i].value.eval(mixinEnv);\n                frame.resetCache();\n              } else {\n                throw {\n                  type: 'Runtime',\n                  message: \"wrong number of arguments for \".concat(this.name, \" (\").concat(argsLength, \" for \").concat(this.arity, \")\")\n                };\n              }\n\n              frame.prependRule(new Declaration(name, val));\n              evaldArguments[i] = val;\n            }\n          }\n\n          if (params[i].variadic && args) {\n            for (j = argIndex; j < argsLength; j++) {\n              evaldArguments[j] = args[j].value.eval(context);\n            }\n          }\n\n          argIndex++;\n        }\n\n        return frame;\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n          if (r.makeImportant) {\n            return r.makeImportant(true);\n          } else {\n            return r;\n          }\n        });\n        var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n        return result;\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n      }\n    }, {\n      key: \"evalCall\",\n      value: function evalCall(context, args, important) {\n        var _arguments = [];\n        var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n        var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n        var rules;\n        var ruleset;\n        frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n        rules = copyArray(this.rules);\n        ruleset = new Ruleset(null, rules);\n        ruleset.originalRuleset = this;\n        ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n\n        if (important) {\n          ruleset = ruleset.makeImportant();\n        }\n\n        return ruleset;\n      }\n    }, {\n      key: \"matchCondition\",\n      value: function matchCondition(args, context) {\n        if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context,\n        /* the parameter variables */\n        new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])].concat(this.frames || []) // the parent namespace/mixin frames\n        .concat(context.frames)))) {\n          // the current environment frames\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"matchArgs\",\n      value: function matchArgs(args, context) {\n        var allArgsCnt = args && args.length || 0;\n        var len;\n        var optionalParameters = this.optionalParameters;\n        var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n          if (optionalParameters.indexOf(p.name) < 0) {\n            return count + 1;\n          } else {\n            return count;\n          }\n        }, 0);\n\n        if (!this.variadic) {\n          if (requiredArgsCnt < this.required) {\n            return false;\n          }\n\n          if (allArgsCnt > this.params.length) {\n            return false;\n          }\n        } else {\n          if (requiredArgsCnt < this.required - 1) {\n            return false;\n          }\n        } // check patterns\n\n\n        len = Math.min(requiredArgsCnt, this.arity);\n\n        for (var i = 0; i < len; i++) {\n          if (!this.params[i].name && !this.params[i].variadic) {\n            if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n    }]);\n\n    return Definition;\n  }(Ruleset);\n\n  Definition.prototype.type = 'MixinDefinition';\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(MixinCall, _Node);\n\n    function MixinCall(elements, args, index, currentFileInfo, important) {\n      var _this;\n\n      _classCallCheck(this, MixinCall);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MixinCall).call(this));\n      _this.selector = new Selector(elements);\n      _this.arguments = args || [];\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.important = important;\n      _this.allowRoot = true;\n\n      _this.setParent(_this.selector, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(MixinCall, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.selector) {\n          this.selector = visitor.visit(this.selector);\n        }\n\n        if (this.arguments.length) {\n          this.arguments = visitor.visitArray(this.arguments);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mixins;\n        var mixin;\n        var mixinPath;\n        var args = [];\n        var arg;\n        var argValue;\n        var rules = [];\n        var match = false;\n        var i;\n        var m;\n        var f;\n        var isRecursive;\n        var isOneFound;\n        var candidates = [];\n        var candidate;\n        var conditionResult = [];\n        var defaultResult;\n        var defFalseEitherCase = -1;\n        var defNone = 0;\n        var defTrue = 1;\n        var defFalse = 2;\n        var count;\n        var originalRuleset;\n        var noArgumentsFilter;\n        this.selector = this.selector.eval(context);\n\n        function calcDefGroup(mixin, mixinPath) {\n          var f;\n          var p;\n          var namespace;\n\n          for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n              namespace = mixinPath[p];\n\n              if (namespace.matchCondition) {\n                conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n              }\n            }\n\n            if (mixin.matchCondition) {\n              conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n          }\n\n          if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n              return conditionResult[1] ? defTrue : defFalse;\n            }\n\n            return defNone;\n          }\n\n          return defFalseEitherCase;\n        }\n\n        for (i = 0; i < this.arguments.length; i++) {\n          arg = this.arguments[i];\n          argValue = arg.value.eval(context);\n\n          if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n\n            for (m = 0; m < argValue.length; m++) {\n              args.push({\n                value: argValue[m]\n              });\n            }\n          } else {\n            args.push({\n              name: arg.name,\n              value: argValue\n            });\n          }\n        }\n\n        noArgumentsFilter = function noArgumentsFilter(rule) {\n          return rule.matchArgs(null, context);\n        };\n\n        for (i = 0; i < context.frames.length; i++) {\n          if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true; // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n              mixin = mixins[m].rule;\n              mixinPath = mixins[m].path;\n              isRecursive = false;\n\n              for (f = 0; f < context.frames.length; f++) {\n                if (!(mixin instanceof Definition) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                  isRecursive = true;\n                  break;\n                }\n              }\n\n              if (isRecursive) {\n                continue;\n              }\n\n              if (mixin.matchArgs(args, context)) {\n                candidate = {\n                  mixin: mixin,\n                  group: calcDefGroup(mixin, mixinPath)\n                };\n\n                if (candidate.group !== defFalseEitherCase) {\n                  candidates.push(candidate);\n                }\n\n                match = true;\n              }\n            }\n\n            defaultFunc.reset();\n            count = [0, 0, 0];\n\n            for (m = 0; m < candidates.length; m++) {\n              count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n              defaultResult = defFalse;\n            } else {\n              defaultResult = defTrue;\n\n              if (count[defTrue] + count[defFalse] > 1) {\n                throw {\n                  type: 'Runtime',\n                  message: \"Ambiguous use of `default()` found when matching for `\".concat(this.format(args), \"`\"),\n                  index: this.getIndex(),\n                  filename: this.fileInfo().filename\n                };\n              }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n              candidate = candidates[m].group;\n\n              if (candidate === defNone || candidate === defaultResult) {\n                try {\n                  mixin = candidates[m].mixin;\n\n                  if (!(mixin instanceof Definition)) {\n                    originalRuleset = mixin.originalRuleset || mixin;\n                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                    mixin.originalRuleset = originalRuleset;\n                  }\n\n                  var newRules = mixin.evalCall(context, args, this.important).rules;\n\n                  this._setVisibilityToReplacement(newRules);\n\n                  Array.prototype.push.apply(rules, newRules);\n                } catch (e) {\n                  throw {\n                    message: e.message,\n                    index: this.getIndex(),\n                    filename: this.fileInfo().filename,\n                    stack: e.stack\n                  };\n                }\n              }\n            }\n\n            if (match) {\n              return rules;\n            }\n          }\n        }\n\n        if (isOneFound) {\n          throw {\n            type: 'Runtime',\n            message: \"No matching definition was found for `\".concat(this.format(args), \"`\"),\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n          };\n        } else {\n          throw {\n            type: 'Name',\n            message: \"\".concat(this.selector.toCSS().trim(), \" is undefined\"),\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n          };\n        }\n      }\n    }, {\n      key: \"_setVisibilityToReplacement\",\n      value: function _setVisibilityToReplacement(replacement) {\n        var i;\n        var rule;\n\n        if (this.blocksVisibility()) {\n          for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n          }\n        }\n      }\n    }, {\n      key: \"format\",\n      value: function format(args) {\n        return \"\".concat(this.selector.toCSS().trim(), \"(\").concat(args ? args.map(function (a) {\n          var argValue = '';\n\n          if (a.name) {\n            argValue += \"\".concat(a.name, \":\");\n          }\n\n          if (a.value.toCSS) {\n            argValue += a.value.toCSS();\n          } else {\n            argValue += '???';\n          }\n\n          return argValue;\n        }).join(', ') : '', \")\");\n      }\n    }]);\n\n    return MixinCall;\n  }(Node);\n\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\n    Node: Node,\n    Color: Color,\n    AtRule: AtRule,\n    DetachedRuleset: DetachedRuleset,\n    Operation: Operation,\n    Dimension: Dimension,\n    Unit: Unit,\n    Keyword: Keyword,\n    Variable: Variable,\n    Property: Property,\n    Ruleset: Ruleset,\n    Element: Element,\n    Attribute: Attribute,\n    Combinator: Combinator,\n    Selector: Selector,\n    Quoted: Quoted,\n    Expression: Expression,\n    Declaration: Declaration,\n    Call: Call,\n    URL: URL,\n    Import: Import,\n    Comment: Comment,\n    Anonymous: Anonymous,\n    Value: Value,\n    JavaScript: JavaScript,\n    Assignment: Assignment,\n    Condition: Condition,\n    Paren: Paren,\n    Media: Media,\n    UnicodeDescriptor: UnicodeDescriptor,\n    Negative: Negative,\n    Extend: Extend,\n    VariableCall: VariableCall,\n    NamespaceValue: NamespaceValue,\n    mixin: {\n      Call: MixinCall,\n      Definition: Definition\n    }\n  };\n\n  var logger = {\n    error: function error(msg) {\n      this._fireEvent('error', msg);\n    },\n    warn: function warn(msg) {\n      this._fireEvent('warn', msg);\n    },\n    info: function info(msg) {\n      this._fireEvent('info', msg);\n    },\n    debug: function debug(msg) {\n      this._fireEvent('debug', msg);\n    },\n    addListener: function addListener(listener) {\n      this._listeners.push(listener);\n    },\n    removeListener: function removeListener(listener) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        if (this._listeners[i] === listener) {\n          this._listeners.splice(i, 1);\n\n          return;\n        }\n      }\n    },\n    _fireEvent: function _fireEvent(type, msg) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        var logFunction = this._listeners[i][type];\n\n        if (logFunction) {\n          logFunction(msg);\n        }\n      }\n    },\n    _listeners: []\n  };\n\n  var environment =\n  /*#__PURE__*/\n  function () {\n    function environment(externalEnvironment, fileManagers) {\n      _classCallCheck(this, environment);\n\n      this.fileManagers = fileManagers || [];\n      externalEnvironment = externalEnvironment || {};\n      var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n      var requiredFunctions = [];\n      var functions = requiredFunctions.concat(optionalFunctions);\n\n      for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i];\n        var environmentFunc = externalEnvironment[propName];\n\n        if (environmentFunc) {\n          this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n          this.warn(\"missing required function in environment - \".concat(propName));\n        }\n      }\n    }\n\n    _createClass(environment, [{\n      key: \"getFileManager\",\n      value: function getFileManager(filename, currentDirectory, options, environment, isSync) {\n        if (!filename) {\n          logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n        }\n\n        if (currentDirectory == null) {\n          logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n        }\n\n        var fileManagers = this.fileManagers;\n\n        if (options.pluginManager) {\n          fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n        }\n\n        for (var i = fileManagers.length - 1; i >= 0; i--) {\n          var fileManager = fileManagers[i];\n\n          if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n            return fileManager;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"addFileManager\",\n      value: function addFileManager(fileManager) {\n        this.fileManagers.push(fileManager);\n      }\n    }, {\n      key: \"clearFileManagers\",\n      value: function clearFileManagers() {\n        this.fileManagers = [];\n      }\n    }]);\n\n    return environment;\n  }();\n\n  var AbstractFileManager =\n  /*#__PURE__*/\n  function () {\n    function AbstractFileManager() {\n      _classCallCheck(this, AbstractFileManager);\n    }\n\n    _createClass(AbstractFileManager, [{\n      key: \"getPath\",\n      value: function getPath(filename) {\n        var j = filename.lastIndexOf('?');\n\n        if (j > 0) {\n          filename = filename.slice(0, j);\n        }\n\n        j = filename.lastIndexOf('/');\n\n        if (j < 0) {\n          j = filename.lastIndexOf('\\\\');\n        }\n\n        if (j < 0) {\n          return '';\n        }\n\n        return filename.slice(0, j + 1);\n      }\n    }, {\n      key: \"tryAppendExtension\",\n      value: function tryAppendExtension(path, ext) {\n        return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n      }\n    }, {\n      key: \"tryAppendLessExtension\",\n      value: function tryAppendLessExtension(path) {\n        return this.tryAppendExtension(path, '.less');\n      }\n    }, {\n      key: \"supportsSync\",\n      value: function supportsSync() {\n        return false;\n      }\n    }, {\n      key: \"alwaysMakePathsAbsolute\",\n      value: function alwaysMakePathsAbsolute() {\n        return false;\n      }\n    }, {\n      key: \"isPathAbsolute\",\n      value: function isPathAbsolute(filename) {\n        return /^(?:[a-z-]+:|\\/|\\\\|#)/i.test(filename);\n      } // TODO: pull out / replace?\n\n    }, {\n      key: \"join\",\n      value: function join(basePath, laterPath) {\n        if (!basePath) {\n          return laterPath;\n        }\n\n        return basePath + laterPath;\n      }\n    }, {\n      key: \"pathDiff\",\n      value: function pathDiff(url, baseUrl) {\n        // diff between two paths to create a relative path\n        var urlParts = this.extractUrlParts(url);\n        var baseUrlParts = this.extractUrlParts(baseUrl);\n        var i;\n        var max;\n        var urlDirectories;\n        var baseUrlDirectories;\n        var diff = '';\n\n        if (urlParts.hostPart !== baseUrlParts.hostPart) {\n          return '';\n        }\n\n        max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n\n        for (i = 0; i < max; i++) {\n          if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n            break;\n          }\n        }\n\n        baseUrlDirectories = baseUrlParts.directories.slice(i);\n        urlDirectories = urlParts.directories.slice(i);\n\n        for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n          diff += '../';\n        }\n\n        for (i = 0; i < urlDirectories.length - 1; i++) {\n          diff += \"\".concat(urlDirectories[i], \"/\");\n        }\n\n        return diff;\n      }\n    }, {\n      key: \"extractUrlParts\",\n      // helper function, not part of API\n      value: function extractUrlParts(url, baseUrl) {\n        // urlParts[1] = protocol://hostname/ OR /\n        // urlParts[2] = / if path relative to host base\n        // urlParts[3] = directories\n        // urlParts[4] = filename\n        // urlParts[5] = parameters\n        var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n        var urlParts = url.match(urlPartsRegex);\n        var returner = {};\n        var rawDirectories = [];\n        var directories = [];\n        var i;\n        var baseUrlParts;\n\n        if (!urlParts) {\n          throw new Error(\"Could not parse sheet href - '\".concat(url, \"'\"));\n        } // Stylesheets in IE don't always return the full path\n\n\n        if (baseUrl && (!urlParts[1] || urlParts[2])) {\n          baseUrlParts = baseUrl.match(urlPartsRegex);\n\n          if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\".concat(baseUrl, \"'\"));\n          }\n\n          urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n\n          if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n          }\n        }\n\n        if (urlParts[3]) {\n          rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/'); // collapse '..' and skip '.'\n\n          for (i = 0; i < rawDirectories.length; i++) {\n            if (rawDirectories[i] === '..') {\n              directories.pop();\n            } else if (rawDirectories[i] !== '.') {\n              directories.push(rawDirectories[i]);\n            }\n          }\n        }\n\n        returner.hostPart = urlParts[1];\n        returner.directories = directories;\n        returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n        returner.path = (urlParts[1] || '') + directories.join('/');\n        returner.filename = urlParts[4];\n        returner.fileUrl = returner.path + (urlParts[4] || '');\n        returner.url = returner.fileUrl + (urlParts[5] || '');\n        return returner;\n      }\n    }]);\n\n    return AbstractFileManager;\n  }();\n\n  var AbstractPluginLoader =\n  /*#__PURE__*/\n  function () {\n    function AbstractPluginLoader() {\n      _classCallCheck(this, AbstractPluginLoader);\n\n      // Implemented by Node.js plugin loader\n      this.require = function () {\n        return null;\n      };\n    }\n\n    _createClass(AbstractPluginLoader, [{\n      key: \"evalPlugin\",\n      value: function evalPlugin(contents, context, imports, pluginOptions, fileInfo) {\n        var loader;\n        var registry;\n        var pluginObj;\n        var localModule;\n        var pluginManager;\n        var filename;\n        var result;\n        pluginManager = context.pluginManager;\n\n        if (fileInfo) {\n          if (typeof fileInfo === 'string') {\n            filename = fileInfo;\n          } else {\n            filename = fileInfo.filename;\n          }\n        }\n\n        var shortname = new this.less.FileManager().extractUrlParts(filename).filename;\n\n        if (filename) {\n          pluginObj = pluginManager.get(filename);\n\n          if (pluginObj) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n            if (result) {\n              return result;\n            }\n\n            try {\n              if (pluginObj.use) {\n                pluginObj.use.call(this.context, pluginObj);\n              }\n            } catch (e) {\n              e.message = e.message || 'Error during @plugin call';\n              return new LessError(e, imports, filename);\n            }\n\n            return pluginObj;\n          }\n        }\n\n        localModule = {\n          exports: {},\n          pluginManager: pluginManager,\n          fileInfo: fileInfo\n        };\n        registry = functionRegistry.create();\n\n        var registerPlugin = function registerPlugin(obj) {\n          pluginObj = obj;\n        };\n\n        try {\n          loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n          loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n        } catch (e) {\n          return new LessError(e, imports, filename);\n        }\n\n        if (!pluginObj) {\n          pluginObj = localModule.exports;\n        }\n\n        pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n        if (pluginObj instanceof LessError) {\n          return pluginObj;\n        }\n\n        if (pluginObj) {\n          pluginObj.imports = imports;\n          pluginObj.filename = filename; // For < 3.x (or unspecified minVersion) - setOptions() before install()\n\n          if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n            if (result) {\n              return result;\n            }\n          } // Run on first load\n\n\n          pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n          pluginObj.functions = registry.getLocalFunctions(); // Need to call setOptions again because the pluginObj might have functions\n\n          result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n          if (result) {\n            return result;\n          } // Run every @plugin call\n\n\n          try {\n            if (pluginObj.use) {\n              pluginObj.use.call(this.context, pluginObj);\n            }\n          } catch (e) {\n            e.message = e.message || 'Error during @plugin call';\n            return new LessError(e, imports, filename);\n          }\n        } else {\n          return new LessError({\n            message: 'Not a valid plugin'\n          }, imports, filename);\n        }\n\n        return pluginObj;\n      }\n    }, {\n      key: \"trySetOptions\",\n      value: function trySetOptions(plugin, filename, name, options) {\n        if (options && !plugin.setOptions) {\n          return new LessError({\n            message: \"Options have been provided but the plugin \".concat(name, \" does not support any options.\")\n          });\n        }\n\n        try {\n          plugin.setOptions && plugin.setOptions(options);\n        } catch (e) {\n          return new LessError(e);\n        }\n      }\n    }, {\n      key: \"validatePlugin\",\n      value: function validatePlugin(plugin, filename, name) {\n        if (plugin) {\n          // support plugins being a function\n          // so that the plugin can be more usable programmatically\n          if (typeof plugin === 'function') {\n            plugin = new plugin();\n          }\n\n          if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n              return new LessError({\n                message: \"Plugin \".concat(name, \" requires version \").concat(this.versionToString(plugin.minVersion))\n              });\n            }\n          }\n\n          return plugin;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"compareVersion\",\n      value: function compareVersion(aVersion, bVersion) {\n        if (typeof aVersion === 'string') {\n          aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n          aVersion.shift();\n        }\n\n        for (var i = 0; i < aVersion.length; i++) {\n          if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n          }\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"versionToString\",\n      value: function versionToString(version) {\n        var versionString = '';\n\n        for (var i = 0; i < version.length; i++) {\n          versionString += (versionString ? '.' : '') + version[i];\n        }\n\n        return versionString;\n      }\n    }, {\n      key: \"printUsage\",\n      value: function printUsage(plugins) {\n        for (var i = 0; i < plugins.length; i++) {\n          var plugin = plugins[i];\n\n          if (plugin.printUsage) {\n            plugin.printUsage();\n          }\n        }\n      }\n    }]);\n\n    return AbstractPluginLoader;\n  }();\n\n  var _visitArgs = {\n    visitDeeper: true\n  };\n  var _hasIndexed = false;\n\n  function _noop(node) {\n    return node;\n  }\n\n  function indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key;\n    var child;\n\n    for (key in parent) {\n      /* eslint guard-for-in: 0 */\n      child = parent[key];\n\n      switch (_typeof(child)) {\n        case 'function':\n          // ignore bound functions directly on tree which do not have a prototype\n          // or aren't nodes\n          if (child.prototype && child.prototype.type) {\n            child.prototype.typeIndex = ticker++;\n          }\n\n          break;\n\n        case 'object':\n          ticker = indexNodeTypes(child, ticker);\n          break;\n      }\n    }\n\n    return ticker;\n  }\n\n  var Visitor =\n  /*#__PURE__*/\n  function () {\n    function Visitor(implementation) {\n      _classCallCheck(this, Visitor);\n\n      this._implementation = implementation;\n      this._visitInCache = {};\n      this._visitOutCache = {};\n\n      if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n      }\n    }\n\n    _createClass(Visitor, [{\n      key: \"visit\",\n      value: function visit(node) {\n        if (!node) {\n          return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n\n        if (!nodeTypeIndex) {\n          // MixinCall args aren't a node type?\n          if (node.value && node.value.typeIndex) {\n            this.visit(node.value);\n          }\n\n          return node;\n        }\n\n        var impl = this._implementation;\n        var func = this._visitInCache[nodeTypeIndex];\n        var funcOut = this._visitOutCache[nodeTypeIndex];\n        var visitArgs = _visitArgs;\n        var fnName;\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n          fnName = \"visit\".concat(node.type);\n          func = impl[fnName] || _noop;\n          funcOut = impl[\"\".concat(fnName, \"Out\")] || _noop;\n          this._visitInCache[nodeTypeIndex] = func;\n          this._visitOutCache[nodeTypeIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n          var newNode = func.call(impl, node, visitArgs);\n\n          if (node && impl.isReplacing) {\n            node = newNode;\n          }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n          node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n          funcOut.call(impl, node);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"visitArray\",\n      value: function visitArray(nodes, nonReplacing) {\n        if (!nodes) {\n          return nodes;\n        }\n\n        var cnt = nodes.length;\n        var i; // Non-replacing\n\n        if (nonReplacing || !this._implementation.isReplacing) {\n          for (i = 0; i < cnt; i++) {\n            this.visit(nodes[i]);\n          }\n\n          return nodes;\n        } // Replacing\n\n\n        var out = [];\n\n        for (i = 0; i < cnt; i++) {\n          var evald = this.visit(nodes[i]);\n\n          if (evald === undefined) {\n            continue;\n          }\n\n          if (!evald.splice) {\n            out.push(evald);\n          } else if (evald.length) {\n            this.flatten(evald, out);\n          }\n        }\n\n        return out;\n      }\n    }, {\n      key: \"flatten\",\n      value: function flatten(arr, out) {\n        if (!out) {\n          out = [];\n        }\n\n        var cnt;\n        var i;\n        var item;\n        var nestedCnt;\n        var j;\n        var nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n          item = arr[i];\n\n          if (item === undefined) {\n            continue;\n          }\n\n          if (!item.splice) {\n            out.push(item);\n            continue;\n          }\n\n          for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n            nestedItem = item[j];\n\n            if (nestedItem === undefined) {\n              continue;\n            }\n\n            if (!nestedItem.splice) {\n              out.push(nestedItem);\n            } else if (nestedItem.length) {\n              this.flatten(nestedItem, out);\n            }\n          }\n        }\n\n        return out;\n      }\n    }]);\n\n    return Visitor;\n  }();\n\n  var ImportSequencer =\n  /*#__PURE__*/\n  function () {\n    function ImportSequencer(onSequencerEmpty) {\n      _classCallCheck(this, ImportSequencer);\n\n      this.imports = [];\n      this.variableImports = [];\n      this._onSequencerEmpty = onSequencerEmpty;\n      this._currentDepth = 0;\n    }\n\n    _createClass(ImportSequencer, [{\n      key: \"addImport\",\n      value: function addImport(callback) {\n        var importSequencer = this;\n        var importItem = {\n          callback: callback,\n          args: null,\n          isReady: false\n        };\n        this.imports.push(importItem);\n        return function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          importItem.args = Array.prototype.slice.call(args, 0);\n          importItem.isReady = true;\n          importSequencer.tryRun();\n        };\n      }\n    }, {\n      key: \"addVariableImport\",\n      value: function addVariableImport(callback) {\n        this.variableImports.push(callback);\n      }\n    }, {\n      key: \"tryRun\",\n      value: function tryRun() {\n        this._currentDepth++;\n\n        try {\n          while (true) {\n            while (this.imports.length > 0) {\n              var importItem = this.imports[0];\n\n              if (!importItem.isReady) {\n                return;\n              }\n\n              this.imports = this.imports.slice(1);\n              importItem.callback.apply(null, importItem.args);\n            }\n\n            if (this.variableImports.length === 0) {\n              break;\n            }\n\n            var variableImport = this.variableImports[0];\n            this.variableImports = this.variableImports.slice(1);\n            variableImport();\n          }\n        } finally {\n          this._currentDepth--;\n        }\n\n        if (this._currentDepth === 0 && this._onSequencerEmpty) {\n          this._onSequencerEmpty();\n        }\n      }\n    }]);\n\n    return ImportSequencer;\n  }();\n\n  var ImportVisitor = function ImportVisitor(importer, finish) {\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n  };\n\n  ImportVisitor.prototype = {\n    isReplacing: false,\n    run: function run(root) {\n      try {\n        // process the contents\n        this._visitor.visit(root);\n      } catch (e) {\n        this.error = e;\n      }\n\n      this.isFinished = true;\n\n      this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function _onSequencerEmpty() {\n      if (!this.isFinished) {\n        return;\n      }\n\n      this._finish(this.error);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      var inlineCSS = importNode.options.inline;\n\n      if (!importNode.css || inlineCSS) {\n        var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n        var importParent = context.frames[0];\n        this.importCount++;\n\n        if (importNode.isVariableImport()) {\n          this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n        } else {\n          this.processImportNode(importNode, context, importParent);\n        }\n      }\n\n      visitArgs.visitDeeper = false;\n    },\n    processImportNode: function processImportNode(importNode, context, importParent) {\n      var evaldImportNode;\n      var inlineCSS = importNode.options.inline;\n\n      try {\n        evaldImportNode = importNode.evalForImport(context);\n      } catch (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        } // attempt to eval properly and treat as css\n\n\n        importNode.css = true; // if that fails, this error will be thrown\n\n        importNode.error = e;\n      }\n\n      if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n        if (evaldImportNode.options.multiple) {\n          context.importMultiple = true;\n        } // try appending if we haven't determined if it is css or not\n\n\n        var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n        for (var i = 0; i < importParent.rules.length; i++) {\n          if (importParent.rules[i] === importNode) {\n            importParent.rules[i] = evaldImportNode;\n            break;\n          }\n        }\n\n        var onImported = this.onImported.bind(this, evaldImportNode, context);\n\n        var sequencedOnImported = this._sequencer.addImport(onImported);\n\n        this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n      } else {\n        this.importCount--;\n\n        if (this.isFinished) {\n          this._sequencer.tryRun();\n        }\n      }\n    },\n    onImported: function onImported(importNode, context, e, root, importedAtRoot, fullPath) {\n      if (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        }\n\n        this.error = e;\n      }\n\n      var importVisitor = this;\n      var inlineCSS = importNode.options.inline;\n      var isPlugin = importNode.options.isPlugin;\n      var isOptional = importNode.options.optional;\n      var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n      if (!context.importMultiple) {\n        if (duplicateImport) {\n          importNode.skip = true;\n        } else {\n          importNode.skip = function () {\n            if (fullPath in importVisitor.onceFileDetectionMap) {\n              return true;\n            }\n\n            importVisitor.onceFileDetectionMap[fullPath] = true;\n            return false;\n          };\n        }\n      }\n\n      if (!fullPath && isOptional) {\n        importNode.skip = true;\n      }\n\n      if (root) {\n        importNode.root = root;\n        importNode.importedFilename = fullPath;\n\n        if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n          importVisitor.recursionDetector[fullPath] = true;\n          var oldContext = this.context;\n          this.context = context;\n\n          try {\n            this._visitor.visit(root);\n          } catch (e) {\n            this.error = e;\n          }\n\n          this.context = oldContext;\n        }\n      }\n\n      importVisitor.importCount--;\n\n      if (importVisitor.isFinished) {\n        importVisitor._sequencer.tryRun();\n      }\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.unshift(declNode);\n      } else {\n        visitArgs.visitDeeper = false;\n      }\n    },\n    visitDeclarationOut: function visitDeclarationOut(declNode) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.shift();\n      }\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function visitAtRuleOut(atRuleNode) {\n      this.context.frames.shift();\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n      this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function visitMixinDefinitionOut(mixinDefinitionNode) {\n      this.context.frames.shift();\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function visitRulesetOut(rulesetNode) {\n      this.context.frames.shift();\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function visitMediaOut(mediaNode) {\n      this.context.frames.shift();\n    }\n  };\n\n  var SetTreeVisibilityVisitor =\n  /*#__PURE__*/\n  function () {\n    function SetTreeVisibilityVisitor(visible) {\n      _classCallCheck(this, SetTreeVisibilityVisitor);\n\n      this.visible = visible;\n    }\n\n    _createClass(SetTreeVisibilityVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        this.visit(root);\n      }\n    }, {\n      key: \"visitArray\",\n      value: function visitArray(nodes) {\n        if (!nodes) {\n          return nodes;\n        }\n\n        var cnt = nodes.length;\n        var i;\n\n        for (i = 0; i < cnt; i++) {\n          this.visit(nodes[i]);\n        }\n\n        return nodes;\n      }\n    }, {\n      key: \"visit\",\n      value: function visit(node) {\n        if (!node) {\n          return node;\n        }\n\n        if (node.constructor === Array) {\n          return this.visitArray(node);\n        }\n\n        if (!node.blocksVisibility || node.blocksVisibility()) {\n          return node;\n        }\n\n        if (this.visible) {\n          node.ensureVisibility();\n        } else {\n          node.ensureInvisibility();\n        }\n\n        node.accept(this);\n        return node;\n      }\n    }]);\n\n    return SetTreeVisibilityVisitor;\n  }();\n\n  /* jshint loopfunc:true */\n\n  var ExtendFinderVisitor =\n  /*#__PURE__*/\n  function () {\n    function ExtendFinderVisitor() {\n      _classCallCheck(this, ExtendFinderVisitor);\n\n      this._visitor = new Visitor(this);\n      this.contexts = [];\n      this.allExtendsStack = [[]];\n    }\n\n    _createClass(ExtendFinderVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n          return;\n        }\n\n        var i;\n        var j;\n        var extend;\n        var allSelectorsExtendList = [];\n        var extendList; // get &:extend(.a); rules which apply to all selectors in this ruleset\n\n        var rules = rulesetNode.rules;\n        var ruleCnt = rules ? rules.length : 0;\n\n        for (i = 0; i < ruleCnt; i++) {\n          if (rulesetNode.rules[i] instanceof tree.Extend) {\n            allSelectorsExtendList.push(rules[i]);\n            rulesetNode.extendOnEveryPath = true;\n          }\n        } // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n\n\n        var paths = rulesetNode.paths;\n\n        for (i = 0; i < paths.length; i++) {\n          var selectorPath = paths[i];\n          var selector = selectorPath[selectorPath.length - 1];\n          var selExtendList = selector.extendList;\n          extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList) : allSelectorsExtendList;\n\n          if (extendList) {\n            extendList = extendList.map(function (allSelectorsExtend) {\n              return allSelectorsExtend.clone();\n            });\n          }\n\n          for (j = 0; j < extendList.length; j++) {\n            this.foundExtends = true;\n            extend = extendList[j];\n            extend.findSelfSelectors(selectorPath);\n            extend.ruleset = rulesetNode;\n\n            if (j === 0) {\n              extend.firstExtendOnThisSelectorPath = true;\n            }\n\n            this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n          }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n      }\n    }, {\n      key: \"visitRulesetOut\",\n      value: function visitRulesetOut(rulesetNode) {\n        if (!rulesetNode.root) {\n          this.contexts.length = this.contexts.length - 1;\n        }\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n      }\n    }, {\n      key: \"visitMediaOut\",\n      value: function visitMediaOut(mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n      }\n    }, {\n      key: \"visitAtRuleOut\",\n      value: function visitAtRuleOut(atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      }\n    }]);\n\n    return ExtendFinderVisitor;\n  }();\n\n  var ProcessExtendsVisitor =\n  /*#__PURE__*/\n  function () {\n    function ProcessExtendsVisitor() {\n      _classCallCheck(this, ProcessExtendsVisitor);\n\n      this._visitor = new Visitor(this);\n    }\n\n    _createClass(ProcessExtendsVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        var extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n\n        if (!extendFinder.foundExtends) {\n          return root;\n        }\n\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n\n        var newRoot = this._visitor.visit(root);\n\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n      }\n    }, {\n      key: \"checkExtendsForNonMatched\",\n      value: function checkExtendsForNonMatched(extendList) {\n        var indices = this.extendIndices;\n        extendList.filter(function (extend) {\n          return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function (extend) {\n          var selector = '_unknown_';\n\n          try {\n            selector = extend.selector.toCSS({});\n          } catch (_) {}\n\n          if (!indices[\"\".concat(extend.index, \" \").concat(selector)]) {\n            indices[\"\".concat(extend.index, \" \").concat(selector)] = true;\n            logger.warn(\"extend '\".concat(selector, \"' has no matches\"));\n          }\n        });\n      }\n    }, {\n      key: \"doExtendChaining\",\n      value: function doExtendChaining(extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n        var extendIndex;\n        var targetExtendIndex;\n        var matches;\n        var extendsToAdd = [];\n        var newSelector;\n        var extendVisitor = this;\n        var selectorPath;\n        var extend;\n        var targetExtend;\n        var newExtend;\n        iterationCount = iterationCount || 0; // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n          for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n            extend = extendsList[extendIndex];\n            targetExtend = extendsListTarget[targetExtendIndex]; // look for circular references\n\n            if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n              continue;\n            } // find a match in the target extends self selector (the bit before :extend)\n\n\n            selectorPath = [targetExtend.selfSelectors[0]];\n            matches = extendVisitor.findMatch(extend, selectorPath);\n\n            if (matches.length) {\n              extend.hasFoundMatches = true; // we found a match, so for each self selector..\n\n              extend.selfSelectors.forEach(function (selfSelector) {\n                var info = targetExtend.visibilityInfo(); // process the extend as usual\n\n                newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible()); // but now we create a new extend from it\n\n                newExtend = new tree.Extend(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                newExtend.selfSelectors = newSelector; // add the extend onto the list of extends for that selector\n\n                newSelector[newSelector.length - 1].extendList = [newExtend]; // record that we need to add it.\n\n                extendsToAdd.push(newExtend);\n                newExtend.ruleset = targetExtend.ruleset; // remember its parents for circular references\n\n                newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids); // only process the selector once.. if we have :extend(.a,.b) then multiple\n                // extends will look at the same selector path, so when extending\n                // we know that any others will be duplicates in terms of what is added to the css\n\n                if (targetExtend.firstExtendOnThisSelectorPath) {\n                  newExtend.firstExtendOnThisSelectorPath = true;\n                  targetExtend.ruleset.paths.push(newSelector);\n                }\n              });\n            }\n          }\n        }\n\n        if (extendsToAdd.length) {\n          // try to detect circular references to stop a stack overflow.\n          // may no longer be needed.\n          this.extendChainCount++;\n\n          if (iterationCount > 100) {\n            var selectorOne = '{unable to calculate}';\n            var selectorTwo = '{unable to calculate}';\n\n            try {\n              selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n              selectorTwo = extendsToAdd[0].selector.toCSS();\n            } catch (e) {}\n\n            throw {\n              message: \"extend circular reference detected. One of the circular extends is currently:\".concat(selectorOne, \":extend(\").concat(selectorTwo, \")\")\n            };\n          } // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n          // d extending e...\n\n\n          return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n          return extendsToAdd;\n        }\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitSelector\",\n      value: function visitSelector(selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n          return;\n        }\n\n        var matches;\n        var pathIndex;\n        var extendIndex;\n        var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n        var selectorsToAdd = [];\n        var extendVisitor = this;\n        var selectorPath; // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n          for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n            selectorPath = rulesetNode.paths[pathIndex]; // extending extends happens initially, before the main pass\n\n            if (rulesetNode.extendOnEveryPath) {\n              continue;\n            }\n\n            var extendList = selectorPath[selectorPath.length - 1].extendList;\n\n            if (extendList && extendList.length) {\n              continue;\n            }\n\n            matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n            if (matches.length) {\n              allExtends[extendIndex].hasFoundMatches = true;\n              allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n                var extendedSelectors;\n                extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                selectorsToAdd.push(extendedSelectors);\n              });\n            }\n          }\n        }\n\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n      }\n    }, {\n      key: \"findMatch\",\n      value: function findMatch(extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        var haystackSelectorIndex;\n        var hackstackSelector;\n        var hackstackElementIndex;\n        var haystackElement;\n        var targetCombinator;\n        var i;\n        var extendVisitor = this;\n        var needleElements = extend.selector.elements;\n        var potentialMatches = [];\n        var potentialMatch;\n        var matches = []; // loop through the haystack elements\n\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n          hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n          for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n            haystackElement = hackstackSelector.elements[hackstackElementIndex]; // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n\n            if (extend.allowBefore || haystackSelectorIndex === 0 && hackstackElementIndex === 0) {\n              potentialMatches.push({\n                pathIndex: haystackSelectorIndex,\n                index: hackstackElementIndex,\n                matched: 0,\n                initialCombinator: haystackElement.combinator\n              });\n            }\n\n            for (i = 0; i < potentialMatches.length; i++) {\n              potentialMatch = potentialMatches[i]; // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n              // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n              // work out what the resulting combinator will be\n\n              targetCombinator = haystackElement.combinator.value;\n\n              if (targetCombinator === '' && hackstackElementIndex === 0) {\n                targetCombinator = ' ';\n              } // if we don't match, null our match to indicate failure\n\n\n              if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) || potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator) {\n                potentialMatch = null;\n              } else {\n                potentialMatch.matched++;\n              } // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n\n\n              if (potentialMatch) {\n                potentialMatch.finished = potentialMatch.matched === needleElements.length;\n\n                if (potentialMatch.finished && !extend.allowAfter && (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length)) {\n                  potentialMatch = null;\n                }\n              } // if null we remove, if not, we are still valid, so either push as a valid match or continue\n\n\n              if (potentialMatch) {\n                if (potentialMatch.finished) {\n                  potentialMatch.length = needleElements.length;\n                  potentialMatch.endPathIndex = haystackSelectorIndex;\n                  potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n\n                  potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n\n                  matches.push(potentialMatch);\n                }\n              } else {\n                potentialMatches.splice(i, 1);\n                i--;\n              }\n            }\n          }\n        }\n\n        return matches;\n      }\n    }, {\n      key: \"isElementValuesEqual\",\n      value: function isElementValuesEqual(elementValue1, elementValue2) {\n        if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n          return elementValue1 === elementValue2;\n        }\n\n        if (elementValue1 instanceof tree.Attribute) {\n          if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n            return false;\n          }\n\n          if (!elementValue1.value || !elementValue2.value) {\n            if (elementValue1.value || elementValue2.value) {\n              return false;\n            }\n\n            return true;\n          }\n\n          elementValue1 = elementValue1.value.value || elementValue1.value;\n          elementValue2 = elementValue2.value.value || elementValue2.value;\n          return elementValue1 === elementValue2;\n        }\n\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n\n        if (elementValue1 instanceof tree.Selector) {\n          if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n            return false;\n          }\n\n          for (var i = 0; i < elementValue1.elements.length; i++) {\n            if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n              if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                return false;\n              }\n            }\n\n            if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"extendSelector\",\n      value: function extendSelector(matches, selectorPath, replacementSelector, isVisible) {\n        // for a set of matches, replace each match with the replacement selector\n        var currentSelectorPathIndex = 0;\n        var currentSelectorPathElementIndex = 0;\n        var path = [];\n        var matchIndex;\n        var selector;\n        var firstElement;\n        var match;\n        var newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n          match = matches[matchIndex];\n          selector = selectorPath[match.pathIndex];\n          firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n\n          if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathElementIndex = 0;\n            currentSelectorPathIndex++;\n          }\n\n          newElements = selector.elements.slice(currentSelectorPathElementIndex, match.index).concat([firstElement]).concat(replacementSelector.elements.slice(1));\n\n          if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1].elements.concat(newElements);\n          } else {\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n            path.push(new tree.Selector(newElements));\n          }\n\n          currentSelectorPathIndex = match.endPathIndex;\n          currentSelectorPathElementIndex = match.endPathElementIndex;\n\n          if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n            currentSelectorPathElementIndex = 0;\n            currentSelectorPathIndex++;\n          }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n          path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n          currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n          // we can re-use elements here, because the visibility property matters only for selectors\n          var derived = currentValue.createDerived(currentValue.elements);\n\n          if (isVisible) {\n            derived.ensureVisibility();\n          } else {\n            derived.ensureInvisibility();\n          }\n\n          return derived;\n        });\n        return path;\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n      }\n    }, {\n      key: \"visitMediaOut\",\n      value: function visitMediaOut(mediaNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n      }\n    }, {\n      key: \"visitAtRuleOut\",\n      value: function visitAtRuleOut(atRuleNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n      }\n    }]);\n\n    return ProcessExtendsVisitor;\n  }();\n\n  var JoinSelectorVisitor =\n  /*#__PURE__*/\n  function () {\n    function JoinSelectorVisitor() {\n      _classCallCheck(this, JoinSelectorVisitor);\n\n      this.contexts = [[]];\n      this._visitor = new Visitor(this);\n    }\n\n    _createClass(JoinSelectorVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        return this._visitor.visit(root);\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        var paths = [];\n        var selectors;\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n          selectors = rulesetNode.selectors;\n\n          if (selectors) {\n            selectors = selectors.filter(function (selector) {\n              return selector.getIsOutput();\n            });\n            rulesetNode.selectors = selectors.length ? selectors : selectors = null;\n\n            if (selectors) {\n              rulesetNode.joinSelectors(paths, context, selectors);\n            }\n          }\n\n          if (!selectors) {\n            rulesetNode.rules = null;\n          }\n\n          rulesetNode.paths = paths;\n        }\n      }\n    }, {\n      key: \"visitRulesetOut\",\n      value: function visitRulesetOut(rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = context.length === 0 || context[0].multiMedia;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n          atRuleNode.rules[0].root = atRuleNode.isRooted || context.length === 0 || null;\n        }\n      }\n    }]);\n\n    return JoinSelectorVisitor;\n  }();\n\n  var CSSVisitorUtils =\n  /*#__PURE__*/\n  function () {\n    function CSSVisitorUtils(context) {\n      _classCallCheck(this, CSSVisitorUtils);\n\n      this._visitor = new Visitor(this);\n      this._context = context;\n    }\n\n    _createClass(CSSVisitorUtils, [{\n      key: \"containsSilentNonBlockedChild\",\n      value: function containsSilentNonBlockedChild(bodyRules) {\n        var rule;\n\n        if (!bodyRules) {\n          return false;\n        }\n\n        for (var r = 0; r < bodyRules.length; r++) {\n          rule = bodyRules[r];\n\n          if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n            // the atrule contains something that was referenced (likely by extend)\n            // therefore it needs to be shown in output too\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"keepOnlyVisibleChilds\",\n      value: function keepOnlyVisibleChilds(owner) {\n        if (owner && owner.rules) {\n          owner.rules = owner.rules.filter(function (thing) {\n            return thing.isVisible();\n          });\n        }\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty(owner) {\n        return owner && owner.rules ? owner.rules.length === 0 : true;\n      }\n    }, {\n      key: \"hasVisibleSelector\",\n      value: function hasVisibleSelector(rulesetNode) {\n        return rulesetNode && rulesetNode.paths ? rulesetNode.paths.length > 0 : false;\n      }\n    }, {\n      key: \"resolveVisibility\",\n      value: function resolveVisibility(node, originalRules) {\n        if (!node.blocksVisibility()) {\n          if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n            return;\n          }\n\n          return node;\n        }\n\n        var compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n          return;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n        return node;\n      }\n    }, {\n      key: \"isVisibleRuleset\",\n      value: function isVisibleRuleset(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n          return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n          return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n          return false;\n        }\n\n        return true;\n      }\n    }]);\n\n    return CSSVisitorUtils;\n  }();\n\n  var ToCSSVisitor = function ToCSSVisitor(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n  };\n\n  ToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function run(root) {\n      return this._visitor.visit(root);\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.blocksVisibility() || declNode.variable) {\n        return;\n      }\n\n      return declNode;\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinNode, visitArgs) {\n      // mixin definitions do not get eval'd - this means they keep state\n      // so we have to clear that state here so it isn't used if toCSS is called twice\n      mixinNode.frames = [];\n    },\n    visitExtend: function visitExtend(extendNode, visitArgs) {},\n    visitComment: function visitComment(commentNode, visitArgs) {\n      if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n        return;\n      }\n\n      return commentNode;\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      var originalRules = mediaNode.rules[0].rules;\n      mediaNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n      return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      if (importNode.blocksVisibility()) {\n        return;\n      }\n\n      return importNode;\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      if (atRuleNode.rules && atRuleNode.rules.length) {\n        return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n      } else {\n        return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n      }\n    },\n    visitAnonymous: function visitAnonymous(anonymousNode, visitArgs) {\n      if (!anonymousNode.blocksVisibility()) {\n        anonymousNode.accept(this._visitor);\n        return anonymousNode;\n      }\n    },\n    visitAtRuleWithBody: function visitAtRuleWithBody(atRuleNode, visitArgs) {\n      // if there is only one nested ruleset and that one has no path, then it is\n      // just fake ruleset\n      function hasFakeRuleset(atRuleNode) {\n        var bodyRules = atRuleNode.rules;\n        return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n      }\n\n      function getBodyRules(atRuleNode) {\n        var nodeRules = atRuleNode.rules;\n\n        if (hasFakeRuleset(atRuleNode)) {\n          return nodeRules[0].rules;\n        }\n\n        return nodeRules;\n      } // it is still true that it is only one ruleset in array\n      // this is last such moment\n      // process childs\n\n\n      var originalRules = getBodyRules(atRuleNode);\n      atRuleNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n\n      if (!this.utils.isEmpty(atRuleNode)) {\n        this._mergeRules(atRuleNode.rules[0].rules);\n      }\n\n      return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n    visitAtRuleWithoutBody: function visitAtRuleWithoutBody(atRuleNode, visitArgs) {\n      if (atRuleNode.blocksVisibility()) {\n        return;\n      }\n\n      if (atRuleNode.name === '@charset') {\n        // Only output the debug info together with subsequent @charset definitions\n        // a comment (or @media statement) before the actual @charset atrule would\n        // be considered illegal css as it has to be on the first line\n        if (this.charset) {\n          if (atRuleNode.debugInfo) {\n            var comment = new tree.Comment(\"/* \".concat(atRuleNode.toCSS(this._context).replace(/\\n/g, ''), \" */\\n\"));\n            comment.debugInfo = atRuleNode.debugInfo;\n            return this._visitor.visit(comment);\n          }\n\n          return;\n        }\n\n        this.charset = true;\n      }\n\n      return atRuleNode;\n    },\n    checkValidNodes: function checkValidNodes(rules, isRoot) {\n      if (!rules) {\n        return;\n      }\n\n      for (var i = 0; i < rules.length; i++) {\n        var ruleNode = rules[i];\n\n        if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n          throw {\n            message: 'Properties must be inside selector blocks. They cannot be in the root',\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode instanceof tree.Call) {\n          throw {\n            message: \"Function '\".concat(ruleNode.name, \"' is undefined\"),\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode.type && !ruleNode.allowRoot) {\n          throw {\n            message: \"\".concat(ruleNode.type, \" node returned by a function is not valid here\"),\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n      }\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      // at this point rulesets are nested into each other\n      var rule;\n      var rulesets = [];\n      this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n      if (!rulesetNode.root) {\n        // remove invisible paths\n        this._compileRulesetPaths(rulesetNode); // remove rulesets from this ruleset body and compile them separately\n\n\n        var nodeRules = rulesetNode.rules;\n        var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n\n        for (var i = 0; i < nodeRuleCnt;) {\n          rule = nodeRules[i];\n\n          if (rule && rule.rules) {\n            // visit because we are moving them out from being a child\n            rulesets.push(this._visitor.visit(rule));\n            nodeRules.splice(i, 1);\n            nodeRuleCnt--;\n            continue;\n          }\n\n          i++;\n        } // accept the visitor to remove rules and refactor itself\n        // then we can decide nogw whether we want it or not\n        // compile body\n\n\n        if (nodeRuleCnt > 0) {\n          rulesetNode.accept(this._visitor);\n        } else {\n          rulesetNode.rules = null;\n        }\n\n        visitArgs.visitDeeper = false;\n      } else {\n        // if (! rulesetNode.root) {\n        rulesetNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n      }\n\n      if (rulesetNode.rules) {\n        this._mergeRules(rulesetNode.rules);\n\n        this._removeDuplicateRules(rulesetNode.rules);\n      } // now decide whether we keep the ruleset\n\n\n      if (this.utils.isVisibleRuleset(rulesetNode)) {\n        rulesetNode.ensureVisibility();\n        rulesets.splice(0, 0, rulesetNode);\n      }\n\n      if (rulesets.length === 1) {\n        return rulesets[0];\n      }\n\n      return rulesets;\n    },\n    _compileRulesetPaths: function _compileRulesetPaths(rulesetNode) {\n      if (rulesetNode.paths) {\n        rulesetNode.paths = rulesetNode.paths.filter(function (p) {\n          var i;\n\n          if (p[0].elements[0].combinator.value === ' ') {\n            p[0].elements[0].combinator = new tree.Combinator('');\n          }\n\n          for (i = 0; i < p.length; i++) {\n            if (p[i].isVisible() && p[i].getIsOutput()) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      }\n    },\n    _removeDuplicateRules: function _removeDuplicateRules(rules) {\n      if (!rules) {\n        return;\n      } // remove duplicates\n\n\n      var ruleCache = {};\n      var ruleList;\n      var rule;\n      var i;\n\n      for (i = rules.length - 1; i >= 0; i--) {\n        rule = rules[i];\n\n        if (rule instanceof tree.Declaration) {\n          if (!ruleCache[rule.name]) {\n            ruleCache[rule.name] = rule;\n          } else {\n            ruleList = ruleCache[rule.name];\n\n            if (ruleList instanceof tree.Declaration) {\n              ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n            }\n\n            var ruleCSS = rule.toCSS(this._context);\n\n            if (ruleList.indexOf(ruleCSS) !== -1) {\n              rules.splice(i, 1);\n            } else {\n              ruleList.push(ruleCSS);\n            }\n          }\n        }\n      }\n    },\n    _mergeRules: function _mergeRules(rules) {\n      if (!rules) {\n        return;\n      }\n\n      var groups = {};\n      var groupsArr = [];\n\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n\n        if (rule.merge) {\n          var key = rule.name;\n          groups[key] ? rules.splice(i--, 1) : groupsArr.push(groups[key] = []);\n          groups[key].push(rule);\n        }\n      }\n\n      groupsArr.forEach(function (group) {\n        if (group.length > 0) {\n          var result = group[0];\n          var space = [];\n          var comma = [new tree.Expression(space)];\n          group.forEach(function (rule) {\n            if (rule.merge === '+' && space.length > 0) {\n              comma.push(new tree.Expression(space = []));\n            }\n\n            space.push(rule.value);\n            result.important = result.important || rule.important;\n          });\n          result.value = new tree.Value(comma);\n        }\n      });\n    }\n  };\n\n  var visitors = {\n    Visitor: Visitor,\n    ImportVisitor: ImportVisitor,\n    MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n    ExtendVisitor: ProcessExtendsVisitor,\n    JoinSelectorVisitor: JoinSelectorVisitor,\n    ToCSSVisitor: ToCSSVisitor\n  };\n\n  // Split the input into chunks.\n  var chunker = (function (input, fail) {\n    var len = input.length;\n    var level = 0;\n    var parenLevel = 0;\n    var lastOpening;\n    var lastOpeningParen;\n    var lastMultiComment;\n    var lastMultiCommentEndBrace;\n    var chunks = [];\n    var emitFrom = 0;\n    var chunkerCurrentIndex;\n    var currentChunkStartIndex;\n    var cc;\n    var cc2;\n    var matched;\n\n    function emitChunk(force) {\n      var len = chunkerCurrentIndex - emitFrom;\n\n      if (len < 512 && !force || !len) {\n        return;\n      }\n\n      chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n      emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n      cc = input.charCodeAt(chunkerCurrentIndex);\n\n      if (cc >= 97 && cc <= 122 || cc < 34) {\n        // a-z or whitespace\n        continue;\n      }\n\n      switch (cc) {\n        case 40:\n          // (\n          parenLevel++;\n          lastOpeningParen = chunkerCurrentIndex;\n          continue;\n\n        case 41:\n          // )\n          if (--parenLevel < 0) {\n            return fail('missing opening `(`', chunkerCurrentIndex);\n          }\n\n          continue;\n\n        case 59:\n          // ;\n          if (!parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 123:\n          // {\n          level++;\n          lastOpening = chunkerCurrentIndex;\n          continue;\n\n        case 125:\n          // }\n          if (--level < 0) {\n            return fail('missing opening `{`', chunkerCurrentIndex);\n          }\n\n          if (!level && !parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 92:\n          // \\\n          if (chunkerCurrentIndex < len - 1) {\n            chunkerCurrentIndex++;\n            continue;\n          }\n\n          return fail('unescaped `\\\\`', chunkerCurrentIndex);\n\n        case 34:\n        case 39:\n        case 96:\n          // \", ' and `\n          matched = 0;\n          currentChunkStartIndex = chunkerCurrentIndex;\n\n          for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n            cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n            if (cc2 > 96) {\n              continue;\n            }\n\n            if (cc2 == cc) {\n              matched = 1;\n              break;\n            }\n\n            if (cc2 == 92) {\n              // \\\n              if (chunkerCurrentIndex == len - 1) {\n                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n              }\n\n              chunkerCurrentIndex++;\n            }\n          }\n\n          if (matched) {\n            continue;\n          }\n\n          return fail(\"unmatched `\".concat(String.fromCharCode(cc), \"`\"), currentChunkStartIndex);\n\n        case 47:\n          // /, check for comment\n          if (parenLevel || chunkerCurrentIndex == len - 1) {\n            continue;\n          }\n\n          cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n\n          if (cc2 == 47) {\n            // //, find lnfeed\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 <= 13 && (cc2 == 10 || cc2 == 13)) {\n                break;\n              }\n            }\n          } else if (cc2 == 42) {\n            // /*, find */\n            lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 == 125) {\n                lastMultiCommentEndBrace = chunkerCurrentIndex;\n              }\n\n              if (cc2 != 42) {\n                continue;\n              }\n\n              if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                break;\n              }\n            }\n\n            if (chunkerCurrentIndex == len - 1) {\n              return fail('missing closing `*/`', currentChunkStartIndex);\n            }\n\n            chunkerCurrentIndex++;\n          }\n\n          continue;\n\n        case 42:\n          // *, check for unmatched */\n          if (chunkerCurrentIndex < len - 1 && input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n            return fail('unmatched `/*`', chunkerCurrentIndex);\n          }\n\n          continue;\n      }\n    }\n\n    if (level !== 0) {\n      if (lastMultiComment > lastOpening && lastMultiCommentEndBrace > lastMultiComment) {\n        return fail('missing closing `}` or `*/`', lastOpening);\n      } else {\n        return fail('missing closing `}`', lastOpening);\n      }\n    } else if (parenLevel !== 0) {\n      return fail('missing closing `)`', lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n  });\n\n  var getParserInput = (function () {\n    var // Less input string\n    input;\n    var // current chunk\n    j;\n    var // holds state for backtracking\n    saveStack = [];\n    var // furthest index the parser has gone to\n    furthest;\n    var // if this is furthest we got to, this is the probably cause\n    furthestPossibleErrorMessage;\n    var // chunkified input\n    chunks;\n    var // current chunk\n    current;\n    var // index of current chunk, in `input`\n    currentPos;\n    var parserInput = {};\n    var CHARCODE_SPACE = 32;\n    var CHARCODE_TAB = 9;\n    var CHARCODE_LF = 10;\n    var CHARCODE_CR = 13;\n    var CHARCODE_PLUS = 43;\n    var CHARCODE_COMMA = 44;\n    var CHARCODE_FORWARD_SLASH = 47;\n    var CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n      var oldi = parserInput.i;\n      var oldj = j;\n      var curr = parserInput.i - currentPos;\n      var endIndex = parserInput.i + current.length - curr;\n      var mem = parserInput.i += length;\n      var inp = input;\n      var c;\n      var nextChar;\n      var comment;\n\n      for (; parserInput.i < endIndex; parserInput.i++) {\n        c = inp.charCodeAt(parserInput.i);\n\n        if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n          nextChar = inp.charAt(parserInput.i + 1);\n\n          if (nextChar === '/') {\n            comment = {\n              index: parserInput.i,\n              isLineComment: true\n            };\n            var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n\n            if (nextNewLine < 0) {\n              nextNewLine = endIndex;\n            }\n\n            parserInput.i = nextNewLine;\n            comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n            parserInput.commentStore.push(comment);\n            continue;\n          } else if (nextChar === '*') {\n            var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n\n            if (nextStarSlash >= 0) {\n              comment = {\n                index: parserInput.i,\n                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                isLineComment: false\n              };\n              parserInput.i += comment.text.length - 1;\n              parserInput.commentStore.push(comment);\n              continue;\n            }\n          }\n\n          break;\n        }\n\n        if (c !== CHARCODE_SPACE && c !== CHARCODE_LF && c !== CHARCODE_TAB && c !== CHARCODE_CR) {\n          break;\n        }\n      }\n\n      current = current.slice(length + parserInput.i - mem + curr);\n      currentPos = parserInput.i;\n\n      if (!current.length) {\n        if (j < chunks.length - 1) {\n          current = chunks[++j];\n          skipWhitespace(0); // skip space at the beginning of a chunk\n\n          return true; // things changed\n        }\n\n        parserInput.finished = true;\n      }\n\n      return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = function () {\n      currentPos = parserInput.i;\n      saveStack.push({\n        current: current,\n        i: parserInput.i,\n        j: j\n      });\n    };\n\n    parserInput.restore = function (possibleErrorMessage) {\n      if (parserInput.i > furthest || parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage) {\n        furthest = parserInput.i;\n        furthestPossibleErrorMessage = possibleErrorMessage;\n      }\n\n      var state = saveStack.pop();\n      current = state.current;\n      currentPos = parserInput.i = state.i;\n      j = state.j;\n    };\n\n    parserInput.forget = function () {\n      saveStack.pop();\n    };\n\n    parserInput.isWhitespace = function (offset) {\n      var pos = parserInput.i + (offset || 0);\n      var code = input.charCodeAt(pos);\n      return code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF;\n    }; // Specialization of $(tok)\n\n\n    parserInput.$re = function (tok) {\n      if (parserInput.i > currentPos) {\n        current = current.slice(parserInput.i - currentPos);\n        currentPos = parserInput.i;\n      }\n\n      var m = tok.exec(current);\n\n      if (!m) {\n        return null;\n      }\n\n      skipWhitespace(m[0].length);\n\n      if (typeof m === 'string') {\n        return m;\n      }\n\n      return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = function (tok) {\n      if (input.charAt(parserInput.i) !== tok) {\n        return null;\n      }\n\n      skipWhitespace(1);\n      return tok;\n    };\n\n    parserInput.$str = function (tok) {\n      var tokLength = tok.length; // https://jsperf.com/string-startswith/21\n\n      for (var i = 0; i < tokLength; i++) {\n        if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n          return null;\n        }\n      }\n\n      skipWhitespace(tokLength);\n      return tok;\n    };\n\n    parserInput.$quoted = function (loc) {\n      var pos = loc || parserInput.i;\n      var startChar = input.charAt(pos);\n\n      if (startChar !== '\\'' && startChar !== '\"') {\n        return;\n      }\n\n      var length = input.length;\n      var currentPosition = pos;\n\n      for (var i = 1; i + currentPosition < length; i++) {\n        var nextChar = input.charAt(i + currentPosition);\n\n        switch (nextChar) {\n          case '\\\\':\n            i++;\n            continue;\n\n          case '\\r':\n          case '\\n':\n            break;\n\n          case startChar:\n            var str = input.substr(currentPosition, i + 1);\n\n            if (!loc && loc !== 0) {\n              skipWhitespace(i + 1);\n              return str;\n            }\n\n            return [startChar, str];\n\n          default:\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Permissive parsing. Ignores everything except matching {} [] () and quotes\n     * until matching token (outside of blocks)\n     */\n\n\n    parserInput.$parseUntil = function (tok) {\n      var quote = '';\n      var returnVal = null;\n      var inComment = false;\n      var blockDepth = 0;\n      var blockStack = [];\n      var parseGroups = [];\n      var length = input.length;\n      var startPos = parserInput.i;\n      var lastPos = parserInput.i;\n      var i = parserInput.i;\n      var loop = true;\n      var testChar;\n\n      if (typeof tok === 'string') {\n        testChar = function testChar(char) {\n          return char === tok;\n        };\n      } else {\n        testChar = function testChar(char) {\n          return tok.test(char);\n        };\n      }\n\n      do {\n        var nextChar = input.charAt(i);\n\n        if (blockDepth === 0 && testChar(nextChar)) {\n          returnVal = input.substr(lastPos, i - lastPos);\n\n          if (returnVal) {\n            parseGroups.push(returnVal);\n          } else {\n            parseGroups.push(' ');\n          }\n\n          returnVal = parseGroups;\n          skipWhitespace(i - startPos);\n          loop = false;\n        } else {\n          if (inComment) {\n            if (nextChar === '*' && input.charAt(i + 1) === '/') {\n              i++;\n              blockDepth--;\n              inComment = false;\n            }\n\n            i++;\n            continue;\n          }\n\n          switch (nextChar) {\n            case '\\\\':\n              i++;\n              nextChar = input.charAt(i);\n              parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n              lastPos = i + 1;\n              break;\n\n            case '/':\n              if (input.charAt(i + 1) === '*') {\n                i++;\n                inComment = true;\n                blockDepth++;\n              }\n\n              break;\n\n            case '\\'':\n            case '\"':\n              quote = parserInput.$quoted(i);\n\n              if (quote) {\n                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                i += quote[1].length - 1;\n                lastPos = i + 1;\n              } else {\n                skipWhitespace(i - startPos);\n                returnVal = nextChar;\n                loop = false;\n              }\n\n              break;\n\n            case '{':\n              blockStack.push('}');\n              blockDepth++;\n              break;\n\n            case '(':\n              blockStack.push(')');\n              blockDepth++;\n              break;\n\n            case '[':\n              blockStack.push(']');\n              blockDepth++;\n              break;\n\n            case '}':\n            case ')':\n            case ']':\n              var expected = blockStack.pop();\n\n              if (nextChar === expected) {\n                blockDepth--;\n              } else {\n                // move the parser to the error and return expected\n                skipWhitespace(i - startPos);\n                returnVal = expected;\n                loop = false;\n              }\n\n          }\n\n          i++;\n\n          if (i > length) {\n            loop = false;\n          }\n        }\n      } while (loop);\n\n      return returnVal ? returnVal : null;\n    };\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false; // Same as $(), but don't change the state of the parser,\n    // just return the match.\n\n    parserInput.peek = function (tok) {\n      if (typeof tok === 'string') {\n        // https://jsperf.com/string-startswith/21\n        for (var i = 0; i < tok.length; i++) {\n          if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return tok.test(current);\n      }\n    }; // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n\n\n    parserInput.peekChar = function (tok) {\n      return input.charAt(parserInput.i) === tok;\n    };\n\n    parserInput.currentChar = function () {\n      return input.charAt(parserInput.i);\n    };\n\n    parserInput.prevChar = function () {\n      return input.charAt(parserInput.i - 1);\n    };\n\n    parserInput.getInput = function () {\n      return input;\n    };\n\n    parserInput.peekNotNumeric = function () {\n      var c = input.charCodeAt(parserInput.i); // Is the first char of the dimension 0-9, '.', '+' or '-'\n\n      return c > CHARCODE_9 || c < CHARCODE_PLUS || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = function (str, chunkInput, failFunction) {\n      input = str;\n      parserInput.i = j = currentPos = furthest = 0; // chunking apparently makes things quicker (but my tests indicate\n      // it might actually make things slower in node at least)\n      // and it is a non-perfect parse - it can't recognise\n      // unquoted urls, meaning it can't distinguish comments\n      // meaning comments with quotes or {}() in them get 'counted'\n      // and then lead to parse errors.\n      // In addition if the chunking chunks in the wrong place we might\n      // not be able to parse a parser statement in one go\n      // this is officially deprecated but can be switched on via an option\n      // in the case it causes too much performance issues.\n\n      if (chunkInput) {\n        chunks = chunker(str, failFunction);\n      } else {\n        chunks = [str];\n      }\n\n      current = chunks[0];\n      skipWhitespace(0);\n    };\n\n    parserInput.end = function () {\n      var message;\n      var isFinished = parserInput.i >= input.length;\n\n      if (parserInput.i < furthest) {\n        message = furthestPossibleErrorMessage;\n        parserInput.i = furthest;\n      }\n\n      return {\n        isFinished: isFinished,\n        furthest: parserInput.i,\n        furthestPossibleErrorMessage: message,\n        furthestReachedEnd: parserInput.i >= input.length - 1,\n        furthestChar: input[parserInput.i]\n      };\n    };\n\n    return parserInput;\n  });\n\n  // less.js - parser\n  //\n  //    A relatively straight-forward predictive parser.\n  //    There is no tokenization/lexing stage, the input is parsed\n  //    in one sweep.\n  //\n  //    To make the parser fast enough to run in the browser, several\n  //    optimization had to be made:\n  //\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\n  //      The solution is to chunkify the input into smaller strings.\n  //      The chunks are stored in the `chunks` var,\n  //      `j` holds the current chunk index, and `currentPos` holds\n  //      the index of the current chunk in relation to `input`.\n  //      This gives us an almost 4x speed-up.\n  //\n  //    - In many cases, we don't need to match individual tokens;\n  //      for example, if a value doesn't hold any variables, operations\n  //      or dynamic references, the parser can effectively 'skip' it,\n  //      treating it as a literal.\n  //      An example would be '1px solid #000' - which evaluates to itself,\n  //      we don't need to know what the individual components are.\n  //      The drawback, of course is that you don't get the benefits of\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n  //      and a smaller speed-up in the code-gen.\n  //\n  //\n  //    Token matching is done with the `$` function, which either takes\n  //    a terminal string or regexp, or a non-terminal function to call.\n  //    It also takes care of moving all the indices forwards.\n  //\n\n  var Parser = function Parser(context, imports, fileInfo) {\n    var parsers;\n    var parserInput = getParserInput();\n\n    function error(msg, type) {\n      throw new LessError({\n        index: parserInput.i,\n        filename: fileInfo.filename,\n        type: type || 'Syntax',\n        message: msg\n      }, imports);\n    }\n\n    function expect(arg, msg) {\n      // some older browsers return typeof 'function' for RegExp\n      var result = arg instanceof Function ? arg.call(parsers) : parserInput.$re(arg);\n\n      if (result) {\n        return result;\n      }\n\n      error(msg || (typeof arg === 'string' ? \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\") : 'unexpected token'));\n    } // Specialization of expect()\n\n\n    function expectChar(arg, msg) {\n      if (parserInput.$char(arg)) {\n        return arg;\n      }\n\n      error(msg || \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\"));\n    }\n\n    function getDebugInfo(index) {\n      var filename = fileInfo.filename;\n      return {\n        lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n        fileName: filename\n      };\n    }\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n\n\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n      var result;\n      var returnNodes = [];\n      var parser = parserInput;\n\n      try {\n        parser.start(str, false, function fail(msg, index) {\n          callback({\n            message: msg,\n            index: index + currentIndex\n          });\n        });\n\n        for (var x = 0, p, i; p = parseList[x]; x++) {\n          i = parser.i;\n          result = parsers[p]();\n\n          if (result) {\n            try {\n              result._index = i + currentIndex;\n              result._fileInfo = fileInfo;\n            } catch (e) {}\n\n            returnNodes.push(result);\n          } else {\n            returnNodes.push(null);\n          }\n        }\n\n        var endInfo = parser.end();\n\n        if (endInfo.isFinished) {\n          callback(null, returnNodes);\n        } else {\n          callback(true, null);\n        }\n      } catch (e) {\n        throw new LessError({\n          index: e.index + currentIndex,\n          message: e.message\n        }, imports, fileInfo.filename);\n      }\n    } //\n    // The Parser\n    //\n\n\n    return {\n      parserInput: parserInput,\n      imports: imports,\n      fileInfo: fileInfo,\n      parseNode: parseNode,\n      //\n      // Parse an input string into an abstract syntax tree,\n      // @param str A string containing 'less' markup\n      // @param callback call `callback` when done.\n      // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n      //\n      parse: function parse(str, callback, additionalData) {\n        var root;\n        var error = null;\n        var globalVars;\n        var modifyVars;\n        var ignored;\n        var preText = '';\n        globalVars = additionalData && additionalData.globalVars ? \"\".concat(Parser.serializeVars(additionalData.globalVars), \"\\n\") : '';\n        modifyVars = additionalData && additionalData.modifyVars ? \"\\n\".concat(Parser.serializeVars(additionalData.modifyVars)) : '';\n\n        if (context.pluginManager) {\n          var preProcessors = context.pluginManager.getPreProcessors();\n\n          for (var i = 0; i < preProcessors.length; i++) {\n            str = preProcessors[i].process(str, {\n              context: context,\n              imports: imports,\n              fileInfo: fileInfo\n            });\n          }\n        }\n\n        if (globalVars || additionalData && additionalData.banner) {\n          preText = (additionalData && additionalData.banner ? additionalData.banner : '') + globalVars;\n          ignored = imports.contentsIgnoredChars;\n          ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n          ignored[fileInfo.filename] += preText.length;\n        }\n\n        str = str.replace(/\\r\\n?/g, '\\n'); // Remove potential UTF Byte Order Mark\n\n        str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n        imports.contents[fileInfo.filename] = str; // Start with the primary rule.\n        // The whole syntax tree is held under a Ruleset node,\n        // with the `root` property set to true, so no `{}` are\n        // output. The callback is called when the input is parsed.\n\n        try {\n          parserInput.start(str, context.chunkInput, function fail(msg, index) {\n            throw new LessError({\n              index: index,\n              type: 'Parse',\n              message: msg,\n              filename: fileInfo.filename\n            }, imports);\n          });\n          tree.Node.prototype.parse = this;\n          root = new tree.Ruleset(null, this.parsers.primary());\n          tree.Node.prototype.rootNode = root;\n          root.root = true;\n          root.firstRoot = true;\n          root.functionRegistry = functionRegistry.inherit();\n        } catch (e) {\n          return callback(new LessError(e, imports, fileInfo.filename));\n        } // If `i` is smaller than the `input.length - 1`,\n        // it means the parser wasn't able to parse the whole\n        // string, so we've got a parsing error.\n        //\n        // We try to extract a \\n delimited string,\n        // showing the line where the parse error occurred.\n        // We split it up into two parts (the part which parsed,\n        // and the part which didn't), so we can color them differently.\n\n\n        var endInfo = parserInput.end();\n\n        if (!endInfo.isFinished) {\n          var message = endInfo.furthestPossibleErrorMessage;\n\n          if (!message) {\n            message = 'Unrecognised input';\n\n            if (endInfo.furthestChar === '}') {\n              message += '. Possibly missing opening \\'{\\'';\n            } else if (endInfo.furthestChar === ')') {\n              message += '. Possibly missing opening \\'(\\'';\n            } else if (endInfo.furthestReachedEnd) {\n              message += '. Possibly missing something';\n            }\n          }\n\n          error = new LessError({\n            type: 'Parse',\n            message: message,\n            index: endInfo.furthest,\n            filename: fileInfo.filename\n          }, imports);\n        }\n\n        var finish = function finish(e) {\n          e = error || e || imports.error;\n\n          if (e) {\n            if (!(e instanceof LessError)) {\n              e = new LessError(e, imports, fileInfo.filename);\n            }\n\n            return callback(e);\n          } else {\n            return callback(null, root);\n          }\n        };\n\n        if (context.processImports !== false) {\n          new visitors.ImportVisitor(imports, finish).run(root);\n        } else {\n          return finish();\n        }\n      },\n      //\n      // Here in, the parsing rules/functions\n      //\n      // The basic structure of the syntax tree generated is as follows:\n      //\n      //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n      //\n      // Here's some Less code:\n      //\n      //    .class {\n      //      color: #fff;\n      //      border: 1px solid #000;\n      //      width: @w + 4px;\n      //      > .child {...}\n      //    }\n      //\n      // And here's what the parse tree might look like:\n      //\n      //     Ruleset (Selector '.class', [\n      //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n      //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n      //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n      //         Ruleset (Selector [Element '>', '.child'], [...])\n      //     ])\n      //\n      //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n      //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n      //  first, before parsing, that's when we use `peek()`.\n      //\n      parsers: parsers = {\n        //\n        // The `primary` rule is the *entry* and *exit* point of the parser.\n        // The rules here can appear at any level of the parse tree.\n        //\n        // The recursive nature of the grammar is an interplay between the `block`\n        // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n        // as represented by this simplified grammar:\n        //\n        //     primary  →  (ruleset | declaration)+\n        //     ruleset  →  selector+ block\n        //     block    →  '{' primary '}'\n        //\n        // Only at one point is the primary rule not called from the\n        // block rule: at the root level.\n        //\n        primary: function primary() {\n          var mixin = this.mixin;\n          var root = [];\n          var node;\n\n          while (true) {\n            while (true) {\n              node = this.comment();\n\n              if (!node) {\n                break;\n              }\n\n              root.push(node);\n            } // always process comments before deciding if finished\n\n\n            if (parserInput.finished) {\n              break;\n            }\n\n            if (parserInput.peek('}')) {\n              break;\n            }\n\n            node = this.extendRule();\n\n            if (node) {\n              root = root.concat(node);\n              continue;\n            }\n\n            node = mixin.definition() || this.declaration() || this.ruleset() || mixin.call(false, false) || this.variableCall() || this.entities.call() || this.atrule();\n\n            if (node) {\n              root.push(node);\n            } else {\n              var foundSemiColon = false;\n\n              while (parserInput.$char(';')) {\n                foundSemiColon = true;\n              }\n\n              if (!foundSemiColon) {\n                break;\n              }\n            }\n          }\n\n          return root;\n        },\n        // comments are collected by the main parsing mechanism and then assigned to nodes\n        // where the current structure allows it\n        comment: function comment() {\n          if (parserInput.commentStore.length) {\n            var comment = parserInput.commentStore.shift();\n            return new tree.Comment(comment.text, comment.isLineComment, comment.index, fileInfo);\n          }\n        },\n        //\n        // Entities are tokens which can be found inside an Expression\n        //\n        entities: {\n          mixinLookup: function mixinLookup() {\n            return parsers.mixin.call(true, true);\n          },\n          //\n          // A string, which supports escaping \" and '\n          //\n          //     \"milky way\" 'he\\'s the one!'\n          //\n          quoted: function quoted(forceEscaped) {\n            var str;\n            var index = parserInput.i;\n            var isEscaped = false;\n            parserInput.save();\n\n            if (parserInput.$char('~')) {\n              isEscaped = true;\n            } else if (forceEscaped) {\n              parserInput.restore();\n              return;\n            }\n\n            str = parserInput.$quoted();\n\n            if (!str) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Quoted(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n          },\n          //\n          // A catch-all word, such as:\n          //\n          //     black border-collapse\n          //\n          keyword: function keyword() {\n            var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n\n            if (k) {\n              return tree.Color.fromKeyword(k) || new tree.Keyword(k);\n            }\n          },\n          //\n          // A function call\n          //\n          //     rgb(255, 0, 255)\n          //\n          // The arguments are parsed with the `entities.arguments` parser.\n          //\n          call: function call() {\n            var name;\n            var args;\n            var func;\n            var index = parserInput.i; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n            if (parserInput.peek(/^url\\(/i)) {\n              return;\n            }\n\n            parserInput.save();\n            name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n\n            if (!name) {\n              parserInput.forget();\n              return;\n            }\n\n            name = name[1];\n            func = this.customFuncCall(name);\n\n            if (func) {\n              args = func.parse();\n\n              if (args && func.stop) {\n                parserInput.forget();\n                return args;\n              }\n            }\n\n            args = this.arguments(args);\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore('Could not parse call arguments or missing \\')\\'');\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Call(name, args, index, fileInfo);\n          },\n          //\n          // Parsing rules for functions with non-standard args, e.g.:\n          //\n          //     boolean(not(2 > 1))\n          //\n          //     This is a quick prototype, to be modified/improved when\n          //     more custom-parsed funcs come (e.g. `selector(...)`)\n          //\n          customFuncCall: function customFuncCall(name) {\n            /* Ideally the table is to be moved out of here for faster perf.,\n               but it's quite tricky since it relies on all these `parsers`\n               and `expect` available only here */\n            return {\n              alpha: f(parsers.ieAlpha, true),\n              boolean: f(condition),\n              'if': f(condition)\n            }[name.toLowerCase()];\n\n            function f(parse, stop) {\n              return {\n                parse: parse,\n                // parsing function\n                stop: stop // when true - stop after parse() and return its result, \n                // otherwise continue for plain args\n\n              };\n            }\n\n            function condition() {\n              return [expect(parsers.condition, 'expected condition')];\n            }\n          },\n          arguments: function _arguments(prevArgs) {\n            var argsComma = prevArgs || [];\n            var argsSemiColon = [];\n            var isSemiColonSeparated;\n            var value;\n            parserInput.save();\n\n            while (true) {\n              if (prevArgs) {\n                prevArgs = false;\n              } else {\n                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n\n                if (!value) {\n                  break;\n                }\n\n                if (value.value && value.value.length == 1) {\n                  value = value.value[0];\n                }\n\n                argsComma.push(value);\n              }\n\n              if (parserInput.$char(',')) {\n                continue;\n              }\n\n              if (parserInput.$char(';') || isSemiColonSeparated) {\n                isSemiColonSeparated = true;\n                value = argsComma.length < 1 ? argsComma[0] : new tree.Value(argsComma);\n                argsSemiColon.push(value);\n                argsComma = [];\n              }\n            }\n\n            parserInput.forget();\n            return isSemiColonSeparated ? argsSemiColon : argsComma;\n          },\n          literal: function literal() {\n            return this.dimension() || this.color() || this.quoted() || this.unicodeDescriptor();\n          },\n          // Assignments are argument entities for calls.\n          // They are present in ie filter properties as shown below.\n          //\n          //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n          //\n          assignment: function assignment() {\n            var key;\n            var value;\n            parserInput.save();\n            key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n\n            if (!key) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char('=')) {\n              parserInput.restore();\n              return;\n            }\n\n            value = parsers.entity();\n\n            if (value) {\n              parserInput.forget();\n              return new tree.Assignment(key, value);\n            } else {\n              parserInput.restore();\n            }\n          },\n          //\n          // Parse url() tokens\n          //\n          // We use a specific rule for urls, because they don't really behave like\n          // standard function calls. The difference is that the argument doesn't have\n          // to be enclosed within a string, so it can't be parsed as an Expression.\n          //\n          url: function url() {\n            var value;\n            var index = parserInput.i;\n            parserInput.autoCommentAbsorb = false;\n\n            if (!parserInput.$str('url(')) {\n              parserInput.autoCommentAbsorb = true;\n              return;\n            }\n\n            value = this.quoted() || this.variable() || this.property() || parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n            parserInput.autoCommentAbsorb = true;\n            expectChar(')');\n            return new tree.URL(value.value != null || value instanceof tree.Variable || value instanceof tree.Property ? value : new tree.Anonymous(value, index), index, fileInfo);\n          },\n          //\n          // A Variable entity, such as `@fink`, in\n          //\n          //     width: @fink + 2px\n          //\n          // We use a different parser for variable definitions,\n          // see `parsers.variable`.\n          //\n          variable: function variable() {\n            var ch;\n            var name;\n            var index = parserInput.i;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n              ch = parserInput.currentChar();\n\n              if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                // this may be a VariableCall lookup\n                var result = parsers.variableCall(name);\n\n                if (result) {\n                  parserInput.forget();\n                  return result;\n                }\n              }\n\n              parserInput.forget();\n              return new tree.Variable(name, index, fileInfo);\n            }\n\n            parserInput.restore();\n          },\n          // A variable entity using the protective {} e.g. @{var}\n          variableCurly: function variableCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n              return new tree.Variable(\"@\".concat(curly[1]), index, fileInfo);\n            }\n          },\n          //\n          // A Property accessor, such as `$color`, in\n          //\n          //     background-color: $color\n          //\n          property: function property() {\n            var name;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n              return new tree.Property(name, index, fileInfo);\n            }\n          },\n          // A property entity useing the protective {} e.g. ${prop}\n          propertyCurly: function propertyCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n              return new tree.Property(\"$\".concat(curly[1]), index, fileInfo);\n            }\n          },\n          //\n          // A Hexadecimal color\n          //\n          //     #4F3C2F\n          //\n          // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n          //\n          color: function color() {\n            var rgb;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n              if (!rgb[2]) {\n                parserInput.forget();\n                return new tree.Color(rgb[1], undefined, rgb[0]);\n              }\n            }\n\n            parserInput.restore();\n          },\n          colorKeyword: function colorKeyword() {\n            parserInput.save();\n            var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n            parserInput.autoCommentAbsorb = false;\n            var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n            parserInput.autoCommentAbsorb = autoCommentAbsorb;\n\n            if (!k) {\n              parserInput.forget();\n              return;\n            }\n\n            parserInput.restore();\n            var color = tree.Color.fromKeyword(k);\n\n            if (color) {\n              parserInput.$str(k);\n              return color;\n            }\n          },\n          //\n          // A Dimension, that is, a number and a unit\n          //\n          //     0.5em 95%\n          //\n          dimension: function dimension() {\n            if (parserInput.peekNotNumeric()) {\n              return;\n            }\n\n            var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n\n            if (value) {\n              return new tree.Dimension(value[1], value[2]);\n            }\n          },\n          //\n          // A unicode descriptor, as is used in unicode-range\n          //\n          // U+0??  or U+00A1-00A9\n          //\n          unicodeDescriptor: function unicodeDescriptor() {\n            var ud;\n            ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n\n            if (ud) {\n              return new tree.UnicodeDescriptor(ud[0]);\n            }\n          },\n          //\n          // JavaScript code to be evaluated\n          //\n          //     `window.location.href`\n          //\n          javascript: function javascript() {\n            var js;\n            var index = parserInput.i;\n            parserInput.save();\n            var escape = parserInput.$char('~');\n            var jsQuote = parserInput.$char('`');\n\n            if (!jsQuote) {\n              parserInput.restore();\n              return;\n            }\n\n            js = parserInput.$re(/^[^`]*`/);\n\n            if (js) {\n              parserInput.forget();\n              return new tree.JavaScript(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n            }\n\n            parserInput.restore('invalid javascript definition');\n          }\n        },\n        //\n        // The variable part of a variable definition. Used in the `rule` parser\n        //\n        //     @fink:\n        //\n        variable: function variable() {\n          var name;\n\n          if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n            return name[1];\n          }\n        },\n        //\n        // Call a variable value to retrieve a detached ruleset\n        // or a value from a detached ruleset's rules.\n        //\n        //     @fink();\n        //     @fink;\n        //     color: @fink[@color];\n        //\n        variableCall: function variableCall(parsedName) {\n          var lookups;\n          var important;\n          var i = parserInput.i;\n          var inValue = !!parsedName;\n          var name = parsedName;\n          parserInput.save();\n\n          if (name || parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/))) {\n            lookups = this.mixin.ruleLookups();\n\n            if (!lookups && (inValue && parserInput.$str('()') !== '()' || name[2] !== '()')) {\n              parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n              return;\n            }\n\n            if (!inValue) {\n              name = name[1];\n            }\n\n            if (lookups && parsers.important()) {\n              important = true;\n            }\n\n            var call = new tree.VariableCall(name, i, fileInfo);\n\n            if (!inValue && parsers.end()) {\n              parserInput.forget();\n              return call;\n            } else {\n              parserInput.forget();\n              return new tree.NamespaceValue(call, lookups, important, i, fileInfo);\n            }\n          }\n\n          parserInput.restore();\n        },\n        //\n        // extend syntax - used to extend selectors\n        //\n        extend: function extend(isRule) {\n          var elements;\n          var e;\n          var index = parserInput.i;\n          var option;\n          var extendList;\n          var extend;\n\n          if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n            return;\n          }\n\n          do {\n            option = null;\n            elements = null;\n\n            while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n              e = this.element();\n\n              if (!e) {\n                break;\n              }\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n            }\n\n            option = option && option[1];\n\n            if (!elements) {\n              error('Missing target selector for :extend().');\n            }\n\n            extend = new tree.Extend(new tree.Selector(elements), option, index, fileInfo);\n\n            if (extendList) {\n              extendList.push(extend);\n            } else {\n              extendList = [extend];\n            }\n          } while (parserInput.$char(','));\n\n          expect(/^\\)/);\n\n          if (isRule) {\n            expect(/^;/);\n          }\n\n          return extendList;\n        },\n        //\n        // extendRule - used in a rule to extend all the parent selectors\n        //\n        extendRule: function extendRule() {\n          return this.extend(true);\n        },\n        //\n        // Mixins\n        //\n        mixin: {\n          //\n          // A Mixin call, with an optional argument list\n          //\n          //     #mixins > .square(#fff);\n          //     #mixins.square(#fff);\n          //     .rounded(4px, black);\n          //     .button;\n          //\n          // We can lookup / return a value using the lookup syntax:\n          //\n          //     color: #mixin.square(#fff)[@color];\n          //\n          // The `while` loop is there because mixins can be\n          // namespaced, but we only support the child and descendant\n          // selector for now.\n          //\n          call: function call(inValue, getLookup) {\n            var s = parserInput.currentChar();\n            var important = false;\n            var lookups;\n            var index = parserInput.i;\n            var elements;\n            var args;\n            var hasParens;\n\n            if (s !== '.' && s !== '#') {\n              return;\n            }\n\n            parserInput.save(); // stop us absorbing part of an invalid selector\n\n            elements = this.elements();\n\n            if (elements) {\n              if (parserInput.$char('(')) {\n                args = this.args(true).args;\n                expectChar(')');\n                hasParens = true;\n              }\n\n              if (getLookup !== false) {\n                lookups = this.ruleLookups();\n              }\n\n              if (getLookup === true && !lookups) {\n                parserInput.restore();\n                return;\n              }\n\n              if (inValue && !lookups && !hasParens) {\n                // This isn't a valid in-value mixin call\n                parserInput.restore();\n                return;\n              }\n\n              if (!inValue && parsers.important()) {\n                important = true;\n              }\n\n              if (inValue || parsers.end()) {\n                parserInput.forget();\n                var mixin = new tree.mixin.Call(elements, args, index, fileInfo, !lookups && important);\n\n                if (lookups) {\n                  return new tree.NamespaceValue(mixin, lookups, important);\n                } else {\n                  return mixin;\n                }\n              }\n            }\n\n            parserInput.restore();\n          },\n\n          /**\n           * Matching elements for mixins\n           * (Start with . or # and can have > )\n           */\n          elements: function elements() {\n            var elements;\n            var e;\n            var c;\n            var elem;\n            var elemIndex;\n            var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n\n            while (true) {\n              elemIndex = parserInput.i;\n              e = parserInput.$re(re);\n\n              if (!e) {\n                break;\n              }\n\n              elem = new tree.Element(c, e, false, elemIndex, fileInfo);\n\n              if (elements) {\n                elements.push(elem);\n              } else {\n                elements = [elem];\n              }\n\n              c = parserInput.$char('>');\n            }\n\n            return elements;\n          },\n          args: function args(isCall) {\n            var entities = parsers.entities;\n            var returner = {\n              args: null,\n              variadic: false\n            };\n            var expressions = [];\n            var argsSemiColon = [];\n            var argsComma = [];\n            var isSemiColonSeparated;\n            var expressionContainsNamed;\n            var name;\n            var nameLoop;\n            var value;\n            var arg;\n            var expand;\n            var hasSep = true;\n            parserInput.save();\n\n            while (true) {\n              if (isCall) {\n                arg = parsers.detachedRuleset() || parsers.expression();\n              } else {\n                parserInput.commentStore.length = 0;\n\n                if (parserInput.$str('...')) {\n                  returner.variadic = true;\n\n                  if (parserInput.$char(';') && !isSemiColonSeparated) {\n                    isSemiColonSeparated = true;\n                  }\n\n                  (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                    variadic: true\n                  });\n                  break;\n                }\n\n                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n              }\n\n              if (!arg || !hasSep) {\n                break;\n              }\n\n              nameLoop = null;\n\n              if (arg.throwAwayComments) {\n                arg.throwAwayComments();\n              }\n\n              value = arg;\n              var val = null;\n\n              if (isCall) {\n                // Variable\n                if (arg.value && arg.value.length == 1) {\n                  val = arg.value[0];\n                }\n              } else {\n                val = arg;\n              }\n\n              if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                if (parserInput.$char(':')) {\n                  if (expressions.length > 0) {\n                    if (isSemiColonSeparated) {\n                      error('Cannot mix ; and , as delimiter types');\n                    }\n\n                    expressionContainsNamed = true;\n                  }\n\n                  value = parsers.detachedRuleset() || parsers.expression();\n\n                  if (!value) {\n                    if (isCall) {\n                      error('could not understand value for named argument');\n                    } else {\n                      parserInput.restore();\n                      returner.args = [];\n                      return returner;\n                    }\n                  }\n\n                  nameLoop = name = val.name;\n                } else if (parserInput.$str('...')) {\n                  if (!isCall) {\n                    returner.variadic = true;\n\n                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                      isSemiColonSeparated = true;\n                    }\n\n                    (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                      name: arg.name,\n                      variadic: true\n                    });\n                    break;\n                  } else {\n                    expand = true;\n                  }\n                } else if (!isCall) {\n                  name = nameLoop = val.name;\n                  value = null;\n                }\n              }\n\n              if (value) {\n                expressions.push(value);\n              }\n\n              argsComma.push({\n                name: nameLoop,\n                value: value,\n                expand: expand\n              });\n\n              if (parserInput.$char(',')) {\n                hasSep = true;\n                continue;\n              }\n\n              hasSep = parserInput.$char(';') === ';';\n\n              if (hasSep || isSemiColonSeparated) {\n                if (expressionContainsNamed) {\n                  error('Cannot mix ; and , as delimiter types');\n                }\n\n                isSemiColonSeparated = true;\n\n                if (expressions.length > 1) {\n                  value = new tree.Value(expressions);\n                }\n\n                argsSemiColon.push({\n                  name: name,\n                  value: value,\n                  expand: expand\n                });\n                name = null;\n                expressions = [];\n                expressionContainsNamed = false;\n              }\n            }\n\n            parserInput.forget();\n            returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n            return returner;\n          },\n          //\n          // A Mixin definition, with a list of parameters\n          //\n          //     .rounded (@radius: 2px, @color) {\n          //        ...\n          //     }\n          //\n          // Until we have a finer grained state-machine, we have to\n          // do a look-ahead, to make sure we don't have a mixin call.\n          // See the `rule` function for more information.\n          //\n          // We start by matching `.rounded (`, and then proceed on to\n          // the argument list, which has optional default values.\n          // We store the parameters in `params`, with a `value` key,\n          // if there is a value, such as in the case of `@radius`.\n          //\n          // Once we've got our params list, and a closing `)`, we parse\n          // the `{...}` block.\n          //\n          definition: function definition() {\n            var name;\n            var params = [];\n            var match;\n            var ruleset;\n            var cond;\n            var variadic = false;\n\n            if (parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#' || parserInput.peek(/^[^{]*\\}/)) {\n              return;\n            }\n\n            parserInput.save();\n            match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n\n            if (match) {\n              name = match[1];\n              var argInfo = this.args(false);\n              params = argInfo.args;\n              variadic = argInfo.variadic; // .mixincall(\"@{a}\");\n              // looks a bit like a mixin definition..\n              // also\n              // .mixincall(@a: {rule: set;});\n              // so we have to be nice and restore\n\n              if (!parserInput.$char(')')) {\n                parserInput.restore('Missing closing \\')\\'');\n                return;\n              }\n\n              parserInput.commentStore.length = 0;\n\n              if (parserInput.$str('when')) {\n                // Guard\n                cond = expect(parsers.conditions, 'expected condition');\n              }\n\n              ruleset = parsers.block();\n\n              if (ruleset) {\n                parserInput.forget();\n                return new tree.mixin.Definition(name, params, ruleset, cond, variadic);\n              } else {\n                parserInput.restore();\n              }\n            } else {\n              parserInput.forget();\n            }\n          },\n          ruleLookups: function ruleLookups() {\n            var rule;\n            var lookups = [];\n\n            if (parserInput.currentChar() !== '[') {\n              return;\n            }\n\n            while (true) {\n              parserInput.save();\n              rule = this.lookupValue();\n\n              if (!rule && rule !== '') {\n                parserInput.restore();\n                break;\n              }\n\n              lookups.push(rule);\n              parserInput.forget();\n            }\n\n            if (lookups.length > 0) {\n              return lookups;\n            }\n          },\n          lookupValue: function lookupValue() {\n            parserInput.save();\n\n            if (!parserInput.$char('[')) {\n              parserInput.restore();\n              return;\n            }\n\n            var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n\n            if (!parserInput.$char(']')) {\n              parserInput.restore();\n              return;\n            }\n\n            if (name || name === '') {\n              parserInput.forget();\n              return name;\n            }\n\n            parserInput.restore();\n          }\n        },\n        //\n        // Entities are the smallest recognized token,\n        // and can be found inside a rule's value.\n        //\n        entity: function entity() {\n          var entities = this.entities;\n          return this.comment() || entities.literal() || entities.variable() || entities.url() || entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) || entities.javascript();\n        },\n        //\n        // A Declaration terminator. Note that we use `peek()` to check for '}',\n        // because the `block` rule will be expecting it, but we still need to make sure\n        // it's there, if ';' was omitted.\n        //\n        end: function end() {\n          return parserInput.$char(';') || parserInput.peek('}');\n        },\n        //\n        // IE's alpha function\n        //\n        //     alpha(opacity=88)\n        //\n        ieAlpha: function ieAlpha() {\n          var value; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n          if (!parserInput.$re(/^opacity=/i)) {\n            return;\n          }\n\n          value = parserInput.$re(/^\\d+/);\n\n          if (!value) {\n            value = expect(parsers.entities.variable, 'Could not parse alpha');\n            value = \"@{\".concat(value.name.slice(1), \"}\");\n          }\n\n          expectChar(')');\n          return new tree.Quoted('', \"alpha(opacity=\".concat(value, \")\"));\n        },\n        //\n        // A Selector Element\n        //\n        //     div\n        //     + h1\n        //     #socks\n        //     input[type=\"text\"]\n        //\n        // Elements are the building blocks for Selectors,\n        // they are made out of a `Combinator` (see combinator rule),\n        // and an element name, such as a tag a class, or `*`.\n        //\n        element: function element() {\n          var e;\n          var c;\n          var v;\n          var index = parserInput.i;\n          c = this.combinator();\n          e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) || parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) || parserInput.$char('*') || parserInput.$char('&') || this.attribute() || parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) || this.entities.variableCurly();\n\n          if (!e) {\n            parserInput.save();\n\n            if (parserInput.$char('(')) {\n              if ((v = this.selector(false)) && parserInput.$char(')')) {\n                e = new tree.Paren(v);\n                parserInput.forget();\n              } else {\n                parserInput.restore('Missing closing \\')\\'');\n              }\n            } else {\n              parserInput.forget();\n            }\n          }\n\n          if (e) {\n            return new tree.Element(c, e, e instanceof tree.Variable, index, fileInfo);\n          }\n        },\n        //\n        // Combinators combine elements together, in a Selector.\n        //\n        // Because our parser isn't white-space sensitive, special care\n        // has to be taken, when parsing the descendant combinator, ` `,\n        // as it's an empty space. We have to check the previous character\n        // in the input, to see if it's a ` ` character. More info on how\n        // we deal with this in *combinator.js*.\n        //\n        combinator: function combinator() {\n          var c = parserInput.currentChar();\n\n          if (c === '/') {\n            parserInput.save();\n            var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n\n            if (slashedCombinator) {\n              parserInput.forget();\n              return new tree.Combinator(slashedCombinator);\n            }\n\n            parserInput.restore();\n          }\n\n          if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n            parserInput.i++;\n\n            if (c === '^' && parserInput.currentChar() === '^') {\n              c = '^^';\n              parserInput.i++;\n            }\n\n            while (parserInput.isWhitespace()) {\n              parserInput.i++;\n            }\n\n            return new tree.Combinator(c);\n          } else if (parserInput.isWhitespace(-1)) {\n            return new tree.Combinator(' ');\n          } else {\n            return new tree.Combinator(null);\n          }\n        },\n        //\n        // A CSS Selector\n        // with less extensions e.g. the ability to extend and guard\n        //\n        //     .class > div + h1\n        //     li a:hover\n        //\n        // Selectors are made out of one or more Elements, see above.\n        //\n        selector: function selector(isLess) {\n          var index = parserInput.i;\n          var elements;\n          var extendList;\n          var c;\n          var e;\n          var allExtends;\n          var when;\n          var condition;\n          isLess = isLess !== false;\n\n          while (isLess && (extendList = this.extend()) || isLess && (when = parserInput.$str('when')) || (e = this.element())) {\n            if (when) {\n              condition = expect(this.conditions, 'expected condition');\n            } else if (condition) {\n              error('CSS guard can only be used at the end of selector');\n            } else if (extendList) {\n              if (allExtends) {\n                allExtends = allExtends.concat(extendList);\n              } else {\n                allExtends = extendList;\n              }\n            } else {\n              if (allExtends) {\n                error('Extend can only be used at the end of selector');\n              }\n\n              c = parserInput.currentChar();\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n\n              e = null;\n            }\n\n            if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n              break;\n            }\n          }\n\n          if (elements) {\n            return new tree.Selector(elements, allExtends, condition, index, fileInfo);\n          }\n\n          if (allExtends) {\n            error('Extend must be used to extend a selector, it cannot be used on its own');\n          }\n        },\n        selectors: function selectors() {\n          var s;\n          var selectors;\n\n          while (true) {\n            s = this.selector();\n\n            if (!s) {\n              break;\n            }\n\n            if (selectors) {\n              selectors.push(s);\n            } else {\n              selectors = [s];\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (s.condition && selectors.length > 1) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            if (!parserInput.$char(',')) {\n              break;\n            }\n\n            if (s.condition) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            parserInput.commentStore.length = 0;\n          }\n\n          return selectors;\n        },\n        attribute: function attribute() {\n          if (!parserInput.$char('[')) {\n            return;\n          }\n\n          var entities = this.entities;\n          var key;\n          var val;\n          var op;\n\n          if (!(key = entities.variableCurly())) {\n            key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n          }\n\n          op = parserInput.$re(/^[|~*$^]?=/);\n\n          if (op) {\n            val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n          }\n\n          expectChar(']');\n          return new tree.Attribute(key, op, val);\n        },\n        //\n        // The `block` rule is used by `ruleset` and `mixin.definition`.\n        // It's a wrapper around the `primary` rule, with added `{}`.\n        //\n        block: function block() {\n          var content;\n\n          if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n            return content;\n          }\n        },\n        blockRuleset: function blockRuleset() {\n          var block = this.block();\n\n          if (block) {\n            block = new tree.Ruleset(null, block);\n          }\n\n          return block;\n        },\n        detachedRuleset: function detachedRuleset() {\n          var argInfo;\n          var params;\n          var variadic;\n          parserInput.save();\n\n          if (parserInput.$re(/^[.#]\\(/)) {\n            /**\n             * DR args currently only implemented for each() function, and not \n             * yet settable as `@dr: #(@arg) {}`\n             * This should be done when DRs are merged with mixins.\n             * See: https://github.com/less/less-meta/issues/16\n             */\n            argInfo = this.mixin.args(false);\n            params = argInfo.args;\n            variadic = argInfo.variadic;\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n          }\n\n          var blockRuleset = this.blockRuleset();\n\n          if (blockRuleset) {\n            parserInput.forget();\n\n            if (params) {\n              return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n            }\n\n            return new tree.DetachedRuleset(blockRuleset);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // div, .class, body > p {...}\n        //\n        ruleset: function ruleset() {\n          var selectors;\n          var rules;\n          var debugInfo;\n          parserInput.save();\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(parserInput.i);\n          }\n\n          selectors = this.selectors();\n\n          if (selectors && (rules = this.block())) {\n            parserInput.forget();\n            var ruleset = new tree.Ruleset(selectors, rules, context.strictImports);\n\n            if (context.dumpLineNumbers) {\n              ruleset.debugInfo = debugInfo;\n            }\n\n            return ruleset;\n          } else {\n            parserInput.restore();\n          }\n        },\n        declaration: function declaration() {\n          var name;\n          var value;\n          var index = parserInput.i;\n          var hasDR;\n          var c = parserInput.currentChar();\n          var important;\n          var merge;\n          var isVariable;\n\n          if (c === '.' || c === '#' || c === '&' || c === ':') {\n            return;\n          }\n\n          parserInput.save();\n          name = this.variable() || this.ruleProperty();\n\n          if (name) {\n            isVariable = typeof name === 'string';\n\n            if (isVariable) {\n              value = this.detachedRuleset();\n\n              if (value) {\n                hasDR = true;\n              }\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (!value) {\n              // a name returned by this.ruleProperty() is always an array of the form:\n              // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n              // where each item is a tree.Keyword or tree.Variable\n              merge = !isVariable && name.length > 1 && name.pop().value; // Custom property values get permissive parsing\n\n              if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                value = this.permissiveValue();\n              } // Try to store values as anonymous\n              // If we need the value later we'll re-parse it in ruleset.parseValue\n              else {\n                  value = this.anonymousValue();\n                }\n\n              if (value) {\n                parserInput.forget(); // anonymous values absorb the end ';' which is required for them to work\n\n                return new tree.Declaration(name, value, false, merge, index, fileInfo);\n              }\n\n              if (!value) {\n                value = this.value();\n              }\n\n              if (value) {\n                important = this.important();\n              } else if (isVariable) {\n                // As a last resort, try permissiveValue\n                value = this.permissiveValue();\n              }\n            }\n\n            if (value && (this.end() || hasDR)) {\n              parserInput.forget();\n              return new tree.Declaration(name, value, important, merge, index, fileInfo);\n            } else {\n              parserInput.restore();\n            }\n          } else {\n            parserInput.restore();\n          }\n        },\n        anonymousValue: function anonymousValue() {\n          var index = parserInput.i;\n          var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n\n          if (match) {\n            return new tree.Anonymous(match[1], index);\n          }\n        },\n\n        /**\n         * Used for custom properties, at-rules, and variables (as fallback)\n         * Parses almost anything inside of {} [] () \"\" blocks\n         * until it reaches outer-most tokens.\n         * \n         * First, it will try to parse comments and entities to reach\n         * the end. This is mostly like the Expression parser except no\n         * math is allowed.\n         */\n        permissiveValue: function permissiveValue(untilTokens) {\n          var i;\n          var e;\n          var done;\n          var value;\n          var tok = untilTokens || ';';\n          var index = parserInput.i;\n          var result = [];\n\n          function testCurrentChar() {\n            var char = parserInput.currentChar();\n\n            if (typeof tok === 'string') {\n              return char === tok;\n            } else {\n              return tok.test(char);\n            }\n          }\n\n          if (testCurrentChar()) {\n            return;\n          }\n\n          value = [];\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              value.push(e);\n              continue;\n            }\n\n            e = this.entity();\n\n            if (e) {\n              value.push(e);\n            }\n          } while (e);\n\n          done = testCurrentChar();\n\n          if (value.length > 0) {\n            value = new tree.Expression(value);\n\n            if (done) {\n              return value;\n            } else {\n              result.push(value);\n            } // Preserve space before $parseUntil as it will not\n\n\n            if (parserInput.prevChar() === ' ') {\n              result.push(new tree.Anonymous(' ', index));\n            }\n          }\n\n          parserInput.save();\n          value = parserInput.$parseUntil(tok);\n\n          if (value) {\n            if (typeof value === 'string') {\n              error(\"Expected '\".concat(value, \"'\"), 'Parse');\n            }\n\n            if (value.length === 1 && value[0] === ' ') {\n              parserInput.forget();\n              return new tree.Anonymous('', index);\n            }\n\n            var item;\n\n            for (i = 0; i < value.length; i++) {\n              item = value[i];\n\n              if (Array.isArray(item)) {\n                // Treat actual quotes as normal quoted values\n                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n              } else {\n                if (i === value.length - 1) {\n                  item = item.trim();\n                } // Treat like quoted values, but replace vars like unquoted expressions\n\n\n                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                quote.variableRegex = /@([\\w-]+)/g;\n                quote.propRegex = /\\$([\\w-]+)/g;\n                result.push(quote);\n              }\n            }\n\n            parserInput.forget();\n            return new tree.Expression(result, true);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // An @import atrule\n        //\n        //     @import \"lib\";\n        //\n        // Depending on our environment, importing is done differently:\n        // In the browser, it's an XHR request, in Node, it would be a\n        // file-system operation. The function used for importing is\n        // stored in `import`, which we pass to the Import constructor.\n        //\n        'import': function _import() {\n          var path;\n          var features;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@import?\\s+/);\n\n          if (dir) {\n            var options = (dir ? this.importOptions() : null) || {};\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              features = this.mediaFeatures();\n\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon or unrecognised media features on import');\n              }\n\n              features = features && new tree.Value(features);\n              return new tree.Import(path, features, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed import statement');\n            }\n          }\n        },\n        importOptions: function importOptions() {\n          var o;\n          var options = {};\n          var optionName;\n          var value; // list of options, surrounded by parens\n\n          if (!parserInput.$char('(')) {\n            return null;\n          }\n\n          do {\n            o = this.importOption();\n\n            if (o) {\n              optionName = o;\n              value = true;\n\n              switch (optionName) {\n                case 'css':\n                  optionName = 'less';\n                  value = false;\n                  break;\n\n                case 'once':\n                  optionName = 'multiple';\n                  value = false;\n                  break;\n              }\n\n              options[optionName] = value;\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (o);\n\n          expectChar(')');\n          return options;\n        },\n        importOption: function importOption() {\n          var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n\n          if (opt) {\n            return opt[1];\n          }\n        },\n        mediaFeature: function mediaFeature() {\n          var entities = this.entities;\n          var nodes = [];\n          var e;\n          var p;\n          parserInput.save();\n\n          do {\n            e = entities.keyword() || entities.variable() || entities.mixinLookup();\n\n            if (e) {\n              nodes.push(e);\n            } else if (parserInput.$char('(')) {\n              p = this.property();\n              e = this.value();\n\n              if (parserInput.$char(')')) {\n                if (p && e) {\n                  nodes.push(new tree.Paren(new tree.Declaration(p, e, null, null, parserInput.i, fileInfo, true)));\n                } else if (e) {\n                  nodes.push(new tree.Paren(e));\n                } else {\n                  error('badly formed media feature definition');\n                }\n              } else {\n                error('Missing closing \\')\\'', 'Parse');\n              }\n            }\n          } while (e);\n\n          parserInput.forget();\n\n          if (nodes.length > 0) {\n            return new tree.Expression(nodes);\n          }\n        },\n        mediaFeatures: function mediaFeatures() {\n          var entities = this.entities;\n          var features = [];\n          var e;\n\n          do {\n            e = this.mediaFeature();\n\n            if (e) {\n              features.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            } else {\n              e = entities.variable() || entities.mixinLookup();\n\n              if (e) {\n                features.push(e);\n\n                if (!parserInput.$char(',')) {\n                  break;\n                }\n              }\n            }\n          } while (e);\n\n          return features.length > 0 ? features : null;\n        },\n        media: function media() {\n          var features;\n          var rules;\n          var media;\n          var debugInfo;\n          var index = parserInput.i;\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(index);\n          }\n\n          parserInput.save();\n\n          if (parserInput.$str('@media')) {\n            features = this.mediaFeatures();\n            rules = this.block();\n\n            if (!rules) {\n              error('media definitions require block statements after any features');\n            }\n\n            parserInput.forget();\n            media = new tree.Media(rules, features, index, fileInfo);\n\n            if (context.dumpLineNumbers) {\n              media.debugInfo = debugInfo;\n            }\n\n            return media;\n          }\n\n          parserInput.restore();\n        },\n        //\n        // A @plugin directive, used to import plugins dynamically.\n        //\n        //     @plugin (args) \"lib\";\n        //\n        plugin: function plugin() {\n          var path;\n          var args;\n          var options;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@plugin?\\s+/);\n\n          if (dir) {\n            args = this.pluginArgs();\n\n            if (args) {\n              options = {\n                pluginArgs: args,\n                isPlugin: true\n              };\n            } else {\n              options = {\n                isPlugin: true\n              };\n            }\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon on @plugin');\n              }\n\n              return new tree.Import(path, null, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed @plugin statement');\n            }\n          }\n        },\n        pluginArgs: function pluginArgs() {\n          // list of options, surrounded by parens\n          parserInput.save();\n\n          if (!parserInput.$char('(')) {\n            parserInput.restore();\n            return null;\n          }\n\n          var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n\n          if (args[1]) {\n            parserInput.forget();\n            return args[1].trim();\n          } else {\n            parserInput.restore();\n            return null;\n          }\n        },\n        //\n        // A CSS AtRule\n        //\n        //     @charset \"utf-8\";\n        //\n        atrule: function atrule() {\n          var index = parserInput.i;\n          var name;\n          var value;\n          var rules;\n          var nonVendorSpecificName;\n          var hasIdentifier;\n          var hasExpression;\n          var hasUnknown;\n          var hasBlock = true;\n          var isRooted = true;\n\n          if (parserInput.currentChar() !== '@') {\n            return;\n          }\n\n          value = this['import']() || this.plugin() || this.media();\n\n          if (value) {\n            return value;\n          }\n\n          parserInput.save();\n          name = parserInput.$re(/^@[a-z-]+/);\n\n          if (!name) {\n            return;\n          }\n\n          nonVendorSpecificName = name;\n\n          if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n            nonVendorSpecificName = \"@\".concat(name.slice(name.indexOf('-', 2) + 1));\n          }\n\n          switch (nonVendorSpecificName) {\n            case '@charset':\n              hasIdentifier = true;\n              hasBlock = false;\n              break;\n\n            case '@namespace':\n              hasExpression = true;\n              hasBlock = false;\n              break;\n\n            case '@keyframes':\n            case '@counter-style':\n              hasIdentifier = true;\n              break;\n\n            case '@document':\n            case '@supports':\n              hasUnknown = true;\n              isRooted = false;\n              break;\n\n            default:\n              hasUnknown = true;\n              break;\n          }\n\n          parserInput.commentStore.length = 0;\n\n          if (hasIdentifier) {\n            value = this.entity();\n\n            if (!value) {\n              error(\"expected \".concat(name, \" identifier\"));\n            }\n          } else if (hasExpression) {\n            value = this.expression();\n\n            if (!value) {\n              error(\"expected \".concat(name, \" expression\"));\n            }\n          } else if (hasUnknown) {\n            value = this.permissiveValue(/^[{;]/);\n            hasBlock = parserInput.currentChar() === '{';\n\n            if (!value) {\n              if (!hasBlock && parserInput.currentChar() !== ';') {\n                error(\"\".concat(name, \" rule is missing block or ending semi-colon\"));\n              }\n            } else if (!value.value) {\n              value = null;\n            }\n          }\n\n          if (hasBlock) {\n            rules = this.blockRuleset();\n          }\n\n          if (rules || !hasBlock && value && parserInput.$char(';')) {\n            parserInput.forget();\n            return new tree.AtRule(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n          }\n\n          parserInput.restore('at-rule options not recognised');\n        },\n        //\n        // A Value is a comma-delimited list of Expressions\n        //\n        //     font-family: Baskerville, Georgia, serif;\n        //\n        // In a Rule, a Value represents everything after the `:`,\n        // and before the `;`.\n        //\n        value: function value() {\n          var e;\n          var expressions = [];\n          var index = parserInput.i;\n\n          do {\n            e = this.expression();\n\n            if (e) {\n              expressions.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (e);\n\n          if (expressions.length > 0) {\n            return new tree.Value(expressions, index);\n          }\n        },\n        important: function important() {\n          if (parserInput.currentChar() === '!') {\n            return parserInput.$re(/^! *important/);\n          }\n        },\n        sub: function sub() {\n          var a;\n          var e;\n          parserInput.save();\n\n          if (parserInput.$char('(')) {\n            a = this.addition();\n\n            if (a && parserInput.$char(')')) {\n              parserInput.forget();\n              e = new tree.Expression([a]);\n              e.parens = true;\n              return e;\n            }\n\n            parserInput.restore('Expected \\')\\'');\n            return;\n          }\n\n          parserInput.restore();\n        },\n        multiplication: function multiplication() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.operand();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              if (parserInput.peek(/^\\/[*\\/]/)) {\n                break;\n              }\n\n              parserInput.save();\n              op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n\n              if (!op) {\n                parserInput.forget();\n                break;\n              }\n\n              a = this.operand();\n\n              if (!a) {\n                parserInput.restore();\n                break;\n              }\n\n              parserInput.forget();\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        addition: function addition() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.multiplication();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              op = parserInput.$re(/^[-+]\\s+/) || !isSpaced && (parserInput.$char('+') || parserInput.$char('-'));\n\n              if (!op) {\n                break;\n              }\n\n              a = this.multiplication();\n\n              if (!a) {\n                break;\n              }\n\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        conditions: function conditions() {\n          var a;\n          var b;\n          var index = parserInput.i;\n          var condition;\n          a = this.condition(true);\n\n          if (a) {\n            while (true) {\n              if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                break;\n              }\n\n              b = this.condition(true);\n\n              if (!b) {\n                break;\n              }\n\n              condition = new tree.Condition('or', condition || a, b, index);\n            }\n\n            return condition || a;\n          }\n        },\n        condition: function condition(needsParens) {\n          var result;\n          var logical;\n          var next;\n\n          function or() {\n            return parserInput.$str('or');\n          }\n\n          result = this.conditionAnd(needsParens);\n\n          if (!result) {\n            return;\n          }\n\n          logical = or();\n\n          if (logical) {\n            next = this.condition(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        conditionAnd: function conditionAnd(needsParens) {\n          var result;\n          var logical;\n          var next;\n          var self = this;\n\n          function insideCondition() {\n            var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n\n            if (!cond && !needsParens) {\n              return self.atomicCondition(needsParens);\n            }\n\n            return cond;\n          }\n\n          function and() {\n            return parserInput.$str('and');\n          }\n\n          result = insideCondition();\n\n          if (!result) {\n            return;\n          }\n\n          logical = and();\n\n          if (logical) {\n            next = this.conditionAnd(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        negatedCondition: function negatedCondition(needsParens) {\n          if (parserInput.$str('not')) {\n            var result = this.parenthesisCondition(needsParens);\n\n            if (result) {\n              result.negate = !result.negate;\n            }\n\n            return result;\n          }\n        },\n        parenthesisCondition: function parenthesisCondition(needsParens) {\n          function tryConditionFollowedByParenthesis(me) {\n            var body;\n            parserInput.save();\n            body = me.condition(needsParens);\n\n            if (!body) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return body;\n          }\n\n          var body;\n          parserInput.save();\n\n          if (!parserInput.$str('(')) {\n            parserInput.restore();\n            return;\n          }\n\n          body = tryConditionFollowedByParenthesis(this);\n\n          if (body) {\n            parserInput.forget();\n            return body;\n          }\n\n          body = this.atomicCondition(needsParens);\n\n          if (!body) {\n            parserInput.restore();\n            return;\n          }\n\n          if (!parserInput.$char(')')) {\n            parserInput.restore(\"expected ')' got '\".concat(parserInput.currentChar(), \"'\"));\n            return;\n          }\n\n          parserInput.forget();\n          return body;\n        },\n        atomicCondition: function atomicCondition(needsParens) {\n          var entities = this.entities;\n          var index = parserInput.i;\n          var a;\n          var b;\n          var c;\n          var op;\n\n          function cond() {\n            return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n          }\n\n          cond = cond.bind(this);\n          a = cond();\n\n          if (a) {\n            if (parserInput.$char('>')) {\n              if (parserInput.$char('=')) {\n                op = '>=';\n              } else {\n                op = '>';\n              }\n            } else if (parserInput.$char('<')) {\n              if (parserInput.$char('=')) {\n                op = '<=';\n              } else {\n                op = '<';\n              }\n            } else if (parserInput.$char('=')) {\n              if (parserInput.$char('>')) {\n                op = '=>';\n              } else if (parserInput.$char('<')) {\n                op = '=<';\n              } else {\n                op = '=';\n              }\n            }\n\n            if (op) {\n              b = cond();\n\n              if (b) {\n                c = new tree.Condition(op, a, b, index, false);\n              } else {\n                error('expected expression');\n              }\n            } else {\n              c = new tree.Condition('=', a, new tree.Keyword('true'), index, false);\n            }\n\n            return c;\n          }\n        },\n        //\n        // An operand is anything that can be part of an operation,\n        // such as a Color, or a Variable\n        //\n        operand: function operand() {\n          var entities = this.entities;\n          var negate;\n\n          if (parserInput.peek(/^-[@\\$\\(]/)) {\n            negate = parserInput.$char('-');\n          }\n\n          var o = this.sub() || entities.dimension() || entities.color() || entities.variable() || entities.property() || entities.call() || entities.quoted(true) || entities.colorKeyword() || entities.mixinLookup();\n\n          if (negate) {\n            o.parensInOp = true;\n            o = new tree.Negative(o);\n          }\n\n          return o;\n        },\n        //\n        // Expressions either represent mathematical operations,\n        // or white-space delimited Entities.\n        //\n        //     1px solid black\n        //     @var * 2\n        //\n        expression: function expression() {\n          var entities = [];\n          var e;\n          var delim;\n          var index = parserInput.i;\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              entities.push(e);\n              continue;\n            }\n\n            e = this.addition() || this.entity();\n\n            if (e) {\n              entities.push(e); // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n\n              if (!parserInput.peek(/^\\/[\\/*]/)) {\n                delim = parserInput.$char('/');\n\n                if (delim) {\n                  entities.push(new tree.Anonymous(delim, index));\n                }\n              }\n            }\n          } while (e);\n\n          if (entities.length > 0) {\n            return new tree.Expression(entities);\n          }\n        },\n        property: function property() {\n          var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n\n          if (name) {\n            return name[1];\n          }\n        },\n        ruleProperty: function ruleProperty() {\n          var name = [];\n          var index = [];\n          var s;\n          var k;\n          parserInput.save();\n          var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n\n          if (simpleProperty) {\n            name = [new tree.Keyword(simpleProperty[1])];\n            parserInput.forget();\n            return name;\n          }\n\n          function match(re) {\n            var i = parserInput.i;\n            var chunk = parserInput.$re(re);\n\n            if (chunk) {\n              index.push(i);\n              return name.push(chunk[1]);\n            }\n          }\n\n          match(/^(\\*?)/);\n\n          while (true) {\n            if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n              break;\n            }\n          }\n\n          if (name.length > 1 && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n            parserInput.forget(); // at last, we have the complete match now. move forward,\n            // convert name particles to tree objects and return:\n\n            if (name[0] === '') {\n              name.shift();\n              index.shift();\n            }\n\n            for (k = 0; k < name.length; k++) {\n              s = name[k];\n              name[k] = s.charAt(0) !== '@' && s.charAt(0) !== '$' ? new tree.Keyword(s) : s.charAt(0) === '@' ? new tree.Variable(\"@\".concat(s.slice(2, -1)), index[k], fileInfo) : new tree.Property(\"$\".concat(s.slice(2, -1)), index[k], fileInfo);\n            }\n\n            return name;\n          }\n\n          parserInput.restore();\n        }\n      }\n    };\n  };\n\n  Parser.serializeVars = function (vars) {\n    var s = '';\n\n    for (var name in vars) {\n      if (Object.hasOwnProperty.call(vars, name)) {\n        var value = vars[name];\n        s += \"\".concat((name[0] === '@' ? '' : '@') + name, \": \").concat(value).concat(String(value).slice(-1) === ';' ? '' : ';');\n      }\n    }\n\n    return s;\n  };\n\n  function boolean(condition) {\n    return condition ? Keyword.True : Keyword.False;\n  }\n\n  function If(condition, trueValue, falseValue) {\n    return condition ? trueValue : falseValue || new Anonymous();\n  }\n\n  var boolean$1 = {\n    boolean: boolean,\n    'if': If\n  };\n\n  var colorFunctions;\n\n  function clamp$1(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  function hsla(origColor, hsl) {\n    var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n\n    if (color) {\n      if (origColor.value && /^(rgb|hsl)/.test(origColor.value)) {\n        color.value = origColor.value;\n      } else {\n        color.value = 'rgb';\n      }\n\n      return color;\n    }\n  }\n\n  function toHSL(color) {\n    if (color.toHSL) {\n      return color.toHSL();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function toHSV(color) {\n    if (color.toHSV) {\n      return color.toHSV();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function number(n) {\n    if (n instanceof Dimension) {\n      return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n      return n;\n    } else {\n      throw {\n        type: 'Argument',\n        message: 'color functions take numbers as parameters'\n      };\n    }\n  }\n\n  function scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n      return parseFloat(n.value * size / 100);\n    } else {\n      return number(n);\n    }\n  }\n\n  colorFunctions = {\n    rgb: function rgb(r, g, b) {\n      var color = colorFunctions.rgba(r, g, b, 1.0);\n\n      if (color) {\n        color.value = 'rgb';\n        return color;\n      }\n    },\n    rgba: function rgba(r, g, b, a) {\n      try {\n        if (r instanceof Color) {\n          if (g) {\n            a = number(g);\n          } else {\n            a = r.alpha;\n          }\n\n          return new Color(r.rgb, a, 'rgba');\n        }\n\n        var rgb = [r, g, b].map(function (c) {\n          return scaled(c, 255);\n        });\n        a = number(a);\n        return new Color(rgb, a, 'rgba');\n      } catch (e) {}\n    },\n    hsl: function hsl(h, s, l) {\n      var color = colorFunctions.hsla(h, s, l, 1.0);\n\n      if (color) {\n        color.value = 'hsl';\n        return color;\n      }\n    },\n    hsla: function hsla(h, s, l, a) {\n      try {\n        var hue = function hue(h) {\n          h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\n          if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n          } else if (h * 2 < 1) {\n            return m2;\n          } else if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n          } else {\n            return m1;\n          }\n        };\n\n        if (h instanceof Color) {\n          if (s) {\n            a = number(s);\n          } else {\n            a = h.alpha;\n          }\n\n          return new Color(h.rgb, a, 'hsla');\n        }\n\n        var m1;\n        var m2;\n        h = number(h) % 360 / 360;\n        s = clamp$1(number(s));\n        l = clamp$1(number(l));\n        a = clamp$1(number(a));\n        m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        m1 = l * 2 - m2;\n        var rgb = [hue(h + 1 / 3) * 255, hue(h) * 255, hue(h - 1 / 3) * 255];\n        a = number(a);\n        return new Color(rgb, a, 'hsla');\n      } catch (e) {}\n    },\n    hsv: function hsv(h, s, v) {\n      return colorFunctions.hsva(h, s, v, 1.0);\n    },\n    hsva: function hsva(h, s, v, a) {\n      h = number(h) % 360 / 360 * 360;\n      s = number(s);\n      v = number(v);\n      a = number(a);\n      var i;\n      var f;\n      i = Math.floor(h / 60 % 6);\n      f = h / 60 - i;\n      var vs = [v, v * (1 - s), v * (1 - f * s), v * (1 - (1 - f) * s)];\n      var perm = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n      return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n    },\n    hue: function hue(color) {\n      return new Dimension(toHSL(color).h);\n    },\n    saturation: function saturation(color) {\n      return new Dimension(toHSL(color).s * 100, '%');\n    },\n    lightness: function lightness(color) {\n      return new Dimension(toHSL(color).l * 100, '%');\n    },\n    hsvhue: function hsvhue(color) {\n      return new Dimension(toHSV(color).h);\n    },\n    hsvsaturation: function hsvsaturation(color) {\n      return new Dimension(toHSV(color).s * 100, '%');\n    },\n    hsvvalue: function hsvvalue(color) {\n      return new Dimension(toHSV(color).v * 100, '%');\n    },\n    red: function red(color) {\n      return new Dimension(color.rgb[0]);\n    },\n    green: function green(color) {\n      return new Dimension(color.rgb[1]);\n    },\n    blue: function blue(color) {\n      return new Dimension(color.rgb[2]);\n    },\n    alpha: function alpha(color) {\n      return new Dimension(toHSL(color).a);\n    },\n    luma: function luma(color) {\n      return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function luminance(color) {\n      var luminance = 0.2126 * color.rgb[0] / 255 + 0.7152 * color.rgb[1] / 255 + 0.0722 * color.rgb[2] / 255;\n      return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function saturate(color, amount, method) {\n      // filter: saturate(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s += hsl.s * amount.value / 100;\n      } else {\n        hsl.s += amount.value / 100;\n      }\n\n      hsl.s = clamp$1(hsl.s);\n      return hsla(color, hsl);\n    },\n    desaturate: function desaturate(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s -= hsl.s * amount.value / 100;\n      } else {\n        hsl.s -= amount.value / 100;\n      }\n\n      hsl.s = clamp$1(hsl.s);\n      return hsla(color, hsl);\n    },\n    lighten: function lighten(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l += hsl.l * amount.value / 100;\n      } else {\n        hsl.l += amount.value / 100;\n      }\n\n      hsl.l = clamp$1(hsl.l);\n      return hsla(color, hsl);\n    },\n    darken: function darken(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l -= hsl.l * amount.value / 100;\n      } else {\n        hsl.l -= amount.value / 100;\n      }\n\n      hsl.l = clamp$1(hsl.l);\n      return hsla(color, hsl);\n    },\n    fadein: function fadein(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a += hsl.a * amount.value / 100;\n      } else {\n        hsl.a += amount.value / 100;\n      }\n\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    fadeout: function fadeout(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a -= hsl.a * amount.value / 100;\n      } else {\n        hsl.a -= amount.value / 100;\n      }\n\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    fade: function fade(color, amount) {\n      var hsl = toHSL(color);\n      hsl.a = amount.value / 100;\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    spin: function spin(color, amount) {\n      var hsl = toHSL(color);\n      var hue = (hsl.h + amount.value) % 360;\n      hsl.h = hue < 0 ? 360 + hue : hue;\n      return hsla(color, hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function mix(color1, color2, weight) {\n      if (!weight) {\n        weight = new Dimension(50);\n      }\n\n      var p = weight.value / 100.0;\n      var w = p * 2 - 1;\n      var a = toHSL(color1).a - toHSL(color2).a;\n      var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2, color1.rgb[1] * w1 + color2.rgb[1] * w2, color1.rgb[2] * w1 + color2.rgb[2] * w2];\n      var alpha = color1.alpha * p + color2.alpha * (1 - p);\n      return new Color(rgb, alpha);\n    },\n    greyscale: function greyscale(color) {\n      return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function contrast(color, dark, light, threshold) {\n      // filter: contrast(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      if (typeof light === 'undefined') {\n        light = colorFunctions.rgba(255, 255, 255, 1.0);\n      }\n\n      if (typeof dark === 'undefined') {\n        dark = colorFunctions.rgba(0, 0, 0, 1.0);\n      } // Figure out which is actually light and dark:\n\n\n      if (dark.luma() > light.luma()) {\n        var t = light;\n        light = dark;\n        dark = t;\n      }\n\n      if (typeof threshold === 'undefined') {\n        threshold = 0.43;\n      } else {\n        threshold = number(threshold);\n      }\n\n      if (color.luma() < threshold) {\n        return light;\n      } else {\n        return dark;\n      }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function argb(color) {\n      return new Anonymous(color.toARGB());\n    },\n    color: function color(c) {\n      if (c instanceof Quoted && /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value)) {\n        var val = c.value.slice(1);\n        return new Color(val, undefined, \"#\".concat(val));\n      }\n\n      if (c instanceof Color || (c = Color.fromKeyword(c.value))) {\n        c.value = undefined;\n        return c;\n      }\n\n      throw {\n        type: 'Argument',\n        message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n      };\n    },\n    tint: function tint(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function shade(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n  };\n  var color = colorFunctions;\n\n  // ref: http://www.w3.org/TR/compositing-1\n\n  function colorBlend(mode, color1, color2) {\n    var ab = color1.alpha; // result\n\n    var // backdrop\n    cb;\n    var as = color2.alpha;\n    var // source\n    cs;\n    var ar;\n    var cr;\n    var r = [];\n    ar = as + ab * (1 - as);\n\n    for (var i = 0; i < 3; i++) {\n      cb = color1.rgb[i] / 255;\n      cs = color2.rgb[i] / 255;\n      cr = mode(cb, cs);\n\n      if (ar) {\n        cr = (as * cs + ab * (cb - as * (cb + cs - cr))) / ar;\n      }\n\n      r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n  }\n\n  var colorBlendModeFunctions = {\n    multiply: function multiply(cb, cs) {\n      return cb * cs;\n    },\n    screen: function screen(cb, cs) {\n      return cb + cs - cb * cs;\n    },\n    overlay: function overlay(cb, cs) {\n      cb *= 2;\n      return cb <= 1 ? colorBlendModeFunctions.multiply(cb, cs) : colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function softlight(cb, cs) {\n      var d = 1;\n      var e = cb;\n\n      if (cs > 0.5) {\n        e = 1;\n        d = cb > 0.25 ? Math.sqrt(cb) : ((16 * cb - 12) * cb + 4) * cb;\n      }\n\n      return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function hardlight(cb, cs) {\n      return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function difference(cb, cs) {\n      return Math.abs(cb - cs);\n    },\n    exclusion: function exclusion(cb, cs) {\n      return cb + cs - 2 * cb * cs;\n    },\n    // non-w3c functions:\n    average: function average(cb, cs) {\n      return (cb + cs) / 2;\n    },\n    negation: function negation(cb, cs) {\n      return 1 - Math.abs(cb + cs - 1);\n    }\n  };\n\n  for (var f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n      colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n  }\n\n  var dataUri = (function (environment) {\n    var fallback = function fallback(functionThis, node) {\n      return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n    };\n\n    return {\n      'data-uri': function dataUri(mimetypeNode, filePathNode) {\n        if (!filePathNode) {\n          filePathNode = mimetypeNode;\n          mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.rewriteUrls ? currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n\n        if (fragmentStart !== -1) {\n          fragment = filePath.slice(fragmentStart);\n          filePath = filePath.slice(0, fragmentStart);\n        }\n\n        var context = clone(this.context);\n        context.rawBuffer = true;\n        var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n          return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false; // detect the mimetype if not given\n\n        if (!mimetypeNode) {\n          mimetype = environment.mimeLookup(filePath);\n\n          if (mimetype === 'image/svg+xml') {\n            useBase64 = false;\n          } else {\n            // use base 64 unless it's an ASCII or UTF-8 format\n            var charset = environment.charsetLookup(mimetype);\n            useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n          }\n\n          if (useBase64) {\n            mimetype += ';base64';\n          }\n        } else {\n          useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n\n        if (!fileSync.contents) {\n          logger.warn(\"Skipped data-uri embedding of \".concat(filePath, \" because file not found\"));\n          return fallback(this, filePathNode || mimetypeNode);\n        }\n\n        var buf = fileSync.contents;\n\n        if (useBase64 && !environment.encodeBase64) {\n          return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n        var uri = \"data:\".concat(mimetype, \",\").concat(buf).concat(fragment);\n        return new URL(new Quoted(\"\\\"\".concat(uri, \"\\\"\"), uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  });\n\n  var getItemsFromNode = function getItemsFromNode(node) {\n    // handle non-array values as an array of length 1\n    // return 'undefined' if index is invalid\n    var items = Array.isArray(node.value) ? node.value : Array(node);\n    return items;\n  };\n\n  var list = {\n    _SELF: function _SELF(n) {\n      return n;\n    },\n    extract: function extract(values, index) {\n      // (1-based index)\n      index = index.value - 1;\n      return getItemsFromNode(values)[index];\n    },\n    length: function length(values) {\n      return new Dimension(getItemsFromNode(values).length);\n    },\n\n    /**\n     * Creates a Less list of incremental values.\n     * Modeled after Lodash's range function, also exists natively in PHP\n     * \n     * @param {Dimension} [start=1]\n     * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n     * @param {Dimension} [step=1] \n     */\n    range: function range(start, end, step) {\n      var from;\n      var to;\n      var stepValue = 1;\n      var list = [];\n\n      if (end) {\n        to = end;\n        from = start.value;\n\n        if (step) {\n          stepValue = step.value;\n        }\n      } else {\n        from = 1;\n        to = start;\n      }\n\n      for (var i = from; i <= to.value; i += stepValue) {\n        list.push(new Dimension(i, to.unit));\n      }\n\n      return new Expression(list);\n    },\n    each: function each(list, rs) {\n      var rules = [];\n      var newRules;\n      var iterator;\n\n      if (list.value && !(list instanceof Quoted)) {\n        if (Array.isArray(list.value)) {\n          iterator = list.value;\n        } else {\n          iterator = [list.value];\n        }\n      } else if (list.ruleset) {\n        iterator = list.ruleset.rules;\n      } else if (list.rules) {\n        iterator = list.rules;\n      } else if (Array.isArray(list)) {\n        iterator = list;\n      } else {\n        iterator = [list];\n      }\n\n      var valueName = '@value';\n      var keyName = '@key';\n      var indexName = '@index';\n\n      if (rs.params) {\n        valueName = rs.params[0] && rs.params[0].name;\n        keyName = rs.params[1] && rs.params[1].name;\n        indexName = rs.params[2] && rs.params[2].name;\n        rs = rs.rules;\n      } else {\n        rs = rs.ruleset;\n      }\n\n      for (var i = 0; i < iterator.length; i++) {\n        var key = void 0;\n        var value = void 0;\n        var item = iterator[i];\n\n        if (item instanceof Declaration) {\n          key = typeof item.name === 'string' ? item.name : item.name[0].value;\n          value = item.value;\n        } else {\n          key = new Dimension(i + 1);\n          value = item;\n        }\n\n        if (item instanceof Comment) {\n          continue;\n        }\n\n        newRules = rs.rules.slice(0);\n\n        if (valueName) {\n          newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n        }\n\n        if (indexName) {\n          newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\n        }\n\n        if (keyName) {\n          newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n        }\n\n        rules.push(new Ruleset([new Selector([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n      }\n\n      return new Ruleset([new Selector([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n    }\n  };\n\n  var MathHelper = function MathHelper(fn, unit, n) {\n    if (!(n instanceof Dimension)) {\n      throw {\n        type: 'Argument',\n        message: 'argument must be a number'\n      };\n    }\n\n    if (unit == null) {\n      unit = n.unit;\n    } else {\n      n = n.unify();\n    }\n\n    return new Dimension(fn(parseFloat(n.value)), unit);\n  };\n\n  var mathFunctions = {\n    // name,  unit\n    ceil: null,\n    floor: null,\n    sqrt: null,\n    abs: null,\n    tan: '',\n    sin: '',\n    cos: '',\n    atan: 'rad',\n    asin: 'rad',\n    acos: 'rad'\n  };\n\n  for (var f$1 in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f$1)) {\n      mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\n    }\n  }\n\n  mathFunctions.round = function (n, f) {\n    var fraction = typeof f === 'undefined' ? 0 : f.value;\n    return MathHelper(function (num) {\n      return num.toFixed(fraction);\n    }, null, n);\n  };\n\n  var minMax = function minMax(isMin, args) {\n    args = Array.prototype.slice.call(args);\n\n    switch (args.length) {\n      case 0:\n        throw {\n          type: 'Argument',\n          message: 'one or more arguments required'\n        };\n    }\n\n    var i; // key is the unit.toString() for unified Dimension values,\n\n    var j;\n    var current;\n    var currentUnified;\n    var referenceUnified;\n    var unit;\n    var unitStatic;\n    var unitClone;\n    var // elems only contains original argument values.\n    order = [];\n    var values = {}; // value is the index into the order array.\n\n    for (i = 0; i < args.length; i++) {\n      current = args[i];\n\n      if (!(current instanceof Dimension)) {\n        if (Array.isArray(args[i].value)) {\n          Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n        }\n\n        continue;\n      }\n\n      currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n      unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n      unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n      unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n      j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n\n      if (j === undefined) {\n        if (unitStatic !== undefined && unit !== unitStatic) {\n          throw {\n            type: 'Argument',\n            message: 'incompatible types'\n          };\n        }\n\n        values[unit] = order.length;\n        order.push(current);\n        continue;\n      }\n\n      referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n\n      if (isMin && currentUnified.value < referenceUnified.value || !isMin && currentUnified.value > referenceUnified.value) {\n        order[j] = current;\n      }\n    }\n\n    if (order.length == 1) {\n      return order[0];\n    }\n\n    args = order.map(function (a) {\n      return a.toCSS(this.context);\n    }).join(this.context.compress ? ',' : ', ');\n    return new Anonymous(\"\".concat(isMin ? 'min' : 'max', \"(\").concat(args, \")\"));\n  };\n\n  var number$1 = {\n    min: function min() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return minMax(true, args);\n    },\n    max: function max() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return minMax(false, args);\n    },\n    convert: function convert(val, unit) {\n      return val.convertTo(unit.value);\n    },\n    pi: function pi() {\n      return new Dimension(Math.PI);\n    },\n    mod: function mod(a, b) {\n      return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function pow(x, y) {\n      if (typeof x === 'number' && typeof y === 'number') {\n        x = new Dimension(x);\n        y = new Dimension(y);\n      } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: 'arguments must be numbers'\n        };\n      }\n\n      return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function percentage(n) {\n      var result = MathHelper(function (num) {\n        return num * 100;\n      }, '%', n);\n      return result;\n    }\n  };\n\n  var string = {\n    e: function e(str) {\n      return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n    },\n    escape: function escape(str) {\n      return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B').replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n    },\n    replace: function replace(string, pattern, replacement, flags) {\n      var result = string.value;\n      replacement = replacement.type === 'Quoted' ? replacement.value : replacement.toCSS();\n      result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n      return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function _(string\n    /* arg, arg, ... */\n    ) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var result = string.value;\n\n      var _loop = function _loop(i) {\n        /* jshint loopfunc:true */\n        result = result.replace(/%[sda]/i, function (token) {\n          var value = args[i].type === 'Quoted' && token.match(/s/i) ? args[i].value : args[i].toCSS();\n          return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n        });\n      };\n\n      for (var i = 0; i < args.length; i++) {\n        _loop(i);\n      }\n\n      result = result.replace(/%%/g, '%');\n      return new Quoted(string.quote || '', result, string.escaped);\n    }\n  };\n\n  var svg = (function (environment) {\n    return {\n      'svg-gradient': function svgGradient(direction) {\n        var stops;\n        var gradientDirectionSvg;\n        var gradientType = 'linear';\n        var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n        var renderEnv = {\n          compress: false\n        };\n        var returner;\n        var directionValue = direction.toCSS(renderEnv);\n        var i;\n        var color;\n        var position;\n        var positionValue;\n        var alpha;\n\n        function throwArgumentDescriptor() {\n          throw {\n            type: 'Argument',\n            message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' + ' end_color [end_position] or direction, color list'\n          };\n        }\n\n        if (arguments.length == 2) {\n          if (arguments[1].value.length < 2) {\n            throwArgumentDescriptor();\n          }\n\n          stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n          throwArgumentDescriptor();\n        } else {\n          stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n          case 'to bottom':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n            break;\n\n          case 'to right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'to bottom right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n            break;\n\n          case 'to top right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'ellipse':\n          case 'ellipse at center':\n            gradientType = 'radial';\n            gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n            rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n            break;\n\n          default:\n            throw {\n              type: 'Argument',\n              message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' + ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\''\n            };\n        }\n\n        returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\".concat(gradientType, \"Gradient id=\\\"g\\\" \").concat(gradientDirectionSvg, \">\");\n\n        for (i = 0; i < stops.length; i += 1) {\n          if (stops[i] instanceof Expression) {\n            color = stops[i].value[0];\n            position = stops[i].value[1];\n          } else {\n            color = stops[i];\n            position = undefined;\n          }\n\n          if (!(color instanceof Color) || !((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension)) {\n            throwArgumentDescriptor();\n          }\n\n          positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n          alpha = color.alpha;\n          returner += \"<stop offset=\\\"\".concat(positionValue, \"\\\" stop-color=\\\"\").concat(color.toRGB(), \"\\\"\").concat(alpha < 1 ? \" stop-opacity=\\\"\".concat(alpha, \"\\\"\") : '', \"/>\");\n        }\n\n        returner += \"</\".concat(gradientType, \"Gradient><rect \").concat(rectangleDimension, \" fill=\\\"url(#g)\\\" /></svg>\");\n        returner = encodeURIComponent(returner);\n        returner = \"data:image/svg+xml,\".concat(returner);\n        return new URL(new Quoted(\"'\".concat(returner, \"'\"), returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  });\n\n  var isa = function isa(n, Type) {\n    return n instanceof Type ? Keyword.True : Keyword.False;\n  };\n\n  var isunit = function isunit(n, unit) {\n    if (unit === undefined) {\n      throw {\n        type: 'Argument',\n        message: 'missing the required second argument to isunit.'\n      };\n    }\n\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n\n    if (typeof unit !== 'string') {\n      throw {\n        type: 'Argument',\n        message: 'Second argument to isunit should be a unit or a string.'\n      };\n    }\n\n    return n instanceof Dimension && n.unit.is(unit) ? Keyword.True : Keyword.False;\n  };\n\n  var types = {\n    isruleset: function isruleset(n) {\n      return isa(n, DetachedRuleset);\n    },\n    iscolor: function iscolor(n) {\n      return isa(n, Color);\n    },\n    isnumber: function isnumber(n) {\n      return isa(n, Dimension);\n    },\n    isstring: function isstring(n) {\n      return isa(n, Quoted);\n    },\n    iskeyword: function iskeyword(n) {\n      return isa(n, Keyword);\n    },\n    isurl: function isurl(n) {\n      return isa(n, URL);\n    },\n    ispixel: function ispixel(n) {\n      return isunit(n, 'px');\n    },\n    ispercentage: function ispercentage(n) {\n      return isunit(n, '%');\n    },\n    isem: function isem(n) {\n      return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function unit(val, _unit) {\n      if (!(val instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: \"the first argument to unit must be a number\".concat(val instanceof Operation ? '. Have you forgotten parenthesis?' : '')\n        };\n      }\n\n      if (_unit) {\n        if (_unit instanceof Keyword) {\n          _unit = _unit.value;\n        } else {\n          _unit = _unit.toCSS();\n        }\n      } else {\n        _unit = '';\n      }\n\n      return new Dimension(val.value, _unit);\n    },\n    'get-unit': function getUnit(n) {\n      return new Anonymous(n.unit);\n    }\n  };\n\n  var Functions = (function (environment) {\n    var functions = {\n      functionRegistry: functionRegistry,\n      functionCaller: functionCaller\n    }; // register functions\n\n    functionRegistry.addMultiple(boolean$1);\n    functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n    functionRegistry.addMultiple(color);\n    functionRegistry.addMultiple(colorBlend);\n    functionRegistry.addMultiple(dataUri(environment));\n    functionRegistry.addMultiple(list);\n    functionRegistry.addMultiple(mathFunctions);\n    functionRegistry.addMultiple(number$1);\n    functionRegistry.addMultiple(string);\n    functionRegistry.addMultiple(svg());\n    functionRegistry.addMultiple(types);\n    return functions;\n  });\n\n  var sourceMapOutput = (function (environment) {\n    var SourceMapOutput =\n    /*#__PURE__*/\n    function () {\n      function SourceMapOutput(options) {\n        _classCallCheck(this, SourceMapOutput);\n\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n\n        if (options.sourceMapFilename) {\n          this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n\n        if (options.sourceMapBasepath) {\n          this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n\n        if (options.sourceMapRootpath) {\n          this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n\n          if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n            this._sourceMapRootpath += '/';\n          }\n        } else {\n          this._sourceMapRootpath = '';\n        }\n\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n        this._lineNumber = 0;\n        this._column = 0;\n      }\n\n      _createClass(SourceMapOutput, [{\n        key: \"removeBasepath\",\n        value: function removeBasepath(path) {\n          if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n            path = path.substring(this._sourceMapBasepath.length);\n\n            if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n              path = path.substring(1);\n            }\n          }\n\n          return path;\n        }\n      }, {\n        key: \"normalizeFilename\",\n        value: function normalizeFilename(filename) {\n          filename = filename.replace(/\\\\/g, '/');\n          filename = this.removeBasepath(filename);\n          return (this._sourceMapRootpath || '') + filename;\n        }\n      }, {\n        key: \"add\",\n        value: function add(chunk, fileInfo, index, mapLines) {\n          // ignore adding empty strings\n          if (!chunk) {\n            return;\n          }\n\n          var lines;\n          var sourceLines;\n          var columns;\n          var sourceColumns;\n          var i;\n\n          if (fileInfo && fileInfo.filename) {\n            var inputSource = this._contentsMap[fileInfo.filename]; // remove vars/banner added to the top of the file\n\n            if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n              // adjust the index\n              index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n\n              if (index < 0) {\n                index = 0;\n              } // adjust the source\n\n\n              inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n            } // ignore empty content\n\n\n            if (inputSource === undefined) {\n              return;\n            }\n\n            inputSource = inputSource.substring(0, index);\n            sourceLines = inputSource.split('\\n');\n            sourceColumns = sourceLines[sourceLines.length - 1];\n          }\n\n          lines = chunk.split('\\n');\n          columns = lines[lines.length - 1];\n\n          if (fileInfo && fileInfo.filename) {\n            if (!mapLines) {\n              this._sourceMapGenerator.addMapping({\n                generated: {\n                  line: this._lineNumber + 1,\n                  column: this._column\n                },\n                original: {\n                  line: sourceLines.length,\n                  column: sourceColumns.length\n                },\n                source: this.normalizeFilename(fileInfo.filename)\n              });\n            } else {\n              for (i = 0; i < lines.length; i++) {\n                this._sourceMapGenerator.addMapping({\n                  generated: {\n                    line: this._lineNumber + i + 1,\n                    column: i === 0 ? this._column : 0\n                  },\n                  original: {\n                    line: sourceLines.length + i,\n                    column: i === 0 ? sourceColumns.length : 0\n                  },\n                  source: this.normalizeFilename(fileInfo.filename)\n                });\n              }\n            }\n          }\n\n          if (lines.length === 1) {\n            this._column += columns.length;\n          } else {\n            this._lineNumber += lines.length - 1;\n            this._column = columns.length;\n          }\n\n          this._css.push(chunk);\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function isEmpty() {\n          return this._css.length === 0;\n        }\n      }, {\n        key: \"toCSS\",\n        value: function toCSS(context) {\n          this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({\n            file: this._outputFilename,\n            sourceRoot: null\n          });\n\n          if (this._outputSourceFiles) {\n            for (var filename in this._contentsMap) {\n              if (this._contentsMap.hasOwnProperty(filename)) {\n                var source = this._contentsMap[filename];\n\n                if (this._contentsIgnoredCharsMap[filename]) {\n                  source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                }\n\n                this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n              }\n            }\n          }\n\n          this._rootNode.genCSS(context, this);\n\n          if (this._css.length > 0) {\n            var sourceMapURL;\n            var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n            if (this.sourceMapURL) {\n              sourceMapURL = this.sourceMapURL;\n            } else if (this._sourceMapFilename) {\n              sourceMapURL = this._sourceMapFilename;\n            }\n\n            this.sourceMapURL = sourceMapURL;\n            this.sourceMap = sourceMapContent;\n          }\n\n          return this._css.join('');\n        }\n      }]);\n\n      return SourceMapOutput;\n    }();\n\n    return SourceMapOutput;\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\n    var SourceMapBuilder =\n    /*#__PURE__*/\n    function () {\n      function SourceMapBuilder(options) {\n        _classCallCheck(this, SourceMapBuilder);\n\n        this.options = options;\n      }\n\n      _createClass(SourceMapBuilder, [{\n        key: \"toCSS\",\n        value: function toCSS(rootNode, options, imports) {\n          var sourceMapOutput = new SourceMapOutput({\n            contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n            rootNode: rootNode,\n            contentsMap: imports.contents,\n            sourceMapFilename: this.options.sourceMapFilename,\n            sourceMapURL: this.options.sourceMapURL,\n            outputFilename: this.options.sourceMapOutputFilename,\n            sourceMapBasepath: this.options.sourceMapBasepath,\n            sourceMapRootpath: this.options.sourceMapRootpath,\n            outputSourceFiles: this.options.outputSourceFiles,\n            sourceMapGenerator: this.options.sourceMapGenerator,\n            sourceMapFileInline: this.options.sourceMapFileInline\n          });\n          var css = sourceMapOutput.toCSS(options);\n          this.sourceMap = sourceMapOutput.sourceMap;\n          this.sourceMapURL = sourceMapOutput.sourceMapURL;\n\n          if (this.options.sourceMapInputFilename) {\n            this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n          }\n\n          if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n            this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n          }\n\n          return css + this.getCSSAppendage();\n        }\n      }, {\n        key: \"getCSSAppendage\",\n        value: function getCSSAppendage() {\n          var sourceMapURL = this.sourceMapURL;\n\n          if (this.options.sourceMapFileInline) {\n            if (this.sourceMap === undefined) {\n              return '';\n            }\n\n            sourceMapURL = \"data:application/json;base64,\".concat(environment.encodeBase64(this.sourceMap));\n          }\n\n          if (sourceMapURL) {\n            return \"/*# sourceMappingURL=\".concat(sourceMapURL, \" */\");\n          }\n\n          return '';\n        }\n      }, {\n        key: \"getExternalSourceMap\",\n        value: function getExternalSourceMap() {\n          return this.sourceMap;\n        }\n      }, {\n        key: \"setExternalSourceMap\",\n        value: function setExternalSourceMap(sourceMap) {\n          this.sourceMap = sourceMap;\n        }\n      }, {\n        key: \"isInline\",\n        value: function isInline() {\n          return this.options.sourceMapFileInline;\n        }\n      }, {\n        key: \"getSourceMapURL\",\n        value: function getSourceMapURL() {\n          return this.sourceMapURL;\n        }\n      }, {\n        key: \"getOutputFilename\",\n        value: function getOutputFilename() {\n          return this.options.sourceMapOutputFilename;\n        }\n      }, {\n        key: \"getInputFilename\",\n        value: function getInputFilename() {\n          return this.sourceMapInputFilename;\n        }\n      }]);\n\n      return SourceMapBuilder;\n    }();\n\n    return SourceMapBuilder;\n  });\n\n  var transformTree = (function (root) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var evaldRoot;\n    var variables = options.variables;\n    var evalEnv = new contexts.Eval(options); //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n\n    if (_typeof(variables) === 'object' && !Array.isArray(variables)) {\n      variables = Object.keys(variables).map(function (k) {\n        var value = variables[k];\n\n        if (!(value instanceof tree.Value)) {\n          if (!(value instanceof tree.Expression)) {\n            value = new tree.Expression([value]);\n          }\n\n          value = new tree.Value([value]);\n        }\n\n        return new tree.Declaration(\"@\".concat(k), value, false, null, 0);\n      });\n      evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    var visitors$1 = [new visitors.JoinSelectorVisitor(), new visitors.MarkVisibleSelectorsVisitor(true), new visitors.ExtendVisitor(), new visitors.ToCSSVisitor({\n      compress: Boolean(options.compress)\n    })];\n    var preEvalVisitors = [];\n    var v;\n    var visitorIterator;\n    /**\n     * first() / get() allows visitors to be added while visiting\n     * \n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n     */\n\n    if (options.pluginManager) {\n      visitorIterator = options.pluginManager.visitor();\n\n      for (var i = 0; i < 2; i++) {\n        visitorIterator.first();\n\n        while (v = visitorIterator.get()) {\n          if (v.isPreEvalVisitor) {\n            if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n              preEvalVisitors.push(v);\n              v.run(root);\n            }\n          } else {\n            if (i === 0 || visitors$1.indexOf(v) === -1) {\n              if (v.isPreVisitor) {\n                visitors$1.unshift(v);\n              } else {\n                visitors$1.push(v);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors$1.length; i++) {\n      visitors$1[i].run(evaldRoot);\n    } // Run any remaining visitors added after eval pass\n\n\n    if (options.pluginManager) {\n      visitorIterator.first();\n\n      while (v = visitorIterator.get()) {\n        if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n          v.run(evaldRoot);\n        }\n      }\n    }\n\n    return evaldRoot;\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\n    var ParseTree =\n    /*#__PURE__*/\n    function () {\n      function ParseTree(root, imports) {\n        _classCallCheck(this, ParseTree);\n\n        this.root = root;\n        this.imports = imports;\n      }\n\n      _createClass(ParseTree, [{\n        key: \"toCSS\",\n        value: function toCSS(options) {\n          var evaldRoot;\n          var result = {};\n          var sourceMapBuilder;\n\n          try {\n            evaldRoot = transformTree(this.root, options);\n          } catch (e) {\n            throw new LessError(e, this.imports);\n          }\n\n          try {\n            var compress = Boolean(options.compress);\n\n            if (compress) {\n              logger.warn('The compress option has been deprecated. ' + 'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n            }\n\n            var toCSSOptions = {\n              compress: compress,\n              dumpLineNumbers: options.dumpLineNumbers,\n              strictUnits: Boolean(options.strictUnits),\n              numPrecision: 8\n            };\n\n            if (options.sourceMap) {\n              sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n              result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n            } else {\n              result.css = evaldRoot.toCSS(toCSSOptions);\n            }\n          } catch (e) {\n            throw new LessError(e, this.imports);\n          }\n\n          if (options.pluginManager) {\n            var postProcessors = options.pluginManager.getPostProcessors();\n\n            for (var i = 0; i < postProcessors.length; i++) {\n              result.css = postProcessors[i].process(result.css, {\n                sourceMap: sourceMapBuilder,\n                options: options,\n                imports: this.imports\n              });\n            }\n          }\n\n          if (options.sourceMap) {\n            result.map = sourceMapBuilder.getExternalSourceMap();\n          }\n\n          result.imports = [];\n\n          for (var file in this.imports.files) {\n            if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n              result.imports.push(file);\n            }\n          }\n\n          return result;\n        }\n      }]);\n\n      return ParseTree;\n    }();\n\n    return ParseTree;\n  });\n\n  var importManager = (function (environment) {\n    // FileInfo = {\n    //  'rewriteUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n    var ImportManager =\n    /*#__PURE__*/\n    function () {\n      function ImportManager(less, context, rootFileInfo) {\n        _classCallCheck(this, ImportManager);\n\n        this.less = less;\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || []; // Search paths, when importing\n\n        this.contents = {}; // map - filename to contents of all the files\n\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context; // Deprecated? Unused outside of here, could be useful.\n\n        this.queue = []; // Files which haven't been imported yet\n\n        this.files = {}; // Holds the imported parse trees.\n      }\n      /**\n       * Add an import to be imported\n       * @param path - the raw path\n       * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n       * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n       * @param importOptions - import options\n       * @param callback - callback for when it is imported\n       */\n\n\n      _createClass(ImportManager, [{\n        key: \"push\",\n        value: function push(path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n          var importManager = this;\n          var pluginLoader = this.context.pluginManager.Loader;\n          this.queue.push(path);\n\n          var fileParsedFunc = function fileParsedFunc(e, root, fullPath) {\n            importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n            var importedEqualsRoot = fullPath === importManager.rootFilename;\n\n            if (importOptions.optional && e) {\n              callback(null, {\n                rules: []\n              }, false, null);\n              logger.info(\"The file \".concat(fullPath, \" was skipped because it was not found and the import was marked optional.\"));\n            } else {\n              // Inline imports aren't cached here.\n              // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n              // same name as they used to do before this comment and the condition below have been added.\n              if (!importManager.files[fullPath] && !importOptions.inline) {\n                importManager.files[fullPath] = {\n                  root: root,\n                  options: importOptions\n                };\n              }\n\n              if (e && !importManager.error) {\n                importManager.error = e;\n              }\n\n              callback(e, root, importedEqualsRoot, fullPath);\n            }\n          };\n\n          var newFileInfo = {\n            rewriteUrls: this.context.rewriteUrls,\n            entryPath: currentFileInfo.entryPath,\n            rootpath: currentFileInfo.rootpath,\n            rootFilename: currentFileInfo.rootFilename\n          };\n          var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n          if (!fileManager) {\n            fileParsedFunc({\n              message: \"Could not find a file-manager for \".concat(path)\n            });\n            return;\n          }\n\n          var loadFileCallback = function loadFileCallback(loadedFile) {\n            var plugin;\n            var resolvedFilename = loadedFile.filename;\n            var contents = loadedFile.contents.replace(/^\\uFEFF/, ''); // Pass on an updated rootpath if path of imported file is relative and file\n            // is in a (sub|sup) directory\n            //\n            // Examples:\n            // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/module/nav/'\n            // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/../'\n\n            newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n\n            if (newFileInfo.rewriteUrls) {\n              newFileInfo.rootpath = fileManager.join(importManager.context.rootpath || '', fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n              if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n              }\n            }\n\n            newFileInfo.filename = resolvedFilename;\n            var newEnv = new contexts.Parse(importManager.context);\n            newEnv.processImports = false;\n            importManager.contents[resolvedFilename] = contents;\n\n            if (currentFileInfo.reference || importOptions.reference) {\n              newFileInfo.reference = true;\n            }\n\n            if (importOptions.isPlugin) {\n              plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n\n              if (plugin instanceof LessError) {\n                fileParsedFunc(plugin, null, resolvedFilename);\n              } else {\n                fileParsedFunc(null, plugin, resolvedFilename);\n              }\n            } else if (importOptions.inline) {\n              fileParsedFunc(null, contents, resolvedFilename);\n            } else {\n              // import (multiple) parse trees apparently get altered and can't be cached.\n              // TODO: investigate why this is\n              if (importManager.files[resolvedFilename] && !importManager.files[resolvedFilename].options.multiple && !importOptions.multiple) {\n                fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n              } else {\n                new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                  fileParsedFunc(e, root, resolvedFilename);\n                });\n              }\n            }\n          };\n\n          var promise;\n          var context = clone(this.context);\n\n          if (tryAppendExtension) {\n            context.ext = importOptions.isPlugin ? '.js' : '.less';\n          }\n\n          if (importOptions.isPlugin) {\n            context.mime = 'application/javascript';\n            promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n          } else {\n            promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n              if (err) {\n                fileParsedFunc(err);\n              } else {\n                loadFileCallback(loadedFile);\n              }\n            });\n          }\n\n          if (promise) {\n            promise.then(loadFileCallback, fileParsedFunc);\n          }\n        }\n      }]);\n\n      return ImportManager;\n    }();\n\n    return ImportManager;\n  });\n\n  var Render = (function (environment, ParseTree, ImportManager) {\n    var render = function render(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          render.call(self, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        this.parse(input, options, function (err, root, imports, options) {\n          if (err) {\n            return callback(err);\n          }\n\n          var result;\n\n          try {\n            var parseTree = new ParseTree(root, imports);\n            result = parseTree.toCSS(options);\n          } catch (err) {\n            return callback(err);\n          }\n\n          callback(null, result);\n        });\n      }\n    };\n\n    return render;\n  });\n\n  /**\n   * Plugin Manager\n   */\n  var PluginManager =\n  /*#__PURE__*/\n  function () {\n    function PluginManager(less) {\n      _classCallCheck(this, PluginManager);\n\n      this.less = less;\n      this.visitors = [];\n      this.preProcessors = [];\n      this.postProcessors = [];\n      this.installedPlugins = [];\n      this.fileManagers = [];\n      this.iterator = -1;\n      this.pluginCache = {};\n      this.Loader = new less.PluginLoader(less);\n    }\n    /**\n     * Adds all the plugins in the array\n     * @param {Array} plugins\n     */\n\n\n    _createClass(PluginManager, [{\n      key: \"addPlugins\",\n      value: function addPlugins(plugins) {\n        if (plugins) {\n          for (var i = 0; i < plugins.length; i++) {\n            this.addPlugin(plugins[i]);\n          }\n        }\n      }\n      /**\n       *\n       * @param plugin\n       * @param {String} filename\n       */\n\n    }, {\n      key: \"addPlugin\",\n      value: function addPlugin(plugin, filename, functionRegistry) {\n        this.installedPlugins.push(plugin);\n\n        if (filename) {\n          this.pluginCache[filename] = plugin;\n        }\n\n        if (plugin.install) {\n          plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n        }\n      }\n      /**\n       *\n       * @param filename\n       */\n\n    }, {\n      key: \"get\",\n      value: function get(filename) {\n        return this.pluginCache[filename];\n      }\n      /**\n       * Adds a visitor. The visitor object has options on itself to determine\n       * when it should run.\n       * @param visitor\n       */\n\n    }, {\n      key: \"addVisitor\",\n      value: function addVisitor(visitor) {\n        this.visitors.push(visitor);\n      }\n      /**\n       * Adds a pre processor object\n       * @param {object} preProcessor\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n       */\n\n    }, {\n      key: \"addPreProcessor\",\n      value: function addPreProcessor(preProcessor, priority) {\n        var indexToInsertAt;\n\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n          if (this.preProcessors[indexToInsertAt].priority >= priority) {\n            break;\n          }\n        }\n\n        this.preProcessors.splice(indexToInsertAt, 0, {\n          preProcessor: preProcessor,\n          priority: priority\n        });\n      }\n      /**\n       * Adds a post processor object\n       * @param {object} postProcessor\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n       */\n\n    }, {\n      key: \"addPostProcessor\",\n      value: function addPostProcessor(postProcessor, priority) {\n        var indexToInsertAt;\n\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n          if (this.postProcessors[indexToInsertAt].priority >= priority) {\n            break;\n          }\n        }\n\n        this.postProcessors.splice(indexToInsertAt, 0, {\n          postProcessor: postProcessor,\n          priority: priority\n        });\n      }\n      /**\n       *\n       * @param manager\n       */\n\n    }, {\n      key: \"addFileManager\",\n      value: function addFileManager(manager) {\n        this.fileManagers.push(manager);\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getPreProcessors\",\n      value: function getPreProcessors() {\n        var preProcessors = [];\n\n        for (var i = 0; i < this.preProcessors.length; i++) {\n          preProcessors.push(this.preProcessors[i].preProcessor);\n        }\n\n        return preProcessors;\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getPostProcessors\",\n      value: function getPostProcessors() {\n        var postProcessors = [];\n\n        for (var i = 0; i < this.postProcessors.length; i++) {\n          postProcessors.push(this.postProcessors[i].postProcessor);\n        }\n\n        return postProcessors;\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getVisitors\",\n      value: function getVisitors() {\n        return this.visitors;\n      }\n    }, {\n      key: \"visitor\",\n      value: function visitor() {\n        var self = this;\n        return {\n          first: function first() {\n            self.iterator = -1;\n            return self.visitors[self.iterator];\n          },\n          get: function get() {\n            self.iterator += 1;\n            return self.visitors[self.iterator];\n          }\n        };\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getFileManagers\",\n      value: function getFileManagers() {\n        return this.fileManagers;\n      }\n    }]);\n\n    return PluginManager;\n  }();\n\n  var pm;\n\n  function PluginManagerFactory(less, newFactory) {\n    if (newFactory || !pm) {\n      pm = new PluginManager(less);\n    }\n\n    return pm;\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\n    var parse = function parse(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          parse.call(self, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        var context;\n        var rootFileInfo;\n        var pluginManager = new PluginManagerFactory(this, !options.reUsePluginManager);\n        options.pluginManager = pluginManager;\n        context = new contexts.Parse(options);\n\n        if (options.rootFileInfo) {\n          rootFileInfo = options.rootFileInfo;\n        } else {\n          var filename = options.filename || 'input';\n          var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n          rootFileInfo = {\n            filename: filename,\n            rewriteUrls: context.rewriteUrls,\n            rootpath: context.rootpath || '',\n            currentDirectory: entryPath,\n            entryPath: entryPath,\n            rootFilename: filename\n          }; // add in a missing trailing slash\n\n          if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n            rootFileInfo.rootpath += '/';\n          }\n        }\n\n        var imports = new ImportManager(this, context, rootFileInfo);\n        this.importManager = imports; // TODO: allow the plugins to be just a list of paths or names\n        // Do an async plugin queue like lessc\n\n        if (options.plugins) {\n          options.plugins.forEach(function (plugin) {\n            var evalResult;\n            var contents;\n\n            if (plugin.fileContent) {\n              contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n              evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n\n              if (evalResult instanceof LessError) {\n                return callback(evalResult);\n              }\n            } else {\n              pluginManager.addPlugin(plugin);\n            }\n          });\n        }\n\n        new Parser(context, imports, rootFileInfo).parse(input, function (e, root) {\n          if (e) {\n            return callback(e);\n          }\n\n          callback(null, root, imports, options);\n        }, options);\n      }\n    };\n\n    return parse;\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\n    /**\n     * @todo\n     * This original code could be improved quite a bit.\n     * Many classes / modules currently add side-effects / mutations to passed in objects,\n     * which makes it hard to refactor and reason about. \n     */\n    environment$1 = new environment(environment$1, fileManagers);\n    var SourceMapOutput = sourceMapOutput(environment$1);\n    var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\n    var ParseTree = parseTree(SourceMapBuilder);\n    var ImportManager = importManager(environment$1);\n    var render = Render(environment$1, ParseTree);\n    var parse = Parse(environment$1, ParseTree, ImportManager);\n    var functions = Functions(environment$1);\n    /**\n     * @todo\n     * This root properties / methods need to be organized.\n     * It's not clear what should / must be public and why.\n     */\n\n    var initial = {\n      version: [3, 10, 3],\n      data: data,\n      tree: tree,\n      Environment: environment,\n      AbstractFileManager: AbstractFileManager,\n      AbstractPluginLoader: AbstractPluginLoader,\n      environment: environment$1,\n      visitors: visitors,\n      Parser: Parser,\n      functions: functions,\n      contexts: contexts,\n      SourceMapOutput: SourceMapOutput,\n      SourceMapBuilder: SourceMapBuilder,\n      ParseTree: ParseTree,\n      ImportManager: ImportManager,\n      render: render,\n      parse: parse,\n      LessError: LessError,\n      transformTree: transformTree,\n      utils: utils,\n      PluginManager: PluginManagerFactory,\n      logger: logger\n    }; // Create a public API\n\n    var ctor = function ctor(t) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _construct(t, args);\n      };\n    };\n\n    var t;\n    var api = Object.create(initial);\n\n    for (var n in initial.tree) {\n      /* eslint guard-for-in: 0 */\n      t = initial.tree[n];\n\n      if (typeof t === 'function') {\n        api[n.toLowerCase()] = ctor(t);\n      } else {\n        api[n] = Object.create(null);\n\n        for (var o in t) {\n          /* eslint guard-for-in: 0 */\n          api[n][o.toLowerCase()] = ctor(t[o]);\n        }\n      }\n    }\n\n    return api;\n  });\n\n  var options;\n  var logger$1;\n  var fileCache = {}; // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n\n  var FileManager =\n  /*#__PURE__*/\n  function (_AbstractFileManager) {\n    _inherits(FileManager, _AbstractFileManager);\n\n    function FileManager() {\n      _classCallCheck(this, FileManager);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(FileManager).apply(this, arguments));\n    }\n\n    _createClass(FileManager, [{\n      key: \"alwaysMakePathsAbsolute\",\n      value: function alwaysMakePathsAbsolute() {\n        return true;\n      }\n    }, {\n      key: \"join\",\n      value: function join(basePath, laterPath) {\n        if (!basePath) {\n          return laterPath;\n        }\n\n        return this.extractUrlParts(laterPath, basePath).path;\n      }\n    }, {\n      key: \"doXHR\",\n      value: function doXHR(url, type, callback, errback) {\n        var xhr = new XMLHttpRequest();\n        var async = options.isFileProtocol ? options.fileAsync : true;\n\n        if (typeof xhr.overrideMimeType === 'function') {\n          xhr.overrideMimeType('text/css');\n        }\n\n        logger$1.debug(\"XHR: Getting '\".concat(url, \"'\"));\n        xhr.open('GET', url, async);\n        xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n        xhr.send(null);\n\n        function handleResponse(xhr, callback, errback) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n          } else if (typeof errback === 'function') {\n            errback(xhr.status, url);\n          }\n        }\n\n        if (options.isFileProtocol && !options.fileAsync) {\n          if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300) {\n            callback(xhr.responseText);\n          } else {\n            errback(xhr.status, url);\n          }\n        } else if (async) {\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n              handleResponse(xhr, callback, errback);\n            }\n          };\n        } else {\n          handleResponse(xhr, callback, errback);\n        }\n      }\n    }, {\n      key: \"supports\",\n      value: function supports() {\n        return true;\n      }\n    }, {\n      key: \"clearFileCache\",\n      value: function clearFileCache() {\n        fileCache = {};\n      }\n    }, {\n      key: \"loadFile\",\n      value: function loadFile(filename, currentDirectory, options, environment) {\n        // TODO: Add prefix support like less-node?\n        // What about multiple paths?\n        if (currentDirectory && !this.isPathAbsolute(filename)) {\n          filename = currentDirectory + filename;\n        }\n\n        filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n        options = options || {}; // sheet may be set to the stylesheet for the initial load or a collection of properties including\n        // some context variables for imports\n\n        var hrefParts = this.extractUrlParts(filename, window.location.href);\n        var href = hrefParts.url;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          if (options.useFileCache && fileCache[href]) {\n            try {\n              var lessText = fileCache[href];\n              return resolve({\n                contents: lessText,\n                filename: href,\n                webInfo: {\n                  lastModified: new Date()\n                }\n              });\n            } catch (e) {\n              return reject({\n                filename: href,\n                message: \"Error loading file \".concat(href, \" error was \").concat(e.message)\n              });\n            }\n          }\n\n          self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n            // per file cache\n            fileCache[href] = data; // Use remote copy (re-parse)\n\n            resolve({\n              contents: data,\n              filename: href,\n              webInfo: {\n                lastModified: lastModified\n              }\n            });\n          }, function doXHRError(status, url) {\n            reject({\n              type: 'File',\n              message: \"'\".concat(url, \"' wasn't found (\").concat(status, \")\"),\n              href: href\n            });\n          });\n        });\n      }\n    }]);\n\n    return FileManager;\n  }(AbstractFileManager);\n\n  var FM = (function (opts, log) {\n    options = opts;\n    logger$1 = log;\n    return FileManager;\n  });\n\n  /**\n   * Browser Plugin Loader\n   */\n\n  var PluginLoader =\n  /*#__PURE__*/\n  function (_AbstractPluginLoader) {\n    _inherits(PluginLoader, _AbstractPluginLoader);\n\n    function PluginLoader(less) {\n      var _this;\n\n      _classCallCheck(this, PluginLoader);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(PluginLoader).call(this));\n      _this.less = less; // Should we shim this.require for browser? Probably not?\n\n      return _this;\n    }\n\n    _createClass(PluginLoader, [{\n      key: \"loadPlugin\",\n      value: function loadPlugin(filename, basePath, context, environment, fileManager) {\n        return new Promise(function (fulfill, reject) {\n          fileManager.loadFile(filename, basePath, context, environment).then(fulfill).catch(reject);\n        });\n      }\n    }]);\n\n    return PluginLoader;\n  }(AbstractPluginLoader);\n\n  var LogListener = (function (less, options) {\n    var logLevel_debug = 4;\n    var logLevel_info = 3;\n    var logLevel_warn = 2;\n    var logLevel_error = 1; // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : options.env === 'development' ? logLevel_info : logLevel_error;\n\n    if (!options.loggers) {\n      options.loggers = [{\n        debug: function debug(msg) {\n          if (options.logLevel >= logLevel_debug) {\n            console.log(msg);\n          }\n        },\n        info: function info(msg) {\n          if (options.logLevel >= logLevel_info) {\n            console.log(msg);\n          }\n        },\n        warn: function warn(msg) {\n          if (options.logLevel >= logLevel_warn) {\n            console.warn(msg);\n          }\n        },\n        error: function error(msg) {\n          if (options.logLevel >= logLevel_error) {\n            console.error(msg);\n          }\n        }\n      }];\n    }\n\n    for (var i = 0; i < options.loggers.length; i++) {\n      less.logger.addListener(options.loggers[i]);\n    }\n  });\n\n  var ErrorReporting = (function (window, less, options) {\n    function errorHTML(e, rootHref) {\n      var id = \"less-error-message:\".concat(extractId(rootHref || ''));\n      var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n      var elem = window.document.createElement('div');\n      var timer;\n      var content;\n      var errors = [];\n      var filename = e.filename || rootHref;\n      var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n      elem.id = id;\n      elem.className = 'less-error-message';\n      content = \"<h3>\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file') + \"</h3><p>in <a href=\\\"\".concat(filename, \"\\\">\").concat(filenameNoPath, \"</a> \");\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \"on line \".concat(e.line, \", column \").concat(e.column + 1, \":</p><ul>\").concat(errors.join(''), \"</ul>\");\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"<br/>Stack Trace</br />\".concat(e.stack.split('\\n').slice(1).join('<br/>'));\n      }\n\n      elem.innerHTML = content; // CSS for error messages\n\n      browser.createCSS(window.document, ['.less-error-message ul, .less-error-message li {', 'list-style-type: none;', 'margin-right: 15px;', 'padding: 4px 0;', 'margin: 0;', '}', '.less-error-message label {', 'font-size: 12px;', 'margin-right: 15px;', 'padding: 4px 0;', 'color: #cc7777;', '}', '.less-error-message pre {', 'color: #dd6666;', 'padding: 4px 0;', 'margin: 0;', 'display: inline-block;', '}', '.less-error-message pre.line {', 'color: #ff0000;', '}', '.less-error-message h3 {', 'font-size: 20px;', 'font-weight: bold;', 'padding: 15px 0 5px 0;', 'margin: 0;', '}', '.less-error-message a {', 'color: #10a', '}', '.less-error-message .error {', 'color: red;', 'font-weight: bold;', 'padding-bottom: 2px;', 'border-bottom: 1px dashed red;', '}'].join('\\n'), {\n        title: 'error-message'\n      });\n      elem.style.cssText = ['font-family: Arial, sans-serif', 'border: 1px solid #e00', 'background-color: #eee', 'border-radius: 5px', '-webkit-border-radius: 5px', '-moz-border-radius: 5px', 'color: #e00', 'padding: 15px', 'margin-bottom: 15px'].join(';');\n\n      if (options.env === 'development') {\n        timer = setInterval(function () {\n          var document = window.document;\n          var body = document.body;\n\n          if (body) {\n            if (document.getElementById(id)) {\n              body.replaceChild(elem, document.getElementById(id));\n            } else {\n              body.insertBefore(elem, body.firstChild);\n            }\n\n            clearInterval(timer);\n          }\n        }, 10);\n      }\n    }\n\n    function removeErrorHTML(path) {\n      var node = window.document.getElementById(\"less-error-message:\".concat(extractId(path)));\n\n      if (node) {\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    function removeError(path) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        removeErrorHTML(path);\n      } else if (options.errorReporting === 'console') ; else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('remove', path);\n      }\n    }\n\n    function errorConsole(e, rootHref) {\n      var template = '{line} {content}';\n      var filename = e.filename || rootHref;\n      var errors = [];\n      var content = \"\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file', \" in \").concat(filename);\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \" on line \".concat(e.line, \", column \").concat(e.column + 1, \":\\n\").concat(errors.join('\\n'));\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"\\nStack Trace\\n\".concat(e.stack);\n      }\n\n      less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        errorHTML(e, rootHref);\n      } else if (options.errorReporting === 'console') {\n        errorConsole(e, rootHref);\n      } else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('add', e, rootHref);\n      }\n    }\n\n    return {\n      add: error,\n      remove: removeError\n    };\n  });\n\n  // Cache system is a bit outdated and could do with work\n  var Cache = (function (window, options, logger) {\n    var cache = null;\n\n    if (options.env !== 'development') {\n      try {\n        cache = typeof window.localStorage === 'undefined' ? null : window.localStorage;\n      } catch (_) {}\n    }\n\n    return {\n      setCSS: function setCSS(path, lastModified, modifyVars, styles) {\n        if (cache) {\n          logger.info(\"saving \".concat(path, \" to cache.\"));\n\n          try {\n            cache.setItem(path, styles);\n            cache.setItem(\"\".concat(path, \":timestamp\"), lastModified);\n\n            if (modifyVars) {\n              cache.setItem(\"\".concat(path, \":vars\"), JSON.stringify(modifyVars));\n            }\n          } catch (e) {\n            // TODO - could do with adding more robust error handling\n            logger.error(\"failed to save \\\"\".concat(path, \"\\\" to local storage for caching.\"));\n          }\n        }\n      },\n      getCSS: function getCSS(path, webInfo, modifyVars) {\n        var css = cache && cache.getItem(path);\n        var timestamp = cache && cache.getItem(\"\".concat(path, \":timestamp\"));\n        var vars = cache && cache.getItem(\"\".concat(path, \":vars\"));\n        modifyVars = modifyVars || {};\n        vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n\n        if (timestamp && webInfo.lastModified && new Date(webInfo.lastModified).valueOf() === new Date(timestamp).valueOf() && JSON.stringify(modifyVars) === vars) {\n          // Use local copy\n          return css;\n        }\n      }\n    };\n  });\n\n  var ImageSize = (function () {\n    function _imageSize() {\n      throw {\n        type: 'Runtime',\n        message: 'Image size functions are not supported in browser version of less'\n      };\n    }\n\n    var imageFunctions = {\n      'image-size': function imageSize(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-width': function imageWidth(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-height': function imageHeight(filePathNode) {\n        _imageSize();\n\n        return -1;\n      }\n    };\n    functionRegistry.addMultiple(imageFunctions);\n  });\n\n  //\n  var root = (function (window, options) {\n    var document = window.document;\n    var less = lessRoot();\n    less.options = options;\n    var environment = less.environment;\n    var FileManager = FM(options, less.logger);\n    var fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = PluginLoader;\n    LogListener(less, options);\n    var errors = ErrorReporting(window, less, options);\n    var cache = less.cache = options.cache || Cache(window, options, less.logger);\n    ImageSize(less.environment); // Setup user functions - Deprecate?\n\n    if (options.functions) {\n      less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    var typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n      var cloned = {};\n\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          cloned[prop] = obj[prop];\n        }\n      }\n\n      return cloned;\n    } // only really needed for phantom\n\n\n    function bind(func, thisArg) {\n      var curryArgs = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n        return func.apply(thisArg, args);\n      };\n    }\n\n    function loadStyles(modifyVars) {\n      var styles = document.getElementsByTagName('style');\n      var style;\n\n      for (var i = 0; i < styles.length; i++) {\n        style = styles[i];\n\n        if (style.type.match(typePattern)) {\n          var instanceOptions = clone(options);\n          instanceOptions.modifyVars = modifyVars;\n          var lessText = style.innerHTML || '';\n          instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n          /* jshint loopfunc:true */\n          // use closure to store current style\n\n          less.render(lessText, instanceOptions, bind(function (style, e, result) {\n            if (e) {\n              errors.add(e, 'inline');\n            } else {\n              style.type = 'text/css';\n\n              if (style.styleSheet) {\n                style.styleSheet.cssText = result.css;\n              } else {\n                style.innerHTML = result.css;\n              }\n            }\n          }, null, style));\n        }\n      }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n      var instanceOptions = clone(options);\n      addDataAttr(instanceOptions, sheet);\n      instanceOptions.mime = sheet.type;\n\n      if (modifyVars) {\n        instanceOptions.modifyVars = modifyVars;\n      }\n\n      function loadInitialFileCallback(loadedFile) {\n        var data = loadedFile.contents;\n        var path = loadedFile.filename;\n        var webInfo = loadedFile.webInfo;\n        var newFileInfo = {\n          currentDirectory: fileManager.getPath(path),\n          filename: path,\n          rootFilename: path,\n          rewriteUrls: instanceOptions.rewriteUrls\n        };\n        newFileInfo.entryPath = newFileInfo.currentDirectory;\n        newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n        if (webInfo) {\n          webInfo.remaining = remaining;\n          var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n\n          if (!reload && css) {\n            webInfo.local = true;\n            callback(null, css, data, sheet, webInfo, path);\n            return;\n          }\n        } // TODO add tests around how this behaves when reloading\n\n\n        errors.remove(path);\n        instanceOptions.rootFileInfo = newFileInfo;\n        less.render(data, instanceOptions, function (e, result) {\n          if (e) {\n            e.href = path;\n            callback(e);\n          } else {\n            cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n            callback(null, result.css, data, sheet, webInfo, path);\n          }\n        });\n      }\n\n      fileManager.loadFile(sheet.href, null, instanceOptions, environment).then(function (loadedFile) {\n        loadInitialFileCallback(loadedFile);\n      }).catch(function (err) {\n        console.log(err);\n        callback(err);\n      });\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n      for (var i = 0; i < less.sheets.length; i++) {\n        loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n      }\n    }\n\n    function initRunningMode() {\n      if (less.env === 'development') {\n        less.watchTimer = setInterval(function () {\n          if (less.watchMode) {\n            fileManager.clearFileCache();\n            loadStyleSheets(function (e, css, _, sheet, webInfo) {\n              if (e) {\n                errors.add(e, e.href || sheet.href);\n              } else if (css) {\n                browser.createCSS(window.document, css, sheet);\n              }\n            });\n          }\n        }, options.poll);\n      }\n    } //\n    // Watch mode\n    //\n\n\n    less.watch = function () {\n      if (!less.watchMode) {\n        less.env = 'development';\n        initRunningMode();\n      }\n\n      this.watchMode = true;\n      return true;\n    };\n\n    less.unwatch = function () {\n      clearInterval(less.watchTimer);\n      this.watchMode = false;\n      return false;\n    }; //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n\n\n    less.registerStylesheetsImmediately = function () {\n      var links = document.getElementsByTagName('link');\n      less.sheets = [];\n\n      for (var i = 0; i < links.length; i++) {\n        if (links[i].rel === 'stylesheet/less' || links[i].rel.match(/stylesheet/) && links[i].type.match(typePattern)) {\n          less.sheets.push(links[i]);\n        }\n      }\n    }; //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n\n\n    less.registerStylesheets = function () {\n      return new Promise(function (resolve, reject) {\n        less.registerStylesheetsImmediately();\n        resolve();\n      });\n    }; //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n\n\n    less.modifyVars = function (record) {\n      return less.refresh(true, record, false);\n    };\n\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n      if ((reload || clearFileCache) && clearFileCache !== false) {\n        fileManager.clearFileCache();\n      }\n\n      return new Promise(function (resolve, reject) {\n        var startTime;\n        var endTime;\n        var totalMilliseconds;\n        var remainingSheets;\n        startTime = endTime = new Date(); // Set counter for remaining unprocessed sheets\n\n        remainingSheets = less.sheets.length;\n\n        if (remainingSheets === 0) {\n          endTime = new Date();\n          totalMilliseconds = endTime - startTime;\n          less.logger.info('Less has finished and no sheets were loaded.');\n          resolve({\n            startTime: startTime,\n            endTime: endTime,\n            totalMilliseconds: totalMilliseconds,\n            sheets: less.sheets.length\n          });\n        } else {\n          // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n          loadStyleSheets(function (e, css, _, sheet, webInfo) {\n            if (e) {\n              errors.add(e, e.href || sheet.href);\n              reject(e);\n              return;\n            }\n\n            if (webInfo.local) {\n              less.logger.info(\"Loading \".concat(sheet.href, \" from cache.\"));\n            } else {\n              less.logger.info(\"Rendered \".concat(sheet.href, \" successfully.\"));\n            }\n\n            browser.createCSS(window.document, css, sheet);\n            less.logger.info(\"CSS for \".concat(sheet.href, \" generated in \").concat(new Date() - endTime, \"ms\")); // Count completed sheet\n\n            remainingSheets--; // Check if the last remaining sheet was processed and then call the promise\n\n            if (remainingSheets === 0) {\n              totalMilliseconds = new Date() - startTime;\n              less.logger.info(\"Less has finished. CSS generated in \".concat(totalMilliseconds, \"ms\"));\n              resolve({\n                startTime: startTime,\n                endTime: endTime,\n                totalMilliseconds: totalMilliseconds,\n                sheets: less.sheets.length\n              });\n            }\n\n            endTime = new Date();\n          }, reload, modifyVars);\n        }\n\n        loadStyles(modifyVars);\n      });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n  });\n\n  /**\n   * Kicks off less and compiles any stylesheets\n   * used in the browser distributed version of less\n   * to kick-start less using the browser api\n   */\n  var options$1 = defaultOptions();\n\n  if (window.less) {\n    for (var key in window.less) {\n      if (window.less.hasOwnProperty(key)) {\n        options$1[key] = window.less[key];\n      }\n    }\n  }\n\n  addDefaultOptions(window, options$1);\n  options$1.plugins = options$1.plugins || [];\n\n  if (window.LESS_PLUGINS) {\n    options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\n  }\n\n  var less = root(window, options$1);\n  window.less = less;\n  var css;\n  var head;\n  var style; // Always restore page visibility\n\n  function resolveOrReject(data) {\n    if (data.filename) {\n      console.warn(data);\n    }\n\n    if (!options$1.async) {\n      head.removeChild(style);\n    }\n  }\n\n  if (options$1.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n      less.watch();\n    } // Simulate synchronous stylesheet loading by hiding page rendering\n\n\n    if (!options$1.async) {\n      css = 'body { display: none !important }';\n      head = document.head || document.getElementsByTagName('head')[0];\n      style = document.createElement('style');\n      style.type = 'text/css';\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n  }\n\n  return less;\n\n}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"HDXh\").Buffer))\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/eyasu/Desktop/leanbits/Heineken-SalesTraining-Dashboard/node_modules/less/dist/less.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACkD;AACpD,CAAC,oBAAoB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;;AAElC,8DAA8D;;AAE9D;AACA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,+DAA+D;;AAE/D;AACA;;AAEA,0DAA0D,6CAA6C;AACvG;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,gBAAgB;;AAEnwDAAwD;;AAExD;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,OAAO;AACP;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,YAAY,EAAE;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,YAAY;AACpD;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,kGAAkG;AAClG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,SAAS;;;AAGT;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,SAAS;AAC7C;AACA;AACA;;AAEA;AACA,KAAK,KAAK,KAAK,0DAA0D;AACzE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX,qBAAqB,YAAY;AACjC;;AAEA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,2BAA2B;;;AAGpC;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA,qFAAqF;;AAErF,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;;;AAGT,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,SAAS;;;AAGT,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,yBAAyB;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,wGAAwG;;AAExG;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC,OAAO;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,2BAA2B;AACtD;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,wBAAwB;AAC3D;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,uDAAuD;AACvD,4BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA;;AAEA,2CAA2C,OAAO;AAClD,SAAS;;;AAGT,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,0CAA0C,6BAA6B;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA,uBAAuB,0BAA0B;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA,gCAAgC;;AAEhC,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO,OAAO;AACnD;AACA;;AAEA;AACA;AACA,aAAa;;;AAGb;AACA;AACA,WAAW;;;AAGX;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;;AAEA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;;;AAGX,+BAA+B;AAC/B;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE,2BAA2B,wBAAwB;AACnD;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb,uCAAuC;;AAEvC,uCAAuC;AACvC;;AAEA,wEAAwE;;AAExE,yBAAyB,yBAAyB;AAClD,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA,kGAAkG;;AAElG;AACA;AACA;AACA,eAAe;;;AAGf;AACA;AACA;AACA,WAAW;AACX;;;AAGA;;AAEA,qBAAqB,yBAAyB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA,gDAAgD;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6EAA6E,aAAa;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA,uBAAuB;;AAEvB,qBAAqB,aAAa;AAClC;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C,SAAS;AACT,wBAAwB;AACxB;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA,4CAA4C;AAC5C;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;;AAEA,mBAAmB,6BAA6B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA,aAAa;AACb,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,+EAA+E;AAC1F;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;;AAGb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,gBAAgB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,gBAAgB;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C,6BAA6B,UAAU;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA,WAAW;;;AAGX;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD,mBAAmB,iBAAiB;AACpC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;;AAEX,mCAAmC,OAAO;AAC1C;AACA;;AAEA;AACA,SAAS;AACT,4CAA4C;;AAE5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA,yBAAyB,iBAAiB;AAC1C,2BAA2B,mBAAmB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,UAAU;AACtD;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC,mDAAmD;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;;AAEA;AACA;;AAEA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gCAAgC,gBAAgB;AAChD;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;;AAEA,uBAAuB,4CAA4C;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;;AAEA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,6CAA6C,QAAQ;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC;AACjC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,mCAAmC;AACtD;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE;;AAEtE,qBAAqB,2BAA2B;AAChD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA,WAAW;;;AAGX;AACA,6DAA6D;;AAE7D;;AAEA;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,oBAAoB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA,SAAS;;;AAGT;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8CAA8C,eAAe;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,aAAa;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;;;AAGT,8BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;;AAE5C;AACA;;AAEA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,+CAA+C;AAC/C,WAAW;;AAEX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;;AAEA,6BAA6B,kCAAkC;AAC/D,qCAAqC,8CAA8C;AACnF;AACA,gEAAgE;;AAEhE;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA,4CAA4C;;AAE5C;AACA,yDAAyD;;AAEzD,oHAAoH;;AAEpH;AACA,sDAAsD;;AAEtD,6EAA6E;;AAE7E;AACA,yDAAyD;;AAEzD,+GAA+G;AAC/G;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD,gCAAgC,oBAAoB;;AAEpD;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,WAAW;AACX;;;AAGA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,6BAA6B,iCAAiC;AAC9D,6BAA6B,sCAAsC;AACnE,wDAAwD;;AAExD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB,uCAAuC,qDAAqD;AAC5F;;AAEA,yCAAyC,2DAA2D;AACpG,gFAAgF;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA,uBAAuB,6BAA6B;AACpD,mDAAmD;AACnD;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;;;AAGf;AACA;AACA,eAAe;AACf;AACA,eAAe;;;AAGf;AACA;;AAEA;AACA;AACA;AACA,eAAe;;;AAGf;AACA;AACA;AACA;AACA,iFAAiF;;AAEjF,8CAA8C;;AAE9C;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,mCAAmC;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,6BAA6B;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,+DAA+D;AAC/D;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;;;AAG/C;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,2BAA2B;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,2BAA2B;AACxF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+DAA+D,2BAA2B;AAC1F;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,+DAA+D,+BAA+B;AAC9F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP,uCAAuC;AACvC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,0BAA0B;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;;AAE5B,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB;AACnB,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;;AAE9C;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;;AAE1C;AACA,kDAAkD;AAClD;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C,wDAAwD;AACxD,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;;AAGb;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,IAAI;;AAEjG;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX,sDAAsD,QAAQ;AAC9D;AACA;AACA;;AAEA,mFAAmF,UAAU;AAC7F;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,uDAAuD,QAAQ;AAC/D;AACA;AACA;;AAEA,oFAAoF,UAAU;AAC9F;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4FAA4F,EAAE,aAAa,EAAE,aAAa,IAAI;AAC9H;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;;AAEX;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,IAAI;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA,2CAA2C,SAAS;;AAEpD;AACA;AACA,qCAAqC;AACrC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gHAAgH,IAAI;AACpH;AACA;;AAEA;AACA,qEAAqE,IAAI;;AAEzE;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE;AAC9D;AACA;AACA,iCAAiC,WAAW;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iDAAiD,IAAI;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8EAA8E;AAC9E;AACA,4BAA4B;AAC5B;AACA;AACA,qCAAqC,yBAAyB;AAC9D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,gCAAgC;AACvD;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4HAA4H,IAAI;;AAEhI;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA,wBAAwB,aAAa,aAAa;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,mEAAmE;AACnE;AACA;AACA;;AAEA,kCAAkC,wDAAwD;AAC1F;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE;;AAEzE;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,sCAAsC;;AAE3E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,2DAA2D,KAAK;;AAEhE;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,aAAa;;;AAGb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;;;AAGjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW;AACX,8CAA8C;AAC9C,uDAAuD;;AAEvD;AACA,+DAA+D;AAC/D;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qHAAqH,WAAW;AAChI;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,iDAAiD,EAAE,aAAa,EAAE,aAAa,IAAI;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT,wBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,wBAAwB,eAAe;AACvC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB,eAAe,iBAAiB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,yEAAyE,aAAa;AACtF;AACA;;AAEA;AACA,KAAK;AACL;AACA,4EAA4E,eAAe;AAC3F;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,yHAAyH;AACzH,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE;;AAEnE;AACA;AACA;;AAEA;AACA;AACA,eAAe;;;AAGf;AACA,aAAa;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,eAAe;AACf,aAAa;AACb,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;;AAEzC,2BAA2B;;AAE3B,uCAAuC;;AAEvC;AACA;AACA,+BAA+B;;AAE/B,wBAAwB;;AAExB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;;AAE7E;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,OAAO;AACP,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,iCAAiC,6CAA6C;AAC9E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB,gCAAgC;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,OAAO;AACP,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,2EAA2E,aAAa;AACxF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE,YAAY;AAClF;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kCAAkC,KAAK,qBAAqB,MAAM,GAAG,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,MAAM,qDAAqD,OAAO,yBAAyB,SAAS;AAC9I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B;;AAE/B,2FAA2F,0BAA0B,uBAAuB,mBAAmB,cAAc,KAAK,+BAA+B,oBAAoB,uBAAuB,mBAAmB,mBAAmB,KAAK,6BAA6B,mBAAmB,mBAAmB,cAAc,0BAA0B,KAAK,kCAAkC,mBAAmB,KAAK,4BAA4B,oBAAoB,sBAAsB,0BAA0B,cAAc,KAAK,2BAA2B,oBAAoB,gCAAgC,eAAe,sBAAsB,wBAAwB,kCAAkC,KAAK;AACvvB;AACA,OAAO;AACP,+PAA+P;;AAE/P;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,iDAAiD;AACxD;AACA;AACA;;AAEA;AACA,uBAAuB,KAAK,EAAE,QAAQ;AACtC;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,MAAM,qDAAqD,OAAO,yBAAyB,SAAS;AAC9I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,iHAAiH;;AAEjH,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC","file":"x","sourcesContent":["/**\n * Less - Leaner CSS v3.10.3\n * http://lesscss.org\n * \n * Copyright (c) 2009-2019, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.less = factory());\n}(this, function () { 'use strict';\n\n  // Export a new default each time\n  var defaultOptions = (function () {\n    return {\n      /* Inline Javascript - @plugin still allowed */\n      javascriptEnabled: false,\n\n      /* Outputs a makefile import dependency list to stdout. */\n      depends: false,\n\n      /* (DEPRECATED) Compress using less built-in compression. \n      * This does an okay job but does not utilise all the tricks of \n      * dedicated css compression. */\n      compress: false,\n\n      /* Runs the less parser and just reports errors without any output. */\n      lint: false,\n\n      /* Sets available include paths.\n      * If the file in an @import rule does not exist at that exact location, \n      * less will look for it at the location(s) passed to this option. \n      * You might use this for instance to specify a path to a library which \n      * you want to be referenced simply and relatively in the less files. */\n      paths: [],\n\n      /* color output in the terminal */\n      color: true,\n\n      /* The strictImports controls whether the compiler will allow an @import inside of either \n      * @media blocks or (a later addition) other selector blocks.\n      * See: https://github.com/less/less.js/issues/656 */\n      strictImports: false,\n\n      /* Allow Imports from Insecure HTTPS Hosts */\n      insecure: false,\n\n      /* Allows you to add a path to every generated import and url in your css. \n      * This does not affect less import statements that are processed, just ones \n      * that are left in the output css. */\n      rootpath: '',\n\n      /* By default URLs are kept as-is, so if you import a file in a sub-directory \n      * that references an image, exactly the same URL will be output in the css. \n      * This option allows you to re-write URL's in imported files so that the \n      * URL is always relative to the base imported file */\n      rewriteUrls: false,\n\n      /* How to process math \n      *   0 always           - eagerly try to solve all operations\n      *   1 parens-division  - require parens for division \"/\"\n      *   2 parens | strict  - require parens for all operations\n      *   3 strict-legacy    - legacy strict behavior (super-strict)\n      */\n      math: 0,\n\n      /* Without this option, less attempts to guess at the output unit when it does maths. */\n      strictUnits: false,\n\n      /* Effectively the declaration is put at the top of your base Less file, \n      * meaning it can be used but it also can be overridden if this variable \n      * is defined in the file. */\n      globalVars: null,\n\n      /* As opposed to the global variable option, this puts the declaration at the\n      * end of your base file, meaning it will override anything defined in your Less file. */\n      modifyVars: null,\n\n      /* This option allows you to specify a argument to go on to every URL.  */\n      urlArgs: ''\n    };\n  });\n\n  function extractId(href) {\n    return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n    .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n    .replace(/^\\//, '') // Remove root /\n    .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n    .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n    .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n  }\n  function addDataAttr(options, tag) {\n    for (var opt in tag.dataset) {\n      if (tag.dataset.hasOwnProperty(opt)) {\n        if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n          options[opt] = tag.dataset[opt];\n        } else {\n          try {\n            options[opt] = JSON.parse(tag.dataset[opt]);\n          } catch (_) {}\n        }\n      }\n    }\n  }\n\n  var browser = {\n    createCSS: function createCSS(document, styles, sheet) {\n      // Strip the query-string\n      var href = sheet.href || ''; // If there is no title set, use the filename, minus the extension\n\n      var id = \"less:\".concat(sheet.title || extractId(href)); // If this has already been inserted into the DOM, we may need to replace it\n\n      var oldStyleNode = document.getElementById(id);\n      var keepOldStyleNode = false; // Create a new stylesheet node for insertion or (if necessary) replacement\n\n      var styleNode = document.createElement('style');\n      styleNode.setAttribute('type', 'text/css');\n\n      if (sheet.media) {\n        styleNode.setAttribute('media', sheet.media);\n      }\n\n      styleNode.id = id;\n\n      if (!styleNode.styleSheet) {\n        styleNode.appendChild(document.createTextNode(styles)); // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n\n        keepOldStyleNode = oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 && oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue;\n      }\n\n      var head = document.getElementsByTagName('head')[0]; // If there is no oldStyleNode, just append; otherwise, only append if we need\n      // to replace oldStyleNode with an updated stylesheet\n\n      if (oldStyleNode === null || keepOldStyleNode === false) {\n        var nextEl = sheet && sheet.nextSibling || null;\n\n        if (nextEl) {\n          nextEl.parentNode.insertBefore(styleNode, nextEl);\n        } else {\n          head.appendChild(styleNode);\n        }\n      }\n\n      if (oldStyleNode && keepOldStyleNode === false) {\n        oldStyleNode.parentNode.removeChild(oldStyleNode);\n      } // For IE.\n      // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n      // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n\n\n      if (styleNode.styleSheet) {\n        try {\n          styleNode.styleSheet.cssText = styles;\n        } catch (e) {\n          throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n        }\n      }\n    },\n    currentScript: function currentScript(window) {\n      var document = window.document;\n      return document.currentScript || function () {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      }();\n    }\n  };\n\n  var addDefaultOptions = (function (window, options) {\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n      options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    } // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n\n\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false; // Interval between watch polls\n\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n    options.env = options.env || (window.location.hostname == '127.0.0.1' || window.location.hostname == '0.0.0.0' || window.location.hostname == 'localhost' || window.location.port && window.location.port.length > 0 || options.isFileProtocol ? 'development' : 'production');\n    var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n\n    if (dumpLineNumbers) {\n      options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n      options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n      options.onReady = true;\n    }\n\n    if (options.relativeUrls) {\n      options.rewriteUrls = 'all';\n    }\n  });\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var colors = {\n    'aliceblue': '#f0f8ff',\n    'antiquewhite': '#faebd7',\n    'aqua': '#00ffff',\n    'aquamarine': '#7fffd4',\n    'azure': '#f0ffff',\n    'beige': '#f5f5dc',\n    'bisque': '#ffe4c4',\n    'black': '#000000',\n    'blanchedalmond': '#ffebcd',\n    'blue': '#0000ff',\n    'blueviolet': '#8a2be2',\n    'brown': '#a52a2a',\n    'burlywood': '#deb887',\n    'cadetblue': '#5f9ea0',\n    'chartreuse': '#7fff00',\n    'chocolate': '#d2691e',\n    'coral': '#ff7f50',\n    'cornflowerblue': '#6495ed',\n    'cornsilk': '#fff8dc',\n    'crimson': '#dc143c',\n    'cyan': '#00ffff',\n    'darkblue': '#00008b',\n    'darkcyan': '#008b8b',\n    'darkgoldenrod': '#b8860b',\n    'darkgray': '#a9a9a9',\n    'darkgrey': '#a9a9a9',\n    'darkgreen': '#006400',\n    'darkkhaki': '#bdb76b',\n    'darkmagenta': '#8b008b',\n    'darkolivegreen': '#556b2f',\n    'darkorange': '#ff8c00',\n    'darkorchid': '#9932cc',\n    'darkred': '#8b0000',\n    'darksalmon': '#e9967a',\n    'darkseagreen': '#8fbc8f',\n    'darkslateblue': '#483d8b',\n    'darkslategray': '#2f4f4f',\n    'darkslategrey': '#2f4f4f',\n    'darkturquoise': '#00ced1',\n    'darkviolet': '#9400d3',\n    'deeppink': '#ff1493',\n    'deepskyblue': '#00bfff',\n    'dimgray': '#696969',\n    'dimgrey': '#696969',\n    'dodgerblue': '#1e90ff',\n    'firebrick': '#b22222',\n    'floralwhite': '#fffaf0',\n    'forestgreen': '#228b22',\n    'fuchsia': '#ff00ff',\n    'gainsboro': '#dcdcdc',\n    'ghostwhite': '#f8f8ff',\n    'gold': '#ffd700',\n    'goldenrod': '#daa520',\n    'gray': '#808080',\n    'grey': '#808080',\n    'green': '#008000',\n    'greenyellow': '#adff2f',\n    'honeydew': '#f0fff0',\n    'hotpink': '#ff69b4',\n    'indianred': '#cd5c5c',\n    'indigo': '#4b0082',\n    'ivory': '#fffff0',\n    'khaki': '#f0e68c',\n    'lavender': '#e6e6fa',\n    'lavenderblush': '#fff0f5',\n    'lawngreen': '#7cfc00',\n    'lemonchiffon': '#fffacd',\n    'lightblue': '#add8e6',\n    'lightcoral': '#f08080',\n    'lightcyan': '#e0ffff',\n    'lightgoldenrodyellow': '#fafad2',\n    'lightgray': '#d3d3d3',\n    'lightgrey': '#d3d3d3',\n    'lightgreen': '#90ee90',\n    'lightpink': '#ffb6c1',\n    'lightsalmon': '#ffa07a',\n    'lightseagreen': '#20b2aa',\n    'lightskyblue': '#87cefa',\n    'lightslategray': '#778899',\n    'lightslategrey': '#778899',\n    'lightsteelblue': '#b0c4de',\n    'lightyellow': '#ffffe0',\n    'lime': '#00ff00',\n    'limegreen': '#32cd32',\n    'linen': '#faf0e6',\n    'magenta': '#ff00ff',\n    'maroon': '#800000',\n    'mediumaquamarine': '#66cdaa',\n    'mediumblue': '#0000cd',\n    'mediumorchid': '#ba55d3',\n    'mediumpurple': '#9370d8',\n    'mediumseagreen': '#3cb371',\n    'mediumslateblue': '#7b68ee',\n    'mediumspringgreen': '#00fa9a',\n    'mediumturquoise': '#48d1cc',\n    'mediumvioletred': '#c71585',\n    'midnightblue': '#191970',\n    'mintcream': '#f5fffa',\n    'mistyrose': '#ffe4e1',\n    'moccasin': '#ffe4b5',\n    'navajowhite': '#ffdead',\n    'navy': '#000080',\n    'oldlace': '#fdf5e6',\n    'olive': '#808000',\n    'olivedrab': '#6b8e23',\n    'orange': '#ffa500',\n    'orangered': '#ff4500',\n    'orchid': '#da70d6',\n    'palegoldenrod': '#eee8aa',\n    'palegreen': '#98fb98',\n    'paleturquoise': '#afeeee',\n    'palevioletred': '#d87093',\n    'papayawhip': '#ffefd5',\n    'peachpuff': '#ffdab9',\n    'peru': '#cd853f',\n    'pink': '#ffc0cb',\n    'plum': '#dda0dd',\n    'powderblue': '#b0e0e6',\n    'purple': '#800080',\n    'rebeccapurple': '#663399',\n    'red': '#ff0000',\n    'rosybrown': '#bc8f8f',\n    'royalblue': '#4169e1',\n    'saddlebrown': '#8b4513',\n    'salmon': '#fa8072',\n    'sandybrown': '#f4a460',\n    'seagreen': '#2e8b57',\n    'seashell': '#fff5ee',\n    'sienna': '#a0522d',\n    'silver': '#c0c0c0',\n    'skyblue': '#87ceeb',\n    'slateblue': '#6a5acd',\n    'slategray': '#708090',\n    'slategrey': '#708090',\n    'snow': '#fffafa',\n    'springgreen': '#00ff7f',\n    'steelblue': '#4682b4',\n    'tan': '#d2b48c',\n    'teal': '#008080',\n    'thistle': '#d8bfd8',\n    'tomato': '#ff6347',\n    'turquoise': '#40e0d0',\n    'violet': '#ee82ee',\n    'wheat': '#f5deb3',\n    'white': '#ffffff',\n    'whitesmoke': '#f5f5f5',\n    'yellow': '#ffff00',\n    'yellowgreen': '#9acd32'\n  };\n\n  var unitConversions = {\n    length: {\n      'm': 1,\n      'cm': 0.01,\n      'mm': 0.001,\n      'in': 0.0254,\n      'px': 0.0254 / 96,\n      'pt': 0.0254 / 72,\n      'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n      's': 1,\n      'ms': 0.001\n    },\n    angle: {\n      'rad': 1 / (2 * Math.PI),\n      'deg': 1 / 360,\n      'grad': 1 / 400,\n      'turn': 1\n    }\n  };\n\n  var data = {\n    colors: colors,\n    unitConversions: unitConversions\n  };\n\n  var Node =\n  /*#__PURE__*/\n  function () {\n    function Node() {\n      _classCallCheck(this, Node);\n\n      this.parent = null;\n      this.visibilityBlocks = undefined;\n      this.nodeVisible = undefined;\n      this.rootNode = null;\n      this.parsed = null;\n      var self = this;\n      Object.defineProperty(this, 'currentFileInfo', {\n        get: function get() {\n          return self.fileInfo();\n        }\n      });\n      Object.defineProperty(this, 'index', {\n        get: function get() {\n          return self.getIndex();\n        }\n      });\n    }\n\n    _createClass(Node, [{\n      key: \"setParent\",\n      value: function setParent(nodes, parent) {\n        function set(node) {\n          if (node && node instanceof Node) {\n            node.parent = parent;\n          }\n        }\n\n        if (Array.isArray(nodes)) {\n          nodes.forEach(set);\n        } else {\n          set(nodes);\n        }\n      }\n    }, {\n      key: \"getIndex\",\n      value: function getIndex() {\n        return this._index || this.parent && this.parent.getIndex() || 0;\n      }\n    }, {\n      key: \"fileInfo\",\n      value: function fileInfo() {\n        return this._fileInfo || this.parent && this.parent.fileInfo() || {};\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return false;\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context) {\n        var strs = [];\n        this.genCSS(context, {\n          add: function add(chunk, fileInfo, index) {\n            strs.push(chunk);\n          },\n          isEmpty: function isEmpty() {\n            return strs.length === 0;\n          }\n        });\n        return strs.join('');\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.value);\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval() {\n        return this;\n      }\n    }, {\n      key: \"_operate\",\n      value: function _operate(context, op, a, b) {\n        switch (op) {\n          case '+':\n            return a + b;\n\n          case '-':\n            return a - b;\n\n          case '*':\n            return a * b;\n\n          case '/':\n            return a / b;\n        }\n      }\n    }, {\n      key: \"fround\",\n      value: function fround(context, value) {\n        var precision = context && context.numPrecision; // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n\n        return precision ? Number((value + 2e-16).toFixed(precision)) : value;\n      } // Returns true if this node represents root of ast imported by reference\n\n    }, {\n      key: \"blocksVisibility\",\n      value: function blocksVisibility() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        return this.visibilityBlocks !== 0;\n      }\n    }, {\n      key: \"addVisibilityBlock\",\n      value: function addVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        this.visibilityBlocks = this.visibilityBlocks + 1;\n      }\n    }, {\n      key: \"removeVisibilityBlock\",\n      value: function removeVisibilityBlock() {\n        if (this.visibilityBlocks == null) {\n          this.visibilityBlocks = 0;\n        }\n\n        this.visibilityBlocks = this.visibilityBlocks - 1;\n      } // Turns on node visibility - if called node will be shown in output regardless\n      // of whether it comes from import by reference or not\n\n    }, {\n      key: \"ensureVisibility\",\n      value: function ensureVisibility() {\n        this.nodeVisible = true;\n      } // Turns off node visibility - if called node will NOT be shown in output regardless\n      // of whether it comes from import by reference or not\n\n    }, {\n      key: \"ensureInvisibility\",\n      value: function ensureInvisibility() {\n        this.nodeVisible = false;\n      } // return values:\n      // false - the node must not be visible\n      // true - the node must be visible\n      // undefined or null - the node has the same visibility as its parent\n\n    }, {\n      key: \"isVisible\",\n      value: function isVisible() {\n        return this.nodeVisible;\n      }\n    }, {\n      key: \"visibilityInfo\",\n      value: function visibilityInfo() {\n        return {\n          visibilityBlocks: this.visibilityBlocks,\n          nodeVisible: this.nodeVisible\n        };\n      }\n    }, {\n      key: \"copyVisibilityInfo\",\n      value: function copyVisibilityInfo(info) {\n        if (!info) {\n          return;\n        }\n\n        this.visibilityBlocks = info.visibilityBlocks;\n        this.nodeVisible = info.nodeVisible;\n      }\n    }]);\n\n    return Node;\n  }();\n\n  Node.compare = function (a, b) {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n    if (a.compare && // for \"symmetric results\" force toCSS-based comparison\n    // of Quoted or Anonymous if either value is one of those\n    !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n      return a.compare(b);\n    } else if (b.compare) {\n      return -b.compare(a);\n    } else if (a.type !== b.type) {\n      return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n\n    if (!Array.isArray(a)) {\n      return a === b ? 0 : undefined;\n    }\n\n    if (a.length !== b.length) {\n      return undefined;\n    }\n\n    for (var i = 0; i < a.length; i++) {\n      if (Node.compare(a[i], b[i]) !== 0) {\n        return undefined;\n      }\n    }\n\n    return 0;\n  };\n\n  Node.numericCompare = function (a, b) {\n    return a < b ? -1 : a === b ? 0 : a > b ? 1 : undefined;\n  };\n\n  // RGB Colors - #ff0014, #eee\n  //\n\n  var Color =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Color, _Node);\n\n    function Color(rgb, a, originalForm) {\n      var _this;\n\n      _classCallCheck(this, Color);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Color).call(this));\n\n      var self = _assertThisInitialized(_this); //\n      // The end goal here, is to parse the arguments\n      // into an integer triplet, such as `128, 255, 0`\n      //\n      // This facilitates operations and conversions.\n      //\n\n\n      if (Array.isArray(rgb)) {\n        _this.rgb = rgb;\n      } else if (rgb.length >= 6) {\n        _this.rgb = [];\n        rgb.match(/.{2}/g).map(function (c, i) {\n          if (i < 3) {\n            self.rgb.push(parseInt(c, 16));\n          } else {\n            self.alpha = parseInt(c, 16) / 255;\n          }\n        });\n      } else {\n        _this.rgb = [];\n        rgb.split('').map(function (c, i) {\n          if (i < 3) {\n            self.rgb.push(parseInt(c + c, 16));\n          } else {\n            self.alpha = parseInt(c + c, 16) / 255;\n          }\n        });\n      }\n\n      _this.alpha = _this.alpha || (typeof a === 'number' ? a : 1);\n\n      if (typeof originalForm !== 'undefined') {\n        _this.value = originalForm;\n      }\n\n      return _this;\n    }\n\n    _createClass(Color, [{\n      key: \"luma\",\n      value: function luma() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n        g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n        b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context));\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context, doNotCompress) {\n        var compress = context && context.compress && !doNotCompress;\n        var color;\n        var alpha;\n        var colorFunction;\n        var args = []; // `value` is set if this color was originally\n        // converted from a named color string so we need\n        // to respect this and try to output named color too.\n\n        alpha = this.fround(context, this.alpha);\n\n        if (this.value) {\n          if (this.value.indexOf('rgb') === 0) {\n            if (alpha < 1) {\n              colorFunction = 'rgba';\n            }\n          } else if (this.value.indexOf('hsl') === 0) {\n            if (alpha < 1) {\n              colorFunction = 'hsla';\n            } else {\n              colorFunction = 'hsl';\n            }\n          } else {\n            return this.value;\n          }\n        } else {\n          if (alpha < 1) {\n            colorFunction = 'rgba';\n          }\n        }\n\n        switch (colorFunction) {\n          case 'rgba':\n            args = this.rgb.map(function (c) {\n              return clamp(Math.round(c), 255);\n            }).concat(clamp(alpha, 1));\n            break;\n\n          case 'hsla':\n            args.push(clamp(alpha, 1));\n\n          case 'hsl':\n            color = this.toHSL();\n            args = [this.fround(context, color.h), \"\".concat(this.fround(context, color.s * 100), \"%\"), \"\".concat(this.fround(context, color.l * 100), \"%\")].concat(args);\n        }\n\n        if (colorFunction) {\n          // Values are capped between `0` and `255`, rounded and zero-padded.\n          return \"\".concat(colorFunction, \"(\").concat(args.join(\",\".concat(compress ? '' : ' ')), \")\");\n        }\n\n        color = this.toRGB();\n\n        if (compress) {\n          var splitcolor = color.split(''); // Convert color to short format\n\n          if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n            color = \"#\".concat(splitcolor[1]).concat(splitcolor[3]).concat(splitcolor[5]);\n          }\n        }\n\n        return color;\n      } //\n      // Operations have to be done per-channel, if not,\n      // channels will spill onto each other. Once we have\n      // our result, in the form of an integer triplet,\n      // we create a new Color node to hold the result.\n      //\n\n    }, {\n      key: \"operate\",\n      value: function operate(context, op, other) {\n        var rgb = new Array(3);\n        var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n\n        for (var c = 0; c < 3; c++) {\n          rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n        }\n\n        return new Color(rgb, alpha);\n      }\n    }, {\n      key: \"toRGB\",\n      value: function toRGB() {\n        return toHex(this.rgb);\n      }\n    }, {\n      key: \"toHSL\",\n      value: function toHSL() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var l = (max + min) / 2;\n        var d = max - min;\n\n        if (max === min) {\n          h = s = 0;\n        } else {\n          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n          switch (max) {\n            case r:\n              h = (g - b) / d + (g < b ? 6 : 0);\n              break;\n\n            case g:\n              h = (b - r) / d + 2;\n              break;\n\n            case b:\n              h = (r - g) / d + 4;\n              break;\n          }\n\n          h /= 6;\n        }\n\n        return {\n          h: h * 360,\n          s: s,\n          l: l,\n          a: a\n        };\n      } // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n\n    }, {\n      key: \"toHSV\",\n      value: function toHSV() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var v = max;\n        var d = max - min;\n\n        if (max === 0) {\n          s = 0;\n        } else {\n          s = d / max;\n        }\n\n        if (max === min) {\n          h = 0;\n        } else {\n          switch (max) {\n            case r:\n              h = (g - b) / d + (g < b ? 6 : 0);\n              break;\n\n            case g:\n              h = (b - r) / d + 2;\n              break;\n\n            case b:\n              h = (r - g) / d + 4;\n              break;\n          }\n\n          h /= 6;\n        }\n\n        return {\n          h: h * 360,\n          s: s,\n          v: v,\n          a: a\n        };\n      }\n    }, {\n      key: \"toARGB\",\n      value: function toARGB() {\n        return toHex([this.alpha * 255].concat(this.rgb));\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(x) {\n        return x.rgb && x.rgb[0] === this.rgb[0] && x.rgb[1] === this.rgb[1] && x.rgb[2] === this.rgb[2] && x.alpha === this.alpha ? 0 : undefined;\n      }\n    }]);\n\n    return Color;\n  }(Node);\n\n  Color.prototype.type = 'Color';\n\n  function clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n  }\n\n  function toHex(v) {\n    return \"#\".concat(v.map(function (c) {\n      c = clamp(Math.round(c), 255);\n      return (c < 16 ? '0' : '') + c.toString(16);\n    }).join(''));\n  }\n\n  Color.fromKeyword = function (keyword) {\n    var c;\n    var key = keyword.toLowerCase();\n\n    if (colors.hasOwnProperty(key)) {\n      c = new Color(colors[key].slice(1));\n    } else if (key === 'transparent') {\n      c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n      c.value = keyword;\n      return c;\n    }\n  };\n\n  var Paren =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Paren, _Node);\n\n    function Paren(node) {\n      var _this;\n\n      _classCallCheck(this, Paren);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Paren).call(this));\n      _this.value = node;\n      return _this;\n    }\n\n    _createClass(Paren, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('(');\n        this.value.genCSS(context, output);\n        output.add(')');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Paren(this.value.eval(context));\n      }\n    }]);\n\n    return Paren;\n  }(Node);\n\n  Paren.prototype.type = 'Paren';\n\n  var _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n  };\n\n  var Combinator =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Combinator, _Node);\n\n    function Combinator(value) {\n      var _this;\n\n      _classCallCheck(this, Combinator);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Combinator).call(this));\n\n      if (value === ' ') {\n        _this.value = ' ';\n        _this.emptyOrWhitespace = true;\n      } else {\n        _this.value = value ? value.trim() : '';\n        _this.emptyOrWhitespace = _this.value === '';\n      }\n\n      return _this;\n    }\n\n    _createClass(Combinator, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var spaceOrEmpty = context.compress || _noSpaceCombinators[this.value] ? '' : ' ';\n        output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n      }\n    }]);\n\n    return Combinator;\n  }(Node);\n\n  Combinator.prototype.type = 'Combinator';\n\n  var Element =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Element, _Node);\n\n    function Element(combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Element);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this));\n      _this.combinator = combinator instanceof Combinator ? combinator : new Combinator(combinator);\n\n      if (typeof value === 'string') {\n        _this.value = value.trim();\n      } else if (value) {\n        _this.value = value;\n      } else {\n        _this.value = '';\n      }\n\n      _this.isVariable = isVariable;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.combinator, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Element, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        var value = this.value;\n        this.combinator = visitor.visit(this.combinator);\n\n        if (_typeof(value) === 'object') {\n          this.value = visitor.visit(value);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS() {\n        var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var value = this.value;\n        var firstSelector = context.firstSelector;\n\n        if (value instanceof Paren) {\n          // selector in parens should not be affected by outer selector\n          // flags (breaks only interpolated selectors - see #1973)\n          context.firstSelector = true;\n        }\n\n        value = value.toCSS ? value.toCSS(context) : value;\n        context.firstSelector = firstSelector;\n\n        if (value === '' && this.combinator.value.charAt(0) === '&') {\n          return '';\n        } else {\n          return this.combinator.toCSS(context) + value;\n        }\n      }\n    }]);\n\n    return Element;\n  }(Node);\n\n  Element.prototype.type = 'Element';\n\n  var Math$1 = {\n    ALWAYS: 0,\n    PARENS_DIVISION: 1,\n    PARENS: 2,\n    STRICT_LEGACY: 3\n  };\n  var RewriteUrls = {\n    OFF: 0,\n    LOCAL: 1,\n    ALL: 2\n  };\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var clone_1 = createCommonjsModule(function (module) {\n  var clone = (function() {\n\n  function _instanceof(obj, type) {\n    return type != null && obj instanceof type;\n  }\n\n  var nativeMap;\n  try {\n    nativeMap = Map;\n  } catch(_) {\n    // maybe a reference error because no `Map`. Give it a dummy value that no\n    // value will ever be an instanceof.\n    nativeMap = function() {};\n  }\n\n  var nativeSet;\n  try {\n    nativeSet = Set;\n  } catch(_) {\n    nativeSet = function() {};\n  }\n\n  var nativePromise;\n  try {\n    nativePromise = Promise;\n  } catch(_) {\n    nativePromise = function() {};\n  }\n\n  /**\n   * Clones (copies) an Object using deep copying.\n   *\n   * This function supports circular references by default, but if you are certain\n   * there are no circular references in your object, you can save some CPU time\n   * by calling clone(obj, false).\n   *\n   * Caution: if `circular` is false and `parent` contains circular references,\n   * your program may enter an infinite loop and crash.\n   *\n   * @param `parent` - the object to be cloned\n   * @param `circular` - set to true if the object to be cloned may contain\n   *    circular references. (optional - true by default)\n   * @param `depth` - set to a number if the object is only to be cloned to\n   *    a particular depth. (optional - defaults to Infinity)\n   * @param `prototype` - sets the prototype to be used when cloning an object.\n   *    (optional - defaults to parent prototype).\n   * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n   *    should be cloned as well. Non-enumerable properties on the prototype\n   *    chain will be ignored. (optional - false by default)\n  */\n  function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n    if (typeof circular === 'object') {\n      depth = circular.depth;\n      prototype = circular.prototype;\n      includeNonEnumerable = circular.includeNonEnumerable;\n      circular = circular.circular;\n    }\n    // maintain two arrays for circular references, where corresponding parents\n    // and children have the same index\n    var allParents = [];\n    var allChildren = [];\n\n    var useBuffer = typeof Buffer != 'undefined';\n\n    if (typeof circular == 'undefined')\n      circular = true;\n\n    if (typeof depth == 'undefined')\n      depth = Infinity;\n\n    // recurse this function so we don't reset allParents and allChildren\n    function _clone(parent, depth) {\n      // cloning null always returns null\n      if (parent === null)\n        return null;\n\n      if (depth === 0)\n        return parent;\n\n      var child;\n      var proto;\n      if (typeof parent != 'object') {\n        return parent;\n      }\n\n      if (_instanceof(parent, nativeMap)) {\n        child = new nativeMap();\n      } else if (_instanceof(parent, nativeSet)) {\n        child = new nativeSet();\n      } else if (_instanceof(parent, nativePromise)) {\n        child = new nativePromise(function (resolve, reject) {\n          parent.then(function(value) {\n            resolve(_clone(value, depth - 1));\n          }, function(err) {\n            reject(_clone(err, depth - 1));\n          });\n        });\n      } else if (clone.__isArray(parent)) {\n        child = [];\n      } else if (clone.__isRegExp(parent)) {\n        child = new RegExp(parent.source, __getRegExpFlags(parent));\n        if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n      } else if (clone.__isDate(parent)) {\n        child = new Date(parent.getTime());\n      } else if (useBuffer && Buffer.isBuffer(parent)) {\n        if (Buffer.allocUnsafe) {\n          // Node.js >= 4.5.0\n          child = Buffer.allocUnsafe(parent.length);\n        } else {\n          // Older Node.js versions\n          child = new Buffer(parent.length);\n        }\n        parent.copy(child);\n        return child;\n      } else if (_instanceof(parent, Error)) {\n        child = Object.create(parent);\n      } else {\n        if (typeof prototype == 'undefined') {\n          proto = Object.getPrototypeOf(parent);\n          child = Object.create(proto);\n        }\n        else {\n          child = Object.create(prototype);\n          proto = prototype;\n        }\n      }\n\n      if (circular) {\n        var index = allParents.indexOf(parent);\n\n        if (index != -1) {\n          return allChildren[index];\n        }\n        allParents.push(parent);\n        allChildren.push(child);\n      }\n\n      if (_instanceof(parent, nativeMap)) {\n        parent.forEach(function(value, key) {\n          var keyChild = _clone(key, depth - 1);\n          var valueChild = _clone(value, depth - 1);\n          child.set(keyChild, valueChild);\n        });\n      }\n      if (_instanceof(parent, nativeSet)) {\n        parent.forEach(function(value) {\n          var entryChild = _clone(value, depth - 1);\n          child.add(entryChild);\n        });\n      }\n\n      for (var i in parent) {\n        var attrs;\n        if (proto) {\n          attrs = Object.getOwnPropertyDescriptor(proto, i);\n        }\n\n        if (attrs && attrs.set == null) {\n          continue;\n        }\n        child[i] = _clone(parent[i], depth - 1);\n      }\n\n      if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(parent);\n        for (var i = 0; i < symbols.length; i++) {\n          // Don't need to worry about cloning a symbol because it is a primitive,\n          // like a number or string.\n          var symbol = symbols[i];\n          var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n          if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n            continue;\n          }\n          child[symbol] = _clone(parent[symbol], depth - 1);\n          if (!descriptor.enumerable) {\n            Object.defineProperty(child, symbol, {\n              enumerable: false\n            });\n          }\n        }\n      }\n\n      if (includeNonEnumerable) {\n        var allPropertyNames = Object.getOwnPropertyNames(parent);\n        for (var i = 0; i < allPropertyNames.length; i++) {\n          var propertyName = allPropertyNames[i];\n          var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n          if (descriptor && descriptor.enumerable) {\n            continue;\n          }\n          child[propertyName] = _clone(parent[propertyName], depth - 1);\n          Object.defineProperty(child, propertyName, {\n            enumerable: false\n          });\n        }\n      }\n\n      return child;\n    }\n\n    return _clone(parent, depth);\n  }\n\n  /**\n   * Simple flat clone using prototype, accepts only objects, usefull for property\n   * override on FLAT configuration object (no nested props).\n   *\n   * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n   * works.\n   */\n  clone.clonePrototype = function clonePrototype(parent) {\n    if (parent === null)\n      return null;\n\n    var c = function () {};\n    c.prototype = parent;\n    return new c();\n  };\n\n  // private utility functions\n\n  function __objToStr(o) {\n    return Object.prototype.toString.call(o);\n  }\n  clone.__objToStr = __objToStr;\n\n  function __isDate(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Date]';\n  }\n  clone.__isDate = __isDate;\n\n  function __isArray(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object Array]';\n  }\n  clone.__isArray = __isArray;\n\n  function __isRegExp(o) {\n    return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n  }\n  clone.__isRegExp = __isRegExp;\n\n  function __getRegExpFlags(re) {\n    var flags = '';\n    if (re.global) flags += 'g';\n    if (re.ignoreCase) flags += 'i';\n    if (re.multiline) flags += 'm';\n    return flags;\n  }\n  clone.__getRegExpFlags = __getRegExpFlags;\n\n  return clone;\n  })();\n\n  if ( module.exports) {\n    module.exports = clone;\n  }\n  });\n\n  /* jshint proto: true */\n  function getLocation(index, inputStream) {\n    var n = index + 1;\n    var line = null;\n    var column = -1;\n\n    while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n      column++;\n    }\n\n    if (typeof index === 'number') {\n      line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n    }\n\n    return {\n      line: line,\n      column: column\n    };\n  }\n  function copyArray(arr) {\n    var i;\n    var length = arr.length;\n    var copy = new Array(length);\n\n    for (i = 0; i < length; i++) {\n      copy[i] = arr[i];\n    }\n\n    return copy;\n  }\n  function clone(obj) {\n    var cloned = {};\n\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        cloned[prop] = obj[prop];\n      }\n    }\n\n    return cloned;\n  }\n  function defaults(obj1, obj2) {\n    var newObj = obj2 || {};\n\n    if (!obj2._defaults) {\n      newObj = {};\n\n      var _defaults = clone_1(obj1);\n\n      newObj._defaults = _defaults;\n      var cloned = obj2 ? clone_1(obj2) : {};\n      Object.assign(newObj, _defaults, cloned);\n    }\n\n    return newObj;\n  }\n  function copyOptions(obj1, obj2) {\n    if (obj2 && obj2._defaults) {\n      return obj2;\n    }\n\n    var opts = defaults(obj1, obj2);\n\n    if (opts.strictMath) {\n      opts.math = Math$1.STRICT_LEGACY;\n    } // Back compat with changed relativeUrls option\n\n\n    if (opts.relativeUrls) {\n      opts.rewriteUrls = RewriteUrls.ALL;\n    }\n\n    if (typeof opts.math === 'string') {\n      switch (opts.math.toLowerCase()) {\n        case 'always':\n          opts.math = Math$1.ALWAYS;\n          break;\n\n        case 'parens-division':\n          opts.math = Math$1.PARENS_DIVISION;\n          break;\n\n        case 'strict':\n        case 'parens':\n          opts.math = Math$1.PARENS;\n          break;\n\n        case 'strict-legacy':\n          opts.math = Math$1.STRICT_LEGACY;\n      }\n    }\n\n    if (typeof opts.rewriteUrls === 'string') {\n      switch (opts.rewriteUrls.toLowerCase()) {\n        case 'off':\n          opts.rewriteUrls = RewriteUrls.OFF;\n          break;\n\n        case 'local':\n          opts.rewriteUrls = RewriteUrls.LOCAL;\n          break;\n\n        case 'all':\n          opts.rewriteUrls = RewriteUrls.ALL;\n          break;\n      }\n    }\n\n    return opts;\n  }\n  function merge(obj1, obj2) {\n    for (var prop in obj2) {\n      if (obj2.hasOwnProperty(prop)) {\n        obj1[prop] = obj2[prop];\n      }\n    }\n\n    return obj1;\n  }\n  function flattenArray(arr) {\n    var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (var i = 0, length = arr.length; i < length; i++) {\n      var value = arr[i];\n\n      if (Array.isArray(value)) {\n        flattenArray(value, result);\n      } else {\n        if (value !== undefined) {\n          result.push(value);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  var utils = /*#__PURE__*/Object.freeze({\n    getLocation: getLocation,\n    copyArray: copyArray,\n    clone: clone,\n    defaults: defaults,\n    copyOptions: copyOptions,\n    merge: merge,\n    flattenArray: flattenArray\n  });\n\n  /**\n   * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n   * Besides standard .message it keeps some additional data like a path to the file where the error\n   * occurred along with line and column numbers.\n   *\n   * @class\n   * @extends Error\n   * @type {module.LessError}\n   *\n   * @prop {string} type\n   * @prop {string} filename\n   * @prop {number} index\n   * @prop {number} line\n   * @prop {number} column\n   * @prop {number} callLine\n   * @prop {number} callExtract\n   * @prop {string[]} extract\n   *\n   * @param {Object} e              - An error object to wrap around or just a descriptive object\n   * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n   * @param {string} [currentFilename]\n   */\n\n  var LessError = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n    var filename = e.filename || currentFilename;\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n      var input = fileContentMap.contents[filename];\n      var loc = getLocation(e.index, input);\n      var line = loc.line;\n      var col = loc.column;\n      var callLine = e.call && getLocation(e.call, input).line;\n      var lines = input ? input.split('\\n') : '';\n      this.type = e.type || 'Syntax';\n      this.filename = filename;\n      this.index = e.index;\n      this.line = typeof line === 'number' ? line + 1 : null;\n      this.column = col;\n\n      if (!this.line && this.stack) {\n        var found = this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);\n\n        if (found) {\n          if (found[2]) {\n            this.line = parseInt(found[2]) - 2;\n          }\n\n          if (found[3]) {\n            this.column = parseInt(found[3]);\n          }\n        }\n      }\n\n      this.callLine = callLine + 1;\n      this.callExtract = lines[callLine];\n      this.extract = [lines[this.line - 2], lines[this.line - 1], lines[this.line]];\n    }\n  };\n\n  if (typeof Object.create === 'undefined') {\n    var F = function F() {};\n\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n  } else {\n    LessError.prototype = Object.create(Error.prototype);\n  }\n\n  LessError.prototype.constructor = LessError;\n  /**\n   * An overridden version of the default Object.prototype.toString\n   * which uses additional information to create a helpful message.\n   *\n   * @param {Object} options\n   * @returns {string}\n   */\n\n  LessError.prototype.toString = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var message = '';\n    var extract = this.extract || [];\n    var error = [];\n\n    var stylize = function stylize(str) {\n      return str;\n    };\n\n    if (options.stylize) {\n      var type = _typeof(options.stylize);\n\n      if (type !== 'function') {\n        throw Error(\"options.stylize should be a function, got a \".concat(type, \"!\"));\n      }\n\n      stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n      if (typeof extract[0] === 'string') {\n        error.push(stylize(\"\".concat(this.line - 1, \" \").concat(extract[0]), 'grey'));\n      }\n\n      if (typeof extract[1] === 'string') {\n        var errorTxt = \"\".concat(this.line, \" \");\n\n        if (extract[1]) {\n          errorTxt += extract[1].slice(0, this.column) + stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') + extract[1].slice(this.column + 1), 'red'), 'inverse');\n        }\n\n        error.push(errorTxt);\n      }\n\n      if (typeof extract[2] === 'string') {\n        error.push(stylize(\"\".concat(this.line + 1, \" \").concat(extract[2]), 'grey'));\n      }\n\n      error = \"\".concat(error.join('\\n') + stylize('', 'reset'), \"\\n\");\n    }\n\n    message += stylize(\"\".concat(this.type, \"Error: \").concat(this.message), 'red');\n\n    if (this.filename) {\n      message += stylize(' in ', 'red') + this.filename;\n    }\n\n    if (this.line) {\n      message += stylize(\" on line \".concat(this.line, \", column \").concat(this.column + 1, \":\"), 'grey');\n    }\n\n    message += \"\\n\".concat(error);\n\n    if (this.callLine) {\n      message += \"\".concat(stylize('from ', 'red') + (this.filename || ''), \"/n\");\n      message += \"\".concat(stylize(this.callLine, 'grey'), \" \").concat(this.callExtract, \"/n\");\n    }\n\n    return message;\n  };\n\n  var Selector =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Selector, _Node);\n\n    function Selector(elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Selector);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Selector).call(this));\n      _this.extendList = extendList;\n      _this.condition = condition;\n      _this.evaldCondition = !condition;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.elements = _this.getElements(elements);\n      _this.mixinElements_ = undefined;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.elements, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Selector, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.elements) {\n          this.elements = visitor.visitArray(this.elements);\n        }\n\n        if (this.extendList) {\n          this.extendList = visitor.visitArray(this.extendList);\n        }\n\n        if (this.condition) {\n          this.condition = visitor.visit(this.condition);\n        }\n      }\n    }, {\n      key: \"createDerived\",\n      value: function createDerived(elements, extendList, evaldCondition) {\n        elements = this.getElements(elements);\n        var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        newSelector.evaldCondition = evaldCondition != null ? evaldCondition : this.evaldCondition;\n        newSelector.mediaEmpty = this.mediaEmpty;\n        return newSelector;\n      }\n    }, {\n      key: \"getElements\",\n      value: function getElements(els) {\n        if (!els) {\n          return [new Element('', '&', false, this._index, this._fileInfo)];\n        }\n\n        if (typeof els === 'string') {\n          this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n            if (err) {\n              throw new LessError({\n                index: err.index,\n                message: err.message\n              }, this.parse.imports, this._fileInfo.filename);\n            }\n\n            els = result[0].elements;\n          });\n        }\n\n        return els;\n      }\n    }, {\n      key: \"createEmptySelectors\",\n      value: function createEmptySelectors() {\n        var el = new Element('', '&', false, this._index, this._fileInfo);\n        var sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n        sels[0].mediaEmpty = true;\n        return sels;\n      }\n    }, {\n      key: \"match\",\n      value: function match(other) {\n        var elements = this.elements;\n        var len = elements.length;\n        var olen;\n        var i;\n        other = other.mixinElements();\n        olen = other.length;\n\n        if (olen === 0 || len < olen) {\n          return 0;\n        } else {\n          for (i = 0; i < olen; i++) {\n            if (elements[i].value !== other[i]) {\n              return 0;\n            }\n          }\n        }\n\n        return olen; // return number of matched elements\n      }\n    }, {\n      key: \"mixinElements\",\n      value: function mixinElements() {\n        if (this.mixinElements_) {\n          return this.mixinElements_;\n        }\n\n        var elements = this.elements.map(function (v) {\n          return v.combinator.value + (v.value.value || v.value);\n        }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n        if (elements) {\n          if (elements[0] === '&') {\n            elements.shift();\n          }\n        } else {\n          elements = [];\n        }\n\n        return this.mixinElements_ = elements;\n      }\n    }, {\n      key: \"isJustParentSelector\",\n      value: function isJustParentSelector() {\n        return !this.mediaEmpty && this.elements.length === 1 && this.elements[0].value === '&' && (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var evaldCondition = this.condition && this.condition.eval(context);\n        var elements = this.elements;\n        var extendList = this.extendList;\n        elements = elements && elements.map(function (e) {\n          return e.eval(context);\n        });\n        extendList = extendList && extendList.map(function (extend) {\n          return extend.eval(context);\n        });\n        return this.createDerived(elements, extendList, evaldCondition);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n        var element;\n\n        if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n          output.add(' ', this.fileInfo(), this.getIndex());\n        }\n\n        for (i = 0; i < this.elements.length; i++) {\n          element = this.elements[i];\n          element.genCSS(context, output);\n        }\n      }\n    }, {\n      key: \"getIsOutput\",\n      value: function getIsOutput() {\n        return this.evaldCondition;\n      }\n    }]);\n\n    return Selector;\n  }(Node);\n\n  Selector.prototype.type = 'Selector';\n\n  var Value =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Value, _Node);\n\n    function Value(value) {\n      var _this;\n\n      _classCallCheck(this, Value);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Value).call(this));\n\n      if (!value) {\n        throw new Error('Value requires an array argument');\n      }\n\n      if (!Array.isArray(value)) {\n        _this.value = [value];\n      } else {\n        _this.value = value;\n      }\n\n      return _this;\n    }\n\n    _createClass(Value, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.value) {\n          this.value = visitor.visitArray(this.value);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (this.value.length === 1) {\n          return this.value[0].eval(context);\n        } else {\n          return new Value(this.value.map(function (v) {\n            return v.eval(context);\n          }));\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n\n        for (i = 0; i < this.value.length; i++) {\n          this.value[i].genCSS(context, output);\n\n          if (i + 1 < this.value.length) {\n            output.add(context && context.compress ? ',' : ', ');\n          }\n        }\n      }\n    }]);\n\n    return Value;\n  }(Node);\n\n  Value.prototype.type = 'Value';\n\n  var Keyword =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Keyword, _Node);\n\n    function Keyword(value) {\n      var _this;\n\n      _classCallCheck(this, Keyword);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyword).call(this));\n      _this.value = value;\n      return _this;\n    }\n\n    _createClass(Keyword, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.value === '%') {\n          throw {\n            type: 'Syntax',\n            message: 'Invalid % without number'\n          };\n        }\n\n        output.add(this.value);\n      }\n    }]);\n\n    return Keyword;\n  }(Node);\n\n  Keyword.prototype.type = 'Keyword';\n  Keyword.True = new Keyword('true');\n  Keyword.False = new Keyword('false');\n\n  var Anonymous =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Anonymous, _Node);\n\n    function Anonymous(value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Anonymous);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Anonymous).call(this));\n      _this.value = value;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.mapLines = mapLines;\n      _this.rulesetLike = typeof rulesetLike === 'undefined' ? false : rulesetLike;\n      _this.allowRoot = true;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      return _this;\n    }\n\n    _createClass(Anonymous, [{\n      key: \"eval\",\n      value: function _eval() {\n        return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return this.rulesetLike;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        this.nodeVisible = Boolean(this.value);\n\n        if (this.nodeVisible) {\n          output.add(this.value, this._fileInfo, this._index, this.mapLines);\n        }\n      }\n    }]);\n\n    return Anonymous;\n  }(Node);\n\n  Anonymous.prototype.type = 'Anonymous';\n\n  var MATH = Math$1;\n\n  var Declaration =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Declaration, _Node);\n\n    function Declaration(name, value, important, merge, index, currentFileInfo, inline, variable) {\n      var _this;\n\n      _classCallCheck(this, Declaration);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Declaration).call(this));\n      _this.name = name;\n      _this.value = value instanceof Node ? value : new Value([value ? new Anonymous(value) : null]);\n      _this.important = important ? \" \".concat(important.trim()) : '';\n      _this.merge = merge;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.inline = inline || false;\n      _this.variable = variable !== undefined ? variable : name.charAt && name.charAt(0) === '@';\n      _this.allowRoot = true;\n\n      _this.setParent(_this.value, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Declaration, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n\n        try {\n          this.value.genCSS(context, output);\n        } catch (e) {\n          e.index = this._index;\n          e.filename = this._fileInfo.filename;\n          throw e;\n        }\n\n        output.add(this.important + (this.inline || context.lastRule && context.compress ? '' : ';'), this._fileInfo, this._index);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mathBypass = false;\n        var prevMath;\n        var name = this.name;\n        var evaldValue;\n        var variable = this.variable;\n\n        if (typeof name !== 'string') {\n          // expand 'primitive' name directly to get\n          // things faster (~10% for benchmark.less):\n          name = name.length === 1 && name[0] instanceof Keyword ? name[0].value : evalName(context, name);\n          variable = false; // never treat expanded interpolation as new variable name\n        } // @todo remove when parens-division is default\n\n\n        if (name === 'font' && context.math === MATH.ALWAYS) {\n          mathBypass = true;\n          prevMath = context.math;\n          context.math = MATH.PARENS_DIVISION;\n        }\n\n        try {\n          context.importantScope.push({});\n          evaldValue = this.value.eval(context);\n\n          if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n            throw {\n              message: 'Rulesets cannot be evaluated on a property.',\n              index: this.getIndex(),\n              filename: this.fileInfo().filename\n            };\n          }\n\n          var important = this.important;\n          var importantResult = context.importantScope.pop();\n\n          if (!important && importantResult.important) {\n            important = importantResult.important;\n          }\n\n          return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n        } catch (e) {\n          if (typeof e.index !== 'number') {\n            e.index = this.getIndex();\n            e.filename = this.fileInfo().filename;\n          }\n\n          throw e;\n        } finally {\n          if (mathBypass) {\n            context.math = prevMath;\n          }\n        }\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n      }\n    }]);\n\n    return Declaration;\n  }(Node);\n\n  function evalName(context, name) {\n    var value = '';\n    var i;\n    var n = name.length;\n    var output = {\n      add: function add(s) {\n        value += s;\n      }\n    };\n\n    for (i = 0; i < n; i++) {\n      name[i].eval(context).genCSS(context, output);\n    }\n\n    return value;\n  }\n\n  Declaration.prototype.type = 'Declaration';\n\n  var debugInfo = function debugInfo(context, ctx, lineSeparator) {\n    var result = '';\n\n    if (context.dumpLineNumbers && !context.compress) {\n      switch (context.dumpLineNumbers) {\n        case 'comments':\n          result = debugInfo.asComment(ctx);\n          break;\n\n        case 'mediaquery':\n          result = debugInfo.asMediaQuery(ctx);\n          break;\n\n        case 'all':\n          result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n          break;\n      }\n    }\n\n    return result;\n  };\n\n  debugInfo.asComment = function (ctx) {\n    return \"/* line \".concat(ctx.debugInfo.lineNumber, \", \").concat(ctx.debugInfo.fileName, \" */\\n\");\n  };\n\n  debugInfo.asMediaQuery = function (ctx) {\n    var filenameWithProtocol = ctx.debugInfo.fileName;\n\n    if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n      filenameWithProtocol = \"file://\".concat(filenameWithProtocol);\n    }\n\n    return \"@media -sass-debug-info{filename{font-family:\".concat(filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n      if (a == '\\\\') {\n        a = '\\/';\n      }\n\n      return \"\\\\\".concat(a);\n    }), \"}line{font-family:\\\\00003\").concat(ctx.debugInfo.lineNumber, \"}}\\n\");\n  };\n\n  var Comment =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Comment, _Node);\n\n    function Comment(value, isLineComment, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Comment);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this));\n      _this.value = value;\n      _this.isLineComment = isLineComment;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(Comment, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.debugInfo) {\n          output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n        }\n\n        output.add(this.value);\n      }\n    }, {\n      key: \"isSilent\",\n      value: function isSilent(context) {\n        var isCompressed = context.compress && this.value[2] !== '!';\n        return this.isLineComment || isCompressed;\n      }\n    }]);\n\n    return Comment;\n  }(Node);\n\n  Comment.prototype.type = 'Comment';\n\n  var contexts = {};\n\n  var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) {\n      return;\n    }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n      if (original.hasOwnProperty(propertiesToCopy[i])) {\n        destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n      }\n    }\n  };\n  /*\n   parse is used whilst parsing\n   */\n\n\n  var parseCopyProperties = [// options\n  'paths', // option - unmodified - paths to search for imports on\n  'rewriteUrls', // option - whether to adjust URL's to be relative\n  'rootpath', // option - rootpath to append to URL's\n  'strictImports', // option -\n  'insecure', // option - whether to allow imports from insecure ssl hosts\n  'dumpLineNumbers', // option - whether to dump line numbers\n  'compress', // option - whether to compress\n  'syncImport', // option - whether to import synchronously\n  'chunkInput', // option - whether to chunk input. more performant but causes parse issues.\n  'mime', // browser only - mime type for sheet import\n  'useFileCache', // browser only - whether to use the per file session cache\n  // context\n  'processImports', // option & context - whether to process imports. if false then imports will not be imported.\n  // Used by the import manager to stop multiple import visitors being created.\n  'pluginManager' // Used as the plugin manager for the session\n  ];\n\n  contexts.Parse = function (options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === 'string') {\n      this.paths = [this.paths];\n    }\n  };\n\n  var evalCopyProperties = ['paths', // additional include paths\n  'compress', // whether to compress\n  'math', // whether math has to be within parenthesis\n  'strictUnits', // whether units need to evaluate correctly\n  'sourceMap', // whether to output a source map\n  'importMultiple', // whether we are currently importing multiple copies\n  'urlArgs', // whether to add args into url tokens\n  'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n  'pluginManager', // Used as the plugin manager for the session\n  'importantScope', // used to bubble up !important statements\n  'rewriteUrls' // option - whether to adjust URL's to be relative\n  ];\n\n  function isPathRelative(path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n  }\n\n  function isPathLocalRelative(path) {\n    return path.charAt(0) === '.';\n  }\n\n  contexts.Eval =\n  /*#__PURE__*/\n  function () {\n    function _class(options, frames) {\n      _classCallCheck(this, _class);\n\n      copyFromOriginal(options, this, evalCopyProperties);\n\n      if (typeof this.paths === 'string') {\n        this.paths = [this.paths];\n      }\n\n      this.frames = frames || [];\n      this.importantScope = this.importantScope || [];\n      this.inCalc = false;\n      this.mathOn = true;\n    }\n\n    _createClass(_class, [{\n      key: \"enterCalc\",\n      value: function enterCalc() {\n        if (!this.calcStack) {\n          this.calcStack = [];\n        }\n\n        this.calcStack.push(true);\n        this.inCalc = true;\n      }\n    }, {\n      key: \"exitCalc\",\n      value: function exitCalc() {\n        this.calcStack.pop();\n\n        if (!this.calcStack) {\n          this.inCalc = false;\n        }\n      }\n    }, {\n      key: \"inParenthesis\",\n      value: function inParenthesis() {\n        if (!this.parensStack) {\n          this.parensStack = [];\n        }\n\n        this.parensStack.push(true);\n      }\n    }, {\n      key: \"outOfParenthesis\",\n      value: function outOfParenthesis() {\n        this.parensStack.pop();\n      }\n    }, {\n      key: \"isMathOn\",\n      value: function isMathOn(op) {\n        if (!this.mathOn) {\n          return false;\n        }\n\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n          return false;\n        }\n\n        if (this.math > Math$1.PARENS_DIVISION) {\n          return this.parensStack && this.parensStack.length;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"pathRequiresRewrite\",\n      value: function pathRequiresRewrite(path) {\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n        return isRelative(path);\n      }\n    }, {\n      key: \"rewritePath\",\n      value: function rewritePath(path, rootpath) {\n        var newPath;\n        rootpath = rootpath || '';\n        newPath = this.normalizePath(rootpath + path); // If a path was explicit relative and the rootpath was not an absolute path\n        // we must ensure that the new path is also explicit relative.\n\n        if (isPathLocalRelative(path) && isPathRelative(rootpath) && isPathLocalRelative(newPath) === false) {\n          newPath = \"./\".concat(newPath);\n        }\n\n        return newPath;\n      }\n    }, {\n      key: \"normalizePath\",\n      value: function normalizePath(path) {\n        var segments = path.split('/').reverse();\n        var segment;\n        path = [];\n\n        while (segments.length !== 0) {\n          segment = segments.pop();\n\n          switch (segment) {\n            case '.':\n              break;\n\n            case '..':\n              if (path.length === 0 || path[path.length - 1] === '..') {\n                path.push(segment);\n              } else {\n                path.pop();\n              }\n\n              break;\n\n            default:\n              path.push(segment);\n              break;\n          }\n        }\n\n        return path.join('/');\n      }\n    }]);\n\n    return _class;\n  }();\n\n  function makeRegistry(base) {\n    return {\n      _data: {},\n      add: function add(name, func) {\n        // precautionary case conversion, as later querying of\n        // the registry by function-caller uses lower case as well.\n        name = name.toLowerCase();\n\n        if (this._data.hasOwnProperty(name)) ;\n\n        this._data[name] = func;\n      },\n      addMultiple: function addMultiple(functions) {\n        var _this = this;\n\n        Object.keys(functions).forEach(function (name) {\n          _this.add(name, functions[name]);\n        });\n      },\n      get: function get(name) {\n        return this._data[name] || base && base.get(name);\n      },\n      getLocalFunctions: function getLocalFunctions() {\n        return this._data;\n      },\n      inherit: function inherit() {\n        return makeRegistry(this);\n      },\n      create: function create(base) {\n        return makeRegistry(base);\n      }\n    };\n  }\n\n  var functionRegistry = makeRegistry(null);\n\n  var defaultFunc = {\n    eval: function _eval() {\n      var v = this.value_;\n      var e = this.error_;\n\n      if (e) {\n        throw e;\n      }\n\n      if (v != null) {\n        return v ? Keyword.True : Keyword.False;\n      }\n    },\n    value: function value(v) {\n      this.value_ = v;\n    },\n    error: function error(e) {\n      this.error_ = e;\n    },\n    reset: function reset() {\n      this.value_ = this.error_ = null;\n    }\n  };\n\n  var Ruleset =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Ruleset, _Node);\n\n    function Ruleset(selectors, rules, strictImports, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Ruleset);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Ruleset).call(this));\n      _this.selectors = selectors;\n      _this.rules = rules;\n      _this._lookups = {};\n      _this._variables = null;\n      _this._properties = null;\n      _this.strictImports = strictImports;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      _this.setParent(_this.selectors, _assertThisInitialized(_this));\n\n      _this.setParent(_this.rules, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Ruleset, [{\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return true;\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.paths) {\n          this.paths = visitor.visitArray(this.paths, true);\n        } else if (this.selectors) {\n          this.selectors = visitor.visitArray(this.selectors);\n        }\n\n        if (this.rules && this.rules.length) {\n          this.rules = visitor.visitArray(this.rules);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var selectors;\n        var selCnt;\n        var selector;\n        var i;\n        var hasVariable;\n        var hasOnePassingSelector = false;\n\n        if (this.selectors && (selCnt = this.selectors.length)) {\n          selectors = new Array(selCnt);\n          defaultFunc.error({\n            type: 'Syntax',\n            message: 'it is currently only allowed in parametric mixin guards,'\n          });\n\n          for (i = 0; i < selCnt; i++) {\n            selector = this.selectors[i].eval(context);\n\n            for (var j = 0; j < selector.elements.length; j++) {\n              if (selector.elements[j].isVariable) {\n                hasVariable = true;\n                break;\n              }\n            }\n\n            selectors[i] = selector;\n\n            if (selector.evaldCondition) {\n              hasOnePassingSelector = true;\n            }\n          }\n\n          if (hasVariable) {\n            var toParseSelectors = new Array(selCnt);\n\n            for (i = 0; i < selCnt; i++) {\n              selector = selectors[i];\n              toParseSelectors[i] = selector.toCSS(context);\n            }\n\n            this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n              if (result) {\n                selectors = flattenArray(result);\n              }\n            });\n          }\n\n          defaultFunc.reset();\n        } else {\n          hasOnePassingSelector = true;\n        }\n\n        var rules = this.rules ? copyArray(this.rules) : null;\n        var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n        var rule;\n        var subRule;\n        ruleset.originalRuleset = this;\n        ruleset.root = this.root;\n        ruleset.firstRoot = this.firstRoot;\n        ruleset.allowImports = this.allowImports;\n\n        if (this.debugInfo) {\n          ruleset.debugInfo = this.debugInfo;\n        }\n\n        if (!hasOnePassingSelector) {\n          rules.length = 0;\n        } // inherit a function registry from the frames stack when possible;\n        // otherwise from the global registry\n\n\n        ruleset.functionRegistry = function (frames) {\n          var i = 0;\n          var n = frames.length;\n          var found;\n\n          for (; i !== n; ++i) {\n            found = frames[i].functionRegistry;\n\n            if (found) {\n              return found;\n            }\n          }\n\n          return functionRegistry;\n        }(context.frames).inherit(); // push the current ruleset to the frames stack\n\n\n        var ctxFrames = context.frames;\n        ctxFrames.unshift(ruleset); // currrent selectors\n\n        var ctxSelectors = context.selectors;\n\n        if (!ctxSelectors) {\n          context.selectors = ctxSelectors = [];\n        }\n\n        ctxSelectors.unshift(this.selectors); // Evaluate imports\n\n        if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n          ruleset.evalImports(context);\n        } // Store the frames around mixin definitions,\n        // so they can be evaluated like closures when the time comes.\n\n\n        var rsRules = ruleset.rules;\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (rule.evalFirst) {\n            rsRules[i] = rule.eval(context);\n          }\n        }\n\n        var mediaBlockCount = context.mediaBlocks && context.mediaBlocks.length || 0; // Evaluate mixin calls.\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (rule.type === 'MixinCall') {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).filter(function (r) {\n              if (r instanceof Declaration && r.variable) {\n                // do not pollute the scope if the variable is\n                // already there. consider returning false here\n                // but we need a way to \"return\" variable from mixins\n                return !ruleset.variable(r.name);\n              }\n\n              return true;\n            });\n            rsRules.splice.apply(rsRules, _toConsumableArray([i, 1].concat(rules)));\n            i += rules.length - 1;\n            ruleset.resetCache();\n          } else if (rule.type === 'VariableCall') {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).rules.filter(function (r) {\n              if (r instanceof Declaration && r.variable) {\n                // do not pollute the scope at all\n                return false;\n              }\n\n              return true;\n            });\n            rsRules.splice.apply(rsRules, _toConsumableArray([i, 1].concat(rules)));\n            i += rules.length - 1;\n            ruleset.resetCache();\n          }\n        } // Evaluate everything else\n\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          if (!rule.evalFirst) {\n            rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n          }\n        } // Evaluate everything else\n\n\n        for (i = 0; rule = rsRules[i]; i++) {\n          // for rulesets, check if it is a css guard and can be removed\n          if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n            // check if it can be folded in (e.g. & where)\n            if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n              rsRules.splice(i--, 1);\n\n              for (var j = 0; subRule = rule.rules[j]; j++) {\n                if (subRule instanceof Node) {\n                  subRule.copyVisibilityInfo(rule.visibilityInfo());\n\n                  if (!(subRule instanceof Declaration) || !subRule.variable) {\n                    rsRules.splice(++i, 0, subRule);\n                  }\n                }\n              }\n            }\n          }\n        } // Pop the stack\n\n\n        ctxFrames.shift();\n        ctxSelectors.shift();\n\n        if (context.mediaBlocks) {\n          for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n            context.mediaBlocks[i].bubbleSelectors(selectors);\n          }\n        }\n\n        return ruleset;\n      }\n    }, {\n      key: \"evalImports\",\n      value: function evalImports(context) {\n        var rules = this.rules;\n        var i;\n        var importRules;\n\n        if (!rules) {\n          return;\n        }\n\n        for (i = 0; i < rules.length; i++) {\n          if (rules[i].type === 'Import') {\n            importRules = rules[i].eval(context);\n\n            if (importRules && (importRules.length || importRules.length === 0)) {\n              rules.splice.apply(rules, _toConsumableArray([i, 1].concat(importRules)));\n              i += importRules.length - 1;\n            } else {\n              rules.splice(i, 1, importRules);\n            }\n\n            this.resetCache();\n          }\n        }\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n          if (r.makeImportant) {\n            return r.makeImportant();\n          } else {\n            return r;\n          }\n        }), this.strictImports, this.visibilityInfo());\n        return result;\n      }\n    }, {\n      key: \"matchArgs\",\n      value: function matchArgs(args) {\n        return !args || args.length === 0;\n      } // lets you call a css selector with a guard\n\n    }, {\n      key: \"matchCondition\",\n      value: function matchCondition(args, context) {\n        var lastSelector = this.selectors[this.selectors.length - 1];\n\n        if (!lastSelector.evaldCondition) {\n          return false;\n        }\n\n        if (lastSelector.condition && !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"resetCache\",\n      value: function resetCache() {\n        this._rulesets = null;\n        this._variables = null;\n        this._properties = null;\n        this._lookups = {};\n      }\n    }, {\n      key: \"variables\",\n      value: function variables() {\n        if (!this._variables) {\n          this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable === true) {\n              hash[r.name] = r;\n            } // when evaluating variables in an import statement, imports have not been eval'd\n            // so we need to go inside import statements.\n            // guard against root being a string (in the case of inlined less)\n\n\n            if (r.type === 'Import' && r.root && r.root.variables) {\n              var vars = r.root.variables();\n\n              for (var name in vars) {\n                if (vars.hasOwnProperty(name)) {\n                  hash[name] = r.root.variable(name);\n                }\n              }\n            }\n\n            return hash;\n          }, {});\n        }\n\n        return this._variables;\n      }\n    }, {\n      key: \"properties\",\n      value: function properties() {\n        if (!this._properties) {\n          this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable !== true) {\n              var name = r.name.length === 1 && r.name[0] instanceof Keyword ? r.name[0].value : r.name; // Properties don't overwrite as they can merge\n\n              if (!hash[\"$\".concat(name)]) {\n                hash[\"$\".concat(name)] = [r];\n              } else {\n                hash[\"$\".concat(name)].push(r);\n              }\n            }\n\n            return hash;\n          }, {});\n        }\n\n        return this._properties;\n      }\n    }, {\n      key: \"variable\",\n      value: function variable(name) {\n        var decl = this.variables()[name];\n\n        if (decl) {\n          return this.parseValue(decl);\n        }\n      }\n    }, {\n      key: \"property\",\n      value: function property(name) {\n        var decl = this.properties()[name];\n\n        if (decl) {\n          return this.parseValue(decl);\n        }\n      }\n    }, {\n      key: \"lastDeclaration\",\n      value: function lastDeclaration() {\n        for (var i = this.rules.length; i > 0; i--) {\n          var decl = this.rules[i - 1];\n\n          if (decl instanceof Declaration) {\n            return this.parseValue(decl);\n          }\n        }\n      }\n    }, {\n      key: \"parseValue\",\n      value: function parseValue(toParse) {\n        var self = this;\n\n        function transformDeclaration(decl) {\n          if (decl.value instanceof Anonymous && !decl.parsed) {\n            if (typeof decl.value.value === 'string') {\n              this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n                if (err) {\n                  decl.parsed = true;\n                }\n\n                if (result) {\n                  decl.value = result[0];\n                  decl.important = result[1] || '';\n                  decl.parsed = true;\n                }\n              });\n            } else {\n              decl.parsed = true;\n            }\n\n            return decl;\n          } else {\n            return decl;\n          }\n        }\n\n        if (!Array.isArray(toParse)) {\n          return transformDeclaration.call(self, toParse);\n        } else {\n          var nodes = [];\n          toParse.forEach(function (n) {\n            nodes.push(transformDeclaration.call(self, n));\n          });\n          return nodes;\n        }\n      }\n    }, {\n      key: \"rulesets\",\n      value: function rulesets() {\n        if (!this.rules) {\n          return [];\n        }\n\n        var filtRules = [];\n        var rules = this.rules;\n        var i;\n        var rule;\n\n        for (i = 0; rule = rules[i]; i++) {\n          if (rule.isRuleset) {\n            filtRules.push(rule);\n          }\n        }\n\n        return filtRules;\n      }\n    }, {\n      key: \"prependRule\",\n      value: function prependRule(rule) {\n        var rules = this.rules;\n\n        if (rules) {\n          rules.unshift(rule);\n        } else {\n          this.rules = [rule];\n        }\n\n        this.setParent(rule, this);\n      }\n    }, {\n      key: \"find\",\n      value: function find(selector) {\n        var self = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n        var filter = arguments.length > 2 ? arguments[2] : undefined;\n        var rules = [];\n        var match;\n        var foundMixins;\n        var key = selector.toCSS();\n\n        if (key in this._lookups) {\n          return this._lookups[key];\n        }\n\n        this.rulesets().forEach(function (rule) {\n          if (rule !== self) {\n            for (var j = 0; j < rule.selectors.length; j++) {\n              match = selector.match(rule.selectors[j]);\n\n              if (match) {\n                if (selector.elements.length > match) {\n                  if (!filter || filter(rule)) {\n                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n\n                    for (var i = 0; i < foundMixins.length; ++i) {\n                      foundMixins[i].path.push(rule);\n                    }\n\n                    Array.prototype.push.apply(rules, foundMixins);\n                  }\n                } else {\n                  rules.push({\n                    rule: rule,\n                    path: []\n                  });\n                }\n\n                break;\n              }\n            }\n          }\n        });\n        this._lookups[key] = rules;\n        return rules;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var i;\n        var j;\n        var charsetRuleNodes = [];\n        var ruleNodes = [];\n        var // Line number debugging\n        debugInfo$1;\n        var rule;\n        var path;\n        context.tabLevel = context.tabLevel || 0;\n\n        if (!this.root) {\n          context.tabLevel++;\n        }\n\n        var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n        var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n        var sep;\n        var charsetNodeIndex = 0;\n        var importNodeIndex = 0;\n\n        for (i = 0; rule = this.rules[i]; i++) {\n          if (rule instanceof Comment) {\n            if (importNodeIndex === i) {\n              importNodeIndex++;\n            }\n\n            ruleNodes.push(rule);\n          } else if (rule.isCharset && rule.isCharset()) {\n            ruleNodes.splice(charsetNodeIndex, 0, rule);\n            charsetNodeIndex++;\n            importNodeIndex++;\n          } else if (rule.type === 'Import') {\n            ruleNodes.splice(importNodeIndex, 0, rule);\n            importNodeIndex++;\n          } else {\n            ruleNodes.push(rule);\n          }\n        }\n\n        ruleNodes = charsetRuleNodes.concat(ruleNodes); // If this is the root node, we don't render\n        // a selector, or {}.\n\n        if (!this.root) {\n          debugInfo$1 = debugInfo(context, this, tabSetStr);\n\n          if (debugInfo$1) {\n            output.add(debugInfo$1);\n            output.add(tabSetStr);\n          }\n\n          var paths = this.paths;\n          var pathCnt = paths.length;\n          var pathSubCnt;\n          sep = context.compress ? ',' : \",\\n\".concat(tabSetStr);\n\n          for (i = 0; i < pathCnt; i++) {\n            path = paths[i];\n\n            if (!(pathSubCnt = path.length)) {\n              continue;\n            }\n\n            if (i > 0) {\n              output.add(sep);\n            }\n\n            context.firstSelector = true;\n            path[0].genCSS(context, output);\n            context.firstSelector = false;\n\n            for (j = 1; j < pathSubCnt; j++) {\n              path[j].genCSS(context, output);\n            }\n          }\n\n          output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n        } // Compile rules and rulesets\n\n\n        for (i = 0; rule = ruleNodes[i]; i++) {\n          if (i + 1 === ruleNodes.length) {\n            context.lastRule = true;\n          }\n\n          var currentLastRule = context.lastRule;\n\n          if (rule.isRulesetLike(rule)) {\n            context.lastRule = false;\n          }\n\n          if (rule.genCSS) {\n            rule.genCSS(context, output);\n          } else if (rule.value) {\n            output.add(rule.value.toString());\n          }\n\n          context.lastRule = currentLastRule;\n\n          if (!context.lastRule && rule.isVisible()) {\n            output.add(context.compress ? '' : \"\\n\".concat(tabRuleStr));\n          } else {\n            context.lastRule = false;\n          }\n        }\n\n        if (!this.root) {\n          output.add(context.compress ? '}' : \"\\n\".concat(tabSetStr, \"}\"));\n          context.tabLevel--;\n        }\n\n        if (!output.isEmpty() && !context.compress && this.firstRoot) {\n          output.add('\\n');\n        }\n      }\n    }, {\n      key: \"joinSelectors\",\n      value: function joinSelectors(paths, context, selectors) {\n        for (var s = 0; s < selectors.length; s++) {\n          this.joinSelector(paths, context, selectors[s]);\n        }\n      }\n    }, {\n      key: \"joinSelector\",\n      value: function joinSelector(paths, context, selector) {\n        function createParenthesis(elementsToPak, originalElement) {\n          var replacementParen;\n          var j;\n\n          if (elementsToPak.length === 0) {\n            replacementParen = new Paren(elementsToPak[0]);\n          } else {\n            var insideParent = new Array(elementsToPak.length);\n\n            for (j = 0; j < elementsToPak.length; j++) {\n              insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n            }\n\n            replacementParen = new Paren(new Selector(insideParent));\n          }\n\n          return replacementParen;\n        }\n\n        function createSelector(containedElement, originalElement) {\n          var element;\n          var selector;\n          element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n          selector = new Selector([element]);\n          return selector;\n        } // joins selector path from `beginningPath` with selector path in `addPath`\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns concatenated path\n\n\n        function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n          var newSelectorPath;\n          var lastSelector;\n          var newJoinedSelector; // our new selector path\n\n          newSelectorPath = []; // construct the joined selector - if & is the first thing this will be empty,\n          // if not newJoinedSelector will be the last set of elements in the selector\n\n          if (beginningPath.length > 0) {\n            newSelectorPath = copyArray(beginningPath);\n            lastSelector = newSelectorPath.pop();\n            newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n          } else {\n            newJoinedSelector = originalSelector.createDerived([]);\n          }\n\n          if (addPath.length > 0) {\n            // /deep/ is a CSS4 selector - (removed, so should deprecate)\n            // that is valid without anything in front of it\n            // so if the & does not have a combinator that is \"\" or \" \" then\n            // and there is a combinator on the parent, then grab that.\n            // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n            var combinator = replacedElement.combinator;\n            var parentEl = addPath[0].elements[0];\n\n            if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n              combinator = parentEl.combinator;\n            } // join the elements so far with the first part of the parent\n\n\n            newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n            newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n          } // now add the joined selector - but only if it is not empty\n\n\n          if (newJoinedSelector.elements.length !== 0) {\n            newSelectorPath.push(newJoinedSelector);\n          } // put together the parent selectors after the join (e.g. the rest of the parent)\n\n\n          if (addPath.length > 1) {\n            var restOfPath = addPath.slice(1);\n            restOfPath = restOfPath.map(function (selector) {\n              return selector.createDerived(selector.elements, []);\n            });\n            newSelectorPath = newSelectorPath.concat(restOfPath);\n          }\n\n          return newSelectorPath;\n        } // joins selector path from `beginningPath` with every selector path in `addPaths` array\n        // `replacedElement` contains element that is being replaced by `addPath`\n        // returns array with all concatenated paths\n\n\n        function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n          var j;\n\n          for (j = 0; j < beginningPath.length; j++) {\n            var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n            result.push(newSelectorPath);\n          }\n\n          return result;\n        }\n\n        function mergeElementsOnToSelectors(elements, selectors) {\n          var i;\n          var sel;\n\n          if (elements.length === 0) {\n            return;\n          }\n\n          if (selectors.length === 0) {\n            selectors.push([new Selector(elements)]);\n            return;\n          }\n\n          for (i = 0; sel = selectors[i]; i++) {\n            // if the previous thing in sel is a parent this needs to join on to it\n            if (sel.length > 0) {\n              sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n            } else {\n              sel.push(new Selector(elements));\n            }\n          }\n        } // replace all parent selectors inside `inSelector` by content of `context` array\n        // resulting selectors are returned inside `paths` array\n        // returns true if `inSelector` contained at least one parent selector\n\n\n        function replaceParentSelector(paths, context, inSelector) {\n          // The paths are [[Selector]]\n          // The first list is a list of comma separated selectors\n          // The inner list is a list of inheritance separated selectors\n          // e.g.\n          // .a, .b {\n          //   .c {\n          //   }\n          // }\n          // == [[.a] [.c]] [[.b] [.c]]\n          //\n          var i;\n          var j;\n          var k;\n          var currentElements;\n          var newSelectors;\n          var selectorsMultiplied;\n          var sel;\n          var el;\n          var hadParentSelector = false;\n          var length;\n          var lastSelector;\n\n          function findNestedSelector(element) {\n            var maybeSelector;\n\n            if (!(element.value instanceof Paren)) {\n              return null;\n            }\n\n            maybeSelector = element.value.value;\n\n            if (!(maybeSelector instanceof Selector)) {\n              return null;\n            }\n\n            return maybeSelector;\n          } // the elements from the current selector so far\n\n\n          currentElements = []; // the current list of new selectors to add to the path.\n          // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n          // by the parents\n\n          newSelectors = [[]];\n\n          for (i = 0; el = inSelector.elements[i]; i++) {\n            // non parent reference elements just get added\n            if (el.value !== '&') {\n              var nestedSelector = findNestedSelector(el);\n\n              if (nestedSelector != null) {\n                // merge the current list of non parent selector elements\n                // on to the current list of selectors to add\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n                var nestedPaths = [];\n                var replaced = void 0;\n                var replacedNewSelectors = [];\n                replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                hadParentSelector = hadParentSelector || replaced; // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n\n                for (k = 0; k < nestedPaths.length; k++) {\n                  var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                  addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                }\n\n                newSelectors = replacedNewSelectors;\n                currentElements = [];\n              } else {\n                currentElements.push(el);\n              }\n            } else {\n              hadParentSelector = true; // the new list of selectors to add\n\n              selectorsMultiplied = []; // merge the current list of non parent selector elements\n              // on to the current list of selectors to add\n\n              mergeElementsOnToSelectors(currentElements, newSelectors); // loop through our current selectors\n\n              for (j = 0; j < newSelectors.length; j++) {\n                sel = newSelectors[j]; // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                // whether there are parents or not\n\n                if (context.length === 0) {\n                  // the combinator used on el should now be applied to the next element instead so that\n                  // it is not lost\n                  if (sel.length > 0) {\n                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                  }\n\n                  selectorsMultiplied.push(sel);\n                } else {\n                  // and the parent selectors\n                  for (k = 0; k < context.length; k++) {\n                    // We need to put the current selectors\n                    // then join the last selector's elements on to the parents selectors\n                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector); // add that to our new set of selectors\n\n                    selectorsMultiplied.push(newSelectorPath);\n                  }\n                }\n              } // our new selectors has been multiplied, so reset the state\n\n\n              newSelectors = selectorsMultiplied;\n              currentElements = [];\n            }\n          } // if we have any elements left over (e.g. .a& .b == .b)\n          // add them on to all the current selectors\n\n\n          mergeElementsOnToSelectors(currentElements, newSelectors);\n\n          for (i = 0; i < newSelectors.length; i++) {\n            length = newSelectors[i].length;\n\n            if (length > 0) {\n              paths.push(newSelectors[i]);\n              lastSelector = newSelectors[i][length - 1];\n              newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n            }\n          }\n\n          return hadParentSelector;\n        }\n\n        function deriveSelector(visibilityInfo, deriveFrom) {\n          var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n          newSelector.copyVisibilityInfo(visibilityInfo);\n          return newSelector;\n        } // joinSelector code follows\n\n\n        var i;\n        var newPaths;\n        var hadParentSelector;\n        newPaths = [];\n        hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n        if (!hadParentSelector) {\n          if (context.length > 0) {\n            newPaths = [];\n\n            for (i = 0; i < context.length; i++) {\n              var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n              concatenated.push(selector);\n              newPaths.push(concatenated);\n            }\n          } else {\n            newPaths = [[selector]];\n          }\n        }\n\n        for (i = 0; i < newPaths.length; i++) {\n          paths.push(newPaths[i]);\n        }\n      }\n    }]);\n\n    return Ruleset;\n  }(Node);\n\n  Ruleset.prototype.type = 'Ruleset';\n  Ruleset.prototype.isRuleset = true;\n\n  var AtRule =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(AtRule, _Node);\n\n    function AtRule(name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, AtRule);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AtRule).call(this));\n      var i;\n      _this.name = name;\n      _this.value = value instanceof Node ? value : value ? new Anonymous(value) : value;\n\n      if (rules) {\n        if (Array.isArray(rules)) {\n          _this.rules = rules;\n        } else {\n          _this.rules = [rules];\n          _this.rules[0].selectors = new Selector([], null, null, index, currentFileInfo).createEmptySelectors();\n        }\n\n        for (i = 0; i < _this.rules.length; i++) {\n          _this.rules[i].allowImports = true;\n        }\n\n        _this.setParent(_this.rules, _assertThisInitialized(_this));\n      }\n\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.debugInfo = debugInfo;\n      _this.isRooted = isRooted || false;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(AtRule, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        var value = this.value;\n        var rules = this.rules;\n\n        if (rules) {\n          this.rules = visitor.visitArray(rules);\n        }\n\n        if (value) {\n          this.value = visitor.visit(value);\n        }\n      }\n    }, {\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return this.rules || !this.isCharset();\n      }\n    }, {\n      key: \"isCharset\",\n      value: function isCharset() {\n        return '@charset' === this.name;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        var value = this.value;\n        var rules = this.rules;\n        output.add(this.name, this.fileInfo(), this.getIndex());\n\n        if (value) {\n          output.add(' ');\n          value.genCSS(context, output);\n        }\n\n        if (rules) {\n          this.outputRuleset(context, output, rules);\n        } else {\n          output.add(';');\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mediaPathBackup;\n        var mediaBlocksBackup;\n        var value = this.value;\n        var rules = this.rules; // media stored inside other atrule should not bubble over it\n        // backpup media bubbling information\n\n        mediaPathBackup = context.mediaPath;\n        mediaBlocksBackup = context.mediaBlocks; // deleted media bubbling information\n\n        context.mediaPath = [];\n        context.mediaBlocks = [];\n\n        if (value) {\n          value = value.eval(context);\n        }\n\n        if (rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          rules = [rules[0].eval(context)];\n          rules[0].root = true;\n        } // restore media bubbling information\n\n\n        context.mediaPath = mediaPathBackup;\n        context.mediaBlocks = mediaBlocksBackup;\n        return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n      }\n    }, {\n      key: \"variable\",\n      value: function variable(name) {\n        if (this.rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.variable.call(this.rules[0], name);\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find() {\n        if (this.rules) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.find.apply(this.rules[0], args);\n        }\n      }\n    }, {\n      key: \"rulesets\",\n      value: function rulesets() {\n        if (this.rules) {\n          // assuming that there is only one rule at this point - that is how parser constructs the rule\n          return Ruleset.prototype.rulesets.apply(this.rules[0]);\n        }\n      }\n    }, {\n      key: \"outputRuleset\",\n      value: function outputRuleset(context, output, rules) {\n        var ruleCnt = rules.length;\n        var i;\n        context.tabLevel = (context.tabLevel | 0) + 1; // Compressed\n\n        if (context.compress) {\n          output.add('{');\n\n          for (i = 0; i < ruleCnt; i++) {\n            rules[i].genCSS(context, output);\n          }\n\n          output.add('}');\n          context.tabLevel--;\n          return;\n        } // Non-compressed\n\n\n        var tabSetStr = \"\\n\".concat(Array(context.tabLevel).join('  '));\n        var tabRuleStr = \"\".concat(tabSetStr, \"  \");\n\n        if (!ruleCnt) {\n          output.add(\" {\".concat(tabSetStr, \"}\"));\n        } else {\n          output.add(\" {\".concat(tabRuleStr));\n          rules[0].genCSS(context, output);\n\n          for (i = 1; i < ruleCnt; i++) {\n            output.add(tabRuleStr);\n            rules[i].genCSS(context, output);\n          }\n\n          output.add(\"\".concat(tabSetStr, \"}\"));\n        }\n\n        context.tabLevel--;\n      }\n    }]);\n\n    return AtRule;\n  }(Node);\n\n  AtRule.prototype.type = 'AtRule';\n\n  var DetachedRuleset =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(DetachedRuleset, _Node);\n\n    function DetachedRuleset(ruleset, frames) {\n      var _this;\n\n      _classCallCheck(this, DetachedRuleset);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(DetachedRuleset).call(this));\n      _this.ruleset = ruleset;\n      _this.frames = frames;\n\n      _this.setParent(_this.ruleset, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(DetachedRuleset, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.ruleset = visitor.visit(this.ruleset);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var frames = this.frames || copyArray(context.frames);\n        return new DetachedRuleset(this.ruleset, frames);\n      }\n    }, {\n      key: \"callEval\",\n      value: function callEval(context) {\n        return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n      }\n    }]);\n\n    return DetachedRuleset;\n  }(Node);\n\n  DetachedRuleset.prototype.type = 'DetachedRuleset';\n  DetachedRuleset.prototype.evalFirst = true;\n\n  var Unit =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Unit, _Node);\n\n    function Unit(numerator, denominator, backupUnit) {\n      var _this;\n\n      _classCallCheck(this, Unit);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Unit).call(this));\n      _this.numerator = numerator ? copyArray(numerator).sort() : [];\n      _this.denominator = denominator ? copyArray(denominator).sort() : [];\n\n      if (backupUnit) {\n        _this.backupUnit = backupUnit;\n      } else if (numerator && numerator.length) {\n        _this.backupUnit = numerator[0];\n      }\n\n      return _this;\n    }\n\n    _createClass(Unit, [{\n      key: \"clone\",\n      value: function clone() {\n        return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        // Dimension checks the unit is singular and throws an error if in strict math mode.\n        var strictUnits = context && context.strictUnits;\n\n        if (this.numerator.length === 1) {\n          output.add(this.numerator[0]); // the ideal situation\n        } else if (!strictUnits && this.backupUnit) {\n          output.add(this.backupUnit);\n        } else if (!strictUnits && this.denominator.length) {\n          output.add(this.denominator[0]);\n        }\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var i;\n        var returnStr = this.numerator.join('*');\n\n        for (i = 0; i < this.denominator.length; i++) {\n          returnStr += \"/\".concat(this.denominator[i]);\n        }\n\n        return returnStr;\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        return this.is(other.toString()) ? 0 : undefined;\n      }\n    }, {\n      key: \"is\",\n      value: function is(unitString) {\n        return this.toString().toUpperCase() === unitString.toUpperCase();\n      }\n    }, {\n      key: \"isLength\",\n      value: function isLength() {\n        return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty() {\n        return this.numerator.length === 0 && this.denominator.length === 0;\n      }\n    }, {\n      key: \"isSingular\",\n      value: function isSingular() {\n        return this.numerator.length <= 1 && this.denominator.length === 0;\n      }\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        var i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n          this.numerator[i] = callback(this.numerator[i], false);\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n          this.denominator[i] = callback(this.denominator[i], true);\n        }\n      }\n    }, {\n      key: \"usedUnits\",\n      value: function usedUnits() {\n        var group;\n        var result = {};\n        var mapUnit;\n        var groupName;\n\n        mapUnit = function mapUnit(atomicUnit) {\n          /* jshint loopfunc:true */\n          if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n            result[groupName] = atomicUnit;\n          }\n\n          return atomicUnit;\n        };\n\n        for (groupName in unitConversions) {\n          if (unitConversions.hasOwnProperty(groupName)) {\n            group = unitConversions[groupName];\n            this.map(mapUnit);\n          }\n        }\n\n        return result;\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        var counter = {};\n        var atomicUnit;\n        var i;\n\n        for (i = 0; i < this.numerator.length; i++) {\n          atomicUnit = this.numerator[i];\n          counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n        }\n\n        for (i = 0; i < this.denominator.length; i++) {\n          atomicUnit = this.denominator[i];\n          counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n        }\n\n        this.numerator = [];\n        this.denominator = [];\n\n        for (atomicUnit in counter) {\n          if (counter.hasOwnProperty(atomicUnit)) {\n            var count = counter[atomicUnit];\n\n            if (count > 0) {\n              for (i = 0; i < count; i++) {\n                this.numerator.push(atomicUnit);\n              }\n            } else if (count < 0) {\n              for (i = 0; i < -count; i++) {\n                this.denominator.push(atomicUnit);\n              }\n            }\n          }\n        }\n\n        this.numerator.sort();\n        this.denominator.sort();\n      }\n    }]);\n\n    return Unit;\n  }(Node);\n\n  Unit.prototype.type = 'Unit';\n\n  // A number with a unit\n  //\n\n  var Dimension =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Dimension, _Node);\n\n    function Dimension(value, unit) {\n      var _this;\n\n      _classCallCheck(this, Dimension);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Dimension).call(this));\n      _this.value = parseFloat(value);\n\n      if (isNaN(_this.value)) {\n        throw new Error('Dimension is not a number.');\n      }\n\n      _this.unit = unit && unit instanceof Unit ? unit : new Unit(unit ? [unit] : undefined);\n\n      _this.setParent(_this.unit, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Dimension, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.unit = visitor.visit(this.unit);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return this;\n      }\n    }, {\n      key: \"toColor\",\n      value: function toColor() {\n        return new Color([this.value, this.value, this.value]);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (context && context.strictUnits && !this.unit.isSingular()) {\n          throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \".concat(this.unit.toString()));\n        }\n\n        var value = this.fround(context, this.value);\n        var strValue = String(value);\n\n        if (value !== 0 && value < 0.000001 && value > -0.000001) {\n          // would be output 1e-6 etc.\n          strValue = value.toFixed(20).replace(/0+$/, '');\n        }\n\n        if (context && context.compress) {\n          // Zero values doesn't need a unit\n          if (value === 0 && this.unit.isLength()) {\n            output.add(strValue);\n            return;\n          } // Float values doesn't need a leading zero\n\n\n          if (value > 0 && value < 1) {\n            strValue = strValue.substr(1);\n          }\n        }\n\n        output.add(strValue);\n        this.unit.genCSS(context, output);\n      } // In an operation between two Dimensions,\n      // we default to the first Dimension's unit,\n      // so `1px + 2` will yield `3px`.\n\n    }, {\n      key: \"operate\",\n      value: function operate(context, op, other) {\n        /* jshint noempty:false */\n        var value = this._operate(context, op, this.value, other.value);\n\n        var unit = this.unit.clone();\n\n        if (op === '+' || op === '-') {\n          if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n            unit = other.unit.clone();\n\n            if (this.unit.backupUnit) {\n              unit.backupUnit = this.unit.backupUnit;\n            }\n          } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ; else {\n            other = other.convertTo(this.unit.usedUnits());\n\n            if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n              throw new Error(\"Incompatible units. Change the units or use the unit function. \" + \"Bad units: '\".concat(unit.toString(), \"' and '\").concat(other.unit.toString(), \"'.\"));\n            }\n\n            value = this._operate(context, op, this.value, other.value);\n          }\n        } else if (op === '*') {\n          unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n          unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n          unit.cancel();\n        } else if (op === '/') {\n          unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n          unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n          unit.cancel();\n        }\n\n        return new Dimension(value, unit);\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        var a;\n        var b;\n\n        if (!(other instanceof Dimension)) {\n          return undefined;\n        }\n\n        if (this.unit.isEmpty() || other.unit.isEmpty()) {\n          a = this;\n          b = other;\n        } else {\n          a = this.unify();\n          b = other.unify();\n\n          if (a.unit.compare(b.unit) !== 0) {\n            return undefined;\n          }\n        }\n\n        return Node.numericCompare(a.value, b.value);\n      }\n    }, {\n      key: \"unify\",\n      value: function unify() {\n        return this.convertTo({\n          length: 'px',\n          duration: 's',\n          angle: 'rad'\n        });\n      }\n    }, {\n      key: \"convertTo\",\n      value: function convertTo(conversions) {\n        var value = this.value;\n        var unit = this.unit.clone();\n        var i;\n        var groupName;\n        var group;\n        var targetUnit;\n        var derivedConversions = {};\n        var applyUnit;\n\n        if (typeof conversions === 'string') {\n          for (i in unitConversions) {\n            if (unitConversions[i].hasOwnProperty(conversions)) {\n              derivedConversions = {};\n              derivedConversions[i] = conversions;\n            }\n          }\n\n          conversions = derivedConversions;\n        }\n\n        applyUnit = function applyUnit(atomicUnit, denominator) {\n          /* jshint loopfunc:true */\n          if (group.hasOwnProperty(atomicUnit)) {\n            if (denominator) {\n              value = value / (group[atomicUnit] / group[targetUnit]);\n            } else {\n              value = value * (group[atomicUnit] / group[targetUnit]);\n            }\n\n            return targetUnit;\n          }\n\n          return atomicUnit;\n        };\n\n        for (groupName in conversions) {\n          if (conversions.hasOwnProperty(groupName)) {\n            targetUnit = conversions[groupName];\n            group = unitConversions[groupName];\n            unit.map(applyUnit);\n          }\n        }\n\n        unit.cancel();\n        return new Dimension(value, unit);\n      }\n    }]);\n\n    return Dimension;\n  }(Node);\n\n  Dimension.prototype.type = 'Dimension';\n\n  var MATH$1 = Math$1;\n\n  var Operation =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Operation, _Node);\n\n    function Operation(op, operands, isSpaced) {\n      var _this;\n\n      _classCallCheck(this, Operation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Operation).call(this));\n      _this.op = op.trim();\n      _this.operands = operands;\n      _this.isSpaced = isSpaced;\n      return _this;\n    }\n\n    _createClass(Operation, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.operands = visitor.visitArray(this.operands);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var a = this.operands[0].eval(context);\n        var b = this.operands[1].eval(context);\n        var op;\n\n        if (context.isMathOn(this.op)) {\n          op = this.op === './' ? '/' : this.op;\n\n          if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n          }\n\n          if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n          }\n\n          if (!a.operate) {\n            if (a instanceof Operation && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\n              return new Operation(this.op, [a, b], this.isSpaced);\n            }\n\n            throw {\n              type: 'Operation',\n              message: 'Operation on an invalid type'\n            };\n          }\n\n          return a.operate(context, op, b);\n        } else {\n          return new Operation(this.op, [a, b], this.isSpaced);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        this.operands[0].genCSS(context, output);\n\n        if (this.isSpaced) {\n          output.add(' ');\n        }\n\n        output.add(this.op);\n\n        if (this.isSpaced) {\n          output.add(' ');\n        }\n\n        this.operands[1].genCSS(context, output);\n      }\n    }]);\n\n    return Operation;\n  }(Node);\n\n  Operation.prototype.type = 'Operation';\n\n  var MATH$2 = Math$1;\n\n  var Expression =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Expression, _Node);\n\n    function Expression(value, noSpacing) {\n      var _this;\n\n      _classCallCheck(this, Expression);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Expression).call(this));\n      _this.value = value;\n      _this.noSpacing = noSpacing;\n\n      if (!value) {\n        throw new Error('Expression requires an array parameter');\n      }\n\n      return _this;\n    }\n\n    _createClass(Expression, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visitArray(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var returnValue;\n        var mathOn = context.isMathOn();\n        var inParenthesis = this.parens && (context.math !== MATH$2.STRICT_LEGACY || !this.parensInOp);\n        var doubleParen = false;\n\n        if (inParenthesis) {\n          context.inParenthesis();\n        }\n\n        if (this.value.length > 1) {\n          returnValue = new Expression(this.value.map(function (e) {\n            if (!e.eval) {\n              return e;\n            }\n\n            return e.eval(context);\n          }), this.noSpacing);\n        } else if (this.value.length === 1) {\n          if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n            doubleParen = true;\n          }\n\n          returnValue = this.value[0].eval(context);\n        } else {\n          returnValue = this;\n        }\n\n        if (inParenthesis) {\n          context.outOfParenthesis();\n        }\n\n        if (this.parens && this.parensInOp && !mathOn && !doubleParen && !(returnValue instanceof Dimension)) {\n          returnValue = new Paren(returnValue);\n        }\n\n        return returnValue;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        for (var i = 0; i < this.value.length; i++) {\n          this.value[i].genCSS(context, output);\n\n          if (!this.noSpacing && i + 1 < this.value.length) {\n            output.add(' ');\n          }\n        }\n      }\n    }, {\n      key: \"throwAwayComments\",\n      value: function throwAwayComments() {\n        this.value = this.value.filter(function (v) {\n          return !(v instanceof Comment);\n        });\n      }\n    }]);\n\n    return Expression;\n  }(Node);\n\n  Expression.prototype.type = 'Expression';\n\n  var functionCaller =\n  /*#__PURE__*/\n  function () {\n    function functionCaller(name, context, index, currentFileInfo) {\n      _classCallCheck(this, functionCaller);\n\n      this.name = name.toLowerCase();\n      this.index = index;\n      this.context = context;\n      this.currentFileInfo = currentFileInfo;\n      this.func = context.frames[0].functionRegistry.get(this.name);\n    }\n\n    _createClass(functionCaller, [{\n      key: \"isValid\",\n      value: function isValid() {\n        return Boolean(this.func);\n      }\n    }, {\n      key: \"call\",\n      value: function call(args) {\n        // This code is terrible and should be replaced as per this issue...\n        // https://github.com/less/less.js/issues/2477\n        if (Array.isArray(args)) {\n          args = args.filter(function (item) {\n            if (item.type === 'Comment') {\n              return false;\n            }\n\n            return true;\n          }).map(function (item) {\n            if (item.type === 'Expression') {\n              var subNodes = item.value.filter(function (item) {\n                if (item.type === 'Comment') {\n                  return false;\n                }\n\n                return true;\n              });\n\n              if (subNodes.length === 1) {\n                return subNodes[0];\n              } else {\n                return new Expression(subNodes);\n              }\n            }\n\n            return item;\n          });\n        }\n\n        return this.func.apply(this, _toConsumableArray(args));\n      }\n    }]);\n\n    return functionCaller;\n  }();\n\n  // A function call node.\n  //\n\n  var Call =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Call, _Node);\n\n    function Call(name, args, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Call);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Call).call(this));\n      _this.name = name;\n      _this.args = args;\n      _this.calc = name === 'calc';\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Call, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.args) {\n          this.args = visitor.visitArray(this.args);\n        }\n      } //\n      // When evaluating a function call,\n      // we either find the function in the functionRegistry,\n      // in which case we call it, passing the  evaluated arguments,\n      // if this returns null or we cannot find the function, we\n      // simply print it out as it appeared originally [2].\n      //\n      // The reason why we evaluate the arguments, is in the case where\n      // we try to pass a variable to a function, like: `saturate(@color)`.\n      // The function should receive the value, not the variable.\n      //\n\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        /**\n         * Turn off math for calc(), and switch back on for evaluating nested functions\n         */\n        var currentMathContext = context.mathOn;\n        context.mathOn = !this.calc;\n\n        if (this.calc || context.inCalc) {\n          context.enterCalc();\n        }\n\n        var args = this.args.map(function (a) {\n          return a.eval(context);\n        });\n\n        if (this.calc || context.inCalc) {\n          context.exitCalc();\n        }\n\n        context.mathOn = currentMathContext;\n        var result;\n        var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n\n        if (funcCaller.isValid()) {\n          try {\n            result = funcCaller.call(args);\n          } catch (e) {\n            throw {\n              type: e.type || 'Runtime',\n              message: \"error evaluating function `\".concat(this.name, \"`\").concat(e.message ? \": \".concat(e.message) : ''),\n              index: this.getIndex(),\n              filename: this.fileInfo().filename,\n              line: e.lineNumber,\n              column: e.columnNumber\n            };\n          }\n\n          if (result !== null && result !== undefined) {\n            // Results that that are not nodes are cast as Anonymous nodes\n            // Falsy values or booleans are returned as empty nodes\n            if (!(result instanceof Node)) {\n              if (!result || result === true) {\n                result = new Anonymous(null);\n              } else {\n                result = new Anonymous(result.toString());\n              }\n            }\n\n            result._index = this._index;\n            result._fileInfo = this._fileInfo;\n            return result;\n          }\n        }\n\n        return new Call(this.name, args, this.getIndex(), this.fileInfo());\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(\"\".concat(this.name, \"(\"), this.fileInfo(), this.getIndex());\n\n        for (var i = 0; i < this.args.length; i++) {\n          this.args[i].genCSS(context, output);\n\n          if (i + 1 < this.args.length) {\n            output.add(', ');\n          }\n        }\n\n        output.add(')');\n      }\n    }]);\n\n    return Call;\n  }(Node);\n\n  Call.prototype.type = 'Call';\n\n  var Variable =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Variable, _Node);\n\n    function Variable(name, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Variable);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Variable).call(this));\n      _this.name = name;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Variable, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var variable;\n        var name = this.name;\n\n        if (name.indexOf('@@') === 0) {\n          name = \"@\".concat(new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value);\n        }\n\n        if (this.evaluating) {\n          throw {\n            type: 'Name',\n            message: \"Recursive variable definition for \".concat(name),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        this.evaluating = true;\n        variable = this.find(context.frames, function (frame) {\n          var v = frame.variable(name);\n\n          if (v) {\n            if (v.important) {\n              var importantScope = context.importantScope[context.importantScope.length - 1];\n              importantScope.important = v.important;\n            } // If in calc, wrap vars in a function call to cascade evaluate args first\n\n\n            if (context.inCalc) {\n              return new Call('_SELF', [v.value]).eval(context);\n            } else {\n              return v.value.eval(context);\n            }\n          }\n        });\n\n        if (variable) {\n          this.evaluating = false;\n          return variable;\n        } else {\n          throw {\n            type: 'Name',\n            message: \"variable \".concat(name, \" is undefined\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find(obj, fun) {\n        for (var i = 0, r; i < obj.length; i++) {\n          r = fun.call(obj, obj[i]);\n\n          if (r) {\n            return r;\n          }\n        }\n\n        return null;\n      }\n    }]);\n\n    return Variable;\n  }(Node);\n\n  Variable.prototype.type = 'Variable';\n\n  var Property =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Property, _Node);\n\n    function Property(name, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Property);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Property).call(this));\n      _this.name = name;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(Property, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var property;\n        var name = this.name; // TODO: shorten this reference\n\n        var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n        if (this.evaluating) {\n          throw {\n            type: 'Name',\n            message: \"Recursive property reference for \".concat(name),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        this.evaluating = true;\n        property = this.find(context.frames, function (frame) {\n          var v;\n          var vArr = frame.property(name);\n\n          if (vArr) {\n            for (var i = 0; i < vArr.length; i++) {\n              v = vArr[i];\n              vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n            }\n\n            mergeRules(vArr);\n            v = vArr[vArr.length - 1];\n\n            if (v.important) {\n              var importantScope = context.importantScope[context.importantScope.length - 1];\n              importantScope.important = v.important;\n            }\n\n            v = v.value.eval(context);\n            return v;\n          }\n        });\n\n        if (property) {\n          this.evaluating = false;\n          return property;\n        } else {\n          throw {\n            type: 'Name',\n            message: \"Property '\".concat(name, \"' is undefined\"),\n            filename: this.currentFileInfo.filename,\n            index: this.index\n          };\n        }\n      }\n    }, {\n      key: \"find\",\n      value: function find(obj, fun) {\n        for (var i = 0, r; i < obj.length; i++) {\n          r = fun.call(obj, obj[i]);\n\n          if (r) {\n            return r;\n          }\n        }\n\n        return null;\n      }\n    }]);\n\n    return Property;\n  }(Node);\n\n  Property.prototype.type = 'Property';\n\n  var Attribute =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Attribute, _Node);\n\n    function Attribute(key, op, value) {\n      var _this;\n\n      _classCallCheck(this, Attribute);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Attribute).call(this));\n      _this.key = key;\n      _this.op = op;\n      _this.value = value;\n      return _this;\n    }\n\n    _createClass(Attribute, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, this.value && this.value.eval ? this.value.eval(context) : this.value);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(this.toCSS(context));\n      }\n    }, {\n      key: \"toCSS\",\n      value: function toCSS(context) {\n        var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n        if (this.op) {\n          value += this.op;\n          value += this.value.toCSS ? this.value.toCSS(context) : this.value;\n        }\n\n        return \"[\".concat(value, \"]\");\n      }\n    }]);\n\n    return Attribute;\n  }(Node);\n\n  Attribute.prototype.type = 'Attribute';\n\n  var Quoted =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Quoted, _Node);\n\n    function Quoted(str, content, escaped, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, Quoted);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Quoted).call(this));\n      _this.escaped = escaped == null ? true : escaped;\n      _this.value = content || '';\n      _this.quote = str.charAt(0);\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.variableRegex = /@\\{([\\w-]+)\\}/g;\n      _this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n      _this.allowRoot = escaped;\n      return _this;\n    }\n\n    _createClass(Quoted, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (!this.escaped) {\n          output.add(this.quote, this.fileInfo(), this.getIndex());\n        }\n\n        output.add(this.value);\n\n        if (!this.escaped) {\n          output.add(this.quote);\n        }\n      }\n    }, {\n      key: \"containsVariables\",\n      value: function containsVariables() {\n        return this.value.match(this.variableRegex);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var that = this;\n        var value = this.value;\n\n        var variableReplacement = function variableReplacement(_, name) {\n          var v = new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\n          return v instanceof Quoted ? v.value : v.toCSS();\n        };\n\n        var propertyReplacement = function propertyReplacement(_, name) {\n          var v = new Property(\"$\".concat(name), that.getIndex(), that.fileInfo()).eval(context, true);\n          return v instanceof Quoted ? v.value : v.toCSS();\n        };\n\n        function iterativeReplace(value, regexp, replacementFnc) {\n          var evaluatedValue = value;\n\n          do {\n            value = evaluatedValue.toString();\n            evaluatedValue = value.replace(regexp, replacementFnc);\n          } while (value !== evaluatedValue);\n\n          return evaluatedValue;\n        }\n\n        value = iterativeReplace(value, this.variableRegex, variableReplacement);\n        value = iterativeReplace(value, this.propRegex, propertyReplacement);\n        return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n      }\n    }, {\n      key: \"compare\",\n      value: function compare(other) {\n        // when comparing quoted strings allow the quote to differ\n        if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n          return Node.numericCompare(this.value, other.value);\n        } else {\n          return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        }\n      }\n    }]);\n\n    return Quoted;\n  }(Node);\n\n  Quoted.prototype.type = 'Quoted';\n\n  var URL =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(URL, _Node);\n\n    function URL(val, index, currentFileInfo, isEvald) {\n      var _this;\n\n      _classCallCheck(this, URL);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(URL).call(this));\n      _this.value = val;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.isEvald = isEvald;\n      return _this;\n    }\n\n    _createClass(URL, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('url(');\n        this.value.genCSS(context, output);\n        output.add(')');\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var val = this.value.eval(context);\n        var rootpath;\n\n        if (!this.isEvald) {\n          // Add the rootpath if the URL requires a rewrite\n          rootpath = this.fileInfo() && this.fileInfo().rootpath;\n\n          if (typeof rootpath === 'string' && typeof val.value === 'string' && context.pathRequiresRewrite(val.value)) {\n            if (!val.quote) {\n              rootpath = escapePath(rootpath);\n            }\n\n            val.value = context.rewritePath(val.value, rootpath);\n          } else {\n            val.value = context.normalizePath(val.value);\n          } // Add url args if enabled\n\n\n          if (context.urlArgs) {\n            if (!val.value.match(/^\\s*data:/)) {\n              var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n              var urlArgs = delimiter + context.urlArgs;\n\n              if (val.value.indexOf('#') !== -1) {\n                val.value = val.value.replace('#', \"\".concat(urlArgs, \"#\"));\n              } else {\n                val.value += urlArgs;\n              }\n            }\n          }\n        }\n\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\n      }\n    }]);\n\n    return URL;\n  }(Node);\n\n  URL.prototype.type = 'Url';\n\n  function escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, function (match) {\n      return \"\\\\\".concat(match);\n    });\n  }\n\n  var Media =\n  /*#__PURE__*/\n  function (_AtRule) {\n    _inherits(Media, _AtRule);\n\n    function Media(value, features, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Media);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Media).call(this));\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      var selectors = new Selector([], null, null, _this._index, _this._fileInfo).createEmptySelectors();\n      _this.features = new Value(features);\n      _this.rules = [new Ruleset(selectors, value)];\n      _this.rules[0].allowImports = true;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      _this.setParent(selectors, _assertThisInitialized(_this));\n\n      _this.setParent(_this.features, _assertThisInitialized(_this));\n\n      _this.setParent(_this.rules, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Media, [{\n      key: \"isRulesetLike\",\n      value: function isRulesetLike() {\n        return true;\n      }\n    }, {\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.features) {\n          this.features = visitor.visit(this.features);\n        }\n\n        if (this.rules) {\n          this.rules = visitor.visitArray(this.rules);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('@media ', this._fileInfo, this._index);\n        this.features.genCSS(context, output);\n        this.outputRuleset(context, output, this.rules);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (!context.mediaBlocks) {\n          context.mediaBlocks = [];\n          context.mediaPath = [];\n        }\n\n        var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n\n        if (this.debugInfo) {\n          this.rules[0].debugInfo = this.debugInfo;\n          media.debugInfo = this.debugInfo;\n        }\n\n        media.features = this.features.eval(context);\n        context.mediaPath.push(media);\n        context.mediaBlocks.push(media);\n        this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n        context.frames.unshift(this.rules[0]);\n        media.rules = [this.rules[0].eval(context)];\n        context.frames.shift();\n        context.mediaPath.pop();\n        return context.mediaPath.length === 0 ? media.evalTop(context) : media.evalNested(context);\n      }\n    }, {\n      key: \"evalTop\",\n      value: function evalTop(context) {\n        var result = this; // Render all dependent Media blocks.\n\n        if (context.mediaBlocks.length > 1) {\n          var selectors = new Selector([], null, null, this.getIndex(), this.fileInfo()).createEmptySelectors();\n          result = new Ruleset(selectors, context.mediaBlocks);\n          result.multiMedia = true;\n          result.copyVisibilityInfo(this.visibilityInfo());\n          this.setParent(result, this);\n        }\n\n        delete context.mediaBlocks;\n        delete context.mediaPath;\n        return result;\n      }\n    }, {\n      key: \"evalNested\",\n      value: function evalNested(context) {\n        var i;\n        var value;\n        var path = context.mediaPath.concat([this]); // Extract the media-query conditions separated with `,` (OR).\n\n        for (i = 0; i < path.length; i++) {\n          value = path[i].features instanceof Value ? path[i].features.value : path[i].features;\n          path[i] = Array.isArray(value) ? value : [value];\n        } // Trace all permutations to generate the resulting media-query.\n        //\n        // (a, b and c) with nested (d, e) ->\n        //    a and d\n        //    a and e\n        //    b and c and d\n        //    b and c and e\n\n\n        this.features = new Value(this.permute(path).map(function (path) {\n          path = path.map(function (fragment) {\n            return fragment.toCSS ? fragment : new Anonymous(fragment);\n          });\n\n          for (i = path.length - 1; i > 0; i--) {\n            path.splice(i, 0, new Anonymous('and'));\n          }\n\n          return new Expression(path);\n        }));\n        this.setParent(this.features, this); // Fake a tree-node that doesn't output anything.\n\n        return new Ruleset([], []);\n      }\n    }, {\n      key: \"permute\",\n      value: function permute(arr) {\n        if (arr.length === 0) {\n          return [];\n        } else if (arr.length === 1) {\n          return arr[0];\n        } else {\n          var result = [];\n          var rest = this.permute(arr.slice(1));\n\n          for (var i = 0; i < rest.length; i++) {\n            for (var j = 0; j < arr[0].length; j++) {\n              result.push([arr[0][j]].concat(rest[i]));\n            }\n          }\n\n          return result;\n        }\n      }\n    }, {\n      key: \"bubbleSelectors\",\n      value: function bubbleSelectors(selectors) {\n        if (!selectors) {\n          return;\n        }\n\n        this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n        this.setParent(this.rules, this);\n      }\n    }]);\n\n    return Media;\n  }(AtRule);\n\n  Media.prototype.type = 'Media';\n\n  // CSS @import node\n  //\n  // The general strategy here is that we don't want to wait\n  // for the parsing to be completed, before we start importing\n  // the file. That's because in the context of a browser,\n  // most of the time will be spent waiting for the server to respond.\n  //\n  // On creation, we push the import path to our import queue, though\n  // `import,push`, we also pass it a callback, which it'll call once\n  // the file has been fetched, and parsed.\n  //\n\n  var Import =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Import, _Node);\n\n    function Import(path, features, options, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Import);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Import).call(this));\n      _this.options = options;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.path = path;\n      _this.features = features;\n      _this.allowRoot = true;\n\n      if (_this.options.less !== undefined || _this.options.inline) {\n        _this.css = !_this.options.less || _this.options.inline;\n      } else {\n        var pathValue = _this.getPath();\n\n        if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n          _this.css = true;\n        }\n      }\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.setParent(_this.features, _assertThisInitialized(_this));\n\n      _this.setParent(_this.path, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Import, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.features) {\n          this.features = visitor.visit(this.features);\n        }\n\n        this.path = visitor.visit(this.path);\n\n        if (!this.options.isPlugin && !this.options.inline && this.root) {\n          this.root = visitor.visit(this.root);\n        }\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        if (this.css && this.path._fileInfo.reference === undefined) {\n          output.add('@import ', this._fileInfo, this._index);\n          this.path.genCSS(context, output);\n\n          if (this.features) {\n            output.add(' ');\n            this.features.genCSS(context, output);\n          }\n\n          output.add(';');\n        }\n      }\n    }, {\n      key: \"getPath\",\n      value: function getPath() {\n        return this.path instanceof URL ? this.path.value.value : this.path.value;\n      }\n    }, {\n      key: \"isVariableImport\",\n      value: function isVariableImport() {\n        var path = this.path;\n\n        if (path instanceof URL) {\n          path = path.value;\n        }\n\n        if (path instanceof Quoted) {\n          return path.containsVariables();\n        }\n\n        return true;\n      }\n    }, {\n      key: \"evalForImport\",\n      value: function evalForImport(context) {\n        var path = this.path;\n\n        if (path instanceof URL) {\n          path = path.value;\n        }\n\n        return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n      }\n    }, {\n      key: \"evalPath\",\n      value: function evalPath(context) {\n        var path = this.path.eval(context);\n        var fileInfo = this._fileInfo;\n\n        if (!(path instanceof URL)) {\n          // Add the rootpath if the URL requires a rewrite\n          var pathValue = path.value;\n\n          if (fileInfo && pathValue && context.pathRequiresRewrite(pathValue)) {\n            path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n          } else {\n            path.value = context.normalizePath(path.value);\n          }\n        }\n\n        return path;\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = this.doEval(context);\n\n        if (this.options.reference || this.blocksVisibility()) {\n          if (result.length || result.length === 0) {\n            result.forEach(function (node) {\n              node.addVisibilityBlock();\n            });\n          } else {\n            result.addVisibilityBlock();\n          }\n        }\n\n        return result;\n      }\n    }, {\n      key: \"doEval\",\n      value: function doEval(context) {\n        var ruleset;\n        var registry;\n        var features = this.features && this.features.eval(context);\n\n        if (this.options.isPlugin) {\n          if (this.root && this.root.eval) {\n            try {\n              this.root.eval(context);\n            } catch (e) {\n              e.message = 'Plugin error during evaluation';\n              throw new LessError(e, this.root.imports, this.root.filename);\n            }\n          }\n\n          registry = context.frames[0] && context.frames[0].functionRegistry;\n\n          if (registry && this.root && this.root.functions) {\n            registry.addMultiple(this.root.functions);\n          }\n\n          return [];\n        }\n\n        if (this.skip) {\n          if (typeof this.skip === 'function') {\n            this.skip = this.skip();\n          }\n\n          if (this.skip) {\n            return [];\n          }\n        }\n\n        if (this.options.inline) {\n          var contents = new Anonymous(this.root, 0, {\n            filename: this.importedFilename,\n            reference: this.path._fileInfo && this.path._fileInfo.reference\n          }, true, true);\n          return this.features ? new Media([contents], this.features.value) : [contents];\n        } else if (this.css) {\n          var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n\n          if (!newImport.css && this.error) {\n            throw this.error;\n          }\n\n          return newImport;\n        } else {\n          ruleset = new Ruleset(null, copyArray(this.root.rules));\n          ruleset.evalImports(context);\n          return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n        }\n      }\n    }]);\n\n    return Import;\n  }(Node);\n\n  Import.prototype.type = 'Import';\n\n  var JsEvalNode =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(JsEvalNode, _Node);\n\n    function JsEvalNode() {\n      _classCallCheck(this, JsEvalNode);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(JsEvalNode).apply(this, arguments));\n    }\n\n    _createClass(JsEvalNode, [{\n      key: \"evaluateJavaScript\",\n      value: function evaluateJavaScript(expression, context) {\n        var result;\n        var that = this;\n        var evalContext = {};\n\n        if (!context.javascriptEnabled) {\n          throw {\n            message: 'Inline JavaScript is not enabled. Is it set in your options?',\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n          return that.jsify(new Variable(\"@\".concat(name), that.getIndex(), that.fileInfo()).eval(context));\n        });\n\n        try {\n          expression = new Function(\"return (\".concat(expression, \")\"));\n        } catch (e) {\n          throw {\n            message: \"JavaScript evaluation error: \".concat(e.message, \" from `\").concat(expression, \"`\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        var variables = context.frames[0].variables();\n\n        for (var k in variables) {\n          if (variables.hasOwnProperty(k)) {\n            /* jshint loopfunc:true */\n            evalContext[k.slice(1)] = {\n              value: variables[k].value,\n              toJS: function toJS() {\n                return this.value.eval(context).toCSS();\n              }\n            };\n          }\n        }\n\n        try {\n          result = expression.call(evalContext);\n        } catch (e) {\n          throw {\n            message: \"JavaScript evaluation error: '\".concat(e.name, \": \").concat(e.message.replace(/[\"]/g, '\\''), \"'\"),\n            filename: this.fileInfo().filename,\n            index: this.getIndex()\n          };\n        }\n\n        return result;\n      }\n    }, {\n      key: \"jsify\",\n      value: function jsify(obj) {\n        if (Array.isArray(obj.value) && obj.value.length > 1) {\n          return \"[\".concat(obj.value.map(function (v) {\n            return v.toCSS();\n          }).join(', '), \"]\");\n        } else {\n          return obj.toCSS();\n        }\n      }\n    }]);\n\n    return JsEvalNode;\n  }(Node);\n\n  var JavaScript =\n  /*#__PURE__*/\n  function (_JsEvalNode) {\n    _inherits(JavaScript, _JsEvalNode);\n\n    function JavaScript(string, escaped, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, JavaScript);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(JavaScript).call(this));\n      _this.escaped = escaped;\n      _this.expression = string;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      return _this;\n    }\n\n    _createClass(JavaScript, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = this.evaluateJavaScript(this.expression, context);\n\n        var type = _typeof(result);\n\n        if (type === 'number' && !isNaN(result)) {\n          return new Dimension(result);\n        } else if (type === 'string') {\n          return new Quoted(\"\\\"\".concat(result, \"\\\"\"), result, this.escaped, this._index);\n        } else if (Array.isArray(result)) {\n          return new Anonymous(result.join(', '));\n        } else {\n          return new Anonymous(result);\n        }\n      }\n    }]);\n\n    return JavaScript;\n  }(JsEvalNode);\n\n  JavaScript.prototype.type = 'JavaScript';\n\n  var Assignment =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Assignment, _Node);\n\n    function Assignment(key, val) {\n      var _this;\n\n      _classCallCheck(this, Assignment);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Assignment).call(this));\n      _this.key = key;\n      _this.value = val;\n      return _this;\n    }\n\n    _createClass(Assignment, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.value = visitor.visit(this.value);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (this.value.eval) {\n          return new Assignment(this.key, this.value.eval(context));\n        }\n\n        return this;\n      }\n    }, {\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add(\"\".concat(this.key, \"=\"));\n\n        if (this.value.genCSS) {\n          this.value.genCSS(context, output);\n        } else {\n          output.add(this.value);\n        }\n      }\n    }]);\n\n    return Assignment;\n  }(Node);\n\n  Assignment.prototype.type = 'Assignment';\n\n  var Condition =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Condition, _Node);\n\n    function Condition(op, l, r, i, negate) {\n      var _this;\n\n      _classCallCheck(this, Condition);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Condition).call(this));\n      _this.op = op.trim();\n      _this.lvalue = l;\n      _this.rvalue = r;\n      _this._index = i;\n      _this.negate = negate;\n      return _this;\n    }\n\n    _createClass(Condition, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.lvalue = visitor.visit(this.lvalue);\n        this.rvalue = visitor.visit(this.rvalue);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var result = function (op, a, b) {\n          switch (op) {\n            case 'and':\n              return a && b;\n\n            case 'or':\n              return a || b;\n\n            default:\n              switch (Node.compare(a, b)) {\n                case -1:\n                  return op === '<' || op === '=<' || op === '<=';\n\n                case 0:\n                  return op === '=' || op === '>=' || op === '=<' || op === '<=';\n\n                case 1:\n                  return op === '>' || op === '>=';\n\n                default:\n                  return false;\n              }\n\n          }\n        }(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n        return this.negate ? !result : result;\n      }\n    }]);\n\n    return Condition;\n  }(Node);\n\n  Condition.prototype.type = 'Condition';\n\n  var UnicodeDescriptor =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(UnicodeDescriptor, _Node);\n\n    function UnicodeDescriptor(value) {\n      var _this;\n\n      _classCallCheck(this, UnicodeDescriptor);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(UnicodeDescriptor).call(this));\n      _this.value = value;\n      return _this;\n    }\n\n    return UnicodeDescriptor;\n  }(Node);\n\n  UnicodeDescriptor.prototype.type = 'UnicodeDescriptor';\n\n  var Negative =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Negative, _Node);\n\n    function Negative(node) {\n      var _this;\n\n      _classCallCheck(this, Negative);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Negative).call(this));\n      _this.value = node;\n      return _this;\n    }\n\n    _createClass(Negative, [{\n      key: \"genCSS\",\n      value: function genCSS(context, output) {\n        output.add('-');\n        this.value.genCSS(context, output);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        if (context.isMathOn()) {\n          return new Operation('*', [new Dimension(-1), this.value]).eval(context);\n        }\n\n        return new Negative(this.value.eval(context));\n      }\n    }]);\n\n    return Negative;\n  }(Node);\n\n  Negative.prototype.type = 'Negative';\n\n  var Extend =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(Extend, _Node);\n\n    function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Extend);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Extend).call(this));\n      _this.selector = selector;\n      _this.option = option;\n      _this.object_id = Extend.next_id++;\n      _this.parent_ids = [_this.object_id];\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n\n      switch (option) {\n        case 'all':\n          _this.allowBefore = true;\n          _this.allowAfter = true;\n          break;\n\n        default:\n          _this.allowBefore = false;\n          _this.allowAfter = false;\n          break;\n      }\n\n      _this.setParent(_this.selector, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(Extend, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        this.selector = visitor.visit(this.selector);\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(context) {\n        return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n      } // it concatenates (joins) all selectors in selector array\n\n    }, {\n      key: \"findSelfSelectors\",\n      value: function findSelfSelectors(selectors) {\n        var selfElements = [];\n        var i;\n        var selectorElements;\n\n        for (i = 0; i < selectors.length; i++) {\n          selectorElements = selectors[i].elements; // duplicate the logic in genCSS function inside the selector node.\n          // future TODO - move both logics into the selector joiner visitor\n\n          if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n            selectorElements[0].combinator.value = ' ';\n          }\n\n          selfElements = selfElements.concat(selectors[i].elements);\n        }\n\n        this.selfSelectors = [new Selector(selfElements)];\n        this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n      }\n    }]);\n\n    return Extend;\n  }(Node);\n\n  Extend.next_id = 0;\n  Extend.prototype.type = 'Extend';\n\n  var VariableCall =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(VariableCall, _Node);\n\n    function VariableCall(variable, index, currentFileInfo) {\n      var _this;\n\n      _classCallCheck(this, VariableCall);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(VariableCall).call(this));\n      _this.variable = variable;\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(VariableCall, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var rules;\n        var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n        var error = new LessError({\n          message: \"Could not evaluate variable call \".concat(this.variable)\n        });\n\n        if (!detachedRuleset.ruleset) {\n          if (detachedRuleset.rules) {\n            rules = detachedRuleset;\n          } else if (Array.isArray(detachedRuleset)) {\n            rules = new Ruleset('', detachedRuleset);\n          } else if (Array.isArray(detachedRuleset.value)) {\n            rules = new Ruleset('', detachedRuleset.value);\n          } else {\n            throw error;\n          }\n\n          detachedRuleset = new DetachedRuleset(rules);\n        }\n\n        if (detachedRuleset.ruleset) {\n          return detachedRuleset.callEval(context);\n        }\n\n        throw error;\n      }\n    }]);\n\n    return VariableCall;\n  }(Node);\n\n  VariableCall.prototype.type = 'VariableCall';\n\n  var NamespaceValue =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(NamespaceValue, _Node);\n\n    function NamespaceValue(ruleCall, lookups, important, index, fileInfo) {\n      var _this;\n\n      _classCallCheck(this, NamespaceValue);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NamespaceValue).call(this));\n      _this.value = ruleCall;\n      _this.lookups = lookups;\n      _this.important = important;\n      _this._index = index;\n      _this._fileInfo = fileInfo;\n      return _this;\n    }\n\n    _createClass(NamespaceValue, [{\n      key: \"eval\",\n      value: function _eval(context) {\n        var i;\n        var name;\n        var rules = this.value.eval(context);\n\n        for (i = 0; i < this.lookups.length; i++) {\n          name = this.lookups[i];\n          /**\n           * Eval'd DRs return rulesets.\n           * Eval'd mixins return rules, so let's make a ruleset if we need it.\n           * We need to do this because of late parsing of values\n           */\n\n          if (Array.isArray(rules)) {\n            rules = new Ruleset([new Selector()], rules);\n          }\n\n          if (name === '') {\n            rules = rules.lastDeclaration();\n          } else if (name.charAt(0) === '@') {\n            if (name.charAt(1) === '@') {\n              name = \"@\".concat(new Variable(name.substr(1)).eval(context).value);\n            }\n\n            if (rules.variables) {\n              rules = rules.variable(name);\n            }\n\n            if (!rules) {\n              throw {\n                type: 'Name',\n                message: \"variable \".concat(name, \" not found\"),\n                filename: this.fileInfo().filename,\n                index: this.getIndex()\n              };\n            }\n          } else {\n            if (name.substring(0, 2) === '$@') {\n              name = \"$\".concat(new Variable(name.substr(1)).eval(context).value);\n            } else {\n              name = name.charAt(0) === '$' ? name : \"$\".concat(name);\n            }\n\n            if (rules.properties) {\n              rules = rules.property(name);\n            }\n\n            if (!rules) {\n              throw {\n                type: 'Name',\n                message: \"property \\\"\".concat(name.substr(1), \"\\\" not found\"),\n                filename: this.fileInfo().filename,\n                index: this.getIndex()\n              };\n            } // Properties are an array of values, since a ruleset can have multiple props.\n            // We pick the last one (the \"cascaded\" value)\n\n\n            rules = rules[rules.length - 1];\n          }\n\n          if (rules.value) {\n            rules = rules.eval(context).value;\n          }\n\n          if (rules.ruleset) {\n            rules = rules.ruleset.eval(context);\n          }\n        }\n\n        return rules;\n      }\n    }]);\n\n    return NamespaceValue;\n  }(Node);\n\n  NamespaceValue.prototype.type = 'NamespaceValue';\n\n  var Definition =\n  /*#__PURE__*/\n  function (_Ruleset) {\n    _inherits(Definition, _Ruleset);\n\n    function Definition(name, params, rules, condition, variadic, frames, visibilityInfo) {\n      var _this;\n\n      _classCallCheck(this, Definition);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Definition).call(this));\n      _this.name = name || 'anonymous mixin';\n      _this.selectors = [new Selector([new Element(null, name, false, _this._index, _this._fileInfo)])];\n      _this.params = params;\n      _this.condition = condition;\n      _this.variadic = variadic;\n      _this.arity = params.length;\n      _this.rules = rules;\n      _this._lookups = {};\n      var optionalParameters = [];\n      _this.required = params.reduce(function (count, p) {\n        if (!p.name || p.name && !p.value) {\n          return count + 1;\n        } else {\n          optionalParameters.push(p.name);\n          return count;\n        }\n      }, 0);\n      _this.optionalParameters = optionalParameters;\n      _this.frames = frames;\n\n      _this.copyVisibilityInfo(visibilityInfo);\n\n      _this.allowRoot = true;\n      return _this;\n    }\n\n    _createClass(Definition, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.params && this.params.length) {\n          this.params = visitor.visitArray(this.params);\n        }\n\n        this.rules = visitor.visitArray(this.rules);\n\n        if (this.condition) {\n          this.condition = visitor.visit(this.condition);\n        }\n      }\n    }, {\n      key: \"evalParams\",\n      value: function evalParams(context, mixinEnv, args, evaldArguments) {\n        /* jshint boss:true */\n        var frame = new Ruleset(null, null);\n        var varargs;\n        var arg;\n        var params = copyArray(this.params);\n        var i;\n        var j;\n        var val;\n        var name;\n        var isNamedFound;\n        var argIndex;\n        var argsLength = 0;\n\n        if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n          frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n        }\n\n        mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n        if (args) {\n          args = copyArray(args);\n          argsLength = args.length;\n\n          for (i = 0; i < argsLength; i++) {\n            arg = args[i];\n\n            if (name = arg && arg.name) {\n              isNamedFound = false;\n\n              for (j = 0; j < params.length; j++) {\n                if (!evaldArguments[j] && name === params[j].name) {\n                  evaldArguments[j] = arg.value.eval(context);\n                  frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                  isNamedFound = true;\n                  break;\n                }\n              }\n\n              if (isNamedFound) {\n                args.splice(i, 1);\n                i--;\n                continue;\n              } else {\n                throw {\n                  type: 'Runtime',\n                  message: \"Named argument for \".concat(this.name, \" \").concat(args[i].name, \" not found\")\n                };\n              }\n            }\n          }\n        }\n\n        argIndex = 0;\n\n        for (i = 0; i < params.length; i++) {\n          if (evaldArguments[i]) {\n            continue;\n          }\n\n          arg = args && args[argIndex];\n\n          if (name = params[i].name) {\n            if (params[i].variadic) {\n              varargs = [];\n\n              for (j = argIndex; j < argsLength; j++) {\n                varargs.push(args[j].value.eval(context));\n              }\n\n              frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n            } else {\n              val = arg && arg.value;\n\n              if (val) {\n                // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                if (Array.isArray(val)) {\n                  val = new DetachedRuleset(new Ruleset('', val));\n                } else {\n                  val = val.eval(context);\n                }\n              } else if (params[i].value) {\n                val = params[i].value.eval(mixinEnv);\n                frame.resetCache();\n              } else {\n                throw {\n                  type: 'Runtime',\n                  message: \"wrong number of arguments for \".concat(this.name, \" (\").concat(argsLength, \" for \").concat(this.arity, \")\")\n                };\n              }\n\n              frame.prependRule(new Declaration(name, val));\n              evaldArguments[i] = val;\n            }\n          }\n\n          if (params[i].variadic && args) {\n            for (j = argIndex; j < argsLength; j++) {\n              evaldArguments[j] = args[j].value.eval(context);\n            }\n          }\n\n          argIndex++;\n        }\n\n        return frame;\n      }\n    }, {\n      key: \"makeImportant\",\n      value: function makeImportant() {\n        var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n          if (r.makeImportant) {\n            return r.makeImportant(true);\n          } else {\n            return r;\n          }\n        });\n        var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n        return result;\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n      }\n    }, {\n      key: \"evalCall\",\n      value: function evalCall(context, args, important) {\n        var _arguments = [];\n        var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n        var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n        var rules;\n        var ruleset;\n        frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n        rules = copyArray(this.rules);\n        ruleset = new Ruleset(null, rules);\n        ruleset.originalRuleset = this;\n        ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n\n        if (important) {\n          ruleset = ruleset.makeImportant();\n        }\n\n        return ruleset;\n      }\n    }, {\n      key: \"matchCondition\",\n      value: function matchCondition(args, context) {\n        if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context,\n        /* the parameter variables */\n        new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])].concat(this.frames || []) // the parent namespace/mixin frames\n        .concat(context.frames)))) {\n          // the current environment frames\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"matchArgs\",\n      value: function matchArgs(args, context) {\n        var allArgsCnt = args && args.length || 0;\n        var len;\n        var optionalParameters = this.optionalParameters;\n        var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n          if (optionalParameters.indexOf(p.name) < 0) {\n            return count + 1;\n          } else {\n            return count;\n          }\n        }, 0);\n\n        if (!this.variadic) {\n          if (requiredArgsCnt < this.required) {\n            return false;\n          }\n\n          if (allArgsCnt > this.params.length) {\n            return false;\n          }\n        } else {\n          if (requiredArgsCnt < this.required - 1) {\n            return false;\n          }\n        } // check patterns\n\n\n        len = Math.min(requiredArgsCnt, this.arity);\n\n        for (var i = 0; i < len; i++) {\n          if (!this.params[i].name && !this.params[i].variadic) {\n            if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n    }]);\n\n    return Definition;\n  }(Ruleset);\n\n  Definition.prototype.type = 'MixinDefinition';\n  Definition.prototype.evalFirst = true;\n\n  var MixinCall =\n  /*#__PURE__*/\n  function (_Node) {\n    _inherits(MixinCall, _Node);\n\n    function MixinCall(elements, args, index, currentFileInfo, important) {\n      var _this;\n\n      _classCallCheck(this, MixinCall);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MixinCall).call(this));\n      _this.selector = new Selector(elements);\n      _this.arguments = args || [];\n      _this._index = index;\n      _this._fileInfo = currentFileInfo;\n      _this.important = important;\n      _this.allowRoot = true;\n\n      _this.setParent(_this.selector, _assertThisInitialized(_this));\n\n      return _this;\n    }\n\n    _createClass(MixinCall, [{\n      key: \"accept\",\n      value: function accept(visitor) {\n        if (this.selector) {\n          this.selector = visitor.visit(this.selector);\n        }\n\n        if (this.arguments.length) {\n          this.arguments = visitor.visitArray(this.arguments);\n        }\n      }\n    }, {\n      key: \"eval\",\n      value: function _eval(context) {\n        var mixins;\n        var mixin;\n        var mixinPath;\n        var args = [];\n        var arg;\n        var argValue;\n        var rules = [];\n        var match = false;\n        var i;\n        var m;\n        var f;\n        var isRecursive;\n        var isOneFound;\n        var candidates = [];\n        var candidate;\n        var conditionResult = [];\n        var defaultResult;\n        var defFalseEitherCase = -1;\n        var defNone = 0;\n        var defTrue = 1;\n        var defFalse = 2;\n        var count;\n        var originalRuleset;\n        var noArgumentsFilter;\n        this.selector = this.selector.eval(context);\n\n        function calcDefGroup(mixin, mixinPath) {\n          var f;\n          var p;\n          var namespace;\n\n          for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n              namespace = mixinPath[p];\n\n              if (namespace.matchCondition) {\n                conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n              }\n            }\n\n            if (mixin.matchCondition) {\n              conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n          }\n\n          if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n              return conditionResult[1] ? defTrue : defFalse;\n            }\n\n            return defNone;\n          }\n\n          return defFalseEitherCase;\n        }\n\n        for (i = 0; i < this.arguments.length; i++) {\n          arg = this.arguments[i];\n          argValue = arg.value.eval(context);\n\n          if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n\n            for (m = 0; m < argValue.length; m++) {\n              args.push({\n                value: argValue[m]\n              });\n            }\n          } else {\n            args.push({\n              name: arg.name,\n              value: argValue\n            });\n          }\n        }\n\n        noArgumentsFilter = function noArgumentsFilter(rule) {\n          return rule.matchArgs(null, context);\n        };\n\n        for (i = 0; i < context.frames.length; i++) {\n          if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true; // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n              mixin = mixins[m].rule;\n              mixinPath = mixins[m].path;\n              isRecursive = false;\n\n              for (f = 0; f < context.frames.length; f++) {\n                if (!(mixin instanceof Definition) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                  isRecursive = true;\n                  break;\n                }\n              }\n\n              if (isRecursive) {\n                continue;\n              }\n\n              if (mixin.matchArgs(args, context)) {\n                candidate = {\n                  mixin: mixin,\n                  group: calcDefGroup(mixin, mixinPath)\n                };\n\n                if (candidate.group !== defFalseEitherCase) {\n                  candidates.push(candidate);\n                }\n\n                match = true;\n              }\n            }\n\n            defaultFunc.reset();\n            count = [0, 0, 0];\n\n            for (m = 0; m < candidates.length; m++) {\n              count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n              defaultResult = defFalse;\n            } else {\n              defaultResult = defTrue;\n\n              if (count[defTrue] + count[defFalse] > 1) {\n                throw {\n                  type: 'Runtime',\n                  message: \"Ambiguous use of `default()` found when matching for `\".concat(this.format(args), \"`\"),\n                  index: this.getIndex(),\n                  filename: this.fileInfo().filename\n                };\n              }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n              candidate = candidates[m].group;\n\n              if (candidate === defNone || candidate === defaultResult) {\n                try {\n                  mixin = candidates[m].mixin;\n\n                  if (!(mixin instanceof Definition)) {\n                    originalRuleset = mixin.originalRuleset || mixin;\n                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                    mixin.originalRuleset = originalRuleset;\n                  }\n\n                  var newRules = mixin.evalCall(context, args, this.important).rules;\n\n                  this._setVisibilityToReplacement(newRules);\n\n                  Array.prototype.push.apply(rules, newRules);\n                } catch (e) {\n                  throw {\n                    message: e.message,\n                    index: this.getIndex(),\n                    filename: this.fileInfo().filename,\n                    stack: e.stack\n                  };\n                }\n              }\n            }\n\n            if (match) {\n              return rules;\n            }\n          }\n        }\n\n        if (isOneFound) {\n          throw {\n            type: 'Runtime',\n            message: \"No matching definition was found for `\".concat(this.format(args), \"`\"),\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n          };\n        } else {\n          throw {\n            type: 'Name',\n            message: \"\".concat(this.selector.toCSS().trim(), \" is undefined\"),\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n          };\n        }\n      }\n    }, {\n      key: \"_setVisibilityToReplacement\",\n      value: function _setVisibilityToReplacement(replacement) {\n        var i;\n        var rule;\n\n        if (this.blocksVisibility()) {\n          for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n          }\n        }\n      }\n    }, {\n      key: \"format\",\n      value: function format(args) {\n        return \"\".concat(this.selector.toCSS().trim(), \"(\").concat(args ? args.map(function (a) {\n          var argValue = '';\n\n          if (a.name) {\n            argValue += \"\".concat(a.name, \":\");\n          }\n\n          if (a.value.toCSS) {\n            argValue += a.value.toCSS();\n          } else {\n            argValue += '???';\n          }\n\n          return argValue;\n        }).join(', ') : '', \")\");\n      }\n    }]);\n\n    return MixinCall;\n  }(Node);\n\n  MixinCall.prototype.type = 'MixinCall';\n\n  var tree = {\n    Node: Node,\n    Color: Color,\n    AtRule: AtRule,\n    DetachedRuleset: DetachedRuleset,\n    Operation: Operation,\n    Dimension: Dimension,\n    Unit: Unit,\n    Keyword: Keyword,\n    Variable: Variable,\n    Property: Property,\n    Ruleset: Ruleset,\n    Element: Element,\n    Attribute: Attribute,\n    Combinator: Combinator,\n    Selector: Selector,\n    Quoted: Quoted,\n    Expression: Expression,\n    Declaration: Declaration,\n    Call: Call,\n    URL: URL,\n    Import: Import,\n    Comment: Comment,\n    Anonymous: Anonymous,\n    Value: Value,\n    JavaScript: JavaScript,\n    Assignment: Assignment,\n    Condition: Condition,\n    Paren: Paren,\n    Media: Media,\n    UnicodeDescriptor: UnicodeDescriptor,\n    Negative: Negative,\n    Extend: Extend,\n    VariableCall: VariableCall,\n    NamespaceValue: NamespaceValue,\n    mixin: {\n      Call: MixinCall,\n      Definition: Definition\n    }\n  };\n\n  var logger = {\n    error: function error(msg) {\n      this._fireEvent('error', msg);\n    },\n    warn: function warn(msg) {\n      this._fireEvent('warn', msg);\n    },\n    info: function info(msg) {\n      this._fireEvent('info', msg);\n    },\n    debug: function debug(msg) {\n      this._fireEvent('debug', msg);\n    },\n    addListener: function addListener(listener) {\n      this._listeners.push(listener);\n    },\n    removeListener: function removeListener(listener) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        if (this._listeners[i] === listener) {\n          this._listeners.splice(i, 1);\n\n          return;\n        }\n      }\n    },\n    _fireEvent: function _fireEvent(type, msg) {\n      for (var i = 0; i < this._listeners.length; i++) {\n        var logFunction = this._listeners[i][type];\n\n        if (logFunction) {\n          logFunction(msg);\n        }\n      }\n    },\n    _listeners: []\n  };\n\n  var environment =\n  /*#__PURE__*/\n  function () {\n    function environment(externalEnvironment, fileManagers) {\n      _classCallCheck(this, environment);\n\n      this.fileManagers = fileManagers || [];\n      externalEnvironment = externalEnvironment || {};\n      var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n      var requiredFunctions = [];\n      var functions = requiredFunctions.concat(optionalFunctions);\n\n      for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i];\n        var environmentFunc = externalEnvironment[propName];\n\n        if (environmentFunc) {\n          this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n          this.warn(\"missing required function in environment - \".concat(propName));\n        }\n      }\n    }\n\n    _createClass(environment, [{\n      key: \"getFileManager\",\n      value: function getFileManager(filename, currentDirectory, options, environment, isSync) {\n        if (!filename) {\n          logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n        }\n\n        if (currentDirectory == null) {\n          logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n        }\n\n        var fileManagers = this.fileManagers;\n\n        if (options.pluginManager) {\n          fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n        }\n\n        for (var i = fileManagers.length - 1; i >= 0; i--) {\n          var fileManager = fileManagers[i];\n\n          if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n            return fileManager;\n          }\n        }\n\n        return null;\n      }\n    }, {\n      key: \"addFileManager\",\n      value: function addFileManager(fileManager) {\n        this.fileManagers.push(fileManager);\n      }\n    }, {\n      key: \"clearFileManagers\",\n      value: function clearFileManagers() {\n        this.fileManagers = [];\n      }\n    }]);\n\n    return environment;\n  }();\n\n  var AbstractFileManager =\n  /*#__PURE__*/\n  function () {\n    function AbstractFileManager() {\n      _classCallCheck(this, AbstractFileManager);\n    }\n\n    _createClass(AbstractFileManager, [{\n      key: \"getPath\",\n      value: function getPath(filename) {\n        var j = filename.lastIndexOf('?');\n\n        if (j > 0) {\n          filename = filename.slice(0, j);\n        }\n\n        j = filename.lastIndexOf('/');\n\n        if (j < 0) {\n          j = filename.lastIndexOf('\\\\');\n        }\n\n        if (j < 0) {\n          return '';\n        }\n\n        return filename.slice(0, j + 1);\n      }\n    }, {\n      key: \"tryAppendExtension\",\n      value: function tryAppendExtension(path, ext) {\n        return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n      }\n    }, {\n      key: \"tryAppendLessExtension\",\n      value: function tryAppendLessExtension(path) {\n        return this.tryAppendExtension(path, '.less');\n      }\n    }, {\n      key: \"supportsSync\",\n      value: function supportsSync() {\n        return false;\n      }\n    }, {\n      key: \"alwaysMakePathsAbsolute\",\n      value: function alwaysMakePathsAbsolute() {\n        return false;\n      }\n    }, {\n      key: \"isPathAbsolute\",\n      value: function isPathAbsolute(filename) {\n        return /^(?:[a-z-]+:|\\/|\\\\|#)/i.test(filename);\n      } // TODO: pull out / replace?\n\n    }, {\n      key: \"join\",\n      value: function join(basePath, laterPath) {\n        if (!basePath) {\n          return laterPath;\n        }\n\n        return basePath + laterPath;\n      }\n    }, {\n      key: \"pathDiff\",\n      value: function pathDiff(url, baseUrl) {\n        // diff between two paths to create a relative path\n        var urlParts = this.extractUrlParts(url);\n        var baseUrlParts = this.extractUrlParts(baseUrl);\n        var i;\n        var max;\n        var urlDirectories;\n        var baseUrlDirectories;\n        var diff = '';\n\n        if (urlParts.hostPart !== baseUrlParts.hostPart) {\n          return '';\n        }\n\n        max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n\n        for (i = 0; i < max; i++) {\n          if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n            break;\n          }\n        }\n\n        baseUrlDirectories = baseUrlParts.directories.slice(i);\n        urlDirectories = urlParts.directories.slice(i);\n\n        for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n          diff += '../';\n        }\n\n        for (i = 0; i < urlDirectories.length - 1; i++) {\n          diff += \"\".concat(urlDirectories[i], \"/\");\n        }\n\n        return diff;\n      }\n    }, {\n      key: \"extractUrlParts\",\n      // helper function, not part of API\n      value: function extractUrlParts(url, baseUrl) {\n        // urlParts[1] = protocol://hostname/ OR /\n        // urlParts[2] = / if path relative to host base\n        // urlParts[3] = directories\n        // urlParts[4] = filename\n        // urlParts[5] = parameters\n        var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n        var urlParts = url.match(urlPartsRegex);\n        var returner = {};\n        var rawDirectories = [];\n        var directories = [];\n        var i;\n        var baseUrlParts;\n\n        if (!urlParts) {\n          throw new Error(\"Could not parse sheet href - '\".concat(url, \"'\"));\n        } // Stylesheets in IE don't always return the full path\n\n\n        if (baseUrl && (!urlParts[1] || urlParts[2])) {\n          baseUrlParts = baseUrl.match(urlPartsRegex);\n\n          if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\".concat(baseUrl, \"'\"));\n          }\n\n          urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n\n          if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n          }\n        }\n\n        if (urlParts[3]) {\n          rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/'); // collapse '..' and skip '.'\n\n          for (i = 0; i < rawDirectories.length; i++) {\n            if (rawDirectories[i] === '..') {\n              directories.pop();\n            } else if (rawDirectories[i] !== '.') {\n              directories.push(rawDirectories[i]);\n            }\n          }\n        }\n\n        returner.hostPart = urlParts[1];\n        returner.directories = directories;\n        returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n        returner.path = (urlParts[1] || '') + directories.join('/');\n        returner.filename = urlParts[4];\n        returner.fileUrl = returner.path + (urlParts[4] || '');\n        returner.url = returner.fileUrl + (urlParts[5] || '');\n        return returner;\n      }\n    }]);\n\n    return AbstractFileManager;\n  }();\n\n  var AbstractPluginLoader =\n  /*#__PURE__*/\n  function () {\n    function AbstractPluginLoader() {\n      _classCallCheck(this, AbstractPluginLoader);\n\n      // Implemented by Node.js plugin loader\n      this.require = function () {\n        return null;\n      };\n    }\n\n    _createClass(AbstractPluginLoader, [{\n      key: \"evalPlugin\",\n      value: function evalPlugin(contents, context, imports, pluginOptions, fileInfo) {\n        var loader;\n        var registry;\n        var pluginObj;\n        var localModule;\n        var pluginManager;\n        var filename;\n        var result;\n        pluginManager = context.pluginManager;\n\n        if (fileInfo) {\n          if (typeof fileInfo === 'string') {\n            filename = fileInfo;\n          } else {\n            filename = fileInfo.filename;\n          }\n        }\n\n        var shortname = new this.less.FileManager().extractUrlParts(filename).filename;\n\n        if (filename) {\n          pluginObj = pluginManager.get(filename);\n\n          if (pluginObj) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n            if (result) {\n              return result;\n            }\n\n            try {\n              if (pluginObj.use) {\n                pluginObj.use.call(this.context, pluginObj);\n              }\n            } catch (e) {\n              e.message = e.message || 'Error during @plugin call';\n              return new LessError(e, imports, filename);\n            }\n\n            return pluginObj;\n          }\n        }\n\n        localModule = {\n          exports: {},\n          pluginManager: pluginManager,\n          fileInfo: fileInfo\n        };\n        registry = functionRegistry.create();\n\n        var registerPlugin = function registerPlugin(obj) {\n          pluginObj = obj;\n        };\n\n        try {\n          loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n          loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n        } catch (e) {\n          return new LessError(e, imports, filename);\n        }\n\n        if (!pluginObj) {\n          pluginObj = localModule.exports;\n        }\n\n        pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n        if (pluginObj instanceof LessError) {\n          return pluginObj;\n        }\n\n        if (pluginObj) {\n          pluginObj.imports = imports;\n          pluginObj.filename = filename; // For < 3.x (or unspecified minVersion) - setOptions() before install()\n\n          if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n            if (result) {\n              return result;\n            }\n          } // Run on first load\n\n\n          pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n          pluginObj.functions = registry.getLocalFunctions(); // Need to call setOptions again because the pluginObj might have functions\n\n          result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n          if (result) {\n            return result;\n          } // Run every @plugin call\n\n\n          try {\n            if (pluginObj.use) {\n              pluginObj.use.call(this.context, pluginObj);\n            }\n          } catch (e) {\n            e.message = e.message || 'Error during @plugin call';\n            return new LessError(e, imports, filename);\n          }\n        } else {\n          return new LessError({\n            message: 'Not a valid plugin'\n          }, imports, filename);\n        }\n\n        return pluginObj;\n      }\n    }, {\n      key: \"trySetOptions\",\n      value: function trySetOptions(plugin, filename, name, options) {\n        if (options && !plugin.setOptions) {\n          return new LessError({\n            message: \"Options have been provided but the plugin \".concat(name, \" does not support any options.\")\n          });\n        }\n\n        try {\n          plugin.setOptions && plugin.setOptions(options);\n        } catch (e) {\n          return new LessError(e);\n        }\n      }\n    }, {\n      key: \"validatePlugin\",\n      value: function validatePlugin(plugin, filename, name) {\n        if (plugin) {\n          // support plugins being a function\n          // so that the plugin can be more usable programmatically\n          if (typeof plugin === 'function') {\n            plugin = new plugin();\n          }\n\n          if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n              return new LessError({\n                message: \"Plugin \".concat(name, \" requires version \").concat(this.versionToString(plugin.minVersion))\n              });\n            }\n          }\n\n          return plugin;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"compareVersion\",\n      value: function compareVersion(aVersion, bVersion) {\n        if (typeof aVersion === 'string') {\n          aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n          aVersion.shift();\n        }\n\n        for (var i = 0; i < aVersion.length; i++) {\n          if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n          }\n        }\n\n        return 0;\n      }\n    }, {\n      key: \"versionToString\",\n      value: function versionToString(version) {\n        var versionString = '';\n\n        for (var i = 0; i < version.length; i++) {\n          versionString += (versionString ? '.' : '') + version[i];\n        }\n\n        return versionString;\n      }\n    }, {\n      key: \"printUsage\",\n      value: function printUsage(plugins) {\n        for (var i = 0; i < plugins.length; i++) {\n          var plugin = plugins[i];\n\n          if (plugin.printUsage) {\n            plugin.printUsage();\n          }\n        }\n      }\n    }]);\n\n    return AbstractPluginLoader;\n  }();\n\n  var _visitArgs = {\n    visitDeeper: true\n  };\n  var _hasIndexed = false;\n\n  function _noop(node) {\n    return node;\n  }\n\n  function indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key;\n    var child;\n\n    for (key in parent) {\n      /* eslint guard-for-in: 0 */\n      child = parent[key];\n\n      switch (_typeof(child)) {\n        case 'function':\n          // ignore bound functions directly on tree which do not have a prototype\n          // or aren't nodes\n          if (child.prototype && child.prototype.type) {\n            child.prototype.typeIndex = ticker++;\n          }\n\n          break;\n\n        case 'object':\n          ticker = indexNodeTypes(child, ticker);\n          break;\n      }\n    }\n\n    return ticker;\n  }\n\n  var Visitor =\n  /*#__PURE__*/\n  function () {\n    function Visitor(implementation) {\n      _classCallCheck(this, Visitor);\n\n      this._implementation = implementation;\n      this._visitInCache = {};\n      this._visitOutCache = {};\n\n      if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n      }\n    }\n\n    _createClass(Visitor, [{\n      key: \"visit\",\n      value: function visit(node) {\n        if (!node) {\n          return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n\n        if (!nodeTypeIndex) {\n          // MixinCall args aren't a node type?\n          if (node.value && node.value.typeIndex) {\n            this.visit(node.value);\n          }\n\n          return node;\n        }\n\n        var impl = this._implementation;\n        var func = this._visitInCache[nodeTypeIndex];\n        var funcOut = this._visitOutCache[nodeTypeIndex];\n        var visitArgs = _visitArgs;\n        var fnName;\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n          fnName = \"visit\".concat(node.type);\n          func = impl[fnName] || _noop;\n          funcOut = impl[\"\".concat(fnName, \"Out\")] || _noop;\n          this._visitInCache[nodeTypeIndex] = func;\n          this._visitOutCache[nodeTypeIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n          var newNode = func.call(impl, node, visitArgs);\n\n          if (node && impl.isReplacing) {\n            node = newNode;\n          }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n          node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n          funcOut.call(impl, node);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"visitArray\",\n      value: function visitArray(nodes, nonReplacing) {\n        if (!nodes) {\n          return nodes;\n        }\n\n        var cnt = nodes.length;\n        var i; // Non-replacing\n\n        if (nonReplacing || !this._implementation.isReplacing) {\n          for (i = 0; i < cnt; i++) {\n            this.visit(nodes[i]);\n          }\n\n          return nodes;\n        } // Replacing\n\n\n        var out = [];\n\n        for (i = 0; i < cnt; i++) {\n          var evald = this.visit(nodes[i]);\n\n          if (evald === undefined) {\n            continue;\n          }\n\n          if (!evald.splice) {\n            out.push(evald);\n          } else if (evald.length) {\n            this.flatten(evald, out);\n          }\n        }\n\n        return out;\n      }\n    }, {\n      key: \"flatten\",\n      value: function flatten(arr, out) {\n        if (!out) {\n          out = [];\n        }\n\n        var cnt;\n        var i;\n        var item;\n        var nestedCnt;\n        var j;\n        var nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n          item = arr[i];\n\n          if (item === undefined) {\n            continue;\n          }\n\n          if (!item.splice) {\n            out.push(item);\n            continue;\n          }\n\n          for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n            nestedItem = item[j];\n\n            if (nestedItem === undefined) {\n              continue;\n            }\n\n            if (!nestedItem.splice) {\n              out.push(nestedItem);\n            } else if (nestedItem.length) {\n              this.flatten(nestedItem, out);\n            }\n          }\n        }\n\n        return out;\n      }\n    }]);\n\n    return Visitor;\n  }();\n\n  var ImportSequencer =\n  /*#__PURE__*/\n  function () {\n    function ImportSequencer(onSequencerEmpty) {\n      _classCallCheck(this, ImportSequencer);\n\n      this.imports = [];\n      this.variableImports = [];\n      this._onSequencerEmpty = onSequencerEmpty;\n      this._currentDepth = 0;\n    }\n\n    _createClass(ImportSequencer, [{\n      key: \"addImport\",\n      value: function addImport(callback) {\n        var importSequencer = this;\n        var importItem = {\n          callback: callback,\n          args: null,\n          isReady: false\n        };\n        this.imports.push(importItem);\n        return function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          importItem.args = Array.prototype.slice.call(args, 0);\n          importItem.isReady = true;\n          importSequencer.tryRun();\n        };\n      }\n    }, {\n      key: \"addVariableImport\",\n      value: function addVariableImport(callback) {\n        this.variableImports.push(callback);\n      }\n    }, {\n      key: \"tryRun\",\n      value: function tryRun() {\n        this._currentDepth++;\n\n        try {\n          while (true) {\n            while (this.imports.length > 0) {\n              var importItem = this.imports[0];\n\n              if (!importItem.isReady) {\n                return;\n              }\n\n              this.imports = this.imports.slice(1);\n              importItem.callback.apply(null, importItem.args);\n            }\n\n            if (this.variableImports.length === 0) {\n              break;\n            }\n\n            var variableImport = this.variableImports[0];\n            this.variableImports = this.variableImports.slice(1);\n            variableImport();\n          }\n        } finally {\n          this._currentDepth--;\n        }\n\n        if (this._currentDepth === 0 && this._onSequencerEmpty) {\n          this._onSequencerEmpty();\n        }\n      }\n    }]);\n\n    return ImportSequencer;\n  }();\n\n  var ImportVisitor = function ImportVisitor(importer, finish) {\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n  };\n\n  ImportVisitor.prototype = {\n    isReplacing: false,\n    run: function run(root) {\n      try {\n        // process the contents\n        this._visitor.visit(root);\n      } catch (e) {\n        this.error = e;\n      }\n\n      this.isFinished = true;\n\n      this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function _onSequencerEmpty() {\n      if (!this.isFinished) {\n        return;\n      }\n\n      this._finish(this.error);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      var inlineCSS = importNode.options.inline;\n\n      if (!importNode.css || inlineCSS) {\n        var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n        var importParent = context.frames[0];\n        this.importCount++;\n\n        if (importNode.isVariableImport()) {\n          this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n        } else {\n          this.processImportNode(importNode, context, importParent);\n        }\n      }\n\n      visitArgs.visitDeeper = false;\n    },\n    processImportNode: function processImportNode(importNode, context, importParent) {\n      var evaldImportNode;\n      var inlineCSS = importNode.options.inline;\n\n      try {\n        evaldImportNode = importNode.evalForImport(context);\n      } catch (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        } // attempt to eval properly and treat as css\n\n\n        importNode.css = true; // if that fails, this error will be thrown\n\n        importNode.error = e;\n      }\n\n      if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n        if (evaldImportNode.options.multiple) {\n          context.importMultiple = true;\n        } // try appending if we haven't determined if it is css or not\n\n\n        var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n        for (var i = 0; i < importParent.rules.length; i++) {\n          if (importParent.rules[i] === importNode) {\n            importParent.rules[i] = evaldImportNode;\n            break;\n          }\n        }\n\n        var onImported = this.onImported.bind(this, evaldImportNode, context);\n\n        var sequencedOnImported = this._sequencer.addImport(onImported);\n\n        this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n      } else {\n        this.importCount--;\n\n        if (this.isFinished) {\n          this._sequencer.tryRun();\n        }\n      }\n    },\n    onImported: function onImported(importNode, context, e, root, importedAtRoot, fullPath) {\n      if (e) {\n        if (!e.filename) {\n          e.index = importNode.getIndex();\n          e.filename = importNode.fileInfo().filename;\n        }\n\n        this.error = e;\n      }\n\n      var importVisitor = this;\n      var inlineCSS = importNode.options.inline;\n      var isPlugin = importNode.options.isPlugin;\n      var isOptional = importNode.options.optional;\n      var duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n      if (!context.importMultiple) {\n        if (duplicateImport) {\n          importNode.skip = true;\n        } else {\n          importNode.skip = function () {\n            if (fullPath in importVisitor.onceFileDetectionMap) {\n              return true;\n            }\n\n            importVisitor.onceFileDetectionMap[fullPath] = true;\n            return false;\n          };\n        }\n      }\n\n      if (!fullPath && isOptional) {\n        importNode.skip = true;\n      }\n\n      if (root) {\n        importNode.root = root;\n        importNode.importedFilename = fullPath;\n\n        if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n          importVisitor.recursionDetector[fullPath] = true;\n          var oldContext = this.context;\n          this.context = context;\n\n          try {\n            this._visitor.visit(root);\n          } catch (e) {\n            this.error = e;\n          }\n\n          this.context = oldContext;\n        }\n      }\n\n      importVisitor.importCount--;\n\n      if (importVisitor.isFinished) {\n        importVisitor._sequencer.tryRun();\n      }\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.unshift(declNode);\n      } else {\n        visitArgs.visitDeeper = false;\n      }\n    },\n    visitDeclarationOut: function visitDeclarationOut(declNode) {\n      if (declNode.value.type === 'DetachedRuleset') {\n        this.context.frames.shift();\n      }\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function visitAtRuleOut(atRuleNode) {\n      this.context.frames.shift();\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n      this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function visitMixinDefinitionOut(mixinDefinitionNode) {\n      this.context.frames.shift();\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function visitRulesetOut(rulesetNode) {\n      this.context.frames.shift();\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function visitMediaOut(mediaNode) {\n      this.context.frames.shift();\n    }\n  };\n\n  var SetTreeVisibilityVisitor =\n  /*#__PURE__*/\n  function () {\n    function SetTreeVisibilityVisitor(visible) {\n      _classCallCheck(this, SetTreeVisibilityVisitor);\n\n      this.visible = visible;\n    }\n\n    _createClass(SetTreeVisibilityVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        this.visit(root);\n      }\n    }, {\n      key: \"visitArray\",\n      value: function visitArray(nodes) {\n        if (!nodes) {\n          return nodes;\n        }\n\n        var cnt = nodes.length;\n        var i;\n\n        for (i = 0; i < cnt; i++) {\n          this.visit(nodes[i]);\n        }\n\n        return nodes;\n      }\n    }, {\n      key: \"visit\",\n      value: function visit(node) {\n        if (!node) {\n          return node;\n        }\n\n        if (node.constructor === Array) {\n          return this.visitArray(node);\n        }\n\n        if (!node.blocksVisibility || node.blocksVisibility()) {\n          return node;\n        }\n\n        if (this.visible) {\n          node.ensureVisibility();\n        } else {\n          node.ensureInvisibility();\n        }\n\n        node.accept(this);\n        return node;\n      }\n    }]);\n\n    return SetTreeVisibilityVisitor;\n  }();\n\n  /* jshint loopfunc:true */\n\n  var ExtendFinderVisitor =\n  /*#__PURE__*/\n  function () {\n    function ExtendFinderVisitor() {\n      _classCallCheck(this, ExtendFinderVisitor);\n\n      this._visitor = new Visitor(this);\n      this.contexts = [];\n      this.allExtendsStack = [[]];\n    }\n\n    _createClass(ExtendFinderVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n          return;\n        }\n\n        var i;\n        var j;\n        var extend;\n        var allSelectorsExtendList = [];\n        var extendList; // get &:extend(.a); rules which apply to all selectors in this ruleset\n\n        var rules = rulesetNode.rules;\n        var ruleCnt = rules ? rules.length : 0;\n\n        for (i = 0; i < ruleCnt; i++) {\n          if (rulesetNode.rules[i] instanceof tree.Extend) {\n            allSelectorsExtendList.push(rules[i]);\n            rulesetNode.extendOnEveryPath = true;\n          }\n        } // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n\n\n        var paths = rulesetNode.paths;\n\n        for (i = 0; i < paths.length; i++) {\n          var selectorPath = paths[i];\n          var selector = selectorPath[selectorPath.length - 1];\n          var selExtendList = selector.extendList;\n          extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList) : allSelectorsExtendList;\n\n          if (extendList) {\n            extendList = extendList.map(function (allSelectorsExtend) {\n              return allSelectorsExtend.clone();\n            });\n          }\n\n          for (j = 0; j < extendList.length; j++) {\n            this.foundExtends = true;\n            extend = extendList[j];\n            extend.findSelfSelectors(selectorPath);\n            extend.ruleset = rulesetNode;\n\n            if (j === 0) {\n              extend.firstExtendOnThisSelectorPath = true;\n            }\n\n            this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n          }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n      }\n    }, {\n      key: \"visitRulesetOut\",\n      value: function visitRulesetOut(rulesetNode) {\n        if (!rulesetNode.root) {\n          this.contexts.length = this.contexts.length - 1;\n        }\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n      }\n    }, {\n      key: \"visitMediaOut\",\n      value: function visitMediaOut(mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n      }\n    }, {\n      key: \"visitAtRuleOut\",\n      value: function visitAtRuleOut(atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n      }\n    }]);\n\n    return ExtendFinderVisitor;\n  }();\n\n  var ProcessExtendsVisitor =\n  /*#__PURE__*/\n  function () {\n    function ProcessExtendsVisitor() {\n      _classCallCheck(this, ProcessExtendsVisitor);\n\n      this._visitor = new Visitor(this);\n    }\n\n    _createClass(ProcessExtendsVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        var extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n\n        if (!extendFinder.foundExtends) {\n          return root;\n        }\n\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n\n        var newRoot = this._visitor.visit(root);\n\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n      }\n    }, {\n      key: \"checkExtendsForNonMatched\",\n      value: function checkExtendsForNonMatched(extendList) {\n        var indices = this.extendIndices;\n        extendList.filter(function (extend) {\n          return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function (extend) {\n          var selector = '_unknown_';\n\n          try {\n            selector = extend.selector.toCSS({});\n          } catch (_) {}\n\n          if (!indices[\"\".concat(extend.index, \" \").concat(selector)]) {\n            indices[\"\".concat(extend.index, \" \").concat(selector)] = true;\n            logger.warn(\"extend '\".concat(selector, \"' has no matches\"));\n          }\n        });\n      }\n    }, {\n      key: \"doExtendChaining\",\n      value: function doExtendChaining(extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n        var extendIndex;\n        var targetExtendIndex;\n        var matches;\n        var extendsToAdd = [];\n        var newSelector;\n        var extendVisitor = this;\n        var selectorPath;\n        var extend;\n        var targetExtend;\n        var newExtend;\n        iterationCount = iterationCount || 0; // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n          for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n            extend = extendsList[extendIndex];\n            targetExtend = extendsListTarget[targetExtendIndex]; // look for circular references\n\n            if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n              continue;\n            } // find a match in the target extends self selector (the bit before :extend)\n\n\n            selectorPath = [targetExtend.selfSelectors[0]];\n            matches = extendVisitor.findMatch(extend, selectorPath);\n\n            if (matches.length) {\n              extend.hasFoundMatches = true; // we found a match, so for each self selector..\n\n              extend.selfSelectors.forEach(function (selfSelector) {\n                var info = targetExtend.visibilityInfo(); // process the extend as usual\n\n                newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible()); // but now we create a new extend from it\n\n                newExtend = new tree.Extend(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                newExtend.selfSelectors = newSelector; // add the extend onto the list of extends for that selector\n\n                newSelector[newSelector.length - 1].extendList = [newExtend]; // record that we need to add it.\n\n                extendsToAdd.push(newExtend);\n                newExtend.ruleset = targetExtend.ruleset; // remember its parents for circular references\n\n                newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids); // only process the selector once.. if we have :extend(.a,.b) then multiple\n                // extends will look at the same selector path, so when extending\n                // we know that any others will be duplicates in terms of what is added to the css\n\n                if (targetExtend.firstExtendOnThisSelectorPath) {\n                  newExtend.firstExtendOnThisSelectorPath = true;\n                  targetExtend.ruleset.paths.push(newSelector);\n                }\n              });\n            }\n          }\n        }\n\n        if (extendsToAdd.length) {\n          // try to detect circular references to stop a stack overflow.\n          // may no longer be needed.\n          this.extendChainCount++;\n\n          if (iterationCount > 100) {\n            var selectorOne = '{unable to calculate}';\n            var selectorTwo = '{unable to calculate}';\n\n            try {\n              selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n              selectorTwo = extendsToAdd[0].selector.toCSS();\n            } catch (e) {}\n\n            throw {\n              message: \"extend circular reference detected. One of the circular extends is currently:\".concat(selectorOne, \":extend(\").concat(selectorTwo, \")\")\n            };\n          } // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n          // d extending e...\n\n\n          return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n          return extendsToAdd;\n        }\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitSelector\",\n      value: function visitSelector(selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n          return;\n        }\n\n        var matches;\n        var pathIndex;\n        var extendIndex;\n        var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n        var selectorsToAdd = [];\n        var extendVisitor = this;\n        var selectorPath; // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n          for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n            selectorPath = rulesetNode.paths[pathIndex]; // extending extends happens initially, before the main pass\n\n            if (rulesetNode.extendOnEveryPath) {\n              continue;\n            }\n\n            var extendList = selectorPath[selectorPath.length - 1].extendList;\n\n            if (extendList && extendList.length) {\n              continue;\n            }\n\n            matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n            if (matches.length) {\n              allExtends[extendIndex].hasFoundMatches = true;\n              allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n                var extendedSelectors;\n                extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                selectorsToAdd.push(extendedSelectors);\n              });\n            }\n          }\n        }\n\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n      }\n    }, {\n      key: \"findMatch\",\n      value: function findMatch(extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        var haystackSelectorIndex;\n        var hackstackSelector;\n        var hackstackElementIndex;\n        var haystackElement;\n        var targetCombinator;\n        var i;\n        var extendVisitor = this;\n        var needleElements = extend.selector.elements;\n        var potentialMatches = [];\n        var potentialMatch;\n        var matches = []; // loop through the haystack elements\n\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n          hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n          for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n            haystackElement = hackstackSelector.elements[hackstackElementIndex]; // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n\n            if (extend.allowBefore || haystackSelectorIndex === 0 && hackstackElementIndex === 0) {\n              potentialMatches.push({\n                pathIndex: haystackSelectorIndex,\n                index: hackstackElementIndex,\n                matched: 0,\n                initialCombinator: haystackElement.combinator\n              });\n            }\n\n            for (i = 0; i < potentialMatches.length; i++) {\n              potentialMatch = potentialMatches[i]; // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n              // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n              // work out what the resulting combinator will be\n\n              targetCombinator = haystackElement.combinator.value;\n\n              if (targetCombinator === '' && hackstackElementIndex === 0) {\n                targetCombinator = ' ';\n              } // if we don't match, null our match to indicate failure\n\n\n              if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) || potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator) {\n                potentialMatch = null;\n              } else {\n                potentialMatch.matched++;\n              } // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n\n\n              if (potentialMatch) {\n                potentialMatch.finished = potentialMatch.matched === needleElements.length;\n\n                if (potentialMatch.finished && !extend.allowAfter && (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length)) {\n                  potentialMatch = null;\n                }\n              } // if null we remove, if not, we are still valid, so either push as a valid match or continue\n\n\n              if (potentialMatch) {\n                if (potentialMatch.finished) {\n                  potentialMatch.length = needleElements.length;\n                  potentialMatch.endPathIndex = haystackSelectorIndex;\n                  potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n\n                  potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n\n                  matches.push(potentialMatch);\n                }\n              } else {\n                potentialMatches.splice(i, 1);\n                i--;\n              }\n            }\n          }\n        }\n\n        return matches;\n      }\n    }, {\n      key: \"isElementValuesEqual\",\n      value: function isElementValuesEqual(elementValue1, elementValue2) {\n        if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n          return elementValue1 === elementValue2;\n        }\n\n        if (elementValue1 instanceof tree.Attribute) {\n          if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n            return false;\n          }\n\n          if (!elementValue1.value || !elementValue2.value) {\n            if (elementValue1.value || elementValue2.value) {\n              return false;\n            }\n\n            return true;\n          }\n\n          elementValue1 = elementValue1.value.value || elementValue1.value;\n          elementValue2 = elementValue2.value.value || elementValue2.value;\n          return elementValue1 === elementValue2;\n        }\n\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n\n        if (elementValue1 instanceof tree.Selector) {\n          if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n            return false;\n          }\n\n          for (var i = 0; i < elementValue1.elements.length; i++) {\n            if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n              if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                return false;\n              }\n            }\n\n            if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"extendSelector\",\n      value: function extendSelector(matches, selectorPath, replacementSelector, isVisible) {\n        // for a set of matches, replace each match with the replacement selector\n        var currentSelectorPathIndex = 0;\n        var currentSelectorPathElementIndex = 0;\n        var path = [];\n        var matchIndex;\n        var selector;\n        var firstElement;\n        var match;\n        var newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n          match = matches[matchIndex];\n          selector = selectorPath[match.pathIndex];\n          firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n\n          if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathElementIndex = 0;\n            currentSelectorPathIndex++;\n          }\n\n          newElements = selector.elements.slice(currentSelectorPathElementIndex, match.index).concat([firstElement]).concat(replacementSelector.elements.slice(1));\n\n          if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1].elements.concat(newElements);\n          } else {\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n            path.push(new tree.Selector(newElements));\n          }\n\n          currentSelectorPathIndex = match.endPathIndex;\n          currentSelectorPathElementIndex = match.endPathElementIndex;\n\n          if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n            currentSelectorPathElementIndex = 0;\n            currentSelectorPathIndex++;\n          }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n          path[path.length - 1].elements = path[path.length - 1].elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n          currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n          // we can re-use elements here, because the visibility property matters only for selectors\n          var derived = currentValue.createDerived(currentValue.elements);\n\n          if (isVisible) {\n            derived.ensureVisibility();\n          } else {\n            derived.ensureInvisibility();\n          }\n\n          return derived;\n        });\n        return path;\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n      }\n    }, {\n      key: \"visitMediaOut\",\n      value: function visitMediaOut(mediaNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n      }\n    }, {\n      key: \"visitAtRuleOut\",\n      value: function visitAtRuleOut(atRuleNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n      }\n    }]);\n\n    return ProcessExtendsVisitor;\n  }();\n\n  var JoinSelectorVisitor =\n  /*#__PURE__*/\n  function () {\n    function JoinSelectorVisitor() {\n      _classCallCheck(this, JoinSelectorVisitor);\n\n      this.contexts = [[]];\n      this._visitor = new Visitor(this);\n    }\n\n    _createClass(JoinSelectorVisitor, [{\n      key: \"run\",\n      value: function run(root) {\n        return this._visitor.visit(root);\n      }\n    }, {\n      key: \"visitDeclaration\",\n      value: function visitDeclaration(declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitMixinDefinition\",\n      value: function visitMixinDefinition(mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n      }\n    }, {\n      key: \"visitRuleset\",\n      value: function visitRuleset(rulesetNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        var paths = [];\n        var selectors;\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n          selectors = rulesetNode.selectors;\n\n          if (selectors) {\n            selectors = selectors.filter(function (selector) {\n              return selector.getIsOutput();\n            });\n            rulesetNode.selectors = selectors.length ? selectors : selectors = null;\n\n            if (selectors) {\n              rulesetNode.joinSelectors(paths, context, selectors);\n            }\n          }\n\n          if (!selectors) {\n            rulesetNode.rules = null;\n          }\n\n          rulesetNode.paths = paths;\n        }\n      }\n    }, {\n      key: \"visitRulesetOut\",\n      value: function visitRulesetOut(rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n      }\n    }, {\n      key: \"visitMedia\",\n      value: function visitMedia(mediaNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = context.length === 0 || context[0].multiMedia;\n      }\n    }, {\n      key: \"visitAtRule\",\n      value: function visitAtRule(atRuleNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n          atRuleNode.rules[0].root = atRuleNode.isRooted || context.length === 0 || null;\n        }\n      }\n    }]);\n\n    return JoinSelectorVisitor;\n  }();\n\n  var CSSVisitorUtils =\n  /*#__PURE__*/\n  function () {\n    function CSSVisitorUtils(context) {\n      _classCallCheck(this, CSSVisitorUtils);\n\n      this._visitor = new Visitor(this);\n      this._context = context;\n    }\n\n    _createClass(CSSVisitorUtils, [{\n      key: \"containsSilentNonBlockedChild\",\n      value: function containsSilentNonBlockedChild(bodyRules) {\n        var rule;\n\n        if (!bodyRules) {\n          return false;\n        }\n\n        for (var r = 0; r < bodyRules.length; r++) {\n          rule = bodyRules[r];\n\n          if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n            // the atrule contains something that was referenced (likely by extend)\n            // therefore it needs to be shown in output too\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"keepOnlyVisibleChilds\",\n      value: function keepOnlyVisibleChilds(owner) {\n        if (owner && owner.rules) {\n          owner.rules = owner.rules.filter(function (thing) {\n            return thing.isVisible();\n          });\n        }\n      }\n    }, {\n      key: \"isEmpty\",\n      value: function isEmpty(owner) {\n        return owner && owner.rules ? owner.rules.length === 0 : true;\n      }\n    }, {\n      key: \"hasVisibleSelector\",\n      value: function hasVisibleSelector(rulesetNode) {\n        return rulesetNode && rulesetNode.paths ? rulesetNode.paths.length > 0 : false;\n      }\n    }, {\n      key: \"resolveVisibility\",\n      value: function resolveVisibility(node, originalRules) {\n        if (!node.blocksVisibility()) {\n          if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n            return;\n          }\n\n          return node;\n        }\n\n        var compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n          return;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n        return node;\n      }\n    }, {\n      key: \"isVisibleRuleset\",\n      value: function isVisibleRuleset(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n          return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n          return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n          return false;\n        }\n\n        return true;\n      }\n    }]);\n\n    return CSSVisitorUtils;\n  }();\n\n  var ToCSSVisitor = function ToCSSVisitor(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n  };\n\n  ToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function run(root) {\n      return this._visitor.visit(root);\n    },\n    visitDeclaration: function visitDeclaration(declNode, visitArgs) {\n      if (declNode.blocksVisibility() || declNode.variable) {\n        return;\n      }\n\n      return declNode;\n    },\n    visitMixinDefinition: function visitMixinDefinition(mixinNode, visitArgs) {\n      // mixin definitions do not get eval'd - this means they keep state\n      // so we have to clear that state here so it isn't used if toCSS is called twice\n      mixinNode.frames = [];\n    },\n    visitExtend: function visitExtend(extendNode, visitArgs) {},\n    visitComment: function visitComment(commentNode, visitArgs) {\n      if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n        return;\n      }\n\n      return commentNode;\n    },\n    visitMedia: function visitMedia(mediaNode, visitArgs) {\n      var originalRules = mediaNode.rules[0].rules;\n      mediaNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n      return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n    visitImport: function visitImport(importNode, visitArgs) {\n      if (importNode.blocksVisibility()) {\n        return;\n      }\n\n      return importNode;\n    },\n    visitAtRule: function visitAtRule(atRuleNode, visitArgs) {\n      if (atRuleNode.rules && atRuleNode.rules.length) {\n        return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n      } else {\n        return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n      }\n    },\n    visitAnonymous: function visitAnonymous(anonymousNode, visitArgs) {\n      if (!anonymousNode.blocksVisibility()) {\n        anonymousNode.accept(this._visitor);\n        return anonymousNode;\n      }\n    },\n    visitAtRuleWithBody: function visitAtRuleWithBody(atRuleNode, visitArgs) {\n      // if there is only one nested ruleset and that one has no path, then it is\n      // just fake ruleset\n      function hasFakeRuleset(atRuleNode) {\n        var bodyRules = atRuleNode.rules;\n        return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n      }\n\n      function getBodyRules(atRuleNode) {\n        var nodeRules = atRuleNode.rules;\n\n        if (hasFakeRuleset(atRuleNode)) {\n          return nodeRules[0].rules;\n        }\n\n        return nodeRules;\n      } // it is still true that it is only one ruleset in array\n      // this is last such moment\n      // process childs\n\n\n      var originalRules = getBodyRules(atRuleNode);\n      atRuleNode.accept(this._visitor);\n      visitArgs.visitDeeper = false;\n\n      if (!this.utils.isEmpty(atRuleNode)) {\n        this._mergeRules(atRuleNode.rules[0].rules);\n      }\n\n      return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n    visitAtRuleWithoutBody: function visitAtRuleWithoutBody(atRuleNode, visitArgs) {\n      if (atRuleNode.blocksVisibility()) {\n        return;\n      }\n\n      if (atRuleNode.name === '@charset') {\n        // Only output the debug info together with subsequent @charset definitions\n        // a comment (or @media statement) before the actual @charset atrule would\n        // be considered illegal css as it has to be on the first line\n        if (this.charset) {\n          if (atRuleNode.debugInfo) {\n            var comment = new tree.Comment(\"/* \".concat(atRuleNode.toCSS(this._context).replace(/\\n/g, ''), \" */\\n\"));\n            comment.debugInfo = atRuleNode.debugInfo;\n            return this._visitor.visit(comment);\n          }\n\n          return;\n        }\n\n        this.charset = true;\n      }\n\n      return atRuleNode;\n    },\n    checkValidNodes: function checkValidNodes(rules, isRoot) {\n      if (!rules) {\n        return;\n      }\n\n      for (var i = 0; i < rules.length; i++) {\n        var ruleNode = rules[i];\n\n        if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n          throw {\n            message: 'Properties must be inside selector blocks. They cannot be in the root',\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode instanceof tree.Call) {\n          throw {\n            message: \"Function '\".concat(ruleNode.name, \"' is undefined\"),\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n\n        if (ruleNode.type && !ruleNode.allowRoot) {\n          throw {\n            message: \"\".concat(ruleNode.type, \" node returned by a function is not valid here\"),\n            index: ruleNode.getIndex(),\n            filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename\n          };\n        }\n      }\n    },\n    visitRuleset: function visitRuleset(rulesetNode, visitArgs) {\n      // at this point rulesets are nested into each other\n      var rule;\n      var rulesets = [];\n      this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n      if (!rulesetNode.root) {\n        // remove invisible paths\n        this._compileRulesetPaths(rulesetNode); // remove rulesets from this ruleset body and compile them separately\n\n\n        var nodeRules = rulesetNode.rules;\n        var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n\n        for (var i = 0; i < nodeRuleCnt;) {\n          rule = nodeRules[i];\n\n          if (rule && rule.rules) {\n            // visit because we are moving them out from being a child\n            rulesets.push(this._visitor.visit(rule));\n            nodeRules.splice(i, 1);\n            nodeRuleCnt--;\n            continue;\n          }\n\n          i++;\n        } // accept the visitor to remove rules and refactor itself\n        // then we can decide nogw whether we want it or not\n        // compile body\n\n\n        if (nodeRuleCnt > 0) {\n          rulesetNode.accept(this._visitor);\n        } else {\n          rulesetNode.rules = null;\n        }\n\n        visitArgs.visitDeeper = false;\n      } else {\n        // if (! rulesetNode.root) {\n        rulesetNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n      }\n\n      if (rulesetNode.rules) {\n        this._mergeRules(rulesetNode.rules);\n\n        this._removeDuplicateRules(rulesetNode.rules);\n      } // now decide whether we keep the ruleset\n\n\n      if (this.utils.isVisibleRuleset(rulesetNode)) {\n        rulesetNode.ensureVisibility();\n        rulesets.splice(0, 0, rulesetNode);\n      }\n\n      if (rulesets.length === 1) {\n        return rulesets[0];\n      }\n\n      return rulesets;\n    },\n    _compileRulesetPaths: function _compileRulesetPaths(rulesetNode) {\n      if (rulesetNode.paths) {\n        rulesetNode.paths = rulesetNode.paths.filter(function (p) {\n          var i;\n\n          if (p[0].elements[0].combinator.value === ' ') {\n            p[0].elements[0].combinator = new tree.Combinator('');\n          }\n\n          for (i = 0; i < p.length; i++) {\n            if (p[i].isVisible() && p[i].getIsOutput()) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      }\n    },\n    _removeDuplicateRules: function _removeDuplicateRules(rules) {\n      if (!rules) {\n        return;\n      } // remove duplicates\n\n\n      var ruleCache = {};\n      var ruleList;\n      var rule;\n      var i;\n\n      for (i = rules.length - 1; i >= 0; i--) {\n        rule = rules[i];\n\n        if (rule instanceof tree.Declaration) {\n          if (!ruleCache[rule.name]) {\n            ruleCache[rule.name] = rule;\n          } else {\n            ruleList = ruleCache[rule.name];\n\n            if (ruleList instanceof tree.Declaration) {\n              ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n            }\n\n            var ruleCSS = rule.toCSS(this._context);\n\n            if (ruleList.indexOf(ruleCSS) !== -1) {\n              rules.splice(i, 1);\n            } else {\n              ruleList.push(ruleCSS);\n            }\n          }\n        }\n      }\n    },\n    _mergeRules: function _mergeRules(rules) {\n      if (!rules) {\n        return;\n      }\n\n      var groups = {};\n      var groupsArr = [];\n\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n\n        if (rule.merge) {\n          var key = rule.name;\n          groups[key] ? rules.splice(i--, 1) : groupsArr.push(groups[key] = []);\n          groups[key].push(rule);\n        }\n      }\n\n      groupsArr.forEach(function (group) {\n        if (group.length > 0) {\n          var result = group[0];\n          var space = [];\n          var comma = [new tree.Expression(space)];\n          group.forEach(function (rule) {\n            if (rule.merge === '+' && space.length > 0) {\n              comma.push(new tree.Expression(space = []));\n            }\n\n            space.push(rule.value);\n            result.important = result.important || rule.important;\n          });\n          result.value = new tree.Value(comma);\n        }\n      });\n    }\n  };\n\n  var visitors = {\n    Visitor: Visitor,\n    ImportVisitor: ImportVisitor,\n    MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n    ExtendVisitor: ProcessExtendsVisitor,\n    JoinSelectorVisitor: JoinSelectorVisitor,\n    ToCSSVisitor: ToCSSVisitor\n  };\n\n  // Split the input into chunks.\n  var chunker = (function (input, fail) {\n    var len = input.length;\n    var level = 0;\n    var parenLevel = 0;\n    var lastOpening;\n    var lastOpeningParen;\n    var lastMultiComment;\n    var lastMultiCommentEndBrace;\n    var chunks = [];\n    var emitFrom = 0;\n    var chunkerCurrentIndex;\n    var currentChunkStartIndex;\n    var cc;\n    var cc2;\n    var matched;\n\n    function emitChunk(force) {\n      var len = chunkerCurrentIndex - emitFrom;\n\n      if (len < 512 && !force || !len) {\n        return;\n      }\n\n      chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n      emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n      cc = input.charCodeAt(chunkerCurrentIndex);\n\n      if (cc >= 97 && cc <= 122 || cc < 34) {\n        // a-z or whitespace\n        continue;\n      }\n\n      switch (cc) {\n        case 40:\n          // (\n          parenLevel++;\n          lastOpeningParen = chunkerCurrentIndex;\n          continue;\n\n        case 41:\n          // )\n          if (--parenLevel < 0) {\n            return fail('missing opening `(`', chunkerCurrentIndex);\n          }\n\n          continue;\n\n        case 59:\n          // ;\n          if (!parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 123:\n          // {\n          level++;\n          lastOpening = chunkerCurrentIndex;\n          continue;\n\n        case 125:\n          // }\n          if (--level < 0) {\n            return fail('missing opening `{`', chunkerCurrentIndex);\n          }\n\n          if (!level && !parenLevel) {\n            emitChunk();\n          }\n\n          continue;\n\n        case 92:\n          // \\\n          if (chunkerCurrentIndex < len - 1) {\n            chunkerCurrentIndex++;\n            continue;\n          }\n\n          return fail('unescaped `\\\\`', chunkerCurrentIndex);\n\n        case 34:\n        case 39:\n        case 96:\n          // \", ' and `\n          matched = 0;\n          currentChunkStartIndex = chunkerCurrentIndex;\n\n          for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n            cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n            if (cc2 > 96) {\n              continue;\n            }\n\n            if (cc2 == cc) {\n              matched = 1;\n              break;\n            }\n\n            if (cc2 == 92) {\n              // \\\n              if (chunkerCurrentIndex == len - 1) {\n                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n              }\n\n              chunkerCurrentIndex++;\n            }\n          }\n\n          if (matched) {\n            continue;\n          }\n\n          return fail(\"unmatched `\".concat(String.fromCharCode(cc), \"`\"), currentChunkStartIndex);\n\n        case 47:\n          // /, check for comment\n          if (parenLevel || chunkerCurrentIndex == len - 1) {\n            continue;\n          }\n\n          cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n\n          if (cc2 == 47) {\n            // //, find lnfeed\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 <= 13 && (cc2 == 10 || cc2 == 13)) {\n                break;\n              }\n            }\n          } else if (cc2 == 42) {\n            // /*, find */\n            lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n\n            for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n              cc2 = input.charCodeAt(chunkerCurrentIndex);\n\n              if (cc2 == 125) {\n                lastMultiCommentEndBrace = chunkerCurrentIndex;\n              }\n\n              if (cc2 != 42) {\n                continue;\n              }\n\n              if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                break;\n              }\n            }\n\n            if (chunkerCurrentIndex == len - 1) {\n              return fail('missing closing `*/`', currentChunkStartIndex);\n            }\n\n            chunkerCurrentIndex++;\n          }\n\n          continue;\n\n        case 42:\n          // *, check for unmatched */\n          if (chunkerCurrentIndex < len - 1 && input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n            return fail('unmatched `/*`', chunkerCurrentIndex);\n          }\n\n          continue;\n      }\n    }\n\n    if (level !== 0) {\n      if (lastMultiComment > lastOpening && lastMultiCommentEndBrace > lastMultiComment) {\n        return fail('missing closing `}` or `*/`', lastOpening);\n      } else {\n        return fail('missing closing `}`', lastOpening);\n      }\n    } else if (parenLevel !== 0) {\n      return fail('missing closing `)`', lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n  });\n\n  var getParserInput = (function () {\n    var // Less input string\n    input;\n    var // current chunk\n    j;\n    var // holds state for backtracking\n    saveStack = [];\n    var // furthest index the parser has gone to\n    furthest;\n    var // if this is furthest we got to, this is the probably cause\n    furthestPossibleErrorMessage;\n    var // chunkified input\n    chunks;\n    var // current chunk\n    current;\n    var // index of current chunk, in `input`\n    currentPos;\n    var parserInput = {};\n    var CHARCODE_SPACE = 32;\n    var CHARCODE_TAB = 9;\n    var CHARCODE_LF = 10;\n    var CHARCODE_CR = 13;\n    var CHARCODE_PLUS = 43;\n    var CHARCODE_COMMA = 44;\n    var CHARCODE_FORWARD_SLASH = 47;\n    var CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n      var oldi = parserInput.i;\n      var oldj = j;\n      var curr = parserInput.i - currentPos;\n      var endIndex = parserInput.i + current.length - curr;\n      var mem = parserInput.i += length;\n      var inp = input;\n      var c;\n      var nextChar;\n      var comment;\n\n      for (; parserInput.i < endIndex; parserInput.i++) {\n        c = inp.charCodeAt(parserInput.i);\n\n        if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n          nextChar = inp.charAt(parserInput.i + 1);\n\n          if (nextChar === '/') {\n            comment = {\n              index: parserInput.i,\n              isLineComment: true\n            };\n            var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n\n            if (nextNewLine < 0) {\n              nextNewLine = endIndex;\n            }\n\n            parserInput.i = nextNewLine;\n            comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n            parserInput.commentStore.push(comment);\n            continue;\n          } else if (nextChar === '*') {\n            var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n\n            if (nextStarSlash >= 0) {\n              comment = {\n                index: parserInput.i,\n                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                isLineComment: false\n              };\n              parserInput.i += comment.text.length - 1;\n              parserInput.commentStore.push(comment);\n              continue;\n            }\n          }\n\n          break;\n        }\n\n        if (c !== CHARCODE_SPACE && c !== CHARCODE_LF && c !== CHARCODE_TAB && c !== CHARCODE_CR) {\n          break;\n        }\n      }\n\n      current = current.slice(length + parserInput.i - mem + curr);\n      currentPos = parserInput.i;\n\n      if (!current.length) {\n        if (j < chunks.length - 1) {\n          current = chunks[++j];\n          skipWhitespace(0); // skip space at the beginning of a chunk\n\n          return true; // things changed\n        }\n\n        parserInput.finished = true;\n      }\n\n      return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = function () {\n      currentPos = parserInput.i;\n      saveStack.push({\n        current: current,\n        i: parserInput.i,\n        j: j\n      });\n    };\n\n    parserInput.restore = function (possibleErrorMessage) {\n      if (parserInput.i > furthest || parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage) {\n        furthest = parserInput.i;\n        furthestPossibleErrorMessage = possibleErrorMessage;\n      }\n\n      var state = saveStack.pop();\n      current = state.current;\n      currentPos = parserInput.i = state.i;\n      j = state.j;\n    };\n\n    parserInput.forget = function () {\n      saveStack.pop();\n    };\n\n    parserInput.isWhitespace = function (offset) {\n      var pos = parserInput.i + (offset || 0);\n      var code = input.charCodeAt(pos);\n      return code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF;\n    }; // Specialization of $(tok)\n\n\n    parserInput.$re = function (tok) {\n      if (parserInput.i > currentPos) {\n        current = current.slice(parserInput.i - currentPos);\n        currentPos = parserInput.i;\n      }\n\n      var m = tok.exec(current);\n\n      if (!m) {\n        return null;\n      }\n\n      skipWhitespace(m[0].length);\n\n      if (typeof m === 'string') {\n        return m;\n      }\n\n      return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = function (tok) {\n      if (input.charAt(parserInput.i) !== tok) {\n        return null;\n      }\n\n      skipWhitespace(1);\n      return tok;\n    };\n\n    parserInput.$str = function (tok) {\n      var tokLength = tok.length; // https://jsperf.com/string-startswith/21\n\n      for (var i = 0; i < tokLength; i++) {\n        if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n          return null;\n        }\n      }\n\n      skipWhitespace(tokLength);\n      return tok;\n    };\n\n    parserInput.$quoted = function (loc) {\n      var pos = loc || parserInput.i;\n      var startChar = input.charAt(pos);\n\n      if (startChar !== '\\'' && startChar !== '\"') {\n        return;\n      }\n\n      var length = input.length;\n      var currentPosition = pos;\n\n      for (var i = 1; i + currentPosition < length; i++) {\n        var nextChar = input.charAt(i + currentPosition);\n\n        switch (nextChar) {\n          case '\\\\':\n            i++;\n            continue;\n\n          case '\\r':\n          case '\\n':\n            break;\n\n          case startChar:\n            var str = input.substr(currentPosition, i + 1);\n\n            if (!loc && loc !== 0) {\n              skipWhitespace(i + 1);\n              return str;\n            }\n\n            return [startChar, str];\n\n          default:\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Permissive parsing. Ignores everything except matching {} [] () and quotes\n     * until matching token (outside of blocks)\n     */\n\n\n    parserInput.$parseUntil = function (tok) {\n      var quote = '';\n      var returnVal = null;\n      var inComment = false;\n      var blockDepth = 0;\n      var blockStack = [];\n      var parseGroups = [];\n      var length = input.length;\n      var startPos = parserInput.i;\n      var lastPos = parserInput.i;\n      var i = parserInput.i;\n      var loop = true;\n      var testChar;\n\n      if (typeof tok === 'string') {\n        testChar = function testChar(char) {\n          return char === tok;\n        };\n      } else {\n        testChar = function testChar(char) {\n          return tok.test(char);\n        };\n      }\n\n      do {\n        var nextChar = input.charAt(i);\n\n        if (blockDepth === 0 && testChar(nextChar)) {\n          returnVal = input.substr(lastPos, i - lastPos);\n\n          if (returnVal) {\n            parseGroups.push(returnVal);\n          } else {\n            parseGroups.push(' ');\n          }\n\n          returnVal = parseGroups;\n          skipWhitespace(i - startPos);\n          loop = false;\n        } else {\n          if (inComment) {\n            if (nextChar === '*' && input.charAt(i + 1) === '/') {\n              i++;\n              blockDepth--;\n              inComment = false;\n            }\n\n            i++;\n            continue;\n          }\n\n          switch (nextChar) {\n            case '\\\\':\n              i++;\n              nextChar = input.charAt(i);\n              parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n              lastPos = i + 1;\n              break;\n\n            case '/':\n              if (input.charAt(i + 1) === '*') {\n                i++;\n                inComment = true;\n                blockDepth++;\n              }\n\n              break;\n\n            case '\\'':\n            case '\"':\n              quote = parserInput.$quoted(i);\n\n              if (quote) {\n                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                i += quote[1].length - 1;\n                lastPos = i + 1;\n              } else {\n                skipWhitespace(i - startPos);\n                returnVal = nextChar;\n                loop = false;\n              }\n\n              break;\n\n            case '{':\n              blockStack.push('}');\n              blockDepth++;\n              break;\n\n            case '(':\n              blockStack.push(')');\n              blockDepth++;\n              break;\n\n            case '[':\n              blockStack.push(']');\n              blockDepth++;\n              break;\n\n            case '}':\n            case ')':\n            case ']':\n              var expected = blockStack.pop();\n\n              if (nextChar === expected) {\n                blockDepth--;\n              } else {\n                // move the parser to the error and return expected\n                skipWhitespace(i - startPos);\n                returnVal = expected;\n                loop = false;\n              }\n\n          }\n\n          i++;\n\n          if (i > length) {\n            loop = false;\n          }\n        }\n      } while (loop);\n\n      return returnVal ? returnVal : null;\n    };\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false; // Same as $(), but don't change the state of the parser,\n    // just return the match.\n\n    parserInput.peek = function (tok) {\n      if (typeof tok === 'string') {\n        // https://jsperf.com/string-startswith/21\n        for (var i = 0; i < tok.length; i++) {\n          if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return tok.test(current);\n      }\n    }; // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n\n\n    parserInput.peekChar = function (tok) {\n      return input.charAt(parserInput.i) === tok;\n    };\n\n    parserInput.currentChar = function () {\n      return input.charAt(parserInput.i);\n    };\n\n    parserInput.prevChar = function () {\n      return input.charAt(parserInput.i - 1);\n    };\n\n    parserInput.getInput = function () {\n      return input;\n    };\n\n    parserInput.peekNotNumeric = function () {\n      var c = input.charCodeAt(parserInput.i); // Is the first char of the dimension 0-9, '.', '+' or '-'\n\n      return c > CHARCODE_9 || c < CHARCODE_PLUS || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = function (str, chunkInput, failFunction) {\n      input = str;\n      parserInput.i = j = currentPos = furthest = 0; // chunking apparently makes things quicker (but my tests indicate\n      // it might actually make things slower in node at least)\n      // and it is a non-perfect parse - it can't recognise\n      // unquoted urls, meaning it can't distinguish comments\n      // meaning comments with quotes or {}() in them get 'counted'\n      // and then lead to parse errors.\n      // In addition if the chunking chunks in the wrong place we might\n      // not be able to parse a parser statement in one go\n      // this is officially deprecated but can be switched on via an option\n      // in the case it causes too much performance issues.\n\n      if (chunkInput) {\n        chunks = chunker(str, failFunction);\n      } else {\n        chunks = [str];\n      }\n\n      current = chunks[0];\n      skipWhitespace(0);\n    };\n\n    parserInput.end = function () {\n      var message;\n      var isFinished = parserInput.i >= input.length;\n\n      if (parserInput.i < furthest) {\n        message = furthestPossibleErrorMessage;\n        parserInput.i = furthest;\n      }\n\n      return {\n        isFinished: isFinished,\n        furthest: parserInput.i,\n        furthestPossibleErrorMessage: message,\n        furthestReachedEnd: parserInput.i >= input.length - 1,\n        furthestChar: input[parserInput.i]\n      };\n    };\n\n    return parserInput;\n  });\n\n  // less.js - parser\n  //\n  //    A relatively straight-forward predictive parser.\n  //    There is no tokenization/lexing stage, the input is parsed\n  //    in one sweep.\n  //\n  //    To make the parser fast enough to run in the browser, several\n  //    optimization had to be made:\n  //\n  //    - Matching and slicing on a huge input is often cause of slowdowns.\n  //      The solution is to chunkify the input into smaller strings.\n  //      The chunks are stored in the `chunks` var,\n  //      `j` holds the current chunk index, and `currentPos` holds\n  //      the index of the current chunk in relation to `input`.\n  //      This gives us an almost 4x speed-up.\n  //\n  //    - In many cases, we don't need to match individual tokens;\n  //      for example, if a value doesn't hold any variables, operations\n  //      or dynamic references, the parser can effectively 'skip' it,\n  //      treating it as a literal.\n  //      An example would be '1px solid #000' - which evaluates to itself,\n  //      we don't need to know what the individual components are.\n  //      The drawback, of course is that you don't get the benefits of\n  //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n  //      and a smaller speed-up in the code-gen.\n  //\n  //\n  //    Token matching is done with the `$` function, which either takes\n  //    a terminal string or regexp, or a non-terminal function to call.\n  //    It also takes care of moving all the indices forwards.\n  //\n\n  var Parser = function Parser(context, imports, fileInfo) {\n    var parsers;\n    var parserInput = getParserInput();\n\n    function error(msg, type) {\n      throw new LessError({\n        index: parserInput.i,\n        filename: fileInfo.filename,\n        type: type || 'Syntax',\n        message: msg\n      }, imports);\n    }\n\n    function expect(arg, msg) {\n      // some older browsers return typeof 'function' for RegExp\n      var result = arg instanceof Function ? arg.call(parsers) : parserInput.$re(arg);\n\n      if (result) {\n        return result;\n      }\n\n      error(msg || (typeof arg === 'string' ? \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\") : 'unexpected token'));\n    } // Specialization of expect()\n\n\n    function expectChar(arg, msg) {\n      if (parserInput.$char(arg)) {\n        return arg;\n      }\n\n      error(msg || \"expected '\".concat(arg, \"' got '\").concat(parserInput.currentChar(), \"'\"));\n    }\n\n    function getDebugInfo(index) {\n      var filename = fileInfo.filename;\n      return {\n        lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n        fileName: filename\n      };\n    }\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n\n\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n      var result;\n      var returnNodes = [];\n      var parser = parserInput;\n\n      try {\n        parser.start(str, false, function fail(msg, index) {\n          callback({\n            message: msg,\n            index: index + currentIndex\n          });\n        });\n\n        for (var x = 0, p, i; p = parseList[x]; x++) {\n          i = parser.i;\n          result = parsers[p]();\n\n          if (result) {\n            try {\n              result._index = i + currentIndex;\n              result._fileInfo = fileInfo;\n            } catch (e) {}\n\n            returnNodes.push(result);\n          } else {\n            returnNodes.push(null);\n          }\n        }\n\n        var endInfo = parser.end();\n\n        if (endInfo.isFinished) {\n          callback(null, returnNodes);\n        } else {\n          callback(true, null);\n        }\n      } catch (e) {\n        throw new LessError({\n          index: e.index + currentIndex,\n          message: e.message\n        }, imports, fileInfo.filename);\n      }\n    } //\n    // The Parser\n    //\n\n\n    return {\n      parserInput: parserInput,\n      imports: imports,\n      fileInfo: fileInfo,\n      parseNode: parseNode,\n      //\n      // Parse an input string into an abstract syntax tree,\n      // @param str A string containing 'less' markup\n      // @param callback call `callback` when done.\n      // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n      //\n      parse: function parse(str, callback, additionalData) {\n        var root;\n        var error = null;\n        var globalVars;\n        var modifyVars;\n        var ignored;\n        var preText = '';\n        globalVars = additionalData && additionalData.globalVars ? \"\".concat(Parser.serializeVars(additionalData.globalVars), \"\\n\") : '';\n        modifyVars = additionalData && additionalData.modifyVars ? \"\\n\".concat(Parser.serializeVars(additionalData.modifyVars)) : '';\n\n        if (context.pluginManager) {\n          var preProcessors = context.pluginManager.getPreProcessors();\n\n          for (var i = 0; i < preProcessors.length; i++) {\n            str = preProcessors[i].process(str, {\n              context: context,\n              imports: imports,\n              fileInfo: fileInfo\n            });\n          }\n        }\n\n        if (globalVars || additionalData && additionalData.banner) {\n          preText = (additionalData && additionalData.banner ? additionalData.banner : '') + globalVars;\n          ignored = imports.contentsIgnoredChars;\n          ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n          ignored[fileInfo.filename] += preText.length;\n        }\n\n        str = str.replace(/\\r\\n?/g, '\\n'); // Remove potential UTF Byte Order Mark\n\n        str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n        imports.contents[fileInfo.filename] = str; // Start with the primary rule.\n        // The whole syntax tree is held under a Ruleset node,\n        // with the `root` property set to true, so no `{}` are\n        // output. The callback is called when the input is parsed.\n\n        try {\n          parserInput.start(str, context.chunkInput, function fail(msg, index) {\n            throw new LessError({\n              index: index,\n              type: 'Parse',\n              message: msg,\n              filename: fileInfo.filename\n            }, imports);\n          });\n          tree.Node.prototype.parse = this;\n          root = new tree.Ruleset(null, this.parsers.primary());\n          tree.Node.prototype.rootNode = root;\n          root.root = true;\n          root.firstRoot = true;\n          root.functionRegistry = functionRegistry.inherit();\n        } catch (e) {\n          return callback(new LessError(e, imports, fileInfo.filename));\n        } // If `i` is smaller than the `input.length - 1`,\n        // it means the parser wasn't able to parse the whole\n        // string, so we've got a parsing error.\n        //\n        // We try to extract a \\n delimited string,\n        // showing the line where the parse error occurred.\n        // We split it up into two parts (the part which parsed,\n        // and the part which didn't), so we can color them differently.\n\n\n        var endInfo = parserInput.end();\n\n        if (!endInfo.isFinished) {\n          var message = endInfo.furthestPossibleErrorMessage;\n\n          if (!message) {\n            message = 'Unrecognised input';\n\n            if (endInfo.furthestChar === '}') {\n              message += '. Possibly missing opening \\'{\\'';\n            } else if (endInfo.furthestChar === ')') {\n              message += '. Possibly missing opening \\'(\\'';\n            } else if (endInfo.furthestReachedEnd) {\n              message += '. Possibly missing something';\n            }\n          }\n\n          error = new LessError({\n            type: 'Parse',\n            message: message,\n            index: endInfo.furthest,\n            filename: fileInfo.filename\n          }, imports);\n        }\n\n        var finish = function finish(e) {\n          e = error || e || imports.error;\n\n          if (e) {\n            if (!(e instanceof LessError)) {\n              e = new LessError(e, imports, fileInfo.filename);\n            }\n\n            return callback(e);\n          } else {\n            return callback(null, root);\n          }\n        };\n\n        if (context.processImports !== false) {\n          new visitors.ImportVisitor(imports, finish).run(root);\n        } else {\n          return finish();\n        }\n      },\n      //\n      // Here in, the parsing rules/functions\n      //\n      // The basic structure of the syntax tree generated is as follows:\n      //\n      //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n      //\n      // Here's some Less code:\n      //\n      //    .class {\n      //      color: #fff;\n      //      border: 1px solid #000;\n      //      width: @w + 4px;\n      //      > .child {...}\n      //    }\n      //\n      // And here's what the parse tree might look like:\n      //\n      //     Ruleset (Selector '.class', [\n      //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n      //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n      //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n      //         Ruleset (Selector [Element '>', '.child'], [...])\n      //     ])\n      //\n      //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n      //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n      //  first, before parsing, that's when we use `peek()`.\n      //\n      parsers: parsers = {\n        //\n        // The `primary` rule is the *entry* and *exit* point of the parser.\n        // The rules here can appear at any level of the parse tree.\n        //\n        // The recursive nature of the grammar is an interplay between the `block`\n        // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n        // as represented by this simplified grammar:\n        //\n        //     primary  →  (ruleset | declaration)+\n        //     ruleset  →  selector+ block\n        //     block    →  '{' primary '}'\n        //\n        // Only at one point is the primary rule not called from the\n        // block rule: at the root level.\n        //\n        primary: function primary() {\n          var mixin = this.mixin;\n          var root = [];\n          var node;\n\n          while (true) {\n            while (true) {\n              node = this.comment();\n\n              if (!node) {\n                break;\n              }\n\n              root.push(node);\n            } // always process comments before deciding if finished\n\n\n            if (parserInput.finished) {\n              break;\n            }\n\n            if (parserInput.peek('}')) {\n              break;\n            }\n\n            node = this.extendRule();\n\n            if (node) {\n              root = root.concat(node);\n              continue;\n            }\n\n            node = mixin.definition() || this.declaration() || this.ruleset() || mixin.call(false, false) || this.variableCall() || this.entities.call() || this.atrule();\n\n            if (node) {\n              root.push(node);\n            } else {\n              var foundSemiColon = false;\n\n              while (parserInput.$char(';')) {\n                foundSemiColon = true;\n              }\n\n              if (!foundSemiColon) {\n                break;\n              }\n            }\n          }\n\n          return root;\n        },\n        // comments are collected by the main parsing mechanism and then assigned to nodes\n        // where the current structure allows it\n        comment: function comment() {\n          if (parserInput.commentStore.length) {\n            var comment = parserInput.commentStore.shift();\n            return new tree.Comment(comment.text, comment.isLineComment, comment.index, fileInfo);\n          }\n        },\n        //\n        // Entities are tokens which can be found inside an Expression\n        //\n        entities: {\n          mixinLookup: function mixinLookup() {\n            return parsers.mixin.call(true, true);\n          },\n          //\n          // A string, which supports escaping \" and '\n          //\n          //     \"milky way\" 'he\\'s the one!'\n          //\n          quoted: function quoted(forceEscaped) {\n            var str;\n            var index = parserInput.i;\n            var isEscaped = false;\n            parserInput.save();\n\n            if (parserInput.$char('~')) {\n              isEscaped = true;\n            } else if (forceEscaped) {\n              parserInput.restore();\n              return;\n            }\n\n            str = parserInput.$quoted();\n\n            if (!str) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Quoted(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n          },\n          //\n          // A catch-all word, such as:\n          //\n          //     black border-collapse\n          //\n          keyword: function keyword() {\n            var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n\n            if (k) {\n              return tree.Color.fromKeyword(k) || new tree.Keyword(k);\n            }\n          },\n          //\n          // A function call\n          //\n          //     rgb(255, 0, 255)\n          //\n          // The arguments are parsed with the `entities.arguments` parser.\n          //\n          call: function call() {\n            var name;\n            var args;\n            var func;\n            var index = parserInput.i; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n            if (parserInput.peek(/^url\\(/i)) {\n              return;\n            }\n\n            parserInput.save();\n            name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n\n            if (!name) {\n              parserInput.forget();\n              return;\n            }\n\n            name = name[1];\n            func = this.customFuncCall(name);\n\n            if (func) {\n              args = func.parse();\n\n              if (args && func.stop) {\n                parserInput.forget();\n                return args;\n              }\n            }\n\n            args = this.arguments(args);\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore('Could not parse call arguments or missing \\')\\'');\n              return;\n            }\n\n            parserInput.forget();\n            return new tree.Call(name, args, index, fileInfo);\n          },\n          //\n          // Parsing rules for functions with non-standard args, e.g.:\n          //\n          //     boolean(not(2 > 1))\n          //\n          //     This is a quick prototype, to be modified/improved when\n          //     more custom-parsed funcs come (e.g. `selector(...)`)\n          //\n          customFuncCall: function customFuncCall(name) {\n            /* Ideally the table is to be moved out of here for faster perf.,\n               but it's quite tricky since it relies on all these `parsers`\n               and `expect` available only here */\n            return {\n              alpha: f(parsers.ieAlpha, true),\n              boolean: f(condition),\n              'if': f(condition)\n            }[name.toLowerCase()];\n\n            function f(parse, stop) {\n              return {\n                parse: parse,\n                // parsing function\n                stop: stop // when true - stop after parse() and return its result, \n                // otherwise continue for plain args\n\n              };\n            }\n\n            function condition() {\n              return [expect(parsers.condition, 'expected condition')];\n            }\n          },\n          arguments: function _arguments(prevArgs) {\n            var argsComma = prevArgs || [];\n            var argsSemiColon = [];\n            var isSemiColonSeparated;\n            var value;\n            parserInput.save();\n\n            while (true) {\n              if (prevArgs) {\n                prevArgs = false;\n              } else {\n                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n\n                if (!value) {\n                  break;\n                }\n\n                if (value.value && value.value.length == 1) {\n                  value = value.value[0];\n                }\n\n                argsComma.push(value);\n              }\n\n              if (parserInput.$char(',')) {\n                continue;\n              }\n\n              if (parserInput.$char(';') || isSemiColonSeparated) {\n                isSemiColonSeparated = true;\n                value = argsComma.length < 1 ? argsComma[0] : new tree.Value(argsComma);\n                argsSemiColon.push(value);\n                argsComma = [];\n              }\n            }\n\n            parserInput.forget();\n            return isSemiColonSeparated ? argsSemiColon : argsComma;\n          },\n          literal: function literal() {\n            return this.dimension() || this.color() || this.quoted() || this.unicodeDescriptor();\n          },\n          // Assignments are argument entities for calls.\n          // They are present in ie filter properties as shown below.\n          //\n          //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n          //\n          assignment: function assignment() {\n            var key;\n            var value;\n            parserInput.save();\n            key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n\n            if (!key) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char('=')) {\n              parserInput.restore();\n              return;\n            }\n\n            value = parsers.entity();\n\n            if (value) {\n              parserInput.forget();\n              return new tree.Assignment(key, value);\n            } else {\n              parserInput.restore();\n            }\n          },\n          //\n          // Parse url() tokens\n          //\n          // We use a specific rule for urls, because they don't really behave like\n          // standard function calls. The difference is that the argument doesn't have\n          // to be enclosed within a string, so it can't be parsed as an Expression.\n          //\n          url: function url() {\n            var value;\n            var index = parserInput.i;\n            parserInput.autoCommentAbsorb = false;\n\n            if (!parserInput.$str('url(')) {\n              parserInput.autoCommentAbsorb = true;\n              return;\n            }\n\n            value = this.quoted() || this.variable() || this.property() || parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n            parserInput.autoCommentAbsorb = true;\n            expectChar(')');\n            return new tree.URL(value.value != null || value instanceof tree.Variable || value instanceof tree.Property ? value : new tree.Anonymous(value, index), index, fileInfo);\n          },\n          //\n          // A Variable entity, such as `@fink`, in\n          //\n          //     width: @fink + 2px\n          //\n          // We use a different parser for variable definitions,\n          // see `parsers.variable`.\n          //\n          variable: function variable() {\n            var ch;\n            var name;\n            var index = parserInput.i;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n              ch = parserInput.currentChar();\n\n              if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                // this may be a VariableCall lookup\n                var result = parsers.variableCall(name);\n\n                if (result) {\n                  parserInput.forget();\n                  return result;\n                }\n              }\n\n              parserInput.forget();\n              return new tree.Variable(name, index, fileInfo);\n            }\n\n            parserInput.restore();\n          },\n          // A variable entity using the protective {} e.g. @{var}\n          variableCurly: function variableCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n              return new tree.Variable(\"@\".concat(curly[1]), index, fileInfo);\n            }\n          },\n          //\n          // A Property accessor, such as `$color`, in\n          //\n          //     background-color: $color\n          //\n          property: function property() {\n            var name;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n              return new tree.Property(name, index, fileInfo);\n            }\n          },\n          // A property entity useing the protective {} e.g. ${prop}\n          propertyCurly: function propertyCurly() {\n            var curly;\n            var index = parserInput.i;\n\n            if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n              return new tree.Property(\"$\".concat(curly[1]), index, fileInfo);\n            }\n          },\n          //\n          // A Hexadecimal color\n          //\n          //     #4F3C2F\n          //\n          // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n          //\n          color: function color() {\n            var rgb;\n            parserInput.save();\n\n            if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n              if (!rgb[2]) {\n                parserInput.forget();\n                return new tree.Color(rgb[1], undefined, rgb[0]);\n              }\n            }\n\n            parserInput.restore();\n          },\n          colorKeyword: function colorKeyword() {\n            parserInput.save();\n            var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n            parserInput.autoCommentAbsorb = false;\n            var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n            parserInput.autoCommentAbsorb = autoCommentAbsorb;\n\n            if (!k) {\n              parserInput.forget();\n              return;\n            }\n\n            parserInput.restore();\n            var color = tree.Color.fromKeyword(k);\n\n            if (color) {\n              parserInput.$str(k);\n              return color;\n            }\n          },\n          //\n          // A Dimension, that is, a number and a unit\n          //\n          //     0.5em 95%\n          //\n          dimension: function dimension() {\n            if (parserInput.peekNotNumeric()) {\n              return;\n            }\n\n            var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n\n            if (value) {\n              return new tree.Dimension(value[1], value[2]);\n            }\n          },\n          //\n          // A unicode descriptor, as is used in unicode-range\n          //\n          // U+0??  or U+00A1-00A9\n          //\n          unicodeDescriptor: function unicodeDescriptor() {\n            var ud;\n            ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n\n            if (ud) {\n              return new tree.UnicodeDescriptor(ud[0]);\n            }\n          },\n          //\n          // JavaScript code to be evaluated\n          //\n          //     `window.location.href`\n          //\n          javascript: function javascript() {\n            var js;\n            var index = parserInput.i;\n            parserInput.save();\n            var escape = parserInput.$char('~');\n            var jsQuote = parserInput.$char('`');\n\n            if (!jsQuote) {\n              parserInput.restore();\n              return;\n            }\n\n            js = parserInput.$re(/^[^`]*`/);\n\n            if (js) {\n              parserInput.forget();\n              return new tree.JavaScript(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n            }\n\n            parserInput.restore('invalid javascript definition');\n          }\n        },\n        //\n        // The variable part of a variable definition. Used in the `rule` parser\n        //\n        //     @fink:\n        //\n        variable: function variable() {\n          var name;\n\n          if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n            return name[1];\n          }\n        },\n        //\n        // Call a variable value to retrieve a detached ruleset\n        // or a value from a detached ruleset's rules.\n        //\n        //     @fink();\n        //     @fink;\n        //     color: @fink[@color];\n        //\n        variableCall: function variableCall(parsedName) {\n          var lookups;\n          var important;\n          var i = parserInput.i;\n          var inValue = !!parsedName;\n          var name = parsedName;\n          parserInput.save();\n\n          if (name || parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/))) {\n            lookups = this.mixin.ruleLookups();\n\n            if (!lookups && (inValue && parserInput.$str('()') !== '()' || name[2] !== '()')) {\n              parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n              return;\n            }\n\n            if (!inValue) {\n              name = name[1];\n            }\n\n            if (lookups && parsers.important()) {\n              important = true;\n            }\n\n            var call = new tree.VariableCall(name, i, fileInfo);\n\n            if (!inValue && parsers.end()) {\n              parserInput.forget();\n              return call;\n            } else {\n              parserInput.forget();\n              return new tree.NamespaceValue(call, lookups, important, i, fileInfo);\n            }\n          }\n\n          parserInput.restore();\n        },\n        //\n        // extend syntax - used to extend selectors\n        //\n        extend: function extend(isRule) {\n          var elements;\n          var e;\n          var index = parserInput.i;\n          var option;\n          var extendList;\n          var extend;\n\n          if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n            return;\n          }\n\n          do {\n            option = null;\n            elements = null;\n\n            while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n              e = this.element();\n\n              if (!e) {\n                break;\n              }\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n            }\n\n            option = option && option[1];\n\n            if (!elements) {\n              error('Missing target selector for :extend().');\n            }\n\n            extend = new tree.Extend(new tree.Selector(elements), option, index, fileInfo);\n\n            if (extendList) {\n              extendList.push(extend);\n            } else {\n              extendList = [extend];\n            }\n          } while (parserInput.$char(','));\n\n          expect(/^\\)/);\n\n          if (isRule) {\n            expect(/^;/);\n          }\n\n          return extendList;\n        },\n        //\n        // extendRule - used in a rule to extend all the parent selectors\n        //\n        extendRule: function extendRule() {\n          return this.extend(true);\n        },\n        //\n        // Mixins\n        //\n        mixin: {\n          //\n          // A Mixin call, with an optional argument list\n          //\n          //     #mixins > .square(#fff);\n          //     #mixins.square(#fff);\n          //     .rounded(4px, black);\n          //     .button;\n          //\n          // We can lookup / return a value using the lookup syntax:\n          //\n          //     color: #mixin.square(#fff)[@color];\n          //\n          // The `while` loop is there because mixins can be\n          // namespaced, but we only support the child and descendant\n          // selector for now.\n          //\n          call: function call(inValue, getLookup) {\n            var s = parserInput.currentChar();\n            var important = false;\n            var lookups;\n            var index = parserInput.i;\n            var elements;\n            var args;\n            var hasParens;\n\n            if (s !== '.' && s !== '#') {\n              return;\n            }\n\n            parserInput.save(); // stop us absorbing part of an invalid selector\n\n            elements = this.elements();\n\n            if (elements) {\n              if (parserInput.$char('(')) {\n                args = this.args(true).args;\n                expectChar(')');\n                hasParens = true;\n              }\n\n              if (getLookup !== false) {\n                lookups = this.ruleLookups();\n              }\n\n              if (getLookup === true && !lookups) {\n                parserInput.restore();\n                return;\n              }\n\n              if (inValue && !lookups && !hasParens) {\n                // This isn't a valid in-value mixin call\n                parserInput.restore();\n                return;\n              }\n\n              if (!inValue && parsers.important()) {\n                important = true;\n              }\n\n              if (inValue || parsers.end()) {\n                parserInput.forget();\n                var mixin = new tree.mixin.Call(elements, args, index, fileInfo, !lookups && important);\n\n                if (lookups) {\n                  return new tree.NamespaceValue(mixin, lookups, important);\n                } else {\n                  return mixin;\n                }\n              }\n            }\n\n            parserInput.restore();\n          },\n\n          /**\n           * Matching elements for mixins\n           * (Start with . or # and can have > )\n           */\n          elements: function elements() {\n            var elements;\n            var e;\n            var c;\n            var elem;\n            var elemIndex;\n            var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n\n            while (true) {\n              elemIndex = parserInput.i;\n              e = parserInput.$re(re);\n\n              if (!e) {\n                break;\n              }\n\n              elem = new tree.Element(c, e, false, elemIndex, fileInfo);\n\n              if (elements) {\n                elements.push(elem);\n              } else {\n                elements = [elem];\n              }\n\n              c = parserInput.$char('>');\n            }\n\n            return elements;\n          },\n          args: function args(isCall) {\n            var entities = parsers.entities;\n            var returner = {\n              args: null,\n              variadic: false\n            };\n            var expressions = [];\n            var argsSemiColon = [];\n            var argsComma = [];\n            var isSemiColonSeparated;\n            var expressionContainsNamed;\n            var name;\n            var nameLoop;\n            var value;\n            var arg;\n            var expand;\n            var hasSep = true;\n            parserInput.save();\n\n            while (true) {\n              if (isCall) {\n                arg = parsers.detachedRuleset() || parsers.expression();\n              } else {\n                parserInput.commentStore.length = 0;\n\n                if (parserInput.$str('...')) {\n                  returner.variadic = true;\n\n                  if (parserInput.$char(';') && !isSemiColonSeparated) {\n                    isSemiColonSeparated = true;\n                  }\n\n                  (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                    variadic: true\n                  });\n                  break;\n                }\n\n                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n              }\n\n              if (!arg || !hasSep) {\n                break;\n              }\n\n              nameLoop = null;\n\n              if (arg.throwAwayComments) {\n                arg.throwAwayComments();\n              }\n\n              value = arg;\n              var val = null;\n\n              if (isCall) {\n                // Variable\n                if (arg.value && arg.value.length == 1) {\n                  val = arg.value[0];\n                }\n              } else {\n                val = arg;\n              }\n\n              if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                if (parserInput.$char(':')) {\n                  if (expressions.length > 0) {\n                    if (isSemiColonSeparated) {\n                      error('Cannot mix ; and , as delimiter types');\n                    }\n\n                    expressionContainsNamed = true;\n                  }\n\n                  value = parsers.detachedRuleset() || parsers.expression();\n\n                  if (!value) {\n                    if (isCall) {\n                      error('could not understand value for named argument');\n                    } else {\n                      parserInput.restore();\n                      returner.args = [];\n                      return returner;\n                    }\n                  }\n\n                  nameLoop = name = val.name;\n                } else if (parserInput.$str('...')) {\n                  if (!isCall) {\n                    returner.variadic = true;\n\n                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                      isSemiColonSeparated = true;\n                    }\n\n                    (isSemiColonSeparated ? argsSemiColon : argsComma).push({\n                      name: arg.name,\n                      variadic: true\n                    });\n                    break;\n                  } else {\n                    expand = true;\n                  }\n                } else if (!isCall) {\n                  name = nameLoop = val.name;\n                  value = null;\n                }\n              }\n\n              if (value) {\n                expressions.push(value);\n              }\n\n              argsComma.push({\n                name: nameLoop,\n                value: value,\n                expand: expand\n              });\n\n              if (parserInput.$char(',')) {\n                hasSep = true;\n                continue;\n              }\n\n              hasSep = parserInput.$char(';') === ';';\n\n              if (hasSep || isSemiColonSeparated) {\n                if (expressionContainsNamed) {\n                  error('Cannot mix ; and , as delimiter types');\n                }\n\n                isSemiColonSeparated = true;\n\n                if (expressions.length > 1) {\n                  value = new tree.Value(expressions);\n                }\n\n                argsSemiColon.push({\n                  name: name,\n                  value: value,\n                  expand: expand\n                });\n                name = null;\n                expressions = [];\n                expressionContainsNamed = false;\n              }\n            }\n\n            parserInput.forget();\n            returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n            return returner;\n          },\n          //\n          // A Mixin definition, with a list of parameters\n          //\n          //     .rounded (@radius: 2px, @color) {\n          //        ...\n          //     }\n          //\n          // Until we have a finer grained state-machine, we have to\n          // do a look-ahead, to make sure we don't have a mixin call.\n          // See the `rule` function for more information.\n          //\n          // We start by matching `.rounded (`, and then proceed on to\n          // the argument list, which has optional default values.\n          // We store the parameters in `params`, with a `value` key,\n          // if there is a value, such as in the case of `@radius`.\n          //\n          // Once we've got our params list, and a closing `)`, we parse\n          // the `{...}` block.\n          //\n          definition: function definition() {\n            var name;\n            var params = [];\n            var match;\n            var ruleset;\n            var cond;\n            var variadic = false;\n\n            if (parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#' || parserInput.peek(/^[^{]*\\}/)) {\n              return;\n            }\n\n            parserInput.save();\n            match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n\n            if (match) {\n              name = match[1];\n              var argInfo = this.args(false);\n              params = argInfo.args;\n              variadic = argInfo.variadic; // .mixincall(\"@{a}\");\n              // looks a bit like a mixin definition..\n              // also\n              // .mixincall(@a: {rule: set;});\n              // so we have to be nice and restore\n\n              if (!parserInput.$char(')')) {\n                parserInput.restore('Missing closing \\')\\'');\n                return;\n              }\n\n              parserInput.commentStore.length = 0;\n\n              if (parserInput.$str('when')) {\n                // Guard\n                cond = expect(parsers.conditions, 'expected condition');\n              }\n\n              ruleset = parsers.block();\n\n              if (ruleset) {\n                parserInput.forget();\n                return new tree.mixin.Definition(name, params, ruleset, cond, variadic);\n              } else {\n                parserInput.restore();\n              }\n            } else {\n              parserInput.forget();\n            }\n          },\n          ruleLookups: function ruleLookups() {\n            var rule;\n            var lookups = [];\n\n            if (parserInput.currentChar() !== '[') {\n              return;\n            }\n\n            while (true) {\n              parserInput.save();\n              rule = this.lookupValue();\n\n              if (!rule && rule !== '') {\n                parserInput.restore();\n                break;\n              }\n\n              lookups.push(rule);\n              parserInput.forget();\n            }\n\n            if (lookups.length > 0) {\n              return lookups;\n            }\n          },\n          lookupValue: function lookupValue() {\n            parserInput.save();\n\n            if (!parserInput.$char('[')) {\n              parserInput.restore();\n              return;\n            }\n\n            var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n\n            if (!parserInput.$char(']')) {\n              parserInput.restore();\n              return;\n            }\n\n            if (name || name === '') {\n              parserInput.forget();\n              return name;\n            }\n\n            parserInput.restore();\n          }\n        },\n        //\n        // Entities are the smallest recognized token,\n        // and can be found inside a rule's value.\n        //\n        entity: function entity() {\n          var entities = this.entities;\n          return this.comment() || entities.literal() || entities.variable() || entities.url() || entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) || entities.javascript();\n        },\n        //\n        // A Declaration terminator. Note that we use `peek()` to check for '}',\n        // because the `block` rule will be expecting it, but we still need to make sure\n        // it's there, if ';' was omitted.\n        //\n        end: function end() {\n          return parserInput.$char(';') || parserInput.peek('}');\n        },\n        //\n        // IE's alpha function\n        //\n        //     alpha(opacity=88)\n        //\n        ieAlpha: function ieAlpha() {\n          var value; // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n\n          if (!parserInput.$re(/^opacity=/i)) {\n            return;\n          }\n\n          value = parserInput.$re(/^\\d+/);\n\n          if (!value) {\n            value = expect(parsers.entities.variable, 'Could not parse alpha');\n            value = \"@{\".concat(value.name.slice(1), \"}\");\n          }\n\n          expectChar(')');\n          return new tree.Quoted('', \"alpha(opacity=\".concat(value, \")\"));\n        },\n        //\n        // A Selector Element\n        //\n        //     div\n        //     + h1\n        //     #socks\n        //     input[type=\"text\"]\n        //\n        // Elements are the building blocks for Selectors,\n        // they are made out of a `Combinator` (see combinator rule),\n        // and an element name, such as a tag a class, or `*`.\n        //\n        element: function element() {\n          var e;\n          var c;\n          var v;\n          var index = parserInput.i;\n          c = this.combinator();\n          e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) || parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) || parserInput.$char('*') || parserInput.$char('&') || this.attribute() || parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) || this.entities.variableCurly();\n\n          if (!e) {\n            parserInput.save();\n\n            if (parserInput.$char('(')) {\n              if ((v = this.selector(false)) && parserInput.$char(')')) {\n                e = new tree.Paren(v);\n                parserInput.forget();\n              } else {\n                parserInput.restore('Missing closing \\')\\'');\n              }\n            } else {\n              parserInput.forget();\n            }\n          }\n\n          if (e) {\n            return new tree.Element(c, e, e instanceof tree.Variable, index, fileInfo);\n          }\n        },\n        //\n        // Combinators combine elements together, in a Selector.\n        //\n        // Because our parser isn't white-space sensitive, special care\n        // has to be taken, when parsing the descendant combinator, ` `,\n        // as it's an empty space. We have to check the previous character\n        // in the input, to see if it's a ` ` character. More info on how\n        // we deal with this in *combinator.js*.\n        //\n        combinator: function combinator() {\n          var c = parserInput.currentChar();\n\n          if (c === '/') {\n            parserInput.save();\n            var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n\n            if (slashedCombinator) {\n              parserInput.forget();\n              return new tree.Combinator(slashedCombinator);\n            }\n\n            parserInput.restore();\n          }\n\n          if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n            parserInput.i++;\n\n            if (c === '^' && parserInput.currentChar() === '^') {\n              c = '^^';\n              parserInput.i++;\n            }\n\n            while (parserInput.isWhitespace()) {\n              parserInput.i++;\n            }\n\n            return new tree.Combinator(c);\n          } else if (parserInput.isWhitespace(-1)) {\n            return new tree.Combinator(' ');\n          } else {\n            return new tree.Combinator(null);\n          }\n        },\n        //\n        // A CSS Selector\n        // with less extensions e.g. the ability to extend and guard\n        //\n        //     .class > div + h1\n        //     li a:hover\n        //\n        // Selectors are made out of one or more Elements, see above.\n        //\n        selector: function selector(isLess) {\n          var index = parserInput.i;\n          var elements;\n          var extendList;\n          var c;\n          var e;\n          var allExtends;\n          var when;\n          var condition;\n          isLess = isLess !== false;\n\n          while (isLess && (extendList = this.extend()) || isLess && (when = parserInput.$str('when')) || (e = this.element())) {\n            if (when) {\n              condition = expect(this.conditions, 'expected condition');\n            } else if (condition) {\n              error('CSS guard can only be used at the end of selector');\n            } else if (extendList) {\n              if (allExtends) {\n                allExtends = allExtends.concat(extendList);\n              } else {\n                allExtends = extendList;\n              }\n            } else {\n              if (allExtends) {\n                error('Extend can only be used at the end of selector');\n              }\n\n              c = parserInput.currentChar();\n\n              if (elements) {\n                elements.push(e);\n              } else {\n                elements = [e];\n              }\n\n              e = null;\n            }\n\n            if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n              break;\n            }\n          }\n\n          if (elements) {\n            return new tree.Selector(elements, allExtends, condition, index, fileInfo);\n          }\n\n          if (allExtends) {\n            error('Extend must be used to extend a selector, it cannot be used on its own');\n          }\n        },\n        selectors: function selectors() {\n          var s;\n          var selectors;\n\n          while (true) {\n            s = this.selector();\n\n            if (!s) {\n              break;\n            }\n\n            if (selectors) {\n              selectors.push(s);\n            } else {\n              selectors = [s];\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (s.condition && selectors.length > 1) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            if (!parserInput.$char(',')) {\n              break;\n            }\n\n            if (s.condition) {\n              error(\"Guards are only currently allowed on a single selector.\");\n            }\n\n            parserInput.commentStore.length = 0;\n          }\n\n          return selectors;\n        },\n        attribute: function attribute() {\n          if (!parserInput.$char('[')) {\n            return;\n          }\n\n          var entities = this.entities;\n          var key;\n          var val;\n          var op;\n\n          if (!(key = entities.variableCurly())) {\n            key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n          }\n\n          op = parserInput.$re(/^[|~*$^]?=/);\n\n          if (op) {\n            val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n          }\n\n          expectChar(']');\n          return new tree.Attribute(key, op, val);\n        },\n        //\n        // The `block` rule is used by `ruleset` and `mixin.definition`.\n        // It's a wrapper around the `primary` rule, with added `{}`.\n        //\n        block: function block() {\n          var content;\n\n          if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n            return content;\n          }\n        },\n        blockRuleset: function blockRuleset() {\n          var block = this.block();\n\n          if (block) {\n            block = new tree.Ruleset(null, block);\n          }\n\n          return block;\n        },\n        detachedRuleset: function detachedRuleset() {\n          var argInfo;\n          var params;\n          var variadic;\n          parserInput.save();\n\n          if (parserInput.$re(/^[.#]\\(/)) {\n            /**\n             * DR args currently only implemented for each() function, and not \n             * yet settable as `@dr: #(@arg) {}`\n             * This should be done when DRs are merged with mixins.\n             * See: https://github.com/less/less-meta/issues/16\n             */\n            argInfo = this.mixin.args(false);\n            params = argInfo.args;\n            variadic = argInfo.variadic;\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n          }\n\n          var blockRuleset = this.blockRuleset();\n\n          if (blockRuleset) {\n            parserInput.forget();\n\n            if (params) {\n              return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n            }\n\n            return new tree.DetachedRuleset(blockRuleset);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // div, .class, body > p {...}\n        //\n        ruleset: function ruleset() {\n          var selectors;\n          var rules;\n          var debugInfo;\n          parserInput.save();\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(parserInput.i);\n          }\n\n          selectors = this.selectors();\n\n          if (selectors && (rules = this.block())) {\n            parserInput.forget();\n            var ruleset = new tree.Ruleset(selectors, rules, context.strictImports);\n\n            if (context.dumpLineNumbers) {\n              ruleset.debugInfo = debugInfo;\n            }\n\n            return ruleset;\n          } else {\n            parserInput.restore();\n          }\n        },\n        declaration: function declaration() {\n          var name;\n          var value;\n          var index = parserInput.i;\n          var hasDR;\n          var c = parserInput.currentChar();\n          var important;\n          var merge;\n          var isVariable;\n\n          if (c === '.' || c === '#' || c === '&' || c === ':') {\n            return;\n          }\n\n          parserInput.save();\n          name = this.variable() || this.ruleProperty();\n\n          if (name) {\n            isVariable = typeof name === 'string';\n\n            if (isVariable) {\n              value = this.detachedRuleset();\n\n              if (value) {\n                hasDR = true;\n              }\n            }\n\n            parserInput.commentStore.length = 0;\n\n            if (!value) {\n              // a name returned by this.ruleProperty() is always an array of the form:\n              // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n              // where each item is a tree.Keyword or tree.Variable\n              merge = !isVariable && name.length > 1 && name.pop().value; // Custom property values get permissive parsing\n\n              if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                value = this.permissiveValue();\n              } // Try to store values as anonymous\n              // If we need the value later we'll re-parse it in ruleset.parseValue\n              else {\n                  value = this.anonymousValue();\n                }\n\n              if (value) {\n                parserInput.forget(); // anonymous values absorb the end ';' which is required for them to work\n\n                return new tree.Declaration(name, value, false, merge, index, fileInfo);\n              }\n\n              if (!value) {\n                value = this.value();\n              }\n\n              if (value) {\n                important = this.important();\n              } else if (isVariable) {\n                // As a last resort, try permissiveValue\n                value = this.permissiveValue();\n              }\n            }\n\n            if (value && (this.end() || hasDR)) {\n              parserInput.forget();\n              return new tree.Declaration(name, value, important, merge, index, fileInfo);\n            } else {\n              parserInput.restore();\n            }\n          } else {\n            parserInput.restore();\n          }\n        },\n        anonymousValue: function anonymousValue() {\n          var index = parserInput.i;\n          var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n\n          if (match) {\n            return new tree.Anonymous(match[1], index);\n          }\n        },\n\n        /**\n         * Used for custom properties, at-rules, and variables (as fallback)\n         * Parses almost anything inside of {} [] () \"\" blocks\n         * until it reaches outer-most tokens.\n         * \n         * First, it will try to parse comments and entities to reach\n         * the end. This is mostly like the Expression parser except no\n         * math is allowed.\n         */\n        permissiveValue: function permissiveValue(untilTokens) {\n          var i;\n          var e;\n          var done;\n          var value;\n          var tok = untilTokens || ';';\n          var index = parserInput.i;\n          var result = [];\n\n          function testCurrentChar() {\n            var char = parserInput.currentChar();\n\n            if (typeof tok === 'string') {\n              return char === tok;\n            } else {\n              return tok.test(char);\n            }\n          }\n\n          if (testCurrentChar()) {\n            return;\n          }\n\n          value = [];\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              value.push(e);\n              continue;\n            }\n\n            e = this.entity();\n\n            if (e) {\n              value.push(e);\n            }\n          } while (e);\n\n          done = testCurrentChar();\n\n          if (value.length > 0) {\n            value = new tree.Expression(value);\n\n            if (done) {\n              return value;\n            } else {\n              result.push(value);\n            } // Preserve space before $parseUntil as it will not\n\n\n            if (parserInput.prevChar() === ' ') {\n              result.push(new tree.Anonymous(' ', index));\n            }\n          }\n\n          parserInput.save();\n          value = parserInput.$parseUntil(tok);\n\n          if (value) {\n            if (typeof value === 'string') {\n              error(\"Expected '\".concat(value, \"'\"), 'Parse');\n            }\n\n            if (value.length === 1 && value[0] === ' ') {\n              parserInput.forget();\n              return new tree.Anonymous('', index);\n            }\n\n            var item;\n\n            for (i = 0; i < value.length; i++) {\n              item = value[i];\n\n              if (Array.isArray(item)) {\n                // Treat actual quotes as normal quoted values\n                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n              } else {\n                if (i === value.length - 1) {\n                  item = item.trim();\n                } // Treat like quoted values, but replace vars like unquoted expressions\n\n\n                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                quote.variableRegex = /@([\\w-]+)/g;\n                quote.propRegex = /\\$([\\w-]+)/g;\n                result.push(quote);\n              }\n            }\n\n            parserInput.forget();\n            return new tree.Expression(result, true);\n          }\n\n          parserInput.restore();\n        },\n        //\n        // An @import atrule\n        //\n        //     @import \"lib\";\n        //\n        // Depending on our environment, importing is done differently:\n        // In the browser, it's an XHR request, in Node, it would be a\n        // file-system operation. The function used for importing is\n        // stored in `import`, which we pass to the Import constructor.\n        //\n        'import': function _import() {\n          var path;\n          var features;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@import?\\s+/);\n\n          if (dir) {\n            var options = (dir ? this.importOptions() : null) || {};\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              features = this.mediaFeatures();\n\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon or unrecognised media features on import');\n              }\n\n              features = features && new tree.Value(features);\n              return new tree.Import(path, features, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed import statement');\n            }\n          }\n        },\n        importOptions: function importOptions() {\n          var o;\n          var options = {};\n          var optionName;\n          var value; // list of options, surrounded by parens\n\n          if (!parserInput.$char('(')) {\n            return null;\n          }\n\n          do {\n            o = this.importOption();\n\n            if (o) {\n              optionName = o;\n              value = true;\n\n              switch (optionName) {\n                case 'css':\n                  optionName = 'less';\n                  value = false;\n                  break;\n\n                case 'once':\n                  optionName = 'multiple';\n                  value = false;\n                  break;\n              }\n\n              options[optionName] = value;\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (o);\n\n          expectChar(')');\n          return options;\n        },\n        importOption: function importOption() {\n          var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n\n          if (opt) {\n            return opt[1];\n          }\n        },\n        mediaFeature: function mediaFeature() {\n          var entities = this.entities;\n          var nodes = [];\n          var e;\n          var p;\n          parserInput.save();\n\n          do {\n            e = entities.keyword() || entities.variable() || entities.mixinLookup();\n\n            if (e) {\n              nodes.push(e);\n            } else if (parserInput.$char('(')) {\n              p = this.property();\n              e = this.value();\n\n              if (parserInput.$char(')')) {\n                if (p && e) {\n                  nodes.push(new tree.Paren(new tree.Declaration(p, e, null, null, parserInput.i, fileInfo, true)));\n                } else if (e) {\n                  nodes.push(new tree.Paren(e));\n                } else {\n                  error('badly formed media feature definition');\n                }\n              } else {\n                error('Missing closing \\')\\'', 'Parse');\n              }\n            }\n          } while (e);\n\n          parserInput.forget();\n\n          if (nodes.length > 0) {\n            return new tree.Expression(nodes);\n          }\n        },\n        mediaFeatures: function mediaFeatures() {\n          var entities = this.entities;\n          var features = [];\n          var e;\n\n          do {\n            e = this.mediaFeature();\n\n            if (e) {\n              features.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            } else {\n              e = entities.variable() || entities.mixinLookup();\n\n              if (e) {\n                features.push(e);\n\n                if (!parserInput.$char(',')) {\n                  break;\n                }\n              }\n            }\n          } while (e);\n\n          return features.length > 0 ? features : null;\n        },\n        media: function media() {\n          var features;\n          var rules;\n          var media;\n          var debugInfo;\n          var index = parserInput.i;\n\n          if (context.dumpLineNumbers) {\n            debugInfo = getDebugInfo(index);\n          }\n\n          parserInput.save();\n\n          if (parserInput.$str('@media')) {\n            features = this.mediaFeatures();\n            rules = this.block();\n\n            if (!rules) {\n              error('media definitions require block statements after any features');\n            }\n\n            parserInput.forget();\n            media = new tree.Media(rules, features, index, fileInfo);\n\n            if (context.dumpLineNumbers) {\n              media.debugInfo = debugInfo;\n            }\n\n            return media;\n          }\n\n          parserInput.restore();\n        },\n        //\n        // A @plugin directive, used to import plugins dynamically.\n        //\n        //     @plugin (args) \"lib\";\n        //\n        plugin: function plugin() {\n          var path;\n          var args;\n          var options;\n          var index = parserInput.i;\n          var dir = parserInput.$re(/^@plugin?\\s+/);\n\n          if (dir) {\n            args = this.pluginArgs();\n\n            if (args) {\n              options = {\n                pluginArgs: args,\n                isPlugin: true\n              };\n            } else {\n              options = {\n                isPlugin: true\n              };\n            }\n\n            if (path = this.entities.quoted() || this.entities.url()) {\n              if (!parserInput.$char(';')) {\n                parserInput.i = index;\n                error('missing semi-colon on @plugin');\n              }\n\n              return new tree.Import(path, null, options, index, fileInfo);\n            } else {\n              parserInput.i = index;\n              error('malformed @plugin statement');\n            }\n          }\n        },\n        pluginArgs: function pluginArgs() {\n          // list of options, surrounded by parens\n          parserInput.save();\n\n          if (!parserInput.$char('(')) {\n            parserInput.restore();\n            return null;\n          }\n\n          var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n\n          if (args[1]) {\n            parserInput.forget();\n            return args[1].trim();\n          } else {\n            parserInput.restore();\n            return null;\n          }\n        },\n        //\n        // A CSS AtRule\n        //\n        //     @charset \"utf-8\";\n        //\n        atrule: function atrule() {\n          var index = parserInput.i;\n          var name;\n          var value;\n          var rules;\n          var nonVendorSpecificName;\n          var hasIdentifier;\n          var hasExpression;\n          var hasUnknown;\n          var hasBlock = true;\n          var isRooted = true;\n\n          if (parserInput.currentChar() !== '@') {\n            return;\n          }\n\n          value = this['import']() || this.plugin() || this.media();\n\n          if (value) {\n            return value;\n          }\n\n          parserInput.save();\n          name = parserInput.$re(/^@[a-z-]+/);\n\n          if (!name) {\n            return;\n          }\n\n          nonVendorSpecificName = name;\n\n          if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n            nonVendorSpecificName = \"@\".concat(name.slice(name.indexOf('-', 2) + 1));\n          }\n\n          switch (nonVendorSpecificName) {\n            case '@charset':\n              hasIdentifier = true;\n              hasBlock = false;\n              break;\n\n            case '@namespace':\n              hasExpression = true;\n              hasBlock = false;\n              break;\n\n            case '@keyframes':\n            case '@counter-style':\n              hasIdentifier = true;\n              break;\n\n            case '@document':\n            case '@supports':\n              hasUnknown = true;\n              isRooted = false;\n              break;\n\n            default:\n              hasUnknown = true;\n              break;\n          }\n\n          parserInput.commentStore.length = 0;\n\n          if (hasIdentifier) {\n            value = this.entity();\n\n            if (!value) {\n              error(\"expected \".concat(name, \" identifier\"));\n            }\n          } else if (hasExpression) {\n            value = this.expression();\n\n            if (!value) {\n              error(\"expected \".concat(name, \" expression\"));\n            }\n          } else if (hasUnknown) {\n            value = this.permissiveValue(/^[{;]/);\n            hasBlock = parserInput.currentChar() === '{';\n\n            if (!value) {\n              if (!hasBlock && parserInput.currentChar() !== ';') {\n                error(\"\".concat(name, \" rule is missing block or ending semi-colon\"));\n              }\n            } else if (!value.value) {\n              value = null;\n            }\n          }\n\n          if (hasBlock) {\n            rules = this.blockRuleset();\n          }\n\n          if (rules || !hasBlock && value && parserInput.$char(';')) {\n            parserInput.forget();\n            return new tree.AtRule(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n          }\n\n          parserInput.restore('at-rule options not recognised');\n        },\n        //\n        // A Value is a comma-delimited list of Expressions\n        //\n        //     font-family: Baskerville, Georgia, serif;\n        //\n        // In a Rule, a Value represents everything after the `:`,\n        // and before the `;`.\n        //\n        value: function value() {\n          var e;\n          var expressions = [];\n          var index = parserInput.i;\n\n          do {\n            e = this.expression();\n\n            if (e) {\n              expressions.push(e);\n\n              if (!parserInput.$char(',')) {\n                break;\n              }\n            }\n          } while (e);\n\n          if (expressions.length > 0) {\n            return new tree.Value(expressions, index);\n          }\n        },\n        important: function important() {\n          if (parserInput.currentChar() === '!') {\n            return parserInput.$re(/^! *important/);\n          }\n        },\n        sub: function sub() {\n          var a;\n          var e;\n          parserInput.save();\n\n          if (parserInput.$char('(')) {\n            a = this.addition();\n\n            if (a && parserInput.$char(')')) {\n              parserInput.forget();\n              e = new tree.Expression([a]);\n              e.parens = true;\n              return e;\n            }\n\n            parserInput.restore('Expected \\')\\'');\n            return;\n          }\n\n          parserInput.restore();\n        },\n        multiplication: function multiplication() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.operand();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              if (parserInput.peek(/^\\/[*\\/]/)) {\n                break;\n              }\n\n              parserInput.save();\n              op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n\n              if (!op) {\n                parserInput.forget();\n                break;\n              }\n\n              a = this.operand();\n\n              if (!a) {\n                parserInput.restore();\n                break;\n              }\n\n              parserInput.forget();\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        addition: function addition() {\n          var m;\n          var a;\n          var op;\n          var operation;\n          var isSpaced;\n          m = this.multiplication();\n\n          if (m) {\n            isSpaced = parserInput.isWhitespace(-1);\n\n            while (true) {\n              op = parserInput.$re(/^[-+]\\s+/) || !isSpaced && (parserInput.$char('+') || parserInput.$char('-'));\n\n              if (!op) {\n                break;\n              }\n\n              a = this.multiplication();\n\n              if (!a) {\n                break;\n              }\n\n              m.parensInOp = true;\n              a.parensInOp = true;\n              operation = new tree.Operation(op, [operation || m, a], isSpaced);\n              isSpaced = parserInput.isWhitespace(-1);\n            }\n\n            return operation || m;\n          }\n        },\n        conditions: function conditions() {\n          var a;\n          var b;\n          var index = parserInput.i;\n          var condition;\n          a = this.condition(true);\n\n          if (a) {\n            while (true) {\n              if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                break;\n              }\n\n              b = this.condition(true);\n\n              if (!b) {\n                break;\n              }\n\n              condition = new tree.Condition('or', condition || a, b, index);\n            }\n\n            return condition || a;\n          }\n        },\n        condition: function condition(needsParens) {\n          var result;\n          var logical;\n          var next;\n\n          function or() {\n            return parserInput.$str('or');\n          }\n\n          result = this.conditionAnd(needsParens);\n\n          if (!result) {\n            return;\n          }\n\n          logical = or();\n\n          if (logical) {\n            next = this.condition(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        conditionAnd: function conditionAnd(needsParens) {\n          var result;\n          var logical;\n          var next;\n          var self = this;\n\n          function insideCondition() {\n            var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n\n            if (!cond && !needsParens) {\n              return self.atomicCondition(needsParens);\n            }\n\n            return cond;\n          }\n\n          function and() {\n            return parserInput.$str('and');\n          }\n\n          result = insideCondition();\n\n          if (!result) {\n            return;\n          }\n\n          logical = and();\n\n          if (logical) {\n            next = this.conditionAnd(needsParens);\n\n            if (next) {\n              result = new tree.Condition(logical, result, next);\n            } else {\n              return;\n            }\n          }\n\n          return result;\n        },\n        negatedCondition: function negatedCondition(needsParens) {\n          if (parserInput.$str('not')) {\n            var result = this.parenthesisCondition(needsParens);\n\n            if (result) {\n              result.negate = !result.negate;\n            }\n\n            return result;\n          }\n        },\n        parenthesisCondition: function parenthesisCondition(needsParens) {\n          function tryConditionFollowedByParenthesis(me) {\n            var body;\n            parserInput.save();\n            body = me.condition(needsParens);\n\n            if (!body) {\n              parserInput.restore();\n              return;\n            }\n\n            if (!parserInput.$char(')')) {\n              parserInput.restore();\n              return;\n            }\n\n            parserInput.forget();\n            return body;\n          }\n\n          var body;\n          parserInput.save();\n\n          if (!parserInput.$str('(')) {\n            parserInput.restore();\n            return;\n          }\n\n          body = tryConditionFollowedByParenthesis(this);\n\n          if (body) {\n            parserInput.forget();\n            return body;\n          }\n\n          body = this.atomicCondition(needsParens);\n\n          if (!body) {\n            parserInput.restore();\n            return;\n          }\n\n          if (!parserInput.$char(')')) {\n            parserInput.restore(\"expected ')' got '\".concat(parserInput.currentChar(), \"'\"));\n            return;\n          }\n\n          parserInput.forget();\n          return body;\n        },\n        atomicCondition: function atomicCondition(needsParens) {\n          var entities = this.entities;\n          var index = parserInput.i;\n          var a;\n          var b;\n          var c;\n          var op;\n\n          function cond() {\n            return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n          }\n\n          cond = cond.bind(this);\n          a = cond();\n\n          if (a) {\n            if (parserInput.$char('>')) {\n              if (parserInput.$char('=')) {\n                op = '>=';\n              } else {\n                op = '>';\n              }\n            } else if (parserInput.$char('<')) {\n              if (parserInput.$char('=')) {\n                op = '<=';\n              } else {\n                op = '<';\n              }\n            } else if (parserInput.$char('=')) {\n              if (parserInput.$char('>')) {\n                op = '=>';\n              } else if (parserInput.$char('<')) {\n                op = '=<';\n              } else {\n                op = '=';\n              }\n            }\n\n            if (op) {\n              b = cond();\n\n              if (b) {\n                c = new tree.Condition(op, a, b, index, false);\n              } else {\n                error('expected expression');\n              }\n            } else {\n              c = new tree.Condition('=', a, new tree.Keyword('true'), index, false);\n            }\n\n            return c;\n          }\n        },\n        //\n        // An operand is anything that can be part of an operation,\n        // such as a Color, or a Variable\n        //\n        operand: function operand() {\n          var entities = this.entities;\n          var negate;\n\n          if (parserInput.peek(/^-[@\\$\\(]/)) {\n            negate = parserInput.$char('-');\n          }\n\n          var o = this.sub() || entities.dimension() || entities.color() || entities.variable() || entities.property() || entities.call() || entities.quoted(true) || entities.colorKeyword() || entities.mixinLookup();\n\n          if (negate) {\n            o.parensInOp = true;\n            o = new tree.Negative(o);\n          }\n\n          return o;\n        },\n        //\n        // Expressions either represent mathematical operations,\n        // or white-space delimited Entities.\n        //\n        //     1px solid black\n        //     @var * 2\n        //\n        expression: function expression() {\n          var entities = [];\n          var e;\n          var delim;\n          var index = parserInput.i;\n\n          do {\n            e = this.comment();\n\n            if (e) {\n              entities.push(e);\n              continue;\n            }\n\n            e = this.addition() || this.entity();\n\n            if (e) {\n              entities.push(e); // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n\n              if (!parserInput.peek(/^\\/[\\/*]/)) {\n                delim = parserInput.$char('/');\n\n                if (delim) {\n                  entities.push(new tree.Anonymous(delim, index));\n                }\n              }\n            }\n          } while (e);\n\n          if (entities.length > 0) {\n            return new tree.Expression(entities);\n          }\n        },\n        property: function property() {\n          var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n\n          if (name) {\n            return name[1];\n          }\n        },\n        ruleProperty: function ruleProperty() {\n          var name = [];\n          var index = [];\n          var s;\n          var k;\n          parserInput.save();\n          var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n\n          if (simpleProperty) {\n            name = [new tree.Keyword(simpleProperty[1])];\n            parserInput.forget();\n            return name;\n          }\n\n          function match(re) {\n            var i = parserInput.i;\n            var chunk = parserInput.$re(re);\n\n            if (chunk) {\n              index.push(i);\n              return name.push(chunk[1]);\n            }\n          }\n\n          match(/^(\\*?)/);\n\n          while (true) {\n            if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n              break;\n            }\n          }\n\n          if (name.length > 1 && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n            parserInput.forget(); // at last, we have the complete match now. move forward,\n            // convert name particles to tree objects and return:\n\n            if (name[0] === '') {\n              name.shift();\n              index.shift();\n            }\n\n            for (k = 0; k < name.length; k++) {\n              s = name[k];\n              name[k] = s.charAt(0) !== '@' && s.charAt(0) !== '$' ? new tree.Keyword(s) : s.charAt(0) === '@' ? new tree.Variable(\"@\".concat(s.slice(2, -1)), index[k], fileInfo) : new tree.Property(\"$\".concat(s.slice(2, -1)), index[k], fileInfo);\n            }\n\n            return name;\n          }\n\n          parserInput.restore();\n        }\n      }\n    };\n  };\n\n  Parser.serializeVars = function (vars) {\n    var s = '';\n\n    for (var name in vars) {\n      if (Object.hasOwnProperty.call(vars, name)) {\n        var value = vars[name];\n        s += \"\".concat((name[0] === '@' ? '' : '@') + name, \": \").concat(value).concat(String(value).slice(-1) === ';' ? '' : ';');\n      }\n    }\n\n    return s;\n  };\n\n  function boolean(condition) {\n    return condition ? Keyword.True : Keyword.False;\n  }\n\n  function If(condition, trueValue, falseValue) {\n    return condition ? trueValue : falseValue || new Anonymous();\n  }\n\n  var boolean$1 = {\n    boolean: boolean,\n    'if': If\n  };\n\n  var colorFunctions;\n\n  function clamp$1(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  function hsla(origColor, hsl) {\n    var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n\n    if (color) {\n      if (origColor.value && /^(rgb|hsl)/.test(origColor.value)) {\n        color.value = origColor.value;\n      } else {\n        color.value = 'rgb';\n      }\n\n      return color;\n    }\n  }\n\n  function toHSL(color) {\n    if (color.toHSL) {\n      return color.toHSL();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function toHSV(color) {\n    if (color.toHSV) {\n      return color.toHSV();\n    } else {\n      throw new Error('Argument cannot be evaluated to a color');\n    }\n  }\n\n  function number(n) {\n    if (n instanceof Dimension) {\n      return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n      return n;\n    } else {\n      throw {\n        type: 'Argument',\n        message: 'color functions take numbers as parameters'\n      };\n    }\n  }\n\n  function scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n      return parseFloat(n.value * size / 100);\n    } else {\n      return number(n);\n    }\n  }\n\n  colorFunctions = {\n    rgb: function rgb(r, g, b) {\n      var color = colorFunctions.rgba(r, g, b, 1.0);\n\n      if (color) {\n        color.value = 'rgb';\n        return color;\n      }\n    },\n    rgba: function rgba(r, g, b, a) {\n      try {\n        if (r instanceof Color) {\n          if (g) {\n            a = number(g);\n          } else {\n            a = r.alpha;\n          }\n\n          return new Color(r.rgb, a, 'rgba');\n        }\n\n        var rgb = [r, g, b].map(function (c) {\n          return scaled(c, 255);\n        });\n        a = number(a);\n        return new Color(rgb, a, 'rgba');\n      } catch (e) {}\n    },\n    hsl: function hsl(h, s, l) {\n      var color = colorFunctions.hsla(h, s, l, 1.0);\n\n      if (color) {\n        color.value = 'hsl';\n        return color;\n      }\n    },\n    hsla: function hsla(h, s, l, a) {\n      try {\n        var hue = function hue(h) {\n          h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\n          if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n          } else if (h * 2 < 1) {\n            return m2;\n          } else if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n          } else {\n            return m1;\n          }\n        };\n\n        if (h instanceof Color) {\n          if (s) {\n            a = number(s);\n          } else {\n            a = h.alpha;\n          }\n\n          return new Color(h.rgb, a, 'hsla');\n        }\n\n        var m1;\n        var m2;\n        h = number(h) % 360 / 360;\n        s = clamp$1(number(s));\n        l = clamp$1(number(l));\n        a = clamp$1(number(a));\n        m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        m1 = l * 2 - m2;\n        var rgb = [hue(h + 1 / 3) * 255, hue(h) * 255, hue(h - 1 / 3) * 255];\n        a = number(a);\n        return new Color(rgb, a, 'hsla');\n      } catch (e) {}\n    },\n    hsv: function hsv(h, s, v) {\n      return colorFunctions.hsva(h, s, v, 1.0);\n    },\n    hsva: function hsva(h, s, v, a) {\n      h = number(h) % 360 / 360 * 360;\n      s = number(s);\n      v = number(v);\n      a = number(a);\n      var i;\n      var f;\n      i = Math.floor(h / 60 % 6);\n      f = h / 60 - i;\n      var vs = [v, v * (1 - s), v * (1 - f * s), v * (1 - (1 - f) * s)];\n      var perm = [[0, 3, 1], [2, 0, 1], [1, 0, 3], [1, 2, 0], [3, 1, 0], [0, 1, 2]];\n      return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n    },\n    hue: function hue(color) {\n      return new Dimension(toHSL(color).h);\n    },\n    saturation: function saturation(color) {\n      return new Dimension(toHSL(color).s * 100, '%');\n    },\n    lightness: function lightness(color) {\n      return new Dimension(toHSL(color).l * 100, '%');\n    },\n    hsvhue: function hsvhue(color) {\n      return new Dimension(toHSV(color).h);\n    },\n    hsvsaturation: function hsvsaturation(color) {\n      return new Dimension(toHSV(color).s * 100, '%');\n    },\n    hsvvalue: function hsvvalue(color) {\n      return new Dimension(toHSV(color).v * 100, '%');\n    },\n    red: function red(color) {\n      return new Dimension(color.rgb[0]);\n    },\n    green: function green(color) {\n      return new Dimension(color.rgb[1]);\n    },\n    blue: function blue(color) {\n      return new Dimension(color.rgb[2]);\n    },\n    alpha: function alpha(color) {\n      return new Dimension(toHSL(color).a);\n    },\n    luma: function luma(color) {\n      return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function luminance(color) {\n      var luminance = 0.2126 * color.rgb[0] / 255 + 0.7152 * color.rgb[1] / 255 + 0.0722 * color.rgb[2] / 255;\n      return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function saturate(color, amount, method) {\n      // filter: saturate(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s += hsl.s * amount.value / 100;\n      } else {\n        hsl.s += amount.value / 100;\n      }\n\n      hsl.s = clamp$1(hsl.s);\n      return hsla(color, hsl);\n    },\n    desaturate: function desaturate(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.s -= hsl.s * amount.value / 100;\n      } else {\n        hsl.s -= amount.value / 100;\n      }\n\n      hsl.s = clamp$1(hsl.s);\n      return hsla(color, hsl);\n    },\n    lighten: function lighten(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l += hsl.l * amount.value / 100;\n      } else {\n        hsl.l += amount.value / 100;\n      }\n\n      hsl.l = clamp$1(hsl.l);\n      return hsla(color, hsl);\n    },\n    darken: function darken(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.l -= hsl.l * amount.value / 100;\n      } else {\n        hsl.l -= amount.value / 100;\n      }\n\n      hsl.l = clamp$1(hsl.l);\n      return hsla(color, hsl);\n    },\n    fadein: function fadein(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a += hsl.a * amount.value / 100;\n      } else {\n        hsl.a += amount.value / 100;\n      }\n\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    fadeout: function fadeout(color, amount, method) {\n      var hsl = toHSL(color);\n\n      if (typeof method !== 'undefined' && method.value === 'relative') {\n        hsl.a -= hsl.a * amount.value / 100;\n      } else {\n        hsl.a -= amount.value / 100;\n      }\n\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    fade: function fade(color, amount) {\n      var hsl = toHSL(color);\n      hsl.a = amount.value / 100;\n      hsl.a = clamp$1(hsl.a);\n      return hsla(color, hsl);\n    },\n    spin: function spin(color, amount) {\n      var hsl = toHSL(color);\n      var hue = (hsl.h + amount.value) % 360;\n      hsl.h = hue < 0 ? 360 + hue : hue;\n      return hsla(color, hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function mix(color1, color2, weight) {\n      if (!weight) {\n        weight = new Dimension(50);\n      }\n\n      var p = weight.value / 100.0;\n      var w = p * 2 - 1;\n      var a = toHSL(color1).a - toHSL(color2).a;\n      var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2, color1.rgb[1] * w1 + color2.rgb[1] * w2, color1.rgb[2] * w1 + color2.rgb[2] * w2];\n      var alpha = color1.alpha * p + color2.alpha * (1 - p);\n      return new Color(rgb, alpha);\n    },\n    greyscale: function greyscale(color) {\n      return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function contrast(color, dark, light, threshold) {\n      // filter: contrast(3.2);\n      // should be kept as is, so check for color\n      if (!color.rgb) {\n        return null;\n      }\n\n      if (typeof light === 'undefined') {\n        light = colorFunctions.rgba(255, 255, 255, 1.0);\n      }\n\n      if (typeof dark === 'undefined') {\n        dark = colorFunctions.rgba(0, 0, 0, 1.0);\n      } // Figure out which is actually light and dark:\n\n\n      if (dark.luma() > light.luma()) {\n        var t = light;\n        light = dark;\n        dark = t;\n      }\n\n      if (typeof threshold === 'undefined') {\n        threshold = 0.43;\n      } else {\n        threshold = number(threshold);\n      }\n\n      if (color.luma() < threshold) {\n        return light;\n      } else {\n        return dark;\n      }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function argb(color) {\n      return new Anonymous(color.toARGB());\n    },\n    color: function color(c) {\n      if (c instanceof Quoted && /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value)) {\n        var val = c.value.slice(1);\n        return new Color(val, undefined, \"#\".concat(val));\n      }\n\n      if (c instanceof Color || (c = Color.fromKeyword(c.value))) {\n        c.value = undefined;\n        return c;\n      }\n\n      throw {\n        type: 'Argument',\n        message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n      };\n    },\n    tint: function tint(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function shade(color, amount) {\n      return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n  };\n  var color = colorFunctions;\n\n  // ref: http://www.w3.org/TR/compositing-1\n\n  function colorBlend(mode, color1, color2) {\n    var ab = color1.alpha; // result\n\n    var // backdrop\n    cb;\n    var as = color2.alpha;\n    var // source\n    cs;\n    var ar;\n    var cr;\n    var r = [];\n    ar = as + ab * (1 - as);\n\n    for (var i = 0; i < 3; i++) {\n      cb = color1.rgb[i] / 255;\n      cs = color2.rgb[i] / 255;\n      cr = mode(cb, cs);\n\n      if (ar) {\n        cr = (as * cs + ab * (cb - as * (cb + cs - cr))) / ar;\n      }\n\n      r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n  }\n\n  var colorBlendModeFunctions = {\n    multiply: function multiply(cb, cs) {\n      return cb * cs;\n    },\n    screen: function screen(cb, cs) {\n      return cb + cs - cb * cs;\n    },\n    overlay: function overlay(cb, cs) {\n      cb *= 2;\n      return cb <= 1 ? colorBlendModeFunctions.multiply(cb, cs) : colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function softlight(cb, cs) {\n      var d = 1;\n      var e = cb;\n\n      if (cs > 0.5) {\n        e = 1;\n        d = cb > 0.25 ? Math.sqrt(cb) : ((16 * cb - 12) * cb + 4) * cb;\n      }\n\n      return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function hardlight(cb, cs) {\n      return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function difference(cb, cs) {\n      return Math.abs(cb - cs);\n    },\n    exclusion: function exclusion(cb, cs) {\n      return cb + cs - 2 * cb * cs;\n    },\n    // non-w3c functions:\n    average: function average(cb, cs) {\n      return (cb + cs) / 2;\n    },\n    negation: function negation(cb, cs) {\n      return 1 - Math.abs(cb + cs - 1);\n    }\n  };\n\n  for (var f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n      colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n  }\n\n  var dataUri = (function (environment) {\n    var fallback = function fallback(functionThis, node) {\n      return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n    };\n\n    return {\n      'data-uri': function dataUri(mimetypeNode, filePathNode) {\n        if (!filePathNode) {\n          filePathNode = mimetypeNode;\n          mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.rewriteUrls ? currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n\n        if (fragmentStart !== -1) {\n          fragment = filePath.slice(fragmentStart);\n          filePath = filePath.slice(0, fragmentStart);\n        }\n\n        var context = clone(this.context);\n        context.rawBuffer = true;\n        var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n          return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false; // detect the mimetype if not given\n\n        if (!mimetypeNode) {\n          mimetype = environment.mimeLookup(filePath);\n\n          if (mimetype === 'image/svg+xml') {\n            useBase64 = false;\n          } else {\n            // use base 64 unless it's an ASCII or UTF-8 format\n            var charset = environment.charsetLookup(mimetype);\n            useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n          }\n\n          if (useBase64) {\n            mimetype += ';base64';\n          }\n        } else {\n          useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n\n        if (!fileSync.contents) {\n          logger.warn(\"Skipped data-uri embedding of \".concat(filePath, \" because file not found\"));\n          return fallback(this, filePathNode || mimetypeNode);\n        }\n\n        var buf = fileSync.contents;\n\n        if (useBase64 && !environment.encodeBase64) {\n          return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n        var uri = \"data:\".concat(mimetype, \",\").concat(buf).concat(fragment);\n        return new URL(new Quoted(\"\\\"\".concat(uri, \"\\\"\"), uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  });\n\n  var getItemsFromNode = function getItemsFromNode(node) {\n    // handle non-array values as an array of length 1\n    // return 'undefined' if index is invalid\n    var items = Array.isArray(node.value) ? node.value : Array(node);\n    return items;\n  };\n\n  var list = {\n    _SELF: function _SELF(n) {\n      return n;\n    },\n    extract: function extract(values, index) {\n      // (1-based index)\n      index = index.value - 1;\n      return getItemsFromNode(values)[index];\n    },\n    length: function length(values) {\n      return new Dimension(getItemsFromNode(values).length);\n    },\n\n    /**\n     * Creates a Less list of incremental values.\n     * Modeled after Lodash's range function, also exists natively in PHP\n     * \n     * @param {Dimension} [start=1]\n     * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n     * @param {Dimension} [step=1] \n     */\n    range: function range(start, end, step) {\n      var from;\n      var to;\n      var stepValue = 1;\n      var list = [];\n\n      if (end) {\n        to = end;\n        from = start.value;\n\n        if (step) {\n          stepValue = step.value;\n        }\n      } else {\n        from = 1;\n        to = start;\n      }\n\n      for (var i = from; i <= to.value; i += stepValue) {\n        list.push(new Dimension(i, to.unit));\n      }\n\n      return new Expression(list);\n    },\n    each: function each(list, rs) {\n      var rules = [];\n      var newRules;\n      var iterator;\n\n      if (list.value && !(list instanceof Quoted)) {\n        if (Array.isArray(list.value)) {\n          iterator = list.value;\n        } else {\n          iterator = [list.value];\n        }\n      } else if (list.ruleset) {\n        iterator = list.ruleset.rules;\n      } else if (list.rules) {\n        iterator = list.rules;\n      } else if (Array.isArray(list)) {\n        iterator = list;\n      } else {\n        iterator = [list];\n      }\n\n      var valueName = '@value';\n      var keyName = '@key';\n      var indexName = '@index';\n\n      if (rs.params) {\n        valueName = rs.params[0] && rs.params[0].name;\n        keyName = rs.params[1] && rs.params[1].name;\n        indexName = rs.params[2] && rs.params[2].name;\n        rs = rs.rules;\n      } else {\n        rs = rs.ruleset;\n      }\n\n      for (var i = 0; i < iterator.length; i++) {\n        var key = void 0;\n        var value = void 0;\n        var item = iterator[i];\n\n        if (item instanceof Declaration) {\n          key = typeof item.name === 'string' ? item.name : item.name[0].value;\n          value = item.value;\n        } else {\n          key = new Dimension(i + 1);\n          value = item;\n        }\n\n        if (item instanceof Comment) {\n          continue;\n        }\n\n        newRules = rs.rules.slice(0);\n\n        if (valueName) {\n          newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n        }\n\n        if (indexName) {\n          newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\n        }\n\n        if (keyName) {\n          newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n        }\n\n        rules.push(new Ruleset([new Selector([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n      }\n\n      return new Ruleset([new Selector([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n    }\n  };\n\n  var MathHelper = function MathHelper(fn, unit, n) {\n    if (!(n instanceof Dimension)) {\n      throw {\n        type: 'Argument',\n        message: 'argument must be a number'\n      };\n    }\n\n    if (unit == null) {\n      unit = n.unit;\n    } else {\n      n = n.unify();\n    }\n\n    return new Dimension(fn(parseFloat(n.value)), unit);\n  };\n\n  var mathFunctions = {\n    // name,  unit\n    ceil: null,\n    floor: null,\n    sqrt: null,\n    abs: null,\n    tan: '',\n    sin: '',\n    cos: '',\n    atan: 'rad',\n    asin: 'rad',\n    acos: 'rad'\n  };\n\n  for (var f$1 in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f$1)) {\n      mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\n    }\n  }\n\n  mathFunctions.round = function (n, f) {\n    var fraction = typeof f === 'undefined' ? 0 : f.value;\n    return MathHelper(function (num) {\n      return num.toFixed(fraction);\n    }, null, n);\n  };\n\n  var minMax = function minMax(isMin, args) {\n    args = Array.prototype.slice.call(args);\n\n    switch (args.length) {\n      case 0:\n        throw {\n          type: 'Argument',\n          message: 'one or more arguments required'\n        };\n    }\n\n    var i; // key is the unit.toString() for unified Dimension values,\n\n    var j;\n    var current;\n    var currentUnified;\n    var referenceUnified;\n    var unit;\n    var unitStatic;\n    var unitClone;\n    var // elems only contains original argument values.\n    order = [];\n    var values = {}; // value is the index into the order array.\n\n    for (i = 0; i < args.length; i++) {\n      current = args[i];\n\n      if (!(current instanceof Dimension)) {\n        if (Array.isArray(args[i].value)) {\n          Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n        }\n\n        continue;\n      }\n\n      currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n      unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n      unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n      unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n      j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n\n      if (j === undefined) {\n        if (unitStatic !== undefined && unit !== unitStatic) {\n          throw {\n            type: 'Argument',\n            message: 'incompatible types'\n          };\n        }\n\n        values[unit] = order.length;\n        order.push(current);\n        continue;\n      }\n\n      referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n\n      if (isMin && currentUnified.value < referenceUnified.value || !isMin && currentUnified.value > referenceUnified.value) {\n        order[j] = current;\n      }\n    }\n\n    if (order.length == 1) {\n      return order[0];\n    }\n\n    args = order.map(function (a) {\n      return a.toCSS(this.context);\n    }).join(this.context.compress ? ',' : ', ');\n    return new Anonymous(\"\".concat(isMin ? 'min' : 'max', \"(\").concat(args, \")\"));\n  };\n\n  var number$1 = {\n    min: function min() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return minMax(true, args);\n    },\n    max: function max() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return minMax(false, args);\n    },\n    convert: function convert(val, unit) {\n      return val.convertTo(unit.value);\n    },\n    pi: function pi() {\n      return new Dimension(Math.PI);\n    },\n    mod: function mod(a, b) {\n      return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function pow(x, y) {\n      if (typeof x === 'number' && typeof y === 'number') {\n        x = new Dimension(x);\n        y = new Dimension(y);\n      } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: 'arguments must be numbers'\n        };\n      }\n\n      return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function percentage(n) {\n      var result = MathHelper(function (num) {\n        return num * 100;\n      }, '%', n);\n      return result;\n    }\n  };\n\n  var string = {\n    e: function e(str) {\n      return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n    },\n    escape: function escape(str) {\n      return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B').replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n    },\n    replace: function replace(string, pattern, replacement, flags) {\n      var result = string.value;\n      replacement = replacement.type === 'Quoted' ? replacement.value : replacement.toCSS();\n      result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n      return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function _(string\n    /* arg, arg, ... */\n    ) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var result = string.value;\n\n      var _loop = function _loop(i) {\n        /* jshint loopfunc:true */\n        result = result.replace(/%[sda]/i, function (token) {\n          var value = args[i].type === 'Quoted' && token.match(/s/i) ? args[i].value : args[i].toCSS();\n          return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n        });\n      };\n\n      for (var i = 0; i < args.length; i++) {\n        _loop(i);\n      }\n\n      result = result.replace(/%%/g, '%');\n      return new Quoted(string.quote || '', result, string.escaped);\n    }\n  };\n\n  var svg = (function (environment) {\n    return {\n      'svg-gradient': function svgGradient(direction) {\n        var stops;\n        var gradientDirectionSvg;\n        var gradientType = 'linear';\n        var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n        var renderEnv = {\n          compress: false\n        };\n        var returner;\n        var directionValue = direction.toCSS(renderEnv);\n        var i;\n        var color;\n        var position;\n        var positionValue;\n        var alpha;\n\n        function throwArgumentDescriptor() {\n          throw {\n            type: 'Argument',\n            message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' + ' end_color [end_position] or direction, color list'\n          };\n        }\n\n        if (arguments.length == 2) {\n          if (arguments[1].value.length < 2) {\n            throwArgumentDescriptor();\n          }\n\n          stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n          throwArgumentDescriptor();\n        } else {\n          stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n          case 'to bottom':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n            break;\n\n          case 'to right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'to bottom right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n            break;\n\n          case 'to top right':\n            gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n            break;\n\n          case 'ellipse':\n          case 'ellipse at center':\n            gradientType = 'radial';\n            gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n            rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n            break;\n\n          default:\n            throw {\n              type: 'Argument',\n              message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' + ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\''\n            };\n        }\n\n        returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\".concat(gradientType, \"Gradient id=\\\"g\\\" \").concat(gradientDirectionSvg, \">\");\n\n        for (i = 0; i < stops.length; i += 1) {\n          if (stops[i] instanceof Expression) {\n            color = stops[i].value[0];\n            position = stops[i].value[1];\n          } else {\n            color = stops[i];\n            position = undefined;\n          }\n\n          if (!(color instanceof Color) || !((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension)) {\n            throwArgumentDescriptor();\n          }\n\n          positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n          alpha = color.alpha;\n          returner += \"<stop offset=\\\"\".concat(positionValue, \"\\\" stop-color=\\\"\").concat(color.toRGB(), \"\\\"\").concat(alpha < 1 ? \" stop-opacity=\\\"\".concat(alpha, \"\\\"\") : '', \"/>\");\n        }\n\n        returner += \"</\".concat(gradientType, \"Gradient><rect \").concat(rectangleDimension, \" fill=\\\"url(#g)\\\" /></svg>\");\n        returner = encodeURIComponent(returner);\n        returner = \"data:image/svg+xml,\".concat(returner);\n        return new URL(new Quoted(\"'\".concat(returner, \"'\"), returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n      }\n    };\n  });\n\n  var isa = function isa(n, Type) {\n    return n instanceof Type ? Keyword.True : Keyword.False;\n  };\n\n  var isunit = function isunit(n, unit) {\n    if (unit === undefined) {\n      throw {\n        type: 'Argument',\n        message: 'missing the required second argument to isunit.'\n      };\n    }\n\n    unit = typeof unit.value === 'string' ? unit.value : unit;\n\n    if (typeof unit !== 'string') {\n      throw {\n        type: 'Argument',\n        message: 'Second argument to isunit should be a unit or a string.'\n      };\n    }\n\n    return n instanceof Dimension && n.unit.is(unit) ? Keyword.True : Keyword.False;\n  };\n\n  var types = {\n    isruleset: function isruleset(n) {\n      return isa(n, DetachedRuleset);\n    },\n    iscolor: function iscolor(n) {\n      return isa(n, Color);\n    },\n    isnumber: function isnumber(n) {\n      return isa(n, Dimension);\n    },\n    isstring: function isstring(n) {\n      return isa(n, Quoted);\n    },\n    iskeyword: function iskeyword(n) {\n      return isa(n, Keyword);\n    },\n    isurl: function isurl(n) {\n      return isa(n, URL);\n    },\n    ispixel: function ispixel(n) {\n      return isunit(n, 'px');\n    },\n    ispercentage: function ispercentage(n) {\n      return isunit(n, '%');\n    },\n    isem: function isem(n) {\n      return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function unit(val, _unit) {\n      if (!(val instanceof Dimension)) {\n        throw {\n          type: 'Argument',\n          message: \"the first argument to unit must be a number\".concat(val instanceof Operation ? '. Have you forgotten parenthesis?' : '')\n        };\n      }\n\n      if (_unit) {\n        if (_unit instanceof Keyword) {\n          _unit = _unit.value;\n        } else {\n          _unit = _unit.toCSS();\n        }\n      } else {\n        _unit = '';\n      }\n\n      return new Dimension(val.value, _unit);\n    },\n    'get-unit': function getUnit(n) {\n      return new Anonymous(n.unit);\n    }\n  };\n\n  var Functions = (function (environment) {\n    var functions = {\n      functionRegistry: functionRegistry,\n      functionCaller: functionCaller\n    }; // register functions\n\n    functionRegistry.addMultiple(boolean$1);\n    functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n    functionRegistry.addMultiple(color);\n    functionRegistry.addMultiple(colorBlend);\n    functionRegistry.addMultiple(dataUri(environment));\n    functionRegistry.addMultiple(list);\n    functionRegistry.addMultiple(mathFunctions);\n    functionRegistry.addMultiple(number$1);\n    functionRegistry.addMultiple(string);\n    functionRegistry.addMultiple(svg());\n    functionRegistry.addMultiple(types);\n    return functions;\n  });\n\n  var sourceMapOutput = (function (environment) {\n    var SourceMapOutput =\n    /*#__PURE__*/\n    function () {\n      function SourceMapOutput(options) {\n        _classCallCheck(this, SourceMapOutput);\n\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n\n        if (options.sourceMapFilename) {\n          this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n\n        if (options.sourceMapBasepath) {\n          this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n\n        if (options.sourceMapRootpath) {\n          this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n\n          if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n            this._sourceMapRootpath += '/';\n          }\n        } else {\n          this._sourceMapRootpath = '';\n        }\n\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n        this._lineNumber = 0;\n        this._column = 0;\n      }\n\n      _createClass(SourceMapOutput, [{\n        key: \"removeBasepath\",\n        value: function removeBasepath(path) {\n          if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n            path = path.substring(this._sourceMapBasepath.length);\n\n            if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n              path = path.substring(1);\n            }\n          }\n\n          return path;\n        }\n      }, {\n        key: \"normalizeFilename\",\n        value: function normalizeFilename(filename) {\n          filename = filename.replace(/\\\\/g, '/');\n          filename = this.removeBasepath(filename);\n          return (this._sourceMapRootpath || '') + filename;\n        }\n      }, {\n        key: \"add\",\n        value: function add(chunk, fileInfo, index, mapLines) {\n          // ignore adding empty strings\n          if (!chunk) {\n            return;\n          }\n\n          var lines;\n          var sourceLines;\n          var columns;\n          var sourceColumns;\n          var i;\n\n          if (fileInfo && fileInfo.filename) {\n            var inputSource = this._contentsMap[fileInfo.filename]; // remove vars/banner added to the top of the file\n\n            if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n              // adjust the index\n              index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n\n              if (index < 0) {\n                index = 0;\n              } // adjust the source\n\n\n              inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n            } // ignore empty content\n\n\n            if (inputSource === undefined) {\n              return;\n            }\n\n            inputSource = inputSource.substring(0, index);\n            sourceLines = inputSource.split('\\n');\n            sourceColumns = sourceLines[sourceLines.length - 1];\n          }\n\n          lines = chunk.split('\\n');\n          columns = lines[lines.length - 1];\n\n          if (fileInfo && fileInfo.filename) {\n            if (!mapLines) {\n              this._sourceMapGenerator.addMapping({\n                generated: {\n                  line: this._lineNumber + 1,\n                  column: this._column\n                },\n                original: {\n                  line: sourceLines.length,\n                  column: sourceColumns.length\n                },\n                source: this.normalizeFilename(fileInfo.filename)\n              });\n            } else {\n              for (i = 0; i < lines.length; i++) {\n                this._sourceMapGenerator.addMapping({\n                  generated: {\n                    line: this._lineNumber + i + 1,\n                    column: i === 0 ? this._column : 0\n                  },\n                  original: {\n                    line: sourceLines.length + i,\n                    column: i === 0 ? sourceColumns.length : 0\n                  },\n                  source: this.normalizeFilename(fileInfo.filename)\n                });\n              }\n            }\n          }\n\n          if (lines.length === 1) {\n            this._column += columns.length;\n          } else {\n            this._lineNumber += lines.length - 1;\n            this._column = columns.length;\n          }\n\n          this._css.push(chunk);\n        }\n      }, {\n        key: \"isEmpty\",\n        value: function isEmpty() {\n          return this._css.length === 0;\n        }\n      }, {\n        key: \"toCSS\",\n        value: function toCSS(context) {\n          this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({\n            file: this._outputFilename,\n            sourceRoot: null\n          });\n\n          if (this._outputSourceFiles) {\n            for (var filename in this._contentsMap) {\n              if (this._contentsMap.hasOwnProperty(filename)) {\n                var source = this._contentsMap[filename];\n\n                if (this._contentsIgnoredCharsMap[filename]) {\n                  source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                }\n\n                this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n              }\n            }\n          }\n\n          this._rootNode.genCSS(context, this);\n\n          if (this._css.length > 0) {\n            var sourceMapURL;\n            var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n            if (this.sourceMapURL) {\n              sourceMapURL = this.sourceMapURL;\n            } else if (this._sourceMapFilename) {\n              sourceMapURL = this._sourceMapFilename;\n            }\n\n            this.sourceMapURL = sourceMapURL;\n            this.sourceMap = sourceMapContent;\n          }\n\n          return this._css.join('');\n        }\n      }]);\n\n      return SourceMapOutput;\n    }();\n\n    return SourceMapOutput;\n  });\n\n  var sourceMapBuilder = (function (SourceMapOutput, environment) {\n    var SourceMapBuilder =\n    /*#__PURE__*/\n    function () {\n      function SourceMapBuilder(options) {\n        _classCallCheck(this, SourceMapBuilder);\n\n        this.options = options;\n      }\n\n      _createClass(SourceMapBuilder, [{\n        key: \"toCSS\",\n        value: function toCSS(rootNode, options, imports) {\n          var sourceMapOutput = new SourceMapOutput({\n            contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n            rootNode: rootNode,\n            contentsMap: imports.contents,\n            sourceMapFilename: this.options.sourceMapFilename,\n            sourceMapURL: this.options.sourceMapURL,\n            outputFilename: this.options.sourceMapOutputFilename,\n            sourceMapBasepath: this.options.sourceMapBasepath,\n            sourceMapRootpath: this.options.sourceMapRootpath,\n            outputSourceFiles: this.options.outputSourceFiles,\n            sourceMapGenerator: this.options.sourceMapGenerator,\n            sourceMapFileInline: this.options.sourceMapFileInline\n          });\n          var css = sourceMapOutput.toCSS(options);\n          this.sourceMap = sourceMapOutput.sourceMap;\n          this.sourceMapURL = sourceMapOutput.sourceMapURL;\n\n          if (this.options.sourceMapInputFilename) {\n            this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n          }\n\n          if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n            this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n          }\n\n          return css + this.getCSSAppendage();\n        }\n      }, {\n        key: \"getCSSAppendage\",\n        value: function getCSSAppendage() {\n          var sourceMapURL = this.sourceMapURL;\n\n          if (this.options.sourceMapFileInline) {\n            if (this.sourceMap === undefined) {\n              return '';\n            }\n\n            sourceMapURL = \"data:application/json;base64,\".concat(environment.encodeBase64(this.sourceMap));\n          }\n\n          if (sourceMapURL) {\n            return \"/*# sourceMappingURL=\".concat(sourceMapURL, \" */\");\n          }\n\n          return '';\n        }\n      }, {\n        key: \"getExternalSourceMap\",\n        value: function getExternalSourceMap() {\n          return this.sourceMap;\n        }\n      }, {\n        key: \"setExternalSourceMap\",\n        value: function setExternalSourceMap(sourceMap) {\n          this.sourceMap = sourceMap;\n        }\n      }, {\n        key: \"isInline\",\n        value: function isInline() {\n          return this.options.sourceMapFileInline;\n        }\n      }, {\n        key: \"getSourceMapURL\",\n        value: function getSourceMapURL() {\n          return this.sourceMapURL;\n        }\n      }, {\n        key: \"getOutputFilename\",\n        value: function getOutputFilename() {\n          return this.options.sourceMapOutputFilename;\n        }\n      }, {\n        key: \"getInputFilename\",\n        value: function getInputFilename() {\n          return this.sourceMapInputFilename;\n        }\n      }]);\n\n      return SourceMapBuilder;\n    }();\n\n    return SourceMapBuilder;\n  });\n\n  var transformTree = (function (root) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var evaldRoot;\n    var variables = options.variables;\n    var evalEnv = new contexts.Eval(options); //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n\n    if (_typeof(variables) === 'object' && !Array.isArray(variables)) {\n      variables = Object.keys(variables).map(function (k) {\n        var value = variables[k];\n\n        if (!(value instanceof tree.Value)) {\n          if (!(value instanceof tree.Expression)) {\n            value = new tree.Expression([value]);\n          }\n\n          value = new tree.Value([value]);\n        }\n\n        return new tree.Declaration(\"@\".concat(k), value, false, null, 0);\n      });\n      evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    var visitors$1 = [new visitors.JoinSelectorVisitor(), new visitors.MarkVisibleSelectorsVisitor(true), new visitors.ExtendVisitor(), new visitors.ToCSSVisitor({\n      compress: Boolean(options.compress)\n    })];\n    var preEvalVisitors = [];\n    var v;\n    var visitorIterator;\n    /**\n     * first() / get() allows visitors to be added while visiting\n     * \n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n     */\n\n    if (options.pluginManager) {\n      visitorIterator = options.pluginManager.visitor();\n\n      for (var i = 0; i < 2; i++) {\n        visitorIterator.first();\n\n        while (v = visitorIterator.get()) {\n          if (v.isPreEvalVisitor) {\n            if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n              preEvalVisitors.push(v);\n              v.run(root);\n            }\n          } else {\n            if (i === 0 || visitors$1.indexOf(v) === -1) {\n              if (v.isPreVisitor) {\n                visitors$1.unshift(v);\n              } else {\n                visitors$1.push(v);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors$1.length; i++) {\n      visitors$1[i].run(evaldRoot);\n    } // Run any remaining visitors added after eval pass\n\n\n    if (options.pluginManager) {\n      visitorIterator.first();\n\n      while (v = visitorIterator.get()) {\n        if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n          v.run(evaldRoot);\n        }\n      }\n    }\n\n    return evaldRoot;\n  });\n\n  var parseTree = (function (SourceMapBuilder) {\n    var ParseTree =\n    /*#__PURE__*/\n    function () {\n      function ParseTree(root, imports) {\n        _classCallCheck(this, ParseTree);\n\n        this.root = root;\n        this.imports = imports;\n      }\n\n      _createClass(ParseTree, [{\n        key: \"toCSS\",\n        value: function toCSS(options) {\n          var evaldRoot;\n          var result = {};\n          var sourceMapBuilder;\n\n          try {\n            evaldRoot = transformTree(this.root, options);\n          } catch (e) {\n            throw new LessError(e, this.imports);\n          }\n\n          try {\n            var compress = Boolean(options.compress);\n\n            if (compress) {\n              logger.warn('The compress option has been deprecated. ' + 'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n            }\n\n            var toCSSOptions = {\n              compress: compress,\n              dumpLineNumbers: options.dumpLineNumbers,\n              strictUnits: Boolean(options.strictUnits),\n              numPrecision: 8\n            };\n\n            if (options.sourceMap) {\n              sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n              result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n            } else {\n              result.css = evaldRoot.toCSS(toCSSOptions);\n            }\n          } catch (e) {\n            throw new LessError(e, this.imports);\n          }\n\n          if (options.pluginManager) {\n            var postProcessors = options.pluginManager.getPostProcessors();\n\n            for (var i = 0; i < postProcessors.length; i++) {\n              result.css = postProcessors[i].process(result.css, {\n                sourceMap: sourceMapBuilder,\n                options: options,\n                imports: this.imports\n              });\n            }\n          }\n\n          if (options.sourceMap) {\n            result.map = sourceMapBuilder.getExternalSourceMap();\n          }\n\n          result.imports = [];\n\n          for (var file in this.imports.files) {\n            if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n              result.imports.push(file);\n            }\n          }\n\n          return result;\n        }\n      }]);\n\n      return ParseTree;\n    }();\n\n    return ParseTree;\n  });\n\n  var importManager = (function (environment) {\n    // FileInfo = {\n    //  'rewriteUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n    var ImportManager =\n    /*#__PURE__*/\n    function () {\n      function ImportManager(less, context, rootFileInfo) {\n        _classCallCheck(this, ImportManager);\n\n        this.less = less;\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || []; // Search paths, when importing\n\n        this.contents = {}; // map - filename to contents of all the files\n\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context; // Deprecated? Unused outside of here, could be useful.\n\n        this.queue = []; // Files which haven't been imported yet\n\n        this.files = {}; // Holds the imported parse trees.\n      }\n      /**\n       * Add an import to be imported\n       * @param path - the raw path\n       * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n       * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n       * @param importOptions - import options\n       * @param callback - callback for when it is imported\n       */\n\n\n      _createClass(ImportManager, [{\n        key: \"push\",\n        value: function push(path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n          var importManager = this;\n          var pluginLoader = this.context.pluginManager.Loader;\n          this.queue.push(path);\n\n          var fileParsedFunc = function fileParsedFunc(e, root, fullPath) {\n            importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n            var importedEqualsRoot = fullPath === importManager.rootFilename;\n\n            if (importOptions.optional && e) {\n              callback(null, {\n                rules: []\n              }, false, null);\n              logger.info(\"The file \".concat(fullPath, \" was skipped because it was not found and the import was marked optional.\"));\n            } else {\n              // Inline imports aren't cached here.\n              // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n              // same name as they used to do before this comment and the condition below have been added.\n              if (!importManager.files[fullPath] && !importOptions.inline) {\n                importManager.files[fullPath] = {\n                  root: root,\n                  options: importOptions\n                };\n              }\n\n              if (e && !importManager.error) {\n                importManager.error = e;\n              }\n\n              callback(e, root, importedEqualsRoot, fullPath);\n            }\n          };\n\n          var newFileInfo = {\n            rewriteUrls: this.context.rewriteUrls,\n            entryPath: currentFileInfo.entryPath,\n            rootpath: currentFileInfo.rootpath,\n            rootFilename: currentFileInfo.rootFilename\n          };\n          var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n          if (!fileManager) {\n            fileParsedFunc({\n              message: \"Could not find a file-manager for \".concat(path)\n            });\n            return;\n          }\n\n          var loadFileCallback = function loadFileCallback(loadedFile) {\n            var plugin;\n            var resolvedFilename = loadedFile.filename;\n            var contents = loadedFile.contents.replace(/^\\uFEFF/, ''); // Pass on an updated rootpath if path of imported file is relative and file\n            // is in a (sub|sup) directory\n            //\n            // Examples:\n            // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/module/nav/'\n            // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/../'\n\n            newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n\n            if (newFileInfo.rewriteUrls) {\n              newFileInfo.rootpath = fileManager.join(importManager.context.rootpath || '', fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n              if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n              }\n            }\n\n            newFileInfo.filename = resolvedFilename;\n            var newEnv = new contexts.Parse(importManager.context);\n            newEnv.processImports = false;\n            importManager.contents[resolvedFilename] = contents;\n\n            if (currentFileInfo.reference || importOptions.reference) {\n              newFileInfo.reference = true;\n            }\n\n            if (importOptions.isPlugin) {\n              plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n\n              if (plugin instanceof LessError) {\n                fileParsedFunc(plugin, null, resolvedFilename);\n              } else {\n                fileParsedFunc(null, plugin, resolvedFilename);\n              }\n            } else if (importOptions.inline) {\n              fileParsedFunc(null, contents, resolvedFilename);\n            } else {\n              // import (multiple) parse trees apparently get altered and can't be cached.\n              // TODO: investigate why this is\n              if (importManager.files[resolvedFilename] && !importManager.files[resolvedFilename].options.multiple && !importOptions.multiple) {\n                fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n              } else {\n                new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                  fileParsedFunc(e, root, resolvedFilename);\n                });\n              }\n            }\n          };\n\n          var promise;\n          var context = clone(this.context);\n\n          if (tryAppendExtension) {\n            context.ext = importOptions.isPlugin ? '.js' : '.less';\n          }\n\n          if (importOptions.isPlugin) {\n            context.mime = 'application/javascript';\n            promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n          } else {\n            promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n              if (err) {\n                fileParsedFunc(err);\n              } else {\n                loadFileCallback(loadedFile);\n              }\n            });\n          }\n\n          if (promise) {\n            promise.then(loadFileCallback, fileParsedFunc);\n          }\n        }\n      }]);\n\n      return ImportManager;\n    }();\n\n    return ImportManager;\n  });\n\n  var Render = (function (environment, ParseTree, ImportManager) {\n    var render = function render(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          render.call(self, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        this.parse(input, options, function (err, root, imports, options) {\n          if (err) {\n            return callback(err);\n          }\n\n          var result;\n\n          try {\n            var parseTree = new ParseTree(root, imports);\n            result = parseTree.toCSS(options);\n          } catch (err) {\n            return callback(err);\n          }\n\n          callback(null, result);\n        });\n      }\n    };\n\n    return render;\n  });\n\n  /**\n   * Plugin Manager\n   */\n  var PluginManager =\n  /*#__PURE__*/\n  function () {\n    function PluginManager(less) {\n      _classCallCheck(this, PluginManager);\n\n      this.less = less;\n      this.visitors = [];\n      this.preProcessors = [];\n      this.postProcessors = [];\n      this.installedPlugins = [];\n      this.fileManagers = [];\n      this.iterator = -1;\n      this.pluginCache = {};\n      this.Loader = new less.PluginLoader(less);\n    }\n    /**\n     * Adds all the plugins in the array\n     * @param {Array} plugins\n     */\n\n\n    _createClass(PluginManager, [{\n      key: \"addPlugins\",\n      value: function addPlugins(plugins) {\n        if (plugins) {\n          for (var i = 0; i < plugins.length; i++) {\n            this.addPlugin(plugins[i]);\n          }\n        }\n      }\n      /**\n       *\n       * @param plugin\n       * @param {String} filename\n       */\n\n    }, {\n      key: \"addPlugin\",\n      value: function addPlugin(plugin, filename, functionRegistry) {\n        this.installedPlugins.push(plugin);\n\n        if (filename) {\n          this.pluginCache[filename] = plugin;\n        }\n\n        if (plugin.install) {\n          plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n        }\n      }\n      /**\n       *\n       * @param filename\n       */\n\n    }, {\n      key: \"get\",\n      value: function get(filename) {\n        return this.pluginCache[filename];\n      }\n      /**\n       * Adds a visitor. The visitor object has options on itself to determine\n       * when it should run.\n       * @param visitor\n       */\n\n    }, {\n      key: \"addVisitor\",\n      value: function addVisitor(visitor) {\n        this.visitors.push(visitor);\n      }\n      /**\n       * Adds a pre processor object\n       * @param {object} preProcessor\n       * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n       */\n\n    }, {\n      key: \"addPreProcessor\",\n      value: function addPreProcessor(preProcessor, priority) {\n        var indexToInsertAt;\n\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n          if (this.preProcessors[indexToInsertAt].priority >= priority) {\n            break;\n          }\n        }\n\n        this.preProcessors.splice(indexToInsertAt, 0, {\n          preProcessor: preProcessor,\n          priority: priority\n        });\n      }\n      /**\n       * Adds a post processor object\n       * @param {object} postProcessor\n       * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n       */\n\n    }, {\n      key: \"addPostProcessor\",\n      value: function addPostProcessor(postProcessor, priority) {\n        var indexToInsertAt;\n\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n          if (this.postProcessors[indexToInsertAt].priority >= priority) {\n            break;\n          }\n        }\n\n        this.postProcessors.splice(indexToInsertAt, 0, {\n          postProcessor: postProcessor,\n          priority: priority\n        });\n      }\n      /**\n       *\n       * @param manager\n       */\n\n    }, {\n      key: \"addFileManager\",\n      value: function addFileManager(manager) {\n        this.fileManagers.push(manager);\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getPreProcessors\",\n      value: function getPreProcessors() {\n        var preProcessors = [];\n\n        for (var i = 0; i < this.preProcessors.length; i++) {\n          preProcessors.push(this.preProcessors[i].preProcessor);\n        }\n\n        return preProcessors;\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getPostProcessors\",\n      value: function getPostProcessors() {\n        var postProcessors = [];\n\n        for (var i = 0; i < this.postProcessors.length; i++) {\n          postProcessors.push(this.postProcessors[i].postProcessor);\n        }\n\n        return postProcessors;\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getVisitors\",\n      value: function getVisitors() {\n        return this.visitors;\n      }\n    }, {\n      key: \"visitor\",\n      value: function visitor() {\n        var self = this;\n        return {\n          first: function first() {\n            self.iterator = -1;\n            return self.visitors[self.iterator];\n          },\n          get: function get() {\n            self.iterator += 1;\n            return self.visitors[self.iterator];\n          }\n        };\n      }\n      /**\n       *\n       * @returns {Array}\n       * @private\n       */\n\n    }, {\n      key: \"getFileManagers\",\n      value: function getFileManagers() {\n        return this.fileManagers;\n      }\n    }]);\n\n    return PluginManager;\n  }();\n\n  var pm;\n\n  function PluginManagerFactory(less, newFactory) {\n    if (newFactory || !pm) {\n      pm = new PluginManager(less);\n    }\n\n    return pm;\n  }\n\n  var Parse = (function (environment, ParseTree, ImportManager) {\n    var parse = function parse(input, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = copyOptions(this.options, {});\n      } else {\n        options = copyOptions(this.options, options || {});\n      }\n\n      if (!callback) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          parse.call(self, input, options, function (err, output) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(output);\n            }\n          });\n        });\n      } else {\n        var context;\n        var rootFileInfo;\n        var pluginManager = new PluginManagerFactory(this, !options.reUsePluginManager);\n        options.pluginManager = pluginManager;\n        context = new contexts.Parse(options);\n\n        if (options.rootFileInfo) {\n          rootFileInfo = options.rootFileInfo;\n        } else {\n          var filename = options.filename || 'input';\n          var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n          rootFileInfo = {\n            filename: filename,\n            rewriteUrls: context.rewriteUrls,\n            rootpath: context.rootpath || '',\n            currentDirectory: entryPath,\n            entryPath: entryPath,\n            rootFilename: filename\n          }; // add in a missing trailing slash\n\n          if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n            rootFileInfo.rootpath += '/';\n          }\n        }\n\n        var imports = new ImportManager(this, context, rootFileInfo);\n        this.importManager = imports; // TODO: allow the plugins to be just a list of paths or names\n        // Do an async plugin queue like lessc\n\n        if (options.plugins) {\n          options.plugins.forEach(function (plugin) {\n            var evalResult;\n            var contents;\n\n            if (plugin.fileContent) {\n              contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n              evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n\n              if (evalResult instanceof LessError) {\n                return callback(evalResult);\n              }\n            } else {\n              pluginManager.addPlugin(plugin);\n            }\n          });\n        }\n\n        new Parser(context, imports, rootFileInfo).parse(input, function (e, root) {\n          if (e) {\n            return callback(e);\n          }\n\n          callback(null, root, imports, options);\n        }, options);\n      }\n    };\n\n    return parse;\n  });\n\n  var lessRoot = (function (environment$1, fileManagers) {\n    /**\n     * @todo\n     * This original code could be improved quite a bit.\n     * Many classes / modules currently add side-effects / mutations to passed in objects,\n     * which makes it hard to refactor and reason about. \n     */\n    environment$1 = new environment(environment$1, fileManagers);\n    var SourceMapOutput = sourceMapOutput(environment$1);\n    var SourceMapBuilder = sourceMapBuilder(SourceMapOutput, environment$1);\n    var ParseTree = parseTree(SourceMapBuilder);\n    var ImportManager = importManager(environment$1);\n    var render = Render(environment$1, ParseTree);\n    var parse = Parse(environment$1, ParseTree, ImportManager);\n    var functions = Functions(environment$1);\n    /**\n     * @todo\n     * This root properties / methods need to be organized.\n     * It's not clear what should / must be public and why.\n     */\n\n    var initial = {\n      version: [3, 10, 3],\n      data: data,\n      tree: tree,\n      Environment: environment,\n      AbstractFileManager: AbstractFileManager,\n      AbstractPluginLoader: AbstractPluginLoader,\n      environment: environment$1,\n      visitors: visitors,\n      Parser: Parser,\n      functions: functions,\n      contexts: contexts,\n      SourceMapOutput: SourceMapOutput,\n      SourceMapBuilder: SourceMapBuilder,\n      ParseTree: ParseTree,\n      ImportManager: ImportManager,\n      render: render,\n      parse: parse,\n      LessError: LessError,\n      transformTree: transformTree,\n      utils: utils,\n      PluginManager: PluginManagerFactory,\n      logger: logger\n    }; // Create a public API\n\n    var ctor = function ctor(t) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _construct(t, args);\n      };\n    };\n\n    var t;\n    var api = Object.create(initial);\n\n    for (var n in initial.tree) {\n      /* eslint guard-for-in: 0 */\n      t = initial.tree[n];\n\n      if (typeof t === 'function') {\n        api[n.toLowerCase()] = ctor(t);\n      } else {\n        api[n] = Object.create(null);\n\n        for (var o in t) {\n          /* eslint guard-for-in: 0 */\n          api[n][o.toLowerCase()] = ctor(t[o]);\n        }\n      }\n    }\n\n    return api;\n  });\n\n  var options;\n  var logger$1;\n  var fileCache = {}; // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n\n  var FileManager =\n  /*#__PURE__*/\n  function (_AbstractFileManager) {\n    _inherits(FileManager, _AbstractFileManager);\n\n    function FileManager() {\n      _classCallCheck(this, FileManager);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(FileManager).apply(this, arguments));\n    }\n\n    _createClass(FileManager, [{\n      key: \"alwaysMakePathsAbsolute\",\n      value: function alwaysMakePathsAbsolute() {\n        return true;\n      }\n    }, {\n      key: \"join\",\n      value: function join(basePath, laterPath) {\n        if (!basePath) {\n          return laterPath;\n        }\n\n        return this.extractUrlParts(laterPath, basePath).path;\n      }\n    }, {\n      key: \"doXHR\",\n      value: function doXHR(url, type, callback, errback) {\n        var xhr = new XMLHttpRequest();\n        var async = options.isFileProtocol ? options.fileAsync : true;\n\n        if (typeof xhr.overrideMimeType === 'function') {\n          xhr.overrideMimeType('text/css');\n        }\n\n        logger$1.debug(\"XHR: Getting '\".concat(url, \"'\"));\n        xhr.open('GET', url, async);\n        xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n        xhr.send(null);\n\n        function handleResponse(xhr, callback, errback) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n          } else if (typeof errback === 'function') {\n            errback(xhr.status, url);\n          }\n        }\n\n        if (options.isFileProtocol && !options.fileAsync) {\n          if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300) {\n            callback(xhr.responseText);\n          } else {\n            errback(xhr.status, url);\n          }\n        } else if (async) {\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == 4) {\n              handleResponse(xhr, callback, errback);\n            }\n          };\n        } else {\n          handleResponse(xhr, callback, errback);\n        }\n      }\n    }, {\n      key: \"supports\",\n      value: function supports() {\n        return true;\n      }\n    }, {\n      key: \"clearFileCache\",\n      value: function clearFileCache() {\n        fileCache = {};\n      }\n    }, {\n      key: \"loadFile\",\n      value: function loadFile(filename, currentDirectory, options, environment) {\n        // TODO: Add prefix support like less-node?\n        // What about multiple paths?\n        if (currentDirectory && !this.isPathAbsolute(filename)) {\n          filename = currentDirectory + filename;\n        }\n\n        filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n        options = options || {}; // sheet may be set to the stylesheet for the initial load or a collection of properties including\n        // some context variables for imports\n\n        var hrefParts = this.extractUrlParts(filename, window.location.href);\n        var href = hrefParts.url;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          if (options.useFileCache && fileCache[href]) {\n            try {\n              var lessText = fileCache[href];\n              return resolve({\n                contents: lessText,\n                filename: href,\n                webInfo: {\n                  lastModified: new Date()\n                }\n              });\n            } catch (e) {\n              return reject({\n                filename: href,\n                message: \"Error loading file \".concat(href, \" error was \").concat(e.message)\n              });\n            }\n          }\n\n          self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n            // per file cache\n            fileCache[href] = data; // Use remote copy (re-parse)\n\n            resolve({\n              contents: data,\n              filename: href,\n              webInfo: {\n                lastModified: lastModified\n              }\n            });\n          }, function doXHRError(status, url) {\n            reject({\n              type: 'File',\n              message: \"'\".concat(url, \"' wasn't found (\").concat(status, \")\"),\n              href: href\n            });\n          });\n        });\n      }\n    }]);\n\n    return FileManager;\n  }(AbstractFileManager);\n\n  var FM = (function (opts, log) {\n    options = opts;\n    logger$1 = log;\n    return FileManager;\n  });\n\n  /**\n   * Browser Plugin Loader\n   */\n\n  var PluginLoader =\n  /*#__PURE__*/\n  function (_AbstractPluginLoader) {\n    _inherits(PluginLoader, _AbstractPluginLoader);\n\n    function PluginLoader(less) {\n      var _this;\n\n      _classCallCheck(this, PluginLoader);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(PluginLoader).call(this));\n      _this.less = less; // Should we shim this.require for browser? Probably not?\n\n      return _this;\n    }\n\n    _createClass(PluginLoader, [{\n      key: \"loadPlugin\",\n      value: function loadPlugin(filename, basePath, context, environment, fileManager) {\n        return new Promise(function (fulfill, reject) {\n          fileManager.loadFile(filename, basePath, context, environment).then(fulfill).catch(reject);\n        });\n      }\n    }]);\n\n    return PluginLoader;\n  }(AbstractPluginLoader);\n\n  var LogListener = (function (less, options) {\n    var logLevel_debug = 4;\n    var logLevel_info = 3;\n    var logLevel_warn = 2;\n    var logLevel_error = 1; // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : options.env === 'development' ? logLevel_info : logLevel_error;\n\n    if (!options.loggers) {\n      options.loggers = [{\n        debug: function debug(msg) {\n          if (options.logLevel >= logLevel_debug) {\n            console.log(msg);\n          }\n        },\n        info: function info(msg) {\n          if (options.logLevel >= logLevel_info) {\n            console.log(msg);\n          }\n        },\n        warn: function warn(msg) {\n          if (options.logLevel >= logLevel_warn) {\n            console.warn(msg);\n          }\n        },\n        error: function error(msg) {\n          if (options.logLevel >= logLevel_error) {\n            console.error(msg);\n          }\n        }\n      }];\n    }\n\n    for (var i = 0; i < options.loggers.length; i++) {\n      less.logger.addListener(options.loggers[i]);\n    }\n  });\n\n  var ErrorReporting = (function (window, less, options) {\n    function errorHTML(e, rootHref) {\n      var id = \"less-error-message:\".concat(extractId(rootHref || ''));\n      var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n      var elem = window.document.createElement('div');\n      var timer;\n      var content;\n      var errors = [];\n      var filename = e.filename || rootHref;\n      var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n      elem.id = id;\n      elem.className = 'less-error-message';\n      content = \"<h3>\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file') + \"</h3><p>in <a href=\\\"\".concat(filename, \"\\\">\").concat(filenameNoPath, \"</a> \");\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \"on line \".concat(e.line, \", column \").concat(e.column + 1, \":</p><ul>\").concat(errors.join(''), \"</ul>\");\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"<br/>Stack Trace</br />\".concat(e.stack.split('\\n').slice(1).join('<br/>'));\n      }\n\n      elem.innerHTML = content; // CSS for error messages\n\n      browser.createCSS(window.document, ['.less-error-message ul, .less-error-message li {', 'list-style-type: none;', 'margin-right: 15px;', 'padding: 4px 0;', 'margin: 0;', '}', '.less-error-message label {', 'font-size: 12px;', 'margin-right: 15px;', 'padding: 4px 0;', 'color: #cc7777;', '}', '.less-error-message pre {', 'color: #dd6666;', 'padding: 4px 0;', 'margin: 0;', 'display: inline-block;', '}', '.less-error-message pre.line {', 'color: #ff0000;', '}', '.less-error-message h3 {', 'font-size: 20px;', 'font-weight: bold;', 'padding: 15px 0 5px 0;', 'margin: 0;', '}', '.less-error-message a {', 'color: #10a', '}', '.less-error-message .error {', 'color: red;', 'font-weight: bold;', 'padding-bottom: 2px;', 'border-bottom: 1px dashed red;', '}'].join('\\n'), {\n        title: 'error-message'\n      });\n      elem.style.cssText = ['font-family: Arial, sans-serif', 'border: 1px solid #e00', 'background-color: #eee', 'border-radius: 5px', '-webkit-border-radius: 5px', '-moz-border-radius: 5px', 'color: #e00', 'padding: 15px', 'margin-bottom: 15px'].join(';');\n\n      if (options.env === 'development') {\n        timer = setInterval(function () {\n          var document = window.document;\n          var body = document.body;\n\n          if (body) {\n            if (document.getElementById(id)) {\n              body.replaceChild(elem, document.getElementById(id));\n            } else {\n              body.insertBefore(elem, body.firstChild);\n            }\n\n            clearInterval(timer);\n          }\n        }, 10);\n      }\n    }\n\n    function removeErrorHTML(path) {\n      var node = window.document.getElementById(\"less-error-message:\".concat(extractId(path)));\n\n      if (node) {\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    function removeError(path) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        removeErrorHTML(path);\n      } else if (options.errorReporting === 'console') ; else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('remove', path);\n      }\n    }\n\n    function errorConsole(e, rootHref) {\n      var template = '{line} {content}';\n      var filename = e.filename || rootHref;\n      var errors = [];\n      var content = \"\".concat(e.type || 'Syntax', \"Error: \").concat(e.message || 'There is an error in your .less file', \" in \").concat(filename);\n\n      var errorline = function errorline(e, i, classname) {\n        if (e.extract[i] !== undefined) {\n          errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n        }\n      };\n\n      if (e.line) {\n        errorline(e, 0, '');\n        errorline(e, 1, 'line');\n        errorline(e, 2, '');\n        content += \" on line \".concat(e.line, \", column \").concat(e.column + 1, \":\\n\").concat(errors.join('\\n'));\n      }\n\n      if (e.stack && (e.extract || options.logLevel >= 4)) {\n        content += \"\\nStack Trace\\n\".concat(e.stack);\n      }\n\n      less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n      if (!options.errorReporting || options.errorReporting === 'html') {\n        errorHTML(e, rootHref);\n      } else if (options.errorReporting === 'console') {\n        errorConsole(e, rootHref);\n      } else if (typeof options.errorReporting === 'function') {\n        options.errorReporting('add', e, rootHref);\n      }\n    }\n\n    return {\n      add: error,\n      remove: removeError\n    };\n  });\n\n  // Cache system is a bit outdated and could do with work\n  var Cache = (function (window, options, logger) {\n    var cache = null;\n\n    if (options.env !== 'development') {\n      try {\n        cache = typeof window.localStorage === 'undefined' ? null : window.localStorage;\n      } catch (_) {}\n    }\n\n    return {\n      setCSS: function setCSS(path, lastModified, modifyVars, styles) {\n        if (cache) {\n          logger.info(\"saving \".concat(path, \" to cache.\"));\n\n          try {\n            cache.setItem(path, styles);\n            cache.setItem(\"\".concat(path, \":timestamp\"), lastModified);\n\n            if (modifyVars) {\n              cache.setItem(\"\".concat(path, \":vars\"), JSON.stringify(modifyVars));\n            }\n          } catch (e) {\n            // TODO - could do with adding more robust error handling\n            logger.error(\"failed to save \\\"\".concat(path, \"\\\" to local storage for caching.\"));\n          }\n        }\n      },\n      getCSS: function getCSS(path, webInfo, modifyVars) {\n        var css = cache && cache.getItem(path);\n        var timestamp = cache && cache.getItem(\"\".concat(path, \":timestamp\"));\n        var vars = cache && cache.getItem(\"\".concat(path, \":vars\"));\n        modifyVars = modifyVars || {};\n        vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n\n        if (timestamp && webInfo.lastModified && new Date(webInfo.lastModified).valueOf() === new Date(timestamp).valueOf() && JSON.stringify(modifyVars) === vars) {\n          // Use local copy\n          return css;\n        }\n      }\n    };\n  });\n\n  var ImageSize = (function () {\n    function _imageSize() {\n      throw {\n        type: 'Runtime',\n        message: 'Image size functions are not supported in browser version of less'\n      };\n    }\n\n    var imageFunctions = {\n      'image-size': function imageSize(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-width': function imageWidth(filePathNode) {\n        _imageSize();\n\n        return -1;\n      },\n      'image-height': function imageHeight(filePathNode) {\n        _imageSize();\n\n        return -1;\n      }\n    };\n    functionRegistry.addMultiple(imageFunctions);\n  });\n\n  //\n  var root = (function (window, options) {\n    var document = window.document;\n    var less = lessRoot();\n    less.options = options;\n    var environment = less.environment;\n    var FileManager = FM(options, less.logger);\n    var fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = PluginLoader;\n    LogListener(less, options);\n    var errors = ErrorReporting(window, less, options);\n    var cache = less.cache = options.cache || Cache(window, options, less.logger);\n    ImageSize(less.environment); // Setup user functions - Deprecate?\n\n    if (options.functions) {\n      less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    var typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n      var cloned = {};\n\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          cloned[prop] = obj[prop];\n        }\n      }\n\n      return cloned;\n    } // only really needed for phantom\n\n\n    function bind(func, thisArg) {\n      var curryArgs = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n        return func.apply(thisArg, args);\n      };\n    }\n\n    function loadStyles(modifyVars) {\n      var styles = document.getElementsByTagName('style');\n      var style;\n\n      for (var i = 0; i < styles.length; i++) {\n        style = styles[i];\n\n        if (style.type.match(typePattern)) {\n          var instanceOptions = clone(options);\n          instanceOptions.modifyVars = modifyVars;\n          var lessText = style.innerHTML || '';\n          instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n          /* jshint loopfunc:true */\n          // use closure to store current style\n\n          less.render(lessText, instanceOptions, bind(function (style, e, result) {\n            if (e) {\n              errors.add(e, 'inline');\n            } else {\n              style.type = 'text/css';\n\n              if (style.styleSheet) {\n                style.styleSheet.cssText = result.css;\n              } else {\n                style.innerHTML = result.css;\n              }\n            }\n          }, null, style));\n        }\n      }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n      var instanceOptions = clone(options);\n      addDataAttr(instanceOptions, sheet);\n      instanceOptions.mime = sheet.type;\n\n      if (modifyVars) {\n        instanceOptions.modifyVars = modifyVars;\n      }\n\n      function loadInitialFileCallback(loadedFile) {\n        var data = loadedFile.contents;\n        var path = loadedFile.filename;\n        var webInfo = loadedFile.webInfo;\n        var newFileInfo = {\n          currentDirectory: fileManager.getPath(path),\n          filename: path,\n          rootFilename: path,\n          rewriteUrls: instanceOptions.rewriteUrls\n        };\n        newFileInfo.entryPath = newFileInfo.currentDirectory;\n        newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n        if (webInfo) {\n          webInfo.remaining = remaining;\n          var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n\n          if (!reload && css) {\n            webInfo.local = true;\n            callback(null, css, data, sheet, webInfo, path);\n            return;\n          }\n        } // TODO add tests around how this behaves when reloading\n\n\n        errors.remove(path);\n        instanceOptions.rootFileInfo = newFileInfo;\n        less.render(data, instanceOptions, function (e, result) {\n          if (e) {\n            e.href = path;\n            callback(e);\n          } else {\n            cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n            callback(null, result.css, data, sheet, webInfo, path);\n          }\n        });\n      }\n\n      fileManager.loadFile(sheet.href, null, instanceOptions, environment).then(function (loadedFile) {\n        loadInitialFileCallback(loadedFile);\n      }).catch(function (err) {\n        console.log(err);\n        callback(err);\n      });\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n      for (var i = 0; i < less.sheets.length; i++) {\n        loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n      }\n    }\n\n    function initRunningMode() {\n      if (less.env === 'development') {\n        less.watchTimer = setInterval(function () {\n          if (less.watchMode) {\n            fileManager.clearFileCache();\n            loadStyleSheets(function (e, css, _, sheet, webInfo) {\n              if (e) {\n                errors.add(e, e.href || sheet.href);\n              } else if (css) {\n                browser.createCSS(window.document, css, sheet);\n              }\n            });\n          }\n        }, options.poll);\n      }\n    } //\n    // Watch mode\n    //\n\n\n    less.watch = function () {\n      if (!less.watchMode) {\n        less.env = 'development';\n        initRunningMode();\n      }\n\n      this.watchMode = true;\n      return true;\n    };\n\n    less.unwatch = function () {\n      clearInterval(less.watchTimer);\n      this.watchMode = false;\n      return false;\n    }; //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n\n\n    less.registerStylesheetsImmediately = function () {\n      var links = document.getElementsByTagName('link');\n      less.sheets = [];\n\n      for (var i = 0; i < links.length; i++) {\n        if (links[i].rel === 'stylesheet/less' || links[i].rel.match(/stylesheet/) && links[i].type.match(typePattern)) {\n          less.sheets.push(links[i]);\n        }\n      }\n    }; //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n\n\n    less.registerStylesheets = function () {\n      return new Promise(function (resolve, reject) {\n        less.registerStylesheetsImmediately();\n        resolve();\n      });\n    }; //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n\n\n    less.modifyVars = function (record) {\n      return less.refresh(true, record, false);\n    };\n\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n      if ((reload || clearFileCache) && clearFileCache !== false) {\n        fileManager.clearFileCache();\n      }\n\n      return new Promise(function (resolve, reject) {\n        var startTime;\n        var endTime;\n        var totalMilliseconds;\n        var remainingSheets;\n        startTime = endTime = new Date(); // Set counter for remaining unprocessed sheets\n\n        remainingSheets = less.sheets.length;\n\n        if (remainingSheets === 0) {\n          endTime = new Date();\n          totalMilliseconds = endTime - startTime;\n          less.logger.info('Less has finished and no sheets were loaded.');\n          resolve({\n            startTime: startTime,\n            endTime: endTime,\n            totalMilliseconds: totalMilliseconds,\n            sheets: less.sheets.length\n          });\n        } else {\n          // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n          loadStyleSheets(function (e, css, _, sheet, webInfo) {\n            if (e) {\n              errors.add(e, e.href || sheet.href);\n              reject(e);\n              return;\n            }\n\n            if (webInfo.local) {\n              less.logger.info(\"Loading \".concat(sheet.href, \" from cache.\"));\n            } else {\n              less.logger.info(\"Rendered \".concat(sheet.href, \" successfully.\"));\n            }\n\n            browser.createCSS(window.document, css, sheet);\n            less.logger.info(\"CSS for \".concat(sheet.href, \" generated in \").concat(new Date() - endTime, \"ms\")); // Count completed sheet\n\n            remainingSheets--; // Check if the last remaining sheet was processed and then call the promise\n\n            if (remainingSheets === 0) {\n              totalMilliseconds = new Date() - startTime;\n              less.logger.info(\"Less has finished. CSS generated in \".concat(totalMilliseconds, \"ms\"));\n              resolve({\n                startTime: startTime,\n                endTime: endTime,\n                totalMilliseconds: totalMilliseconds,\n                sheets: less.sheets.length\n              });\n            }\n\n            endTime = new Date();\n          }, reload, modifyVars);\n        }\n\n        loadStyles(modifyVars);\n      });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n  });\n\n  /**\n   * Kicks off less and compiles any stylesheets\n   * used in the browser distributed version of less\n   * to kick-start less using the browser api\n   */\n  var options$1 = defaultOptions();\n\n  if (window.less) {\n    for (var key in window.less) {\n      if (window.less.hasOwnProperty(key)) {\n        options$1[key] = window.less[key];\n      }\n    }\n  }\n\n  addDefaultOptions(window, options$1);\n  options$1.plugins = options$1.plugins || [];\n\n  if (window.LESS_PLUGINS) {\n    options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\n  }\n\n  var less = root(window, options$1);\n  window.less = less;\n  var css;\n  var head;\n  var style; // Always restore page visibility\n\n  function resolveOrReject(data) {\n    if (data.filename) {\n      console.warn(data);\n    }\n\n    if (!options$1.async) {\n      head.removeChild(style);\n    }\n  }\n\n  if (options$1.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n      less.watch();\n    } // Simulate synchronous stylesheet loading by hiding page rendering\n\n\n    if (!options$1.async) {\n      css = 'body { display: none !important }';\n      head = document.head || document.getElementsByTagName('head')[0];\n      style = document.createElement('style');\n      style.type = 'text/css';\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n  }\n\n  return less;\n\n}));\n"]}}